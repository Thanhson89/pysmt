from pysmt.shortcuts import SBV, Symbol, is_valid, Equals, Not

from pysmt.typing import UFXPType, SFXPType, FXP_OM, FXP_RM

from pysmt.shortcuts import (UFXPAdd, UFXPSub, UFXPMul, UFXPDiv,
                            SFXPAdd, SFXPSub, SFXPMul, SFXPDiv,
                            UFXP, SFXP, BV, ST, WP, RU, RD,
                            get_model, is_sat)

from pysmt.rewritings import get_fp_bv_converter

conv = get_fp_bv_converter()
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6374, 16), 8), SFXP(SBV(-22454, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57503, 16), 8), UFXP(BV(42278, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16725, 16), 8), SFXP(SBV(-20752, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38181, 16), 8), UFXP(BV(32780, 16), 8)), UFXP(BV(5425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59424, 16), 8), UFXP(BV(8013, 16), 8)), UFXP(BV(25009, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24785, 16), 8), SFXP(SBV(32606, 16), 8)), SFXP(SBV(11067, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1413, 16), 8), SFXP(SBV(-2940, 16), 8)), SFXP(SBV(-4353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33293, 16), 8), UFXP(BV(33774, 16), 8)), UFXP(BV(65055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26310, 16), 8), SFXP(SBV(4078, 16), 8)), SFXP(SBV(-22232, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17479, 16), 8), UFXP(BV(41658, 16), 8)), UFXP(BV(41357, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6732, 16), 8), SFXP(SBV(-29919, 16), 8)), SFXP(SBV(23187, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5629, 16), 8), SFXP(SBV(31658, 16), 8)), SFXP(SBV(-26029, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25224, 16), 8), UFXP(BV(63886, 16), 8)), UFXP(BV(23574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64995, 16), 8), UFXP(BV(12241, 16), 8)), UFXP(BV(52754, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14306, 16), 8), SFXP(SBV(-10560, 16), 8)), SFXP(SBV(-24866, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45119, 16), 8), UFXP(BV(44537, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47333, 16), 8), UFXP(BV(2602, 16), 8)), UFXP(BV(49935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6188, 16), 8), UFXP(BV(47499, 16), 8)), UFXP(BV(53687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9370, 16), 8), UFXP(BV(8405, 16), 8)), UFXP(BV(965, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21123, 16), 8), SFXP(SBV(22248, 16), 8)), SFXP(SBV(-22165, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18484, 16), 8), UFXP(BV(52313, 16), 8)), UFXP(BV(31707, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52131, 16), 8), UFXP(BV(34240, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20801, 16), 8), SFXP(SBV(5752, 16), 8)), SFXP(SBV(-26553, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17530, 16), 8), SFXP(SBV(27195, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25638, 16), 8), SFXP(SBV(30715, 16), 8)), SFXP(SBV(-5077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4358, 16), 8), SFXP(SBV(-3441, 16), 8)), SFXP(SBV(7799, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32616, 16), 8), UFXP(BV(41763, 16), 8)), UFXP(BV(12452, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46266, 16), 8), UFXP(BV(19274, 16), 8)), UFXP(BV(26992, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3439, 16), 8), SFXP(SBV(17724, 16), 8)), SFXP(SBV(21163, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4897, 16), 8), UFXP(BV(52946, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62101, 16), 8), UFXP(BV(38146, 16), 8)), UFXP(BV(23955, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25323, 16), 8), SFXP(SBV(17580, 16), 8)), SFXP(SBV(7743, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6099, 16), 8), UFXP(BV(54678, 16), 8)), UFXP(BV(60777, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11228, 16), 8), UFXP(BV(42261, 16), 8)), UFXP(BV(53489, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54324, 16), 8), UFXP(BV(18814, 16), 8)), UFXP(BV(7602, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13428, 16), 8), SFXP(SBV(-31890, 16), 8)), SFXP(SBV(31206, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37909, 16), 8), UFXP(BV(1531, 16), 8)), UFXP(BV(39440, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24371, 16), 8), SFXP(SBV(-26879, 16), 8)), SFXP(SBV(2956, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17588, 16), 8), UFXP(BV(12905, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6806, 16), 8), SFXP(SBV(-9022, 16), 8)), SFXP(SBV(-15828, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36131, 16), 8), UFXP(BV(45262, 16), 8)), UFXP(BV(15857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1874, 16), 8), SFXP(SBV(-18705, 16), 8)), SFXP(SBV(-20579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3109, 16), 8), SFXP(SBV(-10402, 16), 8)), SFXP(SBV(7293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25756, 16), 8), UFXP(BV(11512, 16), 8)), UFXP(BV(14244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21683, 16), 8), SFXP(SBV(-1849, 16), 8)), SFXP(SBV(-23532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25554, 16), 8), SFXP(SBV(-8977, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11315, 16), 8), SFXP(SBV(4805, 16), 8)), SFXP(SBV(16120, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41290, 16), 8), UFXP(BV(47163, 16), 8)), UFXP(BV(59663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7071, 16), 8), UFXP(BV(8245, 16), 8)), UFXP(BV(64362, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60234, 16), 8), UFXP(BV(52798, 16), 8)), UFXP(BV(47496, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8949, 16), 8), SFXP(SBV(-18229, 16), 8)), SFXP(SBV(-18129, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17422, 16), 8), UFXP(BV(57015, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15371, 16), 8), SFXP(SBV(22847, 16), 8)), SFXP(SBV(-7476, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25530, 16), 8), UFXP(BV(61308, 16), 8)), UFXP(BV(21302, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61270, 16), 8), UFXP(BV(6034, 16), 8)), UFXP(BV(55236, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2956, 16), 8), SFXP(SBV(28559, 16), 8)), SFXP(SBV(-31515, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6426, 16), 8), SFXP(SBV(-23483, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31324, 16), 8), SFXP(SBV(-25539, 16), 8)), SFXP(SBV(5785, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25953, 16), 8), UFXP(BV(15342, 16), 8)), UFXP(BV(41295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(25864, 16), 8), SFXP(SBV(-17530, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23470, 16), 8), UFXP(BV(13318, 16), 8)), UFXP(BV(41342, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1106, 16), 8), UFXP(BV(51443, 16), 8)), UFXP(BV(25642, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26484, 16), 8), UFXP(BV(44067, 16), 8)), UFXP(BV(36884, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3472, 16), 8), UFXP(BV(11603, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19244, 16), 8), UFXP(BV(60177, 16), 8)), UFXP(BV(1633, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7589, 16), 8), SFXP(SBV(19251, 16), 8)), SFXP(SBV(-26840, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58980, 16), 8), UFXP(BV(27090, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(409, 16), 8), UFXP(BV(26438, 16), 8)), UFXP(BV(42239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4642, 16), 8), SFXP(SBV(8131, 16), 8)), SFXP(SBV(16366, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11467, 16), 8), UFXP(BV(34952, 16), 8)), UFXP(BV(42051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22813, 16), 8), SFXP(SBV(20471, 16), 8)), SFXP(SBV(2342, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12471, 16), 8), UFXP(BV(32237, 16), 8)), UFXP(BV(45770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13193, 16), 8), SFXP(SBV(-11250, 16), 8)), SFXP(SBV(-1943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35690, 16), 8), UFXP(BV(59719, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61122, 16), 8), UFXP(BV(42376, 16), 8)), UFXP(BV(18746, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31964, 16), 8), SFXP(SBV(3057, 16), 8)), SFXP(SBV(11521, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10667, 16), 8), SFXP(SBV(17986, 16), 8)), SFXP(SBV(7319, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60613, 16), 8), UFXP(BV(23913, 16), 8)), UFXP(BV(25773, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28541, 16), 8), SFXP(SBV(-18721, 16), 8)), SFXP(SBV(9820, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60002, 16), 8), UFXP(BV(42422, 16), 8)), UFXP(BV(17580, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16356, 16), 8), SFXP(SBV(-10614, 16), 8)), SFXP(SBV(-26970, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18219, 16), 8), UFXP(BV(57500, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25716, 16), 8), UFXP(BV(55382, 16), 8)), UFXP(BV(35870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18483, 16), 8), SFXP(SBV(27386, 16), 8)), SFXP(SBV(-19667, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3974, 16), 8), SFXP(SBV(-13740, 16), 8)), SFXP(SBV(17714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17508, 16), 8), UFXP(BV(63650, 16), 8)), UFXP(BV(27688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22183, 16), 8), SFXP(SBV(-25149, 16), 8)), SFXP(SBV(-2966, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17346, 16), 8), UFXP(BV(36392, 16), 8)), UFXP(BV(53738, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1537, 16), 8), UFXP(BV(18628, 16), 8)), UFXP(BV(20165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26257, 16), 8), SFXP(SBV(-32739, 16), 8)), SFXP(SBV(-15586, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1746, 16), 8), UFXP(BV(12459, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15145, 16), 8), SFXP(SBV(-11792, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27861, 16), 8), UFXP(BV(53362, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36769, 16), 8), UFXP(BV(39984, 16), 8)), UFXP(BV(62321, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20218, 16), 8), SFXP(SBV(-17645, 16), 8)), SFXP(SBV(2573, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12599, 16), 8), SFXP(SBV(10736, 16), 8)), SFXP(SBV(-23335, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4458, 16), 8), SFXP(SBV(19739, 16), 8)), SFXP(SBV(24197, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26441, 16), 8), SFXP(SBV(-27018, 16), 8)), SFXP(SBV(12077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27089, 16), 8), SFXP(SBV(10081, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13150, 16), 8), SFXP(SBV(-31826, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46050, 16), 8), UFXP(BV(6791, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42075, 16), 8), UFXP(BV(55335, 16), 8)), UFXP(BV(31874, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(20301, 16), 8), UFXP(BV(13305, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16811, 16), 8), SFXP(SBV(31447, 16), 8)), SFXP(SBV(-14636, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58946, 16), 8), UFXP(BV(26077, 16), 8)), UFXP(BV(32869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4442, 16), 8), SFXP(SBV(19155, 16), 8)), SFXP(SBV(-14713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26239, 16), 8), UFXP(BV(46638, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36871, 16), 8), UFXP(BV(46385, 16), 8)), UFXP(BV(56022, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45716, 16), 8), UFXP(BV(21210, 16), 8)), UFXP(BV(1390, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26663, 16), 8), SFXP(SBV(-6596, 16), 8)), SFXP(SBV(-20067, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1844, 16), 8), UFXP(BV(33017, 16), 8)), UFXP(BV(34363, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24281, 16), 8), SFXP(SBV(16470, 16), 8)), SFXP(SBV(24785, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18945, 16), 8), UFXP(BV(16592, 16), 8)), UFXP(BV(35537, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9916, 16), 8), SFXP(SBV(-31387, 16), 8)), SFXP(SBV(-21471, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37220, 16), 8), UFXP(BV(54239, 16), 8)), UFXP(BV(21523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7170, 16), 8), SFXP(SBV(-22271, 16), 8)), SFXP(SBV(-15101, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7883, 16), 8), SFXP(SBV(-28375, 16), 8)), SFXP(SBV(20492, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11651, 16), 8), SFXP(SBV(26199, 16), 8)), SFXP(SBV(-14548, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27, 16), 8), SFXP(SBV(9567, 16), 8)), SFXP(SBV(9594, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4245, 16), 8), SFXP(SBV(26933, 16), 8)), SFXP(SBV(31178, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14955, 16), 8), UFXP(BV(52900, 16), 8)), UFXP(BV(10119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11058, 16), 8), UFXP(BV(10645, 16), 8)), UFXP(BV(1062, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32559, 16), 8), UFXP(BV(26680, 16), 8)), UFXP(BV(59239, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2439, 16), 8), UFXP(BV(21036, 16), 8)), UFXP(BV(46939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20666, 16), 8), UFXP(BV(31633, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4775, 16), 8), UFXP(BV(21673, 16), 8)), UFXP(BV(48638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45458, 16), 8), UFXP(BV(43068, 16), 8)), UFXP(BV(2390, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13042, 16), 8), SFXP(SBV(25076, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5233, 16), 8), SFXP(SBV(-1276, 16), 8)), SFXP(SBV(3957, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23743, 16), 8), UFXP(BV(37657, 16), 8)), UFXP(BV(51622, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15315, 16), 8), UFXP(BV(29459, 16), 8)), UFXP(BV(51392, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9336, 16), 8), UFXP(BV(31511, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25743, 16), 8), UFXP(BV(38664, 16), 8)), UFXP(BV(52615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12197, 16), 8), SFXP(SBV(-15794, 16), 8)), SFXP(SBV(-3597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32939, 16), 8), UFXP(BV(42509, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39887, 16), 8), UFXP(BV(63291, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20800, 16), 8), SFXP(SBV(14508, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2571, 16), 8), SFXP(SBV(20887, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59284, 16), 8), UFXP(BV(32512, 16), 8)), UFXP(BV(26772, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1929, 16), 8), UFXP(BV(46999, 16), 8)), UFXP(BV(48928, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28719, 16), 8), UFXP(BV(49569, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30219, 16), 8), SFXP(SBV(-23709, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28599, 16), 8), UFXP(BV(44707, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11822, 16), 8), SFXP(SBV(13344, 16), 8)), SFXP(SBV(-25166, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54073, 16), 8), UFXP(BV(19754, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1894, 16), 8), SFXP(SBV(16537, 16), 8)), SFXP(SBV(14643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5202, 16), 8), SFXP(SBV(8447, 16), 8)), SFXP(SBV(-13649, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26266, 16), 8), SFXP(SBV(14567, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29557, 16), 8), UFXP(BV(51979, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23476, 16), 8), SFXP(SBV(20267, 16), 8)), SFXP(SBV(3209, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41975, 16), 8), UFXP(BV(7679, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39901, 16), 8), UFXP(BV(18790, 16), 8)), UFXP(BV(58691, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22481, 16), 8), SFXP(SBV(20788, 16), 8)), SFXP(SBV(-22267, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26175, 16), 8), SFXP(SBV(-10260, 16), 8)), SFXP(SBV(-15915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9387, 16), 8), UFXP(BV(39182, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16763, 16), 8), SFXP(SBV(2605, 16), 8)), SFXP(SBV(14158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4975, 16), 8), SFXP(SBV(19131, 16), 8)), SFXP(SBV(-14156, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10963, 16), 8), UFXP(BV(44279, 16), 8)), UFXP(BV(61206, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59375, 16), 8), UFXP(BV(60758, 16), 8)), UFXP(BV(64153, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25729, 16), 8), SFXP(SBV(-23648, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8025, 16), 8), SFXP(SBV(-31647, 16), 8)), SFXP(SBV(-23622, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23475, 16), 8), SFXP(SBV(19691, 16), 8)), SFXP(SBV(-29358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61598, 16), 8), UFXP(BV(53088, 16), 8)), UFXP(BV(49150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8145, 16), 8), UFXP(BV(22004, 16), 8)), UFXP(BV(30149, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3634, 16), 8), SFXP(SBV(8511, 16), 8)), SFXP(SBV(-4877, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52880, 16), 8), UFXP(BV(17074, 16), 8)), UFXP(BV(35806, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26033, 16), 8), SFXP(SBV(-25553, 16), 8)), SFXP(SBV(-13950, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2529, 16), 8), UFXP(BV(40323, 16), 8)), UFXP(BV(42852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53026, 16), 8), UFXP(BV(62393, 16), 8)), UFXP(BV(13045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51113, 16), 8), UFXP(BV(15919, 16), 8)), UFXP(BV(32663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(429, 16), 8), UFXP(BV(36148, 16), 8)), UFXP(BV(60577, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65044, 16), 8), UFXP(BV(12268, 16), 8)), UFXP(BV(52776, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31539, 16), 8), UFXP(BV(2867, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50819, 16), 8), UFXP(BV(9860, 16), 8)), UFXP(BV(60679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60004, 16), 8), UFXP(BV(44275, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17742, 16), 8), UFXP(BV(24366, 16), 8)), UFXP(BV(58912, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46735, 16), 8), UFXP(BV(33914, 16), 8)), UFXP(BV(12821, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8477, 16), 8), UFXP(BV(56906, 16), 8)), UFXP(BV(49336, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24802, 16), 8), UFXP(BV(25963, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9676, 16), 8), SFXP(SBV(-25970, 16), 8)), SFXP(SBV(-1456, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52649, 16), 8), UFXP(BV(60487, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33668, 16), 8), UFXP(BV(64440, 16), 8)), UFXP(BV(34764, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6050, 16), 8), SFXP(SBV(20534, 16), 8)), SFXP(SBV(-26584, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26245, 16), 8), SFXP(SBV(-11298, 16), 8)), SFXP(SBV(14947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7960, 16), 8), SFXP(SBV(-762, 16), 8)), SFXP(SBV(7198, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39582, 16), 8), UFXP(BV(43832, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45052, 16), 8), UFXP(BV(28946, 16), 8)), UFXP(BV(16106, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16270, 16), 8), UFXP(BV(58785, 16), 8)), UFXP(BV(9519, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13896, 16), 8), SFXP(SBV(620, 16), 8)), SFXP(SBV(14516, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9847, 16), 8), SFXP(SBV(-22871, 16), 8)), SFXP(SBV(32718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20476, 16), 8), SFXP(SBV(-407, 16), 8)), SFXP(SBV(-20069, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13183, 16), 8), UFXP(BV(25743, 16), 8)), UFXP(BV(52976, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42915, 16), 8), UFXP(BV(61068, 16), 8)), UFXP(BV(47383, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14945, 16), 8), UFXP(BV(24848, 16), 8)), UFXP(BV(39793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57780, 16), 8), UFXP(BV(18197, 16), 8)), UFXP(BV(39583, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1820, 16), 8), SFXP(SBV(20196, 16), 8)), SFXP(SBV(-22016, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27387, 16), 8), UFXP(BV(59826, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8665, 16), 8), UFXP(BV(33451, 16), 8)), UFXP(BV(18125, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14948, 16), 8), SFXP(SBV(-21315, 16), 8)), SFXP(SBV(-6367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8872, 16), 8), SFXP(SBV(-1547, 16), 8)), SFXP(SBV(-10419, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11676, 16), 8), SFXP(SBV(7495, 16), 8)), SFXP(SBV(-19171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(666, 16), 8), SFXP(SBV(-14994, 16), 8)), SFXP(SBV(26529, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2153, 16), 8), SFXP(SBV(28085, 16), 8)), SFXP(SBV(25945, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36178, 16), 8), UFXP(BV(21618, 16), 8)), UFXP(BV(14560, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7359, 16), 8), SFXP(SBV(-8214, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28057, 16), 8), SFXP(SBV(-184, 16), 8)), SFXP(SBV(20165, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22174, 16), 8), UFXP(BV(24523, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28843, 16), 8), SFXP(SBV(-5506, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7131, 16), 8), UFXP(BV(54007, 16), 8)), UFXP(BV(61138, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(4993, 16), 8), SFXP(SBV(-26545, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50505, 16), 8), UFXP(BV(59054, 16), 8)), UFXP(BV(56987, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57269, 16), 8), UFXP(BV(26804, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34115, 16), 8), UFXP(BV(47216, 16), 8)), UFXP(BV(15795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7211, 16), 8), UFXP(BV(51530, 16), 8)), UFXP(BV(21217, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22677, 16), 8), SFXP(SBV(-17941, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44848, 16), 8), UFXP(BV(29781, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58602, 16), 8), UFXP(BV(29841, 16), 8)), UFXP(BV(28761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8369, 16), 8), SFXP(SBV(-5737, 16), 8)), SFXP(SBV(-9057, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35387, 16), 8), UFXP(BV(15015, 16), 8)), UFXP(BV(20372, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3704, 16), 8), UFXP(BV(42800, 16), 8)), UFXP(BV(46504, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23736, 16), 8), SFXP(SBV(24918, 16), 8)), SFXP(SBV(-1182, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24559, 16), 8), SFXP(SBV(-19519, 16), 8)), SFXP(SBV(-28016, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32474, 16), 8), SFXP(SBV(8588, 16), 8)), SFXP(SBV(-23886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6814, 16), 8), SFXP(SBV(-24272, 16), 8)), SFXP(SBV(31086, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11908, 16), 8), UFXP(BV(41612, 16), 8)), UFXP(BV(53520, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31326, 16), 8), SFXP(SBV(17883, 16), 8)), SFXP(SBV(13443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25784, 16), 8), SFXP(SBV(-3932, 16), 8)), SFXP(SBV(-29716, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1324, 16), 8), SFXP(SBV(21327, 16), 8)), SFXP(SBV(-22651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18970, 16), 8), SFXP(SBV(-17821, 16), 8)), SFXP(SBV(1149, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26115, 16), 8), SFXP(SBV(13115, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2629, 16), 8), SFXP(SBV(-19054, 16), 8)), SFXP(SBV(-933, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2372, 16), 8), UFXP(BV(16108, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61079, 16), 8), UFXP(BV(16330, 16), 8)), UFXP(BV(11873, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26806, 16), 8), UFXP(BV(41235, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9002, 16), 8), UFXP(BV(52186, 16), 8)), UFXP(BV(22352, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21626, 16), 8), UFXP(BV(61738, 16), 8)), UFXP(BV(25424, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29513, 16), 8), SFXP(SBV(22125, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63889, 16), 8), UFXP(BV(23856, 16), 8)), UFXP(BV(40033, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8221, 16), 8), UFXP(BV(40891, 16), 8)), UFXP(BV(49112, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3745, 16), 8), SFXP(SBV(12908, 16), 8)), SFXP(SBV(9163, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17056, 16), 8), SFXP(SBV(26108, 16), 8)), SFXP(SBV(-30027, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21118, 16), 8), SFXP(SBV(-5370, 16), 8)), SFXP(SBV(-15748, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12900, 16), 8), SFXP(SBV(-11937, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15761, 16), 8), SFXP(SBV(9707, 16), 8)), SFXP(SBV(6054, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1601, 16), 8), UFXP(BV(25409, 16), 8)), UFXP(BV(27010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24520, 16), 8), SFXP(SBV(-23294, 16), 8)), SFXP(SBV(-1226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13703, 16), 8), UFXP(BV(41078, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17512, 16), 8), SFXP(SBV(-24105, 16), 8)), SFXP(SBV(-6593, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6757, 16), 8), SFXP(SBV(11385, 16), 8)), SFXP(SBV(4628, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6447, 16), 8), UFXP(BV(30947, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20074, 16), 8), SFXP(SBV(-8143, 16), 8)), SFXP(SBV(11931, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43548, 16), 8), UFXP(BV(53250, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32663, 16), 8), UFXP(BV(45636, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56564, 16), 8), UFXP(BV(15273, 16), 8)), UFXP(BV(41291, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49594, 16), 8), UFXP(BV(54295, 16), 8)), UFXP(BV(60835, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10524, 16), 8), UFXP(BV(64986, 16), 8)), UFXP(BV(11074, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22022, 16), 8), SFXP(SBV(16107, 16), 8)), SFXP(SBV(27407, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11571, 16), 8), UFXP(BV(15595, 16), 8)), UFXP(BV(27166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4351, 16), 8), SFXP(SBV(25754, 16), 8)), SFXP(SBV(21403, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32852, 16), 8), UFXP(BV(7393, 16), 8)), UFXP(BV(40245, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-26308, 16), 8), SFXP(SBV(21042, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20483, 16), 8), SFXP(SBV(29047, 16), 8)), SFXP(SBV(8564, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56591, 16), 8), UFXP(BV(30088, 16), 8)), UFXP(BV(26503, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2272, 16), 8), SFXP(SBV(4241, 16), 8)), SFXP(SBV(-1969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35129, 16), 8), UFXP(BV(40170, 16), 8)), UFXP(BV(60495, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64937, 16), 8), UFXP(BV(7085, 16), 8)), UFXP(BV(6486, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2695, 16), 8), UFXP(BV(29381, 16), 8)), UFXP(BV(38850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17359, 16), 8), SFXP(SBV(9890, 16), 8)), SFXP(SBV(15267, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7477, 16), 8), SFXP(SBV(-22559, 16), 8)), SFXP(SBV(-3521, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(16704, 16), 8), SFXP(SBV(-25729, 16), 8)), SFXP(SBV(25118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14712, 16), 8), SFXP(SBV(-20599, 16), 8)), SFXP(SBV(4151, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19959, 16), 8), SFXP(SBV(14681, 16), 8)), SFXP(SBV(30489, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10033, 16), 8), SFXP(SBV(-8276, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4080, 16), 8), SFXP(SBV(22167, 16), 8)), SFXP(SBV(-26247, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34324, 16), 8), UFXP(BV(25869, 16), 8)), UFXP(BV(60193, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57806, 16), 8), UFXP(BV(849, 16), 8)), UFXP(BV(56957, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39170, 16), 8), UFXP(BV(54681, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18422, 16), 8), UFXP(BV(22898, 16), 8)), UFXP(BV(41320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26041, 16), 8), UFXP(BV(55181, 16), 8)), UFXP(BV(36396, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(46923, 16), 8), UFXP(BV(65031, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(440, 16), 8), SFXP(SBV(5089, 16), 8)), SFXP(SBV(-4649, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30734, 16), 8), SFXP(SBV(31387, 16), 8)), SFXP(SBV(-653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39637, 16), 8), UFXP(BV(16874, 16), 8)), UFXP(BV(56511, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39967, 16), 8), UFXP(BV(62896, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12821, 16), 8), UFXP(BV(50609, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18203, 16), 8), SFXP(SBV(-13691, 16), 8)), SFXP(SBV(31894, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21143, 16), 8), SFXP(SBV(-2697, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8628, 16), 8), SFXP(SBV(-10318, 16), 8)), SFXP(SBV(-1690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16795, 16), 8), UFXP(BV(16442, 16), 8)), UFXP(BV(353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39390, 16), 8), UFXP(BV(54671, 16), 8)), UFXP(BV(23466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31418, 16), 8), UFXP(BV(35473, 16), 8)), UFXP(BV(1355, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29274, 16), 8), SFXP(SBV(-30793, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20870, 16), 8), SFXP(SBV(-3140, 16), 8)), SFXP(SBV(-17730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14608, 16), 8), SFXP(SBV(-22803, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22249, 16), 8), SFXP(SBV(28089, 16), 8)), SFXP(SBV(5840, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12797, 16), 8), SFXP(SBV(-12326, 16), 8)), SFXP(SBV(-25123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26245, 16), 8), SFXP(SBV(-21199, 16), 8)), SFXP(SBV(10624, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23941, 16), 8), UFXP(BV(56483, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61783, 16), 8), UFXP(BV(44074, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27219, 16), 8), SFXP(SBV(-7014, 16), 8)), SFXP(SBV(24863, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13647, 16), 8), UFXP(BV(48461, 16), 8)), UFXP(BV(62108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31955, 16), 8), SFXP(SBV(4271, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16356, 16), 8), SFXP(SBV(1260, 16), 8)), SFXP(SBV(-15096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25143, 16), 8), SFXP(SBV(204, 16), 8)), SFXP(SBV(24939, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-5283, 16), 8), SFXP(SBV(-18639, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28040, 16), 8), SFXP(SBV(-3639, 16), 8)), SFXP(SBV(31679, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2315, 16), 8), SFXP(SBV(-10126, 16), 8)), SFXP(SBV(12441, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56221, 16), 8), UFXP(BV(50349, 16), 8)), UFXP(BV(5872, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31021, 16), 8), SFXP(SBV(-8267, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40325, 16), 8), UFXP(BV(20626, 16), 8)), UFXP(BV(60951, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19172, 16), 8), SFXP(SBV(3521, 16), 8)), SFXP(SBV(-22693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17486, 16), 8), UFXP(BV(63920, 16), 8)), UFXP(BV(40660, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19583, 16), 8), SFXP(SBV(-13016, 16), 8)), SFXP(SBV(32599, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22861, 16), 8), SFXP(SBV(14728, 16), 8)), SFXP(SBV(-8133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32033, 16), 8), SFXP(SBV(-17257, 16), 8)), SFXP(SBV(-3339, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22661, 16), 8), UFXP(BV(42355, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24481, 16), 8), SFXP(SBV(-6124, 16), 8)), SFXP(SBV(-18357, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26534, 16), 8), SFXP(SBV(23895, 16), 8)), SFXP(SBV(2639, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9194, 16), 8), SFXP(SBV(3347, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62890, 16), 8), UFXP(BV(41276, 16), 8)), UFXP(BV(21614, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30614, 16), 8), SFXP(SBV(-5633, 16), 8)), SFXP(SBV(-18268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47864, 16), 8), UFXP(BV(40924, 16), 8)), UFXP(BV(6940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11510, 16), 8), UFXP(BV(25201, 16), 8)), UFXP(BV(36711, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16724, 16), 8), SFXP(SBV(-24883, 16), 8)), SFXP(SBV(-23929, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15920, 16), 8), SFXP(SBV(17826, 16), 8)), SFXP(SBV(31790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9747, 16), 8), UFXP(BV(10146, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21482, 16), 8), UFXP(BV(45398, 16), 8)), UFXP(BV(1344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17378, 16), 8), SFXP(SBV(17679, 16), 8)), SFXP(SBV(-30479, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3315, 16), 8), UFXP(BV(18402, 16), 8)), UFXP(BV(50449, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16035, 16), 8), SFXP(SBV(-27253, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52106, 16), 8), UFXP(BV(26497, 16), 8)), UFXP(BV(19223, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1489, 16), 8), SFXP(SBV(16815, 16), 8)), SFXP(SBV(-18304, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15821, 16), 8), UFXP(BV(28446, 16), 8)), UFXP(BV(52911, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37514, 16), 8), UFXP(BV(2252, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9734, 16), 8), SFXP(SBV(-21688, 16), 8)), SFXP(SBV(31422, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20541, 16), 8), UFXP(BV(54050, 16), 8)), UFXP(BV(32027, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18497, 16), 8), SFXP(SBV(13771, 16), 8)), SFXP(SBV(4726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6267, 16), 8), SFXP(SBV(28564, 16), 8)), SFXP(SBV(22297, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25502, 16), 8), SFXP(SBV(31844, 16), 8)), SFXP(SBV(-8190, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21749, 16), 8), SFXP(SBV(16602, 16), 8)), SFXP(SBV(5147, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45255, 16), 8), UFXP(BV(9182, 16), 8)), UFXP(BV(54437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38114, 16), 8), UFXP(BV(1974, 16), 8)), UFXP(BV(36140, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26884, 16), 8), SFXP(SBV(22182, 16), 8)), SFXP(SBV(4702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20303, 16), 8), UFXP(BV(15609, 16), 8)), UFXP(BV(35912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12896, 16), 8), SFXP(SBV(-18723, 16), 8)), SFXP(SBV(5827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50995, 16), 8), UFXP(BV(10034, 16), 8)), UFXP(BV(40961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5971, 16), 8), UFXP(BV(25106, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57615, 16), 8), UFXP(BV(9815, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26471, 16), 8), SFXP(SBV(-24388, 16), 8)), SFXP(SBV(-2083, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9168, 16), 8), SFXP(SBV(25838, 16), 8)), SFXP(SBV(-16670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20822, 16), 8), SFXP(SBV(-16414, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55344, 16), 8), UFXP(BV(51139, 16), 8)), UFXP(BV(40947, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60236, 16), 8), UFXP(BV(26425, 16), 8)), UFXP(BV(21125, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27941, 16), 8), SFXP(SBV(26776, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58940, 16), 8), UFXP(BV(47961, 16), 8)), UFXP(BV(10979, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35332, 16), 8), UFXP(BV(37669, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55356, 16), 8), UFXP(BV(53328, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31095, 16), 8), SFXP(SBV(-8381, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61085, 16), 8), UFXP(BV(50975, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25546, 16), 8), SFXP(SBV(-21384, 16), 8)), SFXP(SBV(4162, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59379, 16), 8), UFXP(BV(26261, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25929, 16), 8), SFXP(SBV(29337, 16), 8)), SFXP(SBV(10270, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54672, 16), 8), UFXP(BV(40548, 16), 8)), UFXP(BV(14124, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20117, 16), 8), SFXP(SBV(-16187, 16), 8)), SFXP(SBV(-29232, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18595, 16), 8), SFXP(SBV(17373, 16), 8)), SFXP(SBV(16733, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22245, 16), 8), SFXP(SBV(27139, 16), 8)), SFXP(SBV(-4894, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9947, 16), 8), SFXP(SBV(-3550, 16), 8)), SFXP(SBV(13497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(393, 16), 8), SFXP(SBV(-16499, 16), 8)), SFXP(SBV(-25328, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1872, 16), 8), UFXP(BV(16616, 16), 8)), UFXP(BV(50792, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8941, 16), 8), SFXP(SBV(31305, 16), 8)), SFXP(SBV(-25290, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17691, 16), 8), SFXP(SBV(-17976, 16), 8)), SFXP(SBV(285, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22749, 16), 8), SFXP(SBV(4674, 16), 8)), SFXP(SBV(-27423, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18609, 16), 8), SFXP(SBV(29341, 16), 8)), SFXP(SBV(10732, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16544, 16), 8), SFXP(SBV(29563, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63228, 16), 8), UFXP(BV(13183, 16), 8)), UFXP(BV(50045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46511, 16), 8), UFXP(BV(21611, 16), 8)), UFXP(BV(24900, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29668, 16), 8), SFXP(SBV(-11365, 16), 8)), SFXP(SBV(-18303, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18873, 16), 8), UFXP(BV(4221, 16), 8)), UFXP(BV(14652, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55498, 16), 8), UFXP(BV(40459, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11326, 16), 8), UFXP(BV(64169, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31228, 16), 8), UFXP(BV(4108, 16), 8)), UFXP(BV(35336, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13103, 16), 8), SFXP(SBV(4711, 16), 8)), SFXP(SBV(-8392, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14354, 16), 8), SFXP(SBV(-31500, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51328, 16), 8), UFXP(BV(56919, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13332, 16), 8), SFXP(SBV(13741, 16), 8)), SFXP(SBV(-27073, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10019, 16), 8), SFXP(SBV(9156, 16), 8)), SFXP(SBV(30656, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13923, 16), 8), UFXP(BV(2344, 16), 8)), UFXP(BV(11579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27990, 16), 8), SFXP(SBV(-31809, 16), 8)), SFXP(SBV(4458, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31025, 16), 8), SFXP(SBV(25581, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18275, 16), 8), UFXP(BV(56613, 16), 8)), UFXP(BV(9352, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10270, 16), 8), SFXP(SBV(-5957, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1687, 16), 8), SFXP(SBV(21071, 16), 8)), SFXP(SBV(-19384, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20046, 16), 8), SFXP(SBV(5823, 16), 8)), SFXP(SBV(25869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18364, 16), 8), SFXP(SBV(-12349, 16), 8)), SFXP(SBV(-31657, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11275, 16), 8), UFXP(BV(18644, 16), 8)), UFXP(BV(29919, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(26454, 16), 8), UFXP(BV(61491, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53327, 16), 8), UFXP(BV(43059, 16), 8)), UFXP(BV(30850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26794, 16), 8), SFXP(SBV(-4435, 16), 8)), SFXP(SBV(5434, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20116, 16), 8), UFXP(BV(4519, 16), 8)), UFXP(BV(15597, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14673, 16), 8), SFXP(SBV(-5857, 16), 8)), SFXP(SBV(-8816, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10582, 16), 8), SFXP(SBV(-8683, 16), 8)), SFXP(SBV(-31240, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22282, 16), 8), SFXP(SBV(-6785, 16), 8)), SFXP(SBV(29067, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2183, 16), 8), SFXP(SBV(-27499, 16), 8)), SFXP(SBV(25316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6372, 16), 8), UFXP(BV(31889, 16), 8)), UFXP(BV(7305, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7016, 16), 8), SFXP(SBV(-3962, 16), 8)), SFXP(SBV(10978, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17484, 16), 8), SFXP(SBV(-13688, 16), 8)), SFXP(SBV(31172, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29674, 16), 8), SFXP(SBV(-25774, 16), 8)), SFXP(SBV(3900, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52728, 16), 8), UFXP(BV(29133, 16), 8)), UFXP(BV(23595, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2123, 16), 8), UFXP(BV(9481, 16), 8)), UFXP(BV(11604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8143, 16), 8), SFXP(SBV(14232, 16), 8)), SFXP(SBV(-6089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56623, 16), 8), UFXP(BV(35839, 16), 8)), UFXP(BV(62679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32956, 16), 8), UFXP(BV(6113, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1948, 16), 8), SFXP(SBV(-31839, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27974, 16), 8), UFXP(BV(50725, 16), 8)), UFXP(BV(42785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8403, 16), 8), SFXP(SBV(15630, 16), 8)), SFXP(SBV(-11245, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2025, 16), 8), SFXP(SBV(27059, 16), 8)), SFXP(SBV(29084, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48167, 16), 8), UFXP(BV(33292, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63222, 16), 8), UFXP(BV(11377, 16), 8)), UFXP(BV(51845, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4117, 16), 8), UFXP(BV(37701, 16), 8)), UFXP(BV(41818, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15351, 16), 8), UFXP(BV(54169, 16), 8)), UFXP(BV(26718, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22428, 16), 8), UFXP(BV(53639, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18959, 16), 8), UFXP(BV(20279, 16), 8)), UFXP(BV(39238, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19796, 16), 8), SFXP(SBV(-10182, 16), 8)), SFXP(SBV(9614, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16059, 16), 8), UFXP(BV(63357, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28341, 16), 8), UFXP(BV(11566, 16), 8)), UFXP(BV(35254, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14167, 16), 8), SFXP(SBV(19528, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33553, 16), 8), UFXP(BV(6341, 16), 8)), UFXP(BV(39894, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7877, 16), 8), SFXP(SBV(28746, 16), 8)), SFXP(SBV(28913, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34694, 16), 8), UFXP(BV(3922, 16), 8)), UFXP(BV(7234, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17313, 16), 8), UFXP(BV(54014, 16), 8)), UFXP(BV(28835, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12694, 16), 8), SFXP(SBV(25618, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12917, 16), 8), UFXP(BV(65374, 16), 8)), UFXP(BV(21778, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26115, 16), 8), SFXP(SBV(-29855, 16), 8)), SFXP(SBV(30904, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40325, 16), 8), UFXP(BV(14015, 16), 8)), UFXP(BV(44948, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5340, 16), 8), UFXP(BV(28819, 16), 8)), UFXP(BV(11323, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46495, 16), 8), UFXP(BV(38247, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11271, 16), 8), UFXP(BV(11750, 16), 8)), UFXP(BV(65057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17534, 16), 8), SFXP(SBV(-16314, 16), 8)), SFXP(SBV(1220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28401, 16), 8), SFXP(SBV(-17839, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23154, 16), 8), SFXP(SBV(31872, 16), 8)), SFXP(SBV(-8718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7771, 16), 8), SFXP(SBV(-5891, 16), 8)), SFXP(SBV(-13662, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(11695, 16), 8), SFXP(SBV(23635, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6127, 16), 8), UFXP(BV(30733, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25705, 16), 8), SFXP(SBV(-22029, 16), 8)), SFXP(SBV(3676, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2497, 16), 8), SFXP(SBV(-24312, 16), 8)), SFXP(SBV(-26809, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3741, 16), 8), SFXP(SBV(30238, 16), 8)), SFXP(SBV(-26497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26348, 16), 8), SFXP(SBV(393, 16), 8)), SFXP(SBV(26741, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64633, 16), 8), UFXP(BV(23542, 16), 8)), UFXP(BV(22639, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16623, 16), 8), SFXP(SBV(8155, 16), 8)), SFXP(SBV(-24778, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15201, 16), 8), SFXP(SBV(-17146, 16), 8)), SFXP(SBV(1945, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6632, 16), 8), SFXP(SBV(-4270, 16), 8)), SFXP(SBV(-2362, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42932, 16), 8), UFXP(BV(35061, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2942, 16), 8), UFXP(BV(24113, 16), 8)), UFXP(BV(27055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2467, 16), 8), SFXP(SBV(-1857, 16), 8)), SFXP(SBV(610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21047, 16), 8), UFXP(BV(45955, 16), 8)), UFXP(BV(40628, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5248, 16), 8), UFXP(BV(5201, 16), 8)), UFXP(BV(47, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19509, 16), 8), UFXP(BV(27551, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9396, 16), 8), SFXP(SBV(-28123, 16), 8)), SFXP(SBV(18727, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25434, 16), 8), SFXP(SBV(-25110, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22930, 16), 8), SFXP(SBV(30546, 16), 8)), SFXP(SBV(16498, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35345, 16), 8), UFXP(BV(29399, 16), 8)), UFXP(BV(61318, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6565, 16), 8), SFXP(SBV(5782, 16), 8)), SFXP(SBV(-783, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14027, 16), 8), SFXP(SBV(-12648, 16), 8)), SFXP(SBV(-26675, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45523, 16), 8), UFXP(BV(50856, 16), 8)), UFXP(BV(60203, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15395, 16), 8), SFXP(SBV(13715, 16), 8)), SFXP(SBV(1680, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44569, 16), 8), UFXP(BV(36577, 16), 8)), UFXP(BV(15610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48948, 16), 8), UFXP(BV(11398, 16), 8)), UFXP(BV(60346, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29098, 16), 8), SFXP(SBV(5607, 16), 8)), SFXP(SBV(30831, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19752, 16), 8), SFXP(SBV(-10424, 16), 8)), SFXP(SBV(30176, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20141, 16), 8), UFXP(BV(24506, 16), 8)), UFXP(BV(27485, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60796, 16), 8), UFXP(BV(45264, 16), 8)), UFXP(BV(40524, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12185, 16), 8), UFXP(BV(48953, 16), 8)), UFXP(BV(61138, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22057, 16), 8), SFXP(SBV(-24825, 16), 8)), SFXP(SBV(-2768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32877, 16), 8), UFXP(BV(8696, 16), 8)), UFXP(BV(41573, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15463, 16), 8), UFXP(BV(48546, 16), 8)), UFXP(BV(32453, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49074, 16), 8), UFXP(BV(14528, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28912, 16), 8), SFXP(SBV(9459, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20078, 16), 8), SFXP(SBV(2217, 16), 8)), SFXP(SBV(22295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26162, 16), 8), SFXP(SBV(18760, 16), 8)), SFXP(SBV(-7402, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58792, 16), 8), UFXP(BV(53345, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3615, 16), 8), UFXP(BV(10272, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19071, 16), 8), SFXP(SBV(30810, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5283, 16), 8), SFXP(SBV(-31583, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53305, 16), 8), UFXP(BV(20797, 16), 8)), UFXP(BV(8566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10285, 16), 8), UFXP(BV(49660, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30124, 16), 8), UFXP(BV(27615, 16), 8)), UFXP(BV(2509, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1802, 16), 8), SFXP(SBV(1249, 16), 8)), SFXP(SBV(-3051, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61554, 16), 8), UFXP(BV(3613, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58852, 16), 8), UFXP(BV(54784, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28049, 16), 8), UFXP(BV(17300, 16), 8)), UFXP(BV(10749, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20428, 16), 8), SFXP(SBV(-16953, 16), 8)), SFXP(SBV(3475, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22693, 16), 8), SFXP(SBV(-13145, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16767, 16), 8), UFXP(BV(15853, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31028, 16), 8), UFXP(BV(17063, 16), 8)), UFXP(BV(48091, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8427, 16), 8), UFXP(BV(2136, 16), 8)), UFXP(BV(6291, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26967, 16), 8), SFXP(SBV(11920, 16), 8)), SFXP(SBV(-26649, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30971, 16), 8), SFXP(SBV(11593, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15618, 16), 8), UFXP(BV(52637, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7215, 16), 8), SFXP(SBV(5637, 16), 8)), SFXP(SBV(27798, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24324, 16), 8), SFXP(SBV(-2050, 16), 8)), SFXP(SBV(-22274, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27940, 16), 8), SFXP(SBV(-9196, 16), 8)), SFXP(SBV(18744, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19082, 16), 8), SFXP(SBV(6409, 16), 8)), SFXP(SBV(12673, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60607, 16), 8), UFXP(BV(3907, 16), 8)), UFXP(BV(64514, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22536, 16), 8), SFXP(SBV(26653, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29386, 16), 8), SFXP(SBV(15155, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10227, 16), 8), UFXP(BV(2374, 16), 8)), UFXP(BV(12601, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30352, 16), 8), SFXP(SBV(-28561, 16), 8)), SFXP(SBV(1791, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-12289, 16), 8), SFXP(SBV(16232, 16), 8)), SFXP(SBV(7233, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-184, 16), 8), SFXP(SBV(16663, 16), 8)), SFXP(SBV(-11977, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15462, 16), 8), UFXP(BV(60645, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4790, 16), 8), UFXP(BV(46312, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55203, 16), 8), UFXP(BV(62791, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-273, 16), 8), SFXP(SBV(-13065, 16), 8)), SFXP(SBV(-13338, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15439, 16), 8), UFXP(BV(63839, 16), 8)), UFXP(BV(48952, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25047, 16), 8), UFXP(BV(54234, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18347, 16), 8), SFXP(SBV(3447, 16), 8)), SFXP(SBV(21794, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21424, 16), 8), SFXP(SBV(19982, 16), 8)), SFXP(SBV(-31693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18843, 16), 8), UFXP(BV(2315, 16), 8)), UFXP(BV(39325, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30852, 16), 8), SFXP(SBV(10070, 16), 8)), SFXP(SBV(-20782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27223, 16), 8), UFXP(BV(31154, 16), 8)), UFXP(BV(58377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32609, 16), 8), SFXP(SBV(6915, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-488, 16), 8), SFXP(SBV(-20820, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11371, 16), 8), SFXP(SBV(-20109, 16), 8)), SFXP(SBV(31480, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63301, 16), 8), UFXP(BV(13371, 16), 8)), UFXP(BV(11136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56052, 16), 8), UFXP(BV(43329, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-851, 16), 8), SFXP(SBV(20649, 16), 8)), SFXP(SBV(-21500, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24970, 16), 8), SFXP(SBV(18178, 16), 8)), SFXP(SBV(-3594, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27848, 16), 8), SFXP(SBV(-2840, 16), 8)), SFXP(SBV(30688, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13422, 16), 8), UFXP(BV(58694, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12013, 16), 8), UFXP(BV(27807, 16), 8)), UFXP(BV(49742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18551, 16), 8), UFXP(BV(36313, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17207, 16), 8), SFXP(SBV(-13176, 16), 8)), SFXP(SBV(30383, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31033, 16), 8), SFXP(SBV(1023, 16), 8)), SFXP(SBV(-7061, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65478, 16), 8), UFXP(BV(40471, 16), 8)), UFXP(BV(40413, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21037, 16), 8), SFXP(SBV(30067, 16), 8)), SFXP(SBV(-14432, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6684, 16), 8), UFXP(BV(53319, 16), 8)), UFXP(BV(15870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(352, 16), 8), UFXP(BV(34393, 16), 8)), UFXP(BV(47291, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25728, 16), 8), UFXP(BV(16575, 16), 8)), UFXP(BV(9153, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7381, 16), 8), UFXP(BV(34449, 16), 8)), UFXP(BV(41830, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12203, 16), 8), SFXP(SBV(-25747, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6978, 16), 8), UFXP(BV(30400, 16), 8)), UFXP(BV(42114, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57859, 16), 8), UFXP(BV(18618, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25499, 16), 8), SFXP(SBV(17027, 16), 8)), SFXP(SBV(-23010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10956, 16), 8), SFXP(SBV(11882, 16), 8)), SFXP(SBV(-15775, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50098, 16), 8), UFXP(BV(12762, 16), 8)), UFXP(BV(37336, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5772, 16), 8), SFXP(SBV(23488, 16), 8)), SFXP(SBV(29260, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(617, 16), 8), UFXP(BV(39705, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12602, 16), 8), SFXP(SBV(16055, 16), 8)), SFXP(SBV(3901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17837, 16), 8), SFXP(SBV(23290, 16), 8)), SFXP(SBV(-15651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26611, 16), 8), SFXP(SBV(8875, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9755, 16), 8), SFXP(SBV(28626, 16), 8)), SFXP(SBV(27155, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8397, 16), 8), UFXP(BV(41371, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10474, 16), 8), UFXP(BV(35386, 16), 8)), UFXP(BV(45860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11374, 16), 8), UFXP(BV(16635, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18543, 16), 8), UFXP(BV(65526, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36341, 16), 8), UFXP(BV(28391, 16), 8)), UFXP(BV(64732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17128, 16), 8), UFXP(BV(23667, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40496, 16), 8), UFXP(BV(1243, 16), 8)), UFXP(BV(41739, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25660, 16), 8), SFXP(SBV(23948, 16), 8)), SFXP(SBV(15928, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28643, 16), 8), SFXP(SBV(-19453, 16), 8)), SFXP(SBV(9190, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22687, 16), 8), SFXP(SBV(-3853, 16), 8)), SFXP(SBV(-26540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14181, 16), 8), SFXP(SBV(1111, 16), 8)), SFXP(SBV(-15292, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14844, 16), 8), UFXP(BV(2090, 16), 8)), UFXP(BV(16934, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1493, 16), 8), SFXP(SBV(15664, 16), 8)), SFXP(SBV(-14171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13788, 16), 8), SFXP(SBV(13602, 16), 8)), SFXP(SBV(-27390, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25958, 16), 8), UFXP(BV(57745, 16), 8)), UFXP(BV(18167, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31093, 16), 8), UFXP(BV(57239, 16), 8)), UFXP(BV(22796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32451, 16), 8), SFXP(SBV(9345, 16), 8)), SFXP(SBV(-23106, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28860, 16), 8), SFXP(SBV(14016, 16), 8)), SFXP(SBV(14844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5089, 16), 8), SFXP(SBV(-19034, 16), 8)), SFXP(SBV(14841, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55705, 16), 8), UFXP(BV(54305, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5927, 16), 8), SFXP(SBV(-6221, 16), 8)), SFXP(SBV(12958, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2507, 16), 8), UFXP(BV(50673, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17471, 16), 8), SFXP(SBV(17539, 16), 8)), SFXP(SBV(68, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7449, 16), 8), SFXP(SBV(-1696, 16), 8)), SFXP(SBV(9145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46167, 16), 8), UFXP(BV(44660, 16), 8)), UFXP(BV(1507, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3833, 16), 8), SFXP(SBV(815, 16), 8)), SFXP(SBV(-4648, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65245, 16), 8), UFXP(BV(2960, 16), 8)), UFXP(BV(2669, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1012, 16), 8), SFXP(SBV(4254, 16), 8)), SFXP(SBV(5266, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55985, 16), 8), UFXP(BV(19966, 16), 8)), UFXP(BV(10415, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(965, 16), 8), UFXP(BV(40394, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13991, 16), 8), SFXP(SBV(27874, 16), 8)), SFXP(SBV(16051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30963, 16), 8), SFXP(SBV(-11776, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22470, 16), 8), SFXP(SBV(22270, 16), 8)), SFXP(SBV(11366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25209, 16), 8), SFXP(SBV(-13886, 16), 8)), SFXP(SBV(11323, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54729, 16), 8), UFXP(BV(6935, 16), 8)), UFXP(BV(47794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17890, 16), 8), UFXP(BV(42523, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36538, 16), 8), UFXP(BV(44436, 16), 8)), UFXP(BV(50741, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7795, 16), 8), SFXP(SBV(22634, 16), 8)), SFXP(SBV(30429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(14667, 16), 8), UFXP(BV(25101, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57124, 16), 8), UFXP(BV(46265, 16), 8)), UFXP(BV(37853, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10163, 16), 8), UFXP(BV(45990, 16), 8)), UFXP(BV(56296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2626, 16), 8), SFXP(SBV(24898, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11257, 16), 8), SFXP(SBV(-4725, 16), 8)), SFXP(SBV(15982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22961, 16), 8), UFXP(BV(58921, 16), 8)), UFXP(BV(29576, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3901, 16), 8), SFXP(SBV(8446, 16), 8)), SFXP(SBV(12347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13265, 16), 8), UFXP(BV(52347, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14157, 16), 8), SFXP(SBV(13667, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47525, 16), 8), UFXP(BV(59222, 16), 8)), UFXP(BV(41211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63799, 16), 8), UFXP(BV(51899, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63482, 16), 8), UFXP(BV(19240, 16), 8)), UFXP(BV(44242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30907, 16), 8), UFXP(BV(34756, 16), 8)), UFXP(BV(61687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11101, 16), 8), UFXP(BV(60323, 16), 8)), UFXP(BV(59899, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29877, 16), 8), UFXP(BV(26815, 16), 8)), UFXP(BV(56692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27555, 16), 8), SFXP(SBV(-24557, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30228, 16), 8), SFXP(SBV(-9304, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58541, 16), 8), UFXP(BV(38819, 16), 8)), UFXP(BV(31824, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20459, 16), 8), SFXP(SBV(15221, 16), 8)), SFXP(SBV(29856, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(29260, 16), 8), UFXP(BV(55678, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56701, 16), 8), UFXP(BV(20933, 16), 8)), UFXP(BV(48894, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28797, 16), 8), SFXP(SBV(-11962, 16), 8)), SFXP(SBV(-30672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55203, 16), 8), UFXP(BV(35962, 16), 8)), UFXP(BV(19241, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5152, 16), 8), SFXP(SBV(1627, 16), 8)), SFXP(SBV(3525, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4126, 16), 8), SFXP(SBV(-13611, 16), 8)), SFXP(SBV(-9485, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13374, 16), 8), SFXP(SBV(29418, 16), 8)), SFXP(SBV(-16044, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20043, 16), 8), SFXP(SBV(17748, 16), 8)), SFXP(SBV(-2295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2456, 16), 8), SFXP(SBV(10227, 16), 8)), SFXP(SBV(12683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10523, 16), 8), SFXP(SBV(22025, 16), 8)), SFXP(SBV(11502, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16699, 16), 8), SFXP(SBV(-20884, 16), 8)), SFXP(SBV(4185, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37621, 16), 8), UFXP(BV(47948, 16), 8)), UFXP(BV(33943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19554, 16), 8), UFXP(BV(65290, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30457, 16), 8), UFXP(BV(60404, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16558, 16), 8), SFXP(SBV(-26777, 16), 8)), SFXP(SBV(-10219, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9417, 16), 8), SFXP(SBV(408, 16), 8)), SFXP(SBV(-9009, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4986, 16), 8), SFXP(SBV(-6591, 16), 8)), SFXP(SBV(-2702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12689, 16), 8), UFXP(BV(49821, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29714, 16), 8), UFXP(BV(49051, 16), 8)), UFXP(BV(46199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29116, 16), 8), SFXP(SBV(-18415, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8677, 16), 8), SFXP(SBV(26178, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10330, 16), 8), SFXP(SBV(24466, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(20105, 16), 8), SFXP(SBV(21385, 16), 8)), SFXP(SBV(-24461, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27610, 16), 8), SFXP(SBV(7642, 16), 8)), SFXP(SBV(-19968, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28089, 16), 8), SFXP(SBV(24698, 16), 8)), SFXP(SBV(-3391, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16020, 16), 8), SFXP(SBV(6167, 16), 8)), SFXP(SBV(22187, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58143, 16), 8), UFXP(BV(55519, 16), 8)), UFXP(BV(48126, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19648, 16), 8), UFXP(BV(17158, 16), 8)), UFXP(BV(2490, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9585, 16), 8), SFXP(SBV(-26325, 16), 8)), SFXP(SBV(29626, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22818, 16), 8), SFXP(SBV(7654, 16), 8)), SFXP(SBV(30472, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5906, 16), 8), SFXP(SBV(-26075, 16), 8)), SFXP(SBV(20169, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19260, 16), 8), SFXP(SBV(1028, 16), 8)), SFXP(SBV(-18232, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52283, 16), 8), UFXP(BV(49125, 16), 8)), UFXP(BV(5813, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-832, 16), 8), SFXP(SBV(-11596, 16), 8)), SFXP(SBV(-12428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2411, 16), 8), SFXP(SBV(-21622, 16), 8)), SFXP(SBV(-7028, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39658, 16), 8), UFXP(BV(36819, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18082, 16), 8), SFXP(SBV(12095, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19211, 16), 8), SFXP(SBV(-6223, 16), 8)), SFXP(SBV(12988, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33069, 16), 8), UFXP(BV(29606, 16), 8)), UFXP(BV(62675, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7955, 16), 8), SFXP(SBV(11455, 16), 8)), SFXP(SBV(28275, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32869, 16), 8), UFXP(BV(27785, 16), 8)), UFXP(BV(5084, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15831, 16), 8), UFXP(BV(23115, 16), 8)), UFXP(BV(38946, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23168, 16), 8), SFXP(SBV(9197, 16), 8)), SFXP(SBV(-13971, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(32185, 16), 8), SFXP(SBV(-32607, 16), 8)), SFXP(SBV(29329, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21434, 16), 8), SFXP(SBV(202, 16), 8)), SFXP(SBV(-21232, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23289, 16), 8), SFXP(SBV(-20627, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(4265, 16), 8), UFXP(BV(13799, 16), 8)), UFXP(BV(33286, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(15832, 16), 8), UFXP(BV(6384, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44338, 16), 8), UFXP(BV(63170, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4878, 16), 8), UFXP(BV(64464, 16), 8)), UFXP(BV(5950, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15798, 16), 8), SFXP(SBV(2740, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52010, 16), 8), UFXP(BV(51000, 16), 8)), UFXP(BV(1010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1925, 16), 8), SFXP(SBV(-23637, 16), 8)), SFXP(SBV(-18869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21406, 16), 8), SFXP(SBV(3499, 16), 8)), SFXP(SBV(24905, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15320, 16), 8), SFXP(SBV(-2153, 16), 8)), SFXP(SBV(-13167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5694, 16), 8), SFXP(SBV(25665, 16), 8)), SFXP(SBV(-18979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17304, 16), 8), SFXP(SBV(20217, 16), 8)), SFXP(SBV(-28015, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36058, 16), 8), UFXP(BV(51451, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59276, 16), 8), UFXP(BV(5063, 16), 8)), UFXP(BV(64339, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24610, 16), 8), SFXP(SBV(7740, 16), 8)), SFXP(SBV(23172, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24249, 16), 8), SFXP(SBV(7852, 16), 8)), SFXP(SBV(16397, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14750, 16), 8), SFXP(SBV(-6773, 16), 8)), SFXP(SBV(-7977, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27334, 16), 8), UFXP(BV(14301, 16), 8)), UFXP(BV(13033, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9198, 16), 8), UFXP(BV(5193, 16), 8)), UFXP(BV(14391, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12983, 16), 8), SFXP(SBV(16388, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7523, 16), 8), UFXP(BV(30251, 16), 8)), UFXP(BV(42808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53728, 16), 8), UFXP(BV(35274, 16), 8)), UFXP(BV(23466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1069, 16), 8), SFXP(SBV(-14452, 16), 8)), SFXP(SBV(13383, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3400, 16), 8), SFXP(SBV(21920, 16), 8)), SFXP(SBV(-18520, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18486, 16), 8), SFXP(SBV(-7713, 16), 8)), SFXP(SBV(32674, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23924, 16), 8), SFXP(SBV(17435, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11322, 16), 8), SFXP(SBV(16349, 16), 8)), SFXP(SBV(-27671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20052, 16), 8), SFXP(SBV(25772, 16), 8)), SFXP(SBV(5720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63503, 16), 8), UFXP(BV(57054, 16), 8)), UFXP(BV(6449, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28005, 16), 8), SFXP(SBV(28727, 16), 8)), SFXP(SBV(722, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15304, 16), 8), UFXP(BV(11019, 16), 8)), UFXP(BV(4285, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16213, 16), 8), SFXP(SBV(-11409, 16), 8)), SFXP(SBV(4804, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26560, 16), 8), SFXP(SBV(8473, 16), 8)), SFXP(SBV(-27106, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27746, 16), 8), SFXP(SBV(27574, 16), 8)), SFXP(SBV(-172, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1026, 16), 8), SFXP(SBV(535, 16), 8)), SFXP(SBV(491, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16391, 16), 8), SFXP(SBV(-18774, 16), 8)), SFXP(SBV(-2383, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26623, 16), 8), SFXP(SBV(-4510, 16), 8)), SFXP(SBV(-31133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2208, 16), 8), SFXP(SBV(-19297, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13165, 16), 8), SFXP(SBV(-12041, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55526, 16), 8), UFXP(BV(52488, 16), 8)), UFXP(BV(42478, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12932, 16), 8), UFXP(BV(3566, 16), 8)), UFXP(BV(16498, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(65314, 16), 8), UFXP(BV(40469, 16), 8)), UFXP(BV(35817, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16787, 16), 8), SFXP(SBV(30179, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1335, 16), 8), SFXP(SBV(-16964, 16), 8)), SFXP(SBV(15629, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1028, 16), 8), SFXP(SBV(3540, 16), 8)), SFXP(SBV(2512, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58806, 16), 8), UFXP(BV(36755, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14580, 16), 8), SFXP(SBV(-8168, 16), 8)), SFXP(SBV(-6412, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41349, 16), 8), UFXP(BV(41649, 16), 8)), UFXP(BV(65236, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8149, 16), 8), SFXP(SBV(-27333, 16), 8)), SFXP(SBV(19184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22647, 16), 8), SFXP(SBV(25395, 16), 8)), SFXP(SBV(-2748, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22084, 16), 8), SFXP(SBV(17704, 16), 8)), SFXP(SBV(-4380, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17925, 16), 8), UFXP(BV(58785, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9258, 16), 8), UFXP(BV(41077, 16), 8)), UFXP(BV(33717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43453, 16), 8), UFXP(BV(52364, 16), 8)), UFXP(BV(30281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11049, 16), 8), SFXP(SBV(-930, 16), 8)), SFXP(SBV(11979, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43816, 16), 8), UFXP(BV(7533, 16), 8)), UFXP(BV(36283, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26179, 16), 8), SFXP(SBV(-18610, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26836, 16), 8), SFXP(SBV(-3579, 16), 8)), SFXP(SBV(23257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22514, 16), 8), SFXP(SBV(-12807, 16), 8)), SFXP(SBV(12203, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32662, 16), 8), SFXP(SBV(12107, 16), 8)), SFXP(SBV(20555, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65237, 16), 8), UFXP(BV(26759, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12305, 16), 8), SFXP(SBV(20570, 16), 8)), SFXP(SBV(-5686, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14118, 16), 8), SFXP(SBV(-12290, 16), 8)), SFXP(SBV(-26408, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22291, 16), 8), SFXP(SBV(-23653, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33802, 16), 8), UFXP(BV(20992, 16), 8)), UFXP(BV(12810, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52664, 16), 8), UFXP(BV(55215, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24532, 16), 8), SFXP(SBV(923, 16), 8)), SFXP(SBV(-25455, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22215, 16), 8), SFXP(SBV(32615, 16), 8)), SFXP(SBV(12195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9088, 16), 8), SFXP(SBV(21851, 16), 8)), SFXP(SBV(30939, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6101, 16), 8), SFXP(SBV(-22627, 16), 8)), SFXP(SBV(28728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7306, 16), 8), SFXP(SBV(-5345, 16), 8)), SFXP(SBV(-12651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15326, 16), 8), SFXP(SBV(-12091, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29499, 16), 8), UFXP(BV(55418, 16), 8)), UFXP(BV(19381, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30589, 16), 8), SFXP(SBV(-4281, 16), 8)), SFXP(SBV(26308, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31120, 16), 8), SFXP(SBV(-10099, 16), 8)), SFXP(SBV(21021, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16693, 16), 8), SFXP(SBV(26372, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63580, 16), 8), UFXP(BV(34043, 16), 8)), UFXP(BV(29537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17680, 16), 8), UFXP(BV(30390, 16), 8)), UFXP(BV(1657, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60388, 16), 8), UFXP(BV(48646, 16), 8)), UFXP(BV(43498, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27928, 16), 8), UFXP(BV(42142, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36859, 16), 8), UFXP(BV(21642, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46564, 16), 8), UFXP(BV(37323, 16), 8)), UFXP(BV(18351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61147, 16), 8), UFXP(BV(20615, 16), 8)), UFXP(BV(16226, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23457, 16), 8), SFXP(SBV(-7595, 16), 8)), SFXP(SBV(-31052, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1122, 16), 8), SFXP(SBV(8405, 16), 8)), SFXP(SBV(-7283, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12489, 16), 8), SFXP(SBV(-4517, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22734, 16), 8), SFXP(SBV(-20338, 16), 8)), SFXP(SBV(2396, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14062, 16), 8), SFXP(SBV(-29261, 16), 8)), SFXP(SBV(-15199, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64640, 16), 8), UFXP(BV(40431, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13755, 16), 8), SFXP(SBV(19552, 16), 8)), SFXP(SBV(-1962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18496, 16), 8), SFXP(SBV(-23824, 16), 8)), SFXP(SBV(-5328, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17317, 16), 8), SFXP(SBV(16073, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25331, 16), 8), SFXP(SBV(-1842, 16), 8)), SFXP(SBV(-27173, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9516, 16), 8), UFXP(BV(57264, 16), 8)), UFXP(BV(17788, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21997, 16), 8), SFXP(SBV(13893, 16), 8)), SFXP(SBV(-14119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56807, 16), 8), UFXP(BV(44970, 16), 8)), UFXP(BV(17476, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30300, 16), 8), SFXP(SBV(-25996, 16), 8)), SFXP(SBV(9240, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-927, 16), 8), SFXP(SBV(-6290, 16), 8)), SFXP(SBV(-7217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15308, 16), 8), UFXP(BV(23731, 16), 8)), UFXP(BV(42784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58082, 16), 8), UFXP(BV(14557, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60494, 16), 8), UFXP(BV(16310, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37646, 16), 8), UFXP(BV(32220, 16), 8)), UFXP(BV(5426, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9099, 16), 8), SFXP(SBV(-26168, 16), 8)), SFXP(SBV(-17069, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48432, 16), 8), UFXP(BV(57579, 16), 8)), UFXP(BV(40475, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13168, 16), 8), UFXP(BV(1672, 16), 8)), UFXP(BV(11496, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9507, 16), 8), SFXP(SBV(22121, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10598, 16), 8), UFXP(BV(54557, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55378, 16), 8), UFXP(BV(59426, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18285, 16), 8), SFXP(SBV(-26125, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16021, 16), 8), SFXP(SBV(-2532, 16), 8)), SFXP(SBV(27385, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2524, 16), 8), SFXP(SBV(4277, 16), 8)), SFXP(SBV(23368, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18732, 16), 8), SFXP(SBV(-3591, 16), 8)), SFXP(SBV(15141, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58012, 16), 8), UFXP(BV(14437, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22370, 16), 8), SFXP(SBV(-32163, 16), 8)), SFXP(SBV(9793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15120, 16), 8), UFXP(BV(50578, 16), 8)), UFXP(BV(38144, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18348, 16), 8), SFXP(SBV(16489, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13949, 16), 8), UFXP(BV(58074, 16), 8)), UFXP(BV(18624, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2675, 16), 8), SFXP(SBV(-13000, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61257, 16), 8), UFXP(BV(22767, 16), 8)), UFXP(BV(8318, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16209, 16), 8), SFXP(SBV(-4904, 16), 8)), SFXP(SBV(11305, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29332, 16), 8), UFXP(BV(36074, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26163, 16), 8), UFXP(BV(7944, 16), 8)), UFXP(BV(25439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23429, 16), 8), UFXP(BV(6478, 16), 8)), UFXP(BV(16951, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26982, 16), 8), SFXP(SBV(-24540, 16), 8)), SFXP(SBV(30574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23161, 16), 8), UFXP(BV(7323, 16), 8)), UFXP(BV(30484, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(970, 16), 8), UFXP(BV(49340, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12728, 16), 8), SFXP(SBV(-10494, 16), 8)), SFXP(SBV(-2234, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7242, 16), 8), SFXP(SBV(-30081, 16), 8)), SFXP(SBV(22839, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9760, 16), 8), UFXP(BV(45377, 16), 8)), UFXP(BV(26062, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3296, 16), 8), UFXP(BV(6425, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51850, 16), 8), UFXP(BV(60642, 16), 8)), UFXP(BV(46956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15910, 16), 8), SFXP(SBV(-5123, 16), 8)), SFXP(SBV(-10787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32387, 16), 8), UFXP(BV(58264, 16), 8)), UFXP(BV(25115, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2225, 16), 8), UFXP(BV(52659, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32362, 16), 8), SFXP(SBV(576, 16), 8)), SFXP(SBV(31786, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25632, 16), 8), SFXP(SBV(9960, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2568, 16), 8), SFXP(SBV(-25576, 16), 8)), SFXP(SBV(-23008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60358, 16), 8), UFXP(BV(16740, 16), 8)), UFXP(BV(43618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34538, 16), 8), UFXP(BV(64724, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3160, 16), 8), SFXP(SBV(20921, 16), 8)), SFXP(SBV(24081, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2906, 16), 8), SFXP(SBV(15843, 16), 8)), SFXP(SBV(12937, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27343, 16), 8), SFXP(SBV(-17304, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64625, 16), 8), UFXP(BV(54962, 16), 8)), UFXP(BV(54051, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10934, 16), 8), UFXP(BV(25643, 16), 8)), UFXP(BV(36577, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11868, 16), 8), SFXP(SBV(8603, 16), 8)), SFXP(SBV(-3265, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19972, 16), 8), SFXP(SBV(26342, 16), 8)), SFXP(SBV(6370, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13179, 16), 8), SFXP(SBV(-20832, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2092, 16), 8), UFXP(BV(21956, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43819, 16), 8), UFXP(BV(7412, 16), 8)), UFXP(BV(36407, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-25991, 16), 8), SFXP(SBV(19070, 16), 8)), SFXP(SBV(29954, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20922, 16), 8), UFXP(BV(51926, 16), 8)), UFXP(BV(34532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22951, 16), 8), SFXP(SBV(-27903, 16), 8)), SFXP(SBV(-11202, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21998, 16), 8), SFXP(SBV(8847, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59111, 16), 8), UFXP(BV(707, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6335, 16), 8), UFXP(BV(42351, 16), 8)), UFXP(BV(48686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22488, 16), 8), UFXP(BV(61103, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23753, 16), 8), UFXP(BV(58311, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2641, 16), 8), UFXP(BV(10321, 16), 8)), UFXP(BV(12962, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15887, 16), 8), UFXP(BV(52571, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51737, 16), 8), UFXP(BV(50212, 16), 8)), UFXP(BV(55184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7008, 16), 8), SFXP(SBV(16950, 16), 8)), SFXP(SBV(-23958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25008, 16), 8), SFXP(SBV(-32609, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53178, 16), 8), UFXP(BV(38007, 16), 8)), UFXP(BV(25649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34955, 16), 8), UFXP(BV(26676, 16), 8)), UFXP(BV(8279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22426, 16), 8), SFXP(SBV(16753, 16), 8)), SFXP(SBV(25796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30735, 16), 8), SFXP(SBV(-32375, 16), 8)), SFXP(SBV(1640, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23833, 16), 8), UFXP(BV(53548, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53873, 16), 8), UFXP(BV(48202, 16), 8)), UFXP(BV(5671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15999, 16), 8), SFXP(SBV(4416, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1432, 16), 8), SFXP(SBV(29364, 16), 8)), SFXP(SBV(-30796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31489, 16), 8), SFXP(SBV(12268, 16), 8)), SFXP(SBV(-1683, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42017, 16), 8), UFXP(BV(63270, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3001, 16), 8), SFXP(SBV(-2683, 16), 8)), SFXP(SBV(5684, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56669, 16), 8), UFXP(BV(38036, 16), 8)), UFXP(BV(18633, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27250, 16), 8), SFXP(SBV(-25814, 16), 8)), SFXP(SBV(1436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45628, 16), 8), UFXP(BV(7088, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6954, 16), 8), UFXP(BV(38318, 16), 8)), UFXP(BV(34172, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4863, 16), 8), SFXP(SBV(3266, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26170, 16), 8), SFXP(SBV(19354, 16), 8)), SFXP(SBV(-12413, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3946, 16), 8), SFXP(SBV(-11531, 16), 8)), SFXP(SBV(7585, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25483, 16), 8), SFXP(SBV(-19404, 16), 8)), SFXP(SBV(-6079, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18564, 16), 8), UFXP(BV(50069, 16), 8)), UFXP(BV(34031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29437, 16), 8), SFXP(SBV(15582, 16), 8)), SFXP(SBV(20517, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16972, 16), 8), UFXP(BV(22126, 16), 8)), UFXP(BV(60382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6349, 16), 8), SFXP(SBV(-25350, 16), 8)), SFXP(SBV(-26660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(4899, 16), 8), UFXP(BV(1918, 16), 8)), UFXP(BV(36705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29438, 16), 8), UFXP(BV(10040, 16), 8)), UFXP(BV(39478, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28379, 16), 8), UFXP(BV(38547, 16), 8)), UFXP(BV(55368, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-9148, 16), 8), SFXP(SBV(-23607, 16), 8)), SFXP(SBV(-8386, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33213, 16), 8), UFXP(BV(46037, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28648, 16), 8), SFXP(SBV(8645, 16), 8)), SFXP(SBV(15611, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16783, 16), 8), SFXP(SBV(10280, 16), 8)), SFXP(SBV(6503, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20003, 16), 8), SFXP(SBV(30822, 16), 8)), SFXP(SBV(10819, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7606, 16), 8), UFXP(BV(23698, 16), 8)), UFXP(BV(31304, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16766, 16), 8), SFXP(SBV(27743, 16), 8)), SFXP(SBV(10977, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-335, 16), 8), SFXP(SBV(-13821, 16), 8)), SFXP(SBV(-14156, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18912, 16), 8), SFXP(SBV(-1684, 16), 8)), SFXP(SBV(17228, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44016, 16), 8), UFXP(BV(32007, 16), 8)), UFXP(BV(10487, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37938, 16), 8), UFXP(BV(48195, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23261, 16), 8), UFXP(BV(34740, 16), 8)), UFXP(BV(54057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4210, 16), 8), SFXP(SBV(-11914, 16), 8)), SFXP(SBV(-678, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32161, 16), 8), SFXP(SBV(16138, 16), 8)), SFXP(SBV(-16023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12312, 16), 8), UFXP(BV(5051, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26666, 16), 8), SFXP(SBV(20918, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16782, 16), 8), SFXP(SBV(1409, 16), 8)), SFXP(SBV(-18191, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26074, 16), 8), UFXP(BV(10086, 16), 8)), UFXP(BV(15988, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23524, 16), 8), SFXP(SBV(-30191, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10156, 16), 8), SFXP(SBV(14372, 16), 8)), SFXP(SBV(4216, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13218, 16), 8), SFXP(SBV(-10198, 16), 8)), SFXP(SBV(-23416, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11771, 16), 8), SFXP(SBV(-11338, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19077, 16), 8), UFXP(BV(18795, 16), 8)), UFXP(BV(37872, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22767, 16), 8), SFXP(SBV(24943, 16), 8)), SFXP(SBV(9954, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8420, 16), 8), UFXP(BV(18884, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51508, 16), 8), UFXP(BV(24952, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29927, 16), 8), UFXP(BV(54167, 16), 8)), UFXP(BV(18558, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5128, 16), 8), UFXP(BV(3881, 16), 8)), UFXP(BV(1247, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13209, 16), 8), SFXP(SBV(580, 16), 8)), SFXP(SBV(13789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17649, 16), 8), SFXP(SBV(-29265, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6497, 16), 8), UFXP(BV(12956, 16), 8)), UFXP(BV(1130, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18077, 16), 8), SFXP(SBV(-23114, 16), 8)), SFXP(SBV(24345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22677, 16), 8), UFXP(BV(63509, 16), 8)), UFXP(BV(20650, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36281, 16), 8), UFXP(BV(4136, 16), 8)), UFXP(BV(40417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43663, 16), 8), UFXP(BV(36708, 16), 8)), UFXP(BV(6955, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31010, 16), 8), SFXP(SBV(14146, 16), 8)), SFXP(SBV(-9608, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12064, 16), 8), SFXP(SBV(-25931, 16), 8)), SFXP(SBV(-13867, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4541, 16), 8), SFXP(SBV(12572, 16), 8)), SFXP(SBV(17113, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19189, 16), 8), SFXP(SBV(-1352, 16), 8)), SFXP(SBV(-17837, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8130, 16), 8), SFXP(SBV(24478, 16), 8)), SFXP(SBV(-32608, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4509, 16), 8), SFXP(SBV(25312, 16), 8)), SFXP(SBV(20803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26173, 16), 8), SFXP(SBV(17878, 16), 8)), SFXP(SBV(-7193, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46916, 16), 8), UFXP(BV(40634, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63365, 16), 8), UFXP(BV(34393, 16), 8)), UFXP(BV(32222, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8593, 16), 8), SFXP(SBV(-2528, 16), 8)), SFXP(SBV(6065, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8446, 16), 8), UFXP(BV(53178, 16), 8)), UFXP(BV(20804, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11176, 16), 8), SFXP(SBV(4479, 16), 8)), SFXP(SBV(6697, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6259, 16), 8), UFXP(BV(12995, 16), 8)), UFXP(BV(19254, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12376, 16), 8), SFXP(SBV(9017, 16), 8)), SFXP(SBV(-3359, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5201, 16), 8), UFXP(BV(44091, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27539, 16), 8), UFXP(BV(26764, 16), 8)), UFXP(BV(61068, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1316, 16), 8), SFXP(SBV(-6466, 16), 8)), SFXP(SBV(-7782, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17058, 16), 8), SFXP(SBV(19726, 16), 8)), SFXP(SBV(28752, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14758, 16), 8), UFXP(BV(38059, 16), 8)), UFXP(BV(31354, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23504, 16), 8), SFXP(SBV(-24395, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-795, 16), 8), SFXP(SBV(28467, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14763, 16), 8), UFXP(BV(57514, 16), 8)), UFXP(BV(6741, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(441, 16), 8), SFXP(SBV(-24510, 16), 8)), SFXP(SBV(23314, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29814, 16), 8), SFXP(SBV(-3292, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31645, 16), 8), SFXP(SBV(-5539, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(15376, 16), 8), UFXP(BV(33016, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2262, 16), 8), SFXP(SBV(-19653, 16), 8)), SFXP(SBV(-21915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50523, 16), 8), UFXP(BV(41534, 16), 8)), UFXP(BV(8989, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24497, 16), 8), SFXP(SBV(-10677, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32313, 16), 8), UFXP(BV(26705, 16), 8)), UFXP(BV(59018, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49407, 16), 8), UFXP(BV(61385, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51398, 16), 8), UFXP(BV(37286, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29736, 16), 8), SFXP(SBV(-23562, 16), 8)), SFXP(SBV(-15638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34001, 16), 8), UFXP(BV(9139, 16), 8)), UFXP(BV(24862, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14355, 16), 8), UFXP(BV(2482, 16), 8)), UFXP(BV(16837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45813, 16), 8), UFXP(BV(21440, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31426, 16), 8), SFXP(SBV(-24566, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14525, 16), 8), SFXP(SBV(23983, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18554, 16), 8), SFXP(SBV(-17101, 16), 8)), SFXP(SBV(5763, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27219, 16), 8), UFXP(BV(48055, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24214, 16), 8), SFXP(SBV(24705, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32728, 16), 8), SFXP(SBV(32376, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24975, 16), 8), SFXP(SBV(27920, 16), 8)), SFXP(SBV(2945, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64655, 16), 8), UFXP(BV(23665, 16), 8)), UFXP(BV(40990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-517, 16), 8), SFXP(SBV(10994, 16), 8)), SFXP(SBV(-22202, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54124, 16), 8), UFXP(BV(37980, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-8686, 16), 8), SFXP(SBV(9219, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23936, 16), 8), UFXP(BV(30635, 16), 8)), UFXP(BV(54571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4162, 16), 8), SFXP(SBV(16220, 16), 8)), SFXP(SBV(20382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30393, 16), 8), UFXP(BV(44014, 16), 8)), UFXP(BV(8871, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12844, 16), 8), UFXP(BV(3487, 16), 8)), UFXP(BV(16331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29006, 16), 8), SFXP(SBV(30943, 16), 8)), SFXP(SBV(32579, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41197, 16), 8), UFXP(BV(55670, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6569, 16), 8), UFXP(BV(35240, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25310, 16), 8), SFXP(SBV(-29431, 16), 8)), SFXP(SBV(-4121, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13202, 16), 8), UFXP(BV(49863, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13900, 16), 8), SFXP(SBV(-29800, 16), 8)), SFXP(SBV(-21836, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30883, 16), 8), UFXP(BV(58794, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4571, 16), 8), SFXP(SBV(7765, 16), 8)), SFXP(SBV(7576, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9119, 16), 8), SFXP(SBV(-9058, 16), 8)), SFXP(SBV(-18177, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63671, 16), 8), UFXP(BV(12638, 16), 8)), UFXP(BV(63067, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1920, 16), 8), SFXP(SBV(-21759, 16), 8)), SFXP(SBV(19839, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17000, 16), 8), SFXP(SBV(-9741, 16), 8)), SFXP(SBV(26741, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20477, 16), 8), UFXP(BV(54138, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26142, 16), 8), SFXP(SBV(-24893, 16), 8)), SFXP(SBV(1249, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16326, 16), 8), SFXP(SBV(10410, 16), 8)), SFXP(SBV(-5916, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17201, 16), 8), UFXP(BV(41369, 16), 8)), UFXP(BV(58570, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6810, 16), 8), UFXP(BV(16810, 16), 8)), UFXP(BV(53956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17347, 16), 8), SFXP(SBV(-882, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48924, 16), 8), UFXP(BV(56871, 16), 8)), UFXP(BV(40259, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34188, 16), 8), UFXP(BV(89, 16), 8)), UFXP(BV(34277, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41778, 16), 8), UFXP(BV(23304, 16), 8)), UFXP(BV(65082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15109, 16), 8), UFXP(BV(53403, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18491, 16), 8), SFXP(SBV(7110, 16), 8)), SFXP(SBV(-11381, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44365, 16), 8), UFXP(BV(11631, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30084, 16), 8), UFXP(BV(29438, 16), 8)), UFXP(BV(646, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4220, 16), 8), UFXP(BV(14245, 16), 8)), UFXP(BV(18465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12240, 16), 8), SFXP(SBV(-28512, 16), 8)), SFXP(SBV(-13026, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13083, 16), 8), UFXP(BV(27736, 16), 8)), UFXP(BV(40819, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64300, 16), 8), UFXP(BV(10809, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(537, 16), 8), UFXP(BV(22637, 16), 8)), UFXP(BV(47485, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23857, 16), 8), UFXP(BV(46372, 16), 8)), UFXP(BV(4693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19455, 16), 8), UFXP(BV(55439, 16), 8)), UFXP(BV(9358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64725, 16), 8), UFXP(BV(7210, 16), 8)), UFXP(BV(57515, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20188, 16), 8), SFXP(SBV(-25727, 16), 8)), SFXP(SBV(-5539, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20987, 16), 8), SFXP(SBV(24163, 16), 8)), SFXP(SBV(-3176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3010, 16), 8), SFXP(SBV(13327, 16), 8)), SFXP(SBV(-10317, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14341, 16), 8), UFXP(BV(10500, 16), 8)), UFXP(BV(63917, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64729, 16), 8), UFXP(BV(104, 16), 8)), UFXP(BV(64625, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28784, 16), 8), SFXP(SBV(-29901, 16), 8)), SFXP(SBV(1117, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(706, 16), 8), SFXP(SBV(13029, 16), 8)), SFXP(SBV(-12323, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10705, 16), 8), SFXP(SBV(-24602, 16), 8)), SFXP(SBV(30229, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7654, 16), 8), SFXP(SBV(16655, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21835, 16), 8), SFXP(SBV(25636, 16), 8)), SFXP(SBV(18065, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4783, 16), 8), SFXP(SBV(31287, 16), 8)), SFXP(SBV(26504, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23576, 16), 8), SFXP(SBV(-4447, 16), 8)), SFXP(SBV(19129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5173, 16), 8), SFXP(SBV(20062, 16), 8)), SFXP(SBV(-25235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34373, 16), 8), UFXP(BV(35783, 16), 8)), UFXP(BV(4620, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8252, 16), 8), UFXP(BV(6541, 16), 8)), UFXP(BV(1711, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16641, 16), 8), UFXP(BV(3182, 16), 8)), UFXP(BV(13459, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57485, 16), 8), UFXP(BV(46629, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26324, 16), 8), UFXP(BV(31226, 16), 8)), UFXP(BV(57550, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52008, 16), 8), UFXP(BV(49435, 16), 8)), UFXP(BV(35907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13101, 16), 8), UFXP(BV(52421, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64866, 16), 8), UFXP(BV(23645, 16), 8)), UFXP(BV(41221, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3994, 16), 8), SFXP(SBV(-15202, 16), 8)), SFXP(SBV(-11208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(1142, 16), 8), SFXP(SBV(31218, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31010, 16), 8), UFXP(BV(31239, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6349, 16), 8), SFXP(SBV(18322, 16), 8)), SFXP(SBV(-11973, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12310, 16), 8), SFXP(SBV(-2401, 16), 8)), SFXP(SBV(-9909, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4639, 16), 8), UFXP(BV(53017, 16), 8)), UFXP(BV(17158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26556, 16), 8), SFXP(SBV(19943, 16), 8)), SFXP(SBV(6613, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19907, 16), 8), SFXP(SBV(-18015, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18521, 16), 8), SFXP(SBV(12604, 16), 8)), SFXP(SBV(-31125, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7460, 16), 8), UFXP(BV(16126, 16), 8)), UFXP(BV(23586, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9570, 16), 8), UFXP(BV(29339, 16), 8)), UFXP(BV(38909, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16880, 16), 8), SFXP(SBV(-27672, 16), 8)), SFXP(SBV(10792, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26750, 16), 8), SFXP(SBV(19108, 16), 8)), SFXP(SBV(-19678, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5477, 16), 8), SFXP(SBV(-18847, 16), 8)), SFXP(SBV(-10007, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16577, 16), 8), UFXP(BV(34082, 16), 8)), UFXP(BV(48031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26011, 16), 8), SFXP(SBV(31119, 16), 8)), SFXP(SBV(5108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50476, 16), 8), UFXP(BV(1092, 16), 8)), UFXP(BV(51568, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45969, 16), 8), UFXP(BV(36322, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30875, 16), 8), UFXP(BV(11956, 16), 8)), UFXP(BV(42831, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52275, 16), 8), UFXP(BV(2231, 16), 8)), UFXP(BV(54506, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5947, 16), 8), SFXP(SBV(5087, 16), 8)), SFXP(SBV(11034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15445, 16), 8), SFXP(SBV(32662, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3793, 16), 8), SFXP(SBV(-11491, 16), 8)), SFXP(SBV(-7698, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13029, 16), 8), SFXP(SBV(-18574, 16), 8)), SFXP(SBV(31603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9611, 16), 8), SFXP(SBV(-4816, 16), 8)), SFXP(SBV(-4795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4661, 16), 8), UFXP(BV(56153, 16), 8)), UFXP(BV(14044, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8088, 16), 8), SFXP(SBV(-8644, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9679, 16), 8), UFXP(BV(29091, 16), 8)), UFXP(BV(51314, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19765, 16), 8), UFXP(BV(42733, 16), 8)), UFXP(BV(62498, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3324, 16), 8), SFXP(SBV(24563, 16), 8)), SFXP(SBV(-8744, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9530, 16), 8), SFXP(SBV(24524, 16), 8)), SFXP(SBV(-14994, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7958, 16), 8), SFXP(SBV(-3138, 16), 8)), SFXP(SBV(-11096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27163, 16), 8), SFXP(SBV(-24521, 16), 8)), SFXP(SBV(13852, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21179, 16), 8), SFXP(SBV(6231, 16), 8)), SFXP(SBV(-27410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11685, 16), 8), SFXP(SBV(21023, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11577, 16), 8), SFXP(SBV(-28568, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-330, 16), 8), SFXP(SBV(-25466, 16), 8)), SFXP(SBV(25136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41054, 16), 8), UFXP(BV(38354, 16), 8)), UFXP(BV(13872, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8856, 16), 8), SFXP(SBV(10566, 16), 8)), SFXP(SBV(-1710, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31735, 16), 8), SFXP(SBV(-8343, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16806, 16), 8), SFXP(SBV(8881, 16), 8)), SFXP(SBV(7925, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23723, 16), 8), SFXP(SBV(-5664, 16), 8)), SFXP(SBV(29387, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9289, 16), 8), SFXP(SBV(-20426, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5449, 16), 8), SFXP(SBV(-812, 16), 8)), SFXP(SBV(4637, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54546, 16), 8), UFXP(BV(24520, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16567, 16), 8), SFXP(SBV(-12374, 16), 8)), SFXP(SBV(14350, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32511, 16), 8), UFXP(BV(47432, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17622, 16), 8), SFXP(SBV(-25588, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25693, 16), 8), UFXP(BV(3810, 16), 8)), UFXP(BV(21883, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22947, 16), 8), UFXP(BV(55737, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23941, 16), 8), SFXP(SBV(-6003, 16), 8)), SFXP(SBV(17938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53281, 16), 8), UFXP(BV(24911, 16), 8)), UFXP(BV(28370, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21002, 16), 8), SFXP(SBV(-7651, 16), 8)), SFXP(SBV(-28653, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2387, 16), 8), SFXP(SBV(20439, 16), 8)), SFXP(SBV(22826, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33951, 16), 8), UFXP(BV(52518, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13107, 16), 8), SFXP(SBV(-20324, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19171, 16), 8), SFXP(SBV(29990, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10495, 16), 8), UFXP(BV(15509, 16), 8)), UFXP(BV(26004, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3962, 16), 8), SFXP(SBV(-24015, 16), 8)), SFXP(SBV(-20053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52282, 16), 8), UFXP(BV(32174, 16), 8)), UFXP(BV(18920, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19138, 16), 8), UFXP(BV(56192, 16), 8)), UFXP(BV(28482, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49076, 16), 8), UFXP(BV(25389, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(930, 16), 8), UFXP(BV(40776, 16), 8)), UFXP(BV(25690, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30096, 16), 8), SFXP(SBV(-32519, 16), 8)), SFXP(SBV(2921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23970, 16), 8), UFXP(BV(30585, 16), 8)), UFXP(BV(54555, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11680, 16), 8), UFXP(BV(765, 16), 8)), UFXP(BV(34903, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5446, 16), 8), UFXP(BV(5473, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10082, 16), 8), SFXP(SBV(22425, 16), 8)), SFXP(SBV(12343, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16009, 16), 8), SFXP(SBV(11101, 16), 8)), SFXP(SBV(-4908, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2999, 16), 8), SFXP(SBV(-10139, 16), 8)), SFXP(SBV(13138, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11192, 16), 8), SFXP(SBV(-10902, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(41553, 16), 8), UFXP(BV(13092, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27673, 16), 8), SFXP(SBV(-21189, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13423, 16), 8), UFXP(BV(48994, 16), 8)), UFXP(BV(13028, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15476, 16), 8), SFXP(SBV(18074, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29894, 16), 8), SFXP(SBV(-24733, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49921, 16), 8), UFXP(BV(44494, 16), 8)), UFXP(BV(5427, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23040, 16), 8), UFXP(BV(36853, 16), 8)), UFXP(BV(51723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1172, 16), 8), SFXP(SBV(-1522, 16), 8)), SFXP(SBV(-350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20798, 16), 8), SFXP(SBV(10463, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15635, 16), 8), SFXP(SBV(1827, 16), 8)), SFXP(SBV(-13808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31438, 16), 8), UFXP(BV(11759, 16), 8)), UFXP(BV(2268, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10203, 16), 8), SFXP(SBV(23878, 16), 8)), SFXP(SBV(31455, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22960, 16), 8), SFXP(SBV(-3580, 16), 8)), SFXP(SBV(26540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21014, 16), 8), SFXP(SBV(-27276, 16), 8)), SFXP(SBV(6262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6880, 16), 8), SFXP(SBV(22888, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10066, 16), 8), UFXP(BV(63533, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65165, 16), 8), UFXP(BV(22130, 16), 8)), UFXP(BV(21759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23020, 16), 8), SFXP(SBV(-26229, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44547, 16), 8), UFXP(BV(31536, 16), 8)), UFXP(BV(13011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28171, 16), 8), SFXP(SBV(25947, 16), 8)), SFXP(SBV(2224, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57200, 16), 8), UFXP(BV(54021, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15401, 16), 8), UFXP(BV(56484, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61031, 16), 8), UFXP(BV(8874, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12896, 16), 8), SFXP(SBV(-3327, 16), 8)), SFXP(SBV(9569, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59847, 16), 8), UFXP(BV(49086, 16), 8)), UFXP(BV(6395, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22689, 16), 8), SFXP(SBV(-15466, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33181, 16), 8), UFXP(BV(4731, 16), 8)), UFXP(BV(37912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29044, 16), 8), SFXP(SBV(14063, 16), 8)), SFXP(SBV(-22627, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12020, 16), 8), UFXP(BV(11998, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3318, 16), 8), SFXP(SBV(-13762, 16), 8)), SFXP(SBV(-10444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15048, 16), 8), UFXP(BV(18276, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4884, 16), 8), SFXP(SBV(-30817, 16), 8)), SFXP(SBV(-25933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19661, 16), 8), SFXP(SBV(21667, 16), 8)), SFXP(SBV(24208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32502, 16), 8), SFXP(SBV(8920, 16), 8)), SFXP(SBV(-18380, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21449, 16), 8), SFXP(SBV(7774, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4641, 16), 8), SFXP(SBV(24270, 16), 8)), SFXP(SBV(28911, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63917, 16), 8), UFXP(BV(31936, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28475, 16), 8), UFXP(BV(14180, 16), 8)), UFXP(BV(14295, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27378, 16), 8), UFXP(BV(52018, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22646, 16), 8), SFXP(SBV(9642, 16), 8)), SFXP(SBV(32288, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29636, 16), 8), SFXP(SBV(9793, 16), 8)), SFXP(SBV(19843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26184, 16), 8), SFXP(SBV(-11692, 16), 8)), SFXP(SBV(14492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14876, 16), 8), UFXP(BV(40476, 16), 8)), UFXP(BV(55352, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57885, 16), 8), UFXP(BV(3130, 16), 8)), UFXP(BV(54755, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64668, 16), 8), UFXP(BV(36321, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32095, 16), 8), UFXP(BV(36253, 16), 8)), UFXP(BV(2812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1568, 16), 8), SFXP(SBV(29851, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57303, 16), 8), UFXP(BV(1583, 16), 8)), UFXP(BV(58886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40649, 16), 8), UFXP(BV(6589, 16), 8)), UFXP(BV(34060, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30387, 16), 8), SFXP(SBV(-5722, 16), 8)), SFXP(SBV(-23837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33281, 16), 8), UFXP(BV(38515, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12396, 16), 8), SFXP(SBV(13520, 16), 8)), SFXP(SBV(25916, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5464, 16), 8), UFXP(BV(14466, 16), 8)), UFXP(BV(19930, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52381, 16), 8), UFXP(BV(27547, 16), 8)), UFXP(BV(24834, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27560, 16), 8), UFXP(BV(40782, 16), 8)), UFXP(BV(65062, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9381, 16), 8), SFXP(SBV(19735, 16), 8)), SFXP(SBV(-10354, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14822, 16), 8), UFXP(BV(25900, 16), 8)), UFXP(BV(54458, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(32628, 16), 8), SFXP(SBV(-4522, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25695, 16), 8), SFXP(SBV(25744, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7615, 16), 8), UFXP(BV(47777, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16996, 16), 8), SFXP(SBV(-17460, 16), 8)), SFXP(SBV(-20467, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37572, 16), 8), UFXP(BV(32918, 16), 8)), UFXP(BV(4954, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14502, 16), 8), SFXP(SBV(-27912, 16), 8)), SFXP(SBV(-13410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31141, 16), 8), SFXP(SBV(-21995, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15138, 16), 8), SFXP(SBV(12723, 16), 8)), SFXP(SBV(-31450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56877, 16), 8), UFXP(BV(65127, 16), 8)), UFXP(BV(57286, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29481, 16), 8), SFXP(SBV(15018, 16), 8)), SFXP(SBV(21037, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21074, 16), 8), SFXP(SBV(13262, 16), 8)), SFXP(SBV(22381, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17526, 16), 8), SFXP(SBV(-16644, 16), 8)), SFXP(SBV(31366, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43526, 16), 8), UFXP(BV(8821, 16), 8)), UFXP(BV(57984, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2002, 16), 8), SFXP(SBV(24670, 16), 8)), SFXP(SBV(-22668, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8957, 16), 8), SFXP(SBV(25146, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38451, 16), 8), UFXP(BV(31857, 16), 8)), UFXP(BV(769, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18410, 16), 8), SFXP(SBV(26546, 16), 8)), SFXP(SBV(8136, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17088, 16), 8), SFXP(SBV(-6458, 16), 8)), SFXP(SBV(-23546, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18291, 16), 8), SFXP(SBV(-12456, 16), 8)), SFXP(SBV(27532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5928, 16), 8), SFXP(SBV(12043, 16), 8)), SFXP(SBV(-17971, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-8197, 16), 8), SFXP(SBV(-26437, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44875, 16), 8), UFXP(BV(61332, 16), 8)), UFXP(BV(49079, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15307, 16), 8), SFXP(SBV(-22516, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4853, 16), 8), SFXP(SBV(-8684, 16), 8)), SFXP(SBV(3831, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(25586, 16), 8), SFXP(SBV(13730, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11796, 16), 8), SFXP(SBV(-31170, 16), 8)), SFXP(SBV(22570, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8471, 16), 8), SFXP(SBV(1064, 16), 8)), SFXP(SBV(7407, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7029, 16), 8), UFXP(BV(45434, 16), 8)), UFXP(BV(52463, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9399, 16), 8), SFXP(SBV(-16798, 16), 8)), SFXP(SBV(7399, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23747, 16), 8), SFXP(SBV(22327, 16), 8)), SFXP(SBV(19462, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29879, 16), 8), SFXP(SBV(-23451, 16), 8)), SFXP(SBV(12206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(459, 16), 8), SFXP(SBV(18044, 16), 8)), SFXP(SBV(-17585, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8719, 16), 8), SFXP(SBV(-13812, 16), 8)), SFXP(SBV(5093, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13766, 16), 8), UFXP(BV(58092, 16), 8)), UFXP(BV(21210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27746, 16), 8), UFXP(BV(38392, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21040, 16), 8), SFXP(SBV(28450, 16), 8)), SFXP(SBV(-7410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1048, 16), 8), SFXP(SBV(-11631, 16), 8)), SFXP(SBV(-17921, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-32334, 16), 8), SFXP(SBV(17278, 16), 8)), SFXP(SBV(-19604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1649, 16), 8), SFXP(SBV(-32589, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18153, 16), 8), SFXP(SBV(936, 16), 8)), SFXP(SBV(19089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53689, 16), 8), UFXP(BV(37724, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1016, 16), 8), SFXP(SBV(17061, 16), 8)), SFXP(SBV(18077, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24971, 16), 8), UFXP(BV(34455, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30796, 16), 8), UFXP(BV(49484, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11899, 16), 8), UFXP(BV(5022, 16), 8)), UFXP(BV(6877, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25078, 16), 8), UFXP(BV(29784, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26353, 16), 8), SFXP(SBV(-26306, 16), 8)), SFXP(SBV(21001, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60308, 16), 8), UFXP(BV(41322, 16), 8)), UFXP(BV(18986, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20695, 16), 8), SFXP(SBV(12841, 16), 8)), SFXP(SBV(-32000, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(509, 16), 8), UFXP(BV(10142, 16), 8)), UFXP(BV(10651, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26996, 16), 8), UFXP(BV(1992, 16), 8)), UFXP(BV(25004, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26583, 16), 8), SFXP(SBV(2145, 16), 8)), SFXP(SBV(-24438, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16732, 16), 8), SFXP(SBV(4080, 16), 8)), SFXP(SBV(-12652, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18361, 16), 8), UFXP(BV(5753, 16), 8)), UFXP(BV(12608, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11644, 16), 8), UFXP(BV(1091, 16), 8)), UFXP(BV(12735, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19436, 16), 8), SFXP(SBV(22194, 16), 8)), SFXP(SBV(-23906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59807, 16), 8), UFXP(BV(12286, 16), 8)), UFXP(BV(6557, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44937, 16), 8), UFXP(BV(56546, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23392, 16), 8), SFXP(SBV(-7284, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1621, 16), 8), SFXP(SBV(-23130, 16), 8)), SFXP(SBV(21509, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4768, 16), 8), SFXP(SBV(19637, 16), 8)), SFXP(SBV(24405, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48541, 16), 8), UFXP(BV(10825, 16), 8)), UFXP(BV(20948, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30061, 16), 8), SFXP(SBV(-22106, 16), 8)), SFXP(SBV(-13369, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9320, 16), 8), UFXP(BV(59468, 16), 8)), UFXP(BV(15388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5756, 16), 8), SFXP(SBV(29116, 16), 8)), SFXP(SBV(23360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23404, 16), 8), UFXP(BV(20302, 16), 8)), UFXP(BV(21038, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2865, 16), 8), SFXP(SBV(1363, 16), 8)), SFXP(SBV(-15253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47238, 16), 8), UFXP(BV(38287, 16), 8)), UFXP(BV(8951, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13784, 16), 8), UFXP(BV(41267, 16), 8)), UFXP(BV(55051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25631, 16), 8), SFXP(SBV(25316, 16), 8)), SFXP(SBV(-315, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7321, 16), 8), SFXP(SBV(8496, 16), 8)), SFXP(SBV(1175, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12139, 16), 8), UFXP(BV(25668, 16), 8)), UFXP(BV(37807, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12718, 16), 8), UFXP(BV(27488, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10351, 16), 8), UFXP(BV(51389, 16), 8)), UFXP(BV(46225, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63371, 16), 8), UFXP(BV(44323, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29482, 16), 8), SFXP(SBV(28290, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39796, 16), 8), UFXP(BV(39188, 16), 8)), UFXP(BV(608, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28253, 16), 8), SFXP(SBV(21553, 16), 8)), SFXP(SBV(6700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16360, 16), 8), SFXP(SBV(-17985, 16), 8)), SFXP(SBV(1625, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40956, 16), 8), UFXP(BV(11946, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48486, 16), 8), UFXP(BV(23237, 16), 8)), UFXP(BV(25249, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16614, 16), 8), SFXP(SBV(-310, 16), 8)), SFXP(SBV(-20119, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2747, 16), 8), SFXP(SBV(30653, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32385, 16), 8), UFXP(BV(44582, 16), 8)), UFXP(BV(3702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(466, 16), 8), SFXP(SBV(9878, 16), 8)), SFXP(SBV(17982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15828, 16), 8), UFXP(BV(50524, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2684, 16), 8), SFXP(SBV(11762, 16), 8)), SFXP(SBV(9078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3967, 16), 8), SFXP(SBV(24860, 16), 8)), SFXP(SBV(-20893, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13754, 16), 8), SFXP(SBV(-4751, 16), 8)), SFXP(SBV(9003, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13360, 16), 8), UFXP(BV(53964, 16), 8)), UFXP(BV(24932, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27717, 16), 8), SFXP(SBV(-26865, 16), 8)), SFXP(SBV(-852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29383, 16), 8), UFXP(BV(11144, 16), 8)), UFXP(BV(33895, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35521, 16), 8), UFXP(BV(15456, 16), 8)), UFXP(BV(50977, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38600, 16), 8), UFXP(BV(48020, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16395, 16), 8), SFXP(SBV(9243, 16), 8)), SFXP(SBV(-7152, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9930, 16), 8), SFXP(SBV(13206, 16), 8)), SFXP(SBV(23136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35192, 16), 8), UFXP(BV(17353, 16), 8)), UFXP(BV(17839, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15586, 16), 8), SFXP(SBV(-4470, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10736, 16), 8), SFXP(SBV(-27437, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10779, 16), 8), SFXP(SBV(-21063, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21083, 16), 8), SFXP(SBV(7764, 16), 8)), SFXP(SBV(13319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18056, 16), 8), SFXP(SBV(-12595, 16), 8)), SFXP(SBV(30651, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9756, 16), 8), UFXP(BV(58357, 16), 8)), UFXP(BV(16935, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-3010, 16), 8), SFXP(SBV(-2374, 16), 8)), SFXP(SBV(27913, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(65109, 16), 8), UFXP(BV(24642, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14968, 16), 8), SFXP(SBV(-17331, 16), 8)), SFXP(SBV(2363, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(404, 16), 8), SFXP(SBV(4855, 16), 8)), SFXP(SBV(5259, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6953, 16), 8), SFXP(SBV(-2797, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8242, 16), 8), UFXP(BV(12779, 16), 8)), UFXP(BV(60999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26522, 16), 8), SFXP(SBV(-23497, 16), 8)), SFXP(SBV(-9493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21096, 16), 8), SFXP(SBV(10208, 16), 8)), SFXP(SBV(-31304, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13879, 16), 8), UFXP(BV(64674, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18512, 16), 8), UFXP(BV(54632, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5509, 16), 8), SFXP(SBV(-31472, 16), 8)), SFXP(SBV(-28555, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28735, 16), 8), SFXP(SBV(7214, 16), 8)), SFXP(SBV(21521, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4078, 16), 8), SFXP(SBV(28106, 16), 8)), SFXP(SBV(32184, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8593, 16), 8), UFXP(BV(39930, 16), 8)), UFXP(BV(29586, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57439, 16), 8), UFXP(BV(53152, 16), 8)), UFXP(BV(4287, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3237, 16), 8), UFXP(BV(10479, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(558, 16), 8), UFXP(BV(23518, 16), 8)), UFXP(BV(51261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1137, 16), 8), SFXP(SBV(19377, 16), 8)), SFXP(SBV(-20514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45626, 16), 8), UFXP(BV(10003, 16), 8)), UFXP(BV(35623, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8141, 16), 8), SFXP(SBV(-29233, 16), 8)), SFXP(SBV(21092, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26860, 16), 8), UFXP(BV(62797, 16), 8)), UFXP(BV(29599, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22080, 16), 8), UFXP(BV(29832, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1451, 16), 8), SFXP(SBV(-15231, 16), 8)), SFXP(SBV(-13780, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9992, 16), 8), SFXP(SBV(26462, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24319, 16), 8), SFXP(SBV(17477, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(15462, 16), 8), UFXP(BV(27625, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29418, 16), 8), SFXP(SBV(-5246, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33518, 16), 8), UFXP(BV(2081, 16), 8)), UFXP(BV(31437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52944, 16), 8), UFXP(BV(45133, 16), 8)), UFXP(BV(27957, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14740, 16), 8), SFXP(SBV(-7792, 16), 8)), SFXP(SBV(10104, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8610, 16), 8), SFXP(SBV(-1099, 16), 8)), SFXP(SBV(-9709, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46201, 16), 8), UFXP(BV(2495, 16), 8)), UFXP(BV(57064, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25529, 16), 8), SFXP(SBV(23050, 16), 8)), SFXP(SBV(2479, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3003, 16), 8), SFXP(SBV(-4661, 16), 8)), SFXP(SBV(1658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29618, 16), 8), SFXP(SBV(-23758, 16), 8)), SFXP(SBV(-5860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56827, 16), 8), UFXP(BV(26328, 16), 8)), UFXP(BV(11597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52588, 16), 8), UFXP(BV(63951, 16), 8)), UFXP(BV(29734, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15735, 16), 8), SFXP(SBV(20592, 16), 8)), SFXP(SBV(4857, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14151, 16), 8), UFXP(BV(21294, 16), 8)), UFXP(BV(35445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22658, 16), 8), UFXP(BV(21340, 16), 8)), UFXP(BV(43998, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17036, 16), 8), SFXP(SBV(6441, 16), 8)), SFXP(SBV(-23477, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26143, 16), 8), SFXP(SBV(24656, 16), 8)), SFXP(SBV(27529, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18321, 16), 8), SFXP(SBV(-31117, 16), 8)), SFXP(SBV(16098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25125, 16), 8), SFXP(SBV(-27520, 16), 8)), SFXP(SBV(-12891, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10339, 16), 8), SFXP(SBV(14813, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21518, 16), 8), UFXP(BV(12993, 16), 8)), UFXP(BV(34511, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27470, 16), 8), UFXP(BV(44463, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18154, 16), 8), UFXP(BV(51464, 16), 8)), UFXP(BV(4082, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4228, 16), 8), SFXP(SBV(-5748, 16), 8)), SFXP(SBV(1520, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19380, 16), 8), UFXP(BV(16630, 16), 8)), UFXP(BV(13759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4647, 16), 8), SFXP(SBV(23267, 16), 8)), SFXP(SBV(-18620, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57207, 16), 8), UFXP(BV(45989, 16), 8)), UFXP(BV(11218, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17171, 16), 8), UFXP(BV(15937, 16), 8)), UFXP(BV(33108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27933, 16), 8), SFXP(SBV(-22067, 16), 8)), SFXP(SBV(5866, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32843, 16), 8), UFXP(BV(32517, 16), 8)), UFXP(BV(65360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47254, 16), 8), UFXP(BV(24168, 16), 8)), UFXP(BV(23086, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47716, 16), 8), UFXP(BV(25256, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26172, 16), 8), UFXP(BV(27637, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19722, 16), 8), SFXP(SBV(1329, 16), 8)), SFXP(SBV(-18393, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7224, 16), 8), SFXP(SBV(10928, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12076, 16), 8), UFXP(BV(22864, 16), 8)), UFXP(BV(29961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18533, 16), 8), UFXP(BV(58748, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31581, 16), 8), SFXP(SBV(5361, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30641, 16), 8), SFXP(SBV(24720, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7379, 16), 8), SFXP(SBV(9854, 16), 8)), SFXP(SBV(-2475, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27975, 16), 8), SFXP(SBV(-31303, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39769, 16), 8), UFXP(BV(18507, 16), 8)), UFXP(BV(21262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26171, 16), 8), SFXP(SBV(-18464, 16), 8)), SFXP(SBV(-7707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2833, 16), 8), SFXP(SBV(-22104, 16), 8)), SFXP(SBV(17532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24286, 16), 8), SFXP(SBV(27753, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58415, 16), 8), UFXP(BV(18144, 16), 8)), UFXP(BV(11396, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39585, 16), 8), UFXP(BV(60143, 16), 8)), UFXP(BV(34192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28054, 16), 8), SFXP(SBV(24450, 16), 8)), SFXP(SBV(-7600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52538, 16), 8), UFXP(BV(25730, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17768, 16), 8), SFXP(SBV(9281, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33631, 16), 8), UFXP(BV(47602, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10496, 16), 8), SFXP(SBV(20104, 16), 8)), SFXP(SBV(-30600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46914, 16), 8), UFXP(BV(44434, 16), 8)), UFXP(BV(16414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14267, 16), 8), SFXP(SBV(10514, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42050, 16), 8), UFXP(BV(18866, 16), 8)), UFXP(BV(18696, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9035, 16), 8), UFXP(BV(31899, 16), 8)), UFXP(BV(42672, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9019, 16), 8), SFXP(SBV(25331, 16), 8)), SFXP(SBV(31186, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(936, 16), 8), UFXP(BV(60346, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19321, 16), 8), UFXP(BV(35246, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29537, 16), 8), SFXP(SBV(-28237, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20471, 16), 8), UFXP(BV(41922, 16), 8)), UFXP(BV(62393, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16190, 16), 8), UFXP(BV(43428, 16), 8)), UFXP(BV(59506, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48228, 16), 8), UFXP(BV(29291, 16), 8)), UFXP(BV(18937, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14438, 16), 8), UFXP(BV(64442, 16), 8)), UFXP(BV(29949, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4037, 16), 8), SFXP(SBV(-29586, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29113, 16), 8), SFXP(SBV(31716, 16), 8)), SFXP(SBV(2348, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44551, 16), 8), UFXP(BV(63796, 16), 8)), UFXP(BV(46291, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32401, 16), 8), UFXP(BV(64249, 16), 8)), UFXP(BV(5301, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59177, 16), 8), UFXP(BV(15039, 16), 8)), UFXP(BV(8680, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3616, 16), 8), SFXP(SBV(-12173, 16), 8)), SFXP(SBV(8557, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29942, 16), 8), SFXP(SBV(-16021, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21246, 16), 8), SFXP(SBV(11790, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31489, 16), 8), UFXP(BV(5315, 16), 8)), UFXP(BV(26174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48105, 16), 8), UFXP(BV(46434, 16), 8)), UFXP(BV(1671, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58731, 16), 8), UFXP(BV(44223, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43578, 16), 8), UFXP(BV(54540, 16), 8)), UFXP(BV(54574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19863, 16), 8), UFXP(BV(7140, 16), 8)), UFXP(BV(12723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8979, 16), 8), SFXP(SBV(32609, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5498, 16), 8), UFXP(BV(35495, 16), 8)), UFXP(BV(41414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50522, 16), 8), UFXP(BV(49790, 16), 8)), UFXP(BV(732, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19262, 16), 8), SFXP(SBV(15577, 16), 8)), SFXP(SBV(30697, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17492, 16), 8), SFXP(SBV(-27747, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10912, 16), 8), SFXP(SBV(-4146, 16), 8)), SFXP(SBV(15058, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19412, 16), 8), UFXP(BV(63395, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34093, 16), 8), UFXP(BV(26012, 16), 8)), UFXP(BV(8081, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30273, 16), 8), SFXP(SBV(-5002, 16), 8)), SFXP(SBV(-30261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17423, 16), 8), SFXP(SBV(-3136, 16), 8)), SFXP(SBV(-20559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2309, 16), 8), SFXP(SBV(-15350, 16), 8)), SFXP(SBV(7378, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64180, 16), 8), UFXP(BV(25676, 16), 8)), UFXP(BV(38504, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26462, 16), 8), SFXP(SBV(-14374, 16), 8)), SFXP(SBV(-12088, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26128, 16), 8), SFXP(SBV(-14567, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22647, 16), 8), SFXP(SBV(-1703, 16), 8)), SFXP(SBV(-20944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53116, 16), 8), UFXP(BV(33097, 16), 8)), UFXP(BV(20019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8666, 16), 8), SFXP(SBV(-7908, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6338, 16), 8), SFXP(SBV(28522, 16), 8)), SFXP(SBV(22184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-12436, 16), 8), SFXP(SBV(18190, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35110, 16), 8), UFXP(BV(54446, 16), 8)), UFXP(BV(24020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14308, 16), 8), SFXP(SBV(-27646, 16), 8)), SFXP(SBV(-27711, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4341, 16), 8), SFXP(SBV(-23397, 16), 8)), SFXP(SBV(27738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-127, 16), 8), SFXP(SBV(-7829, 16), 8)), SFXP(SBV(3883, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32753, 16), 8), SFXP(SBV(-16039, 16), 8)), SFXP(SBV(16714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25623, 16), 8), UFXP(BV(45058, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1131, 16), 8), SFXP(SBV(-9635, 16), 8)), SFXP(SBV(10766, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30900, 16), 8), SFXP(SBV(10875, 16), 8)), SFXP(SBV(23761, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26652, 16), 8), UFXP(BV(3660, 16), 8)), UFXP(BV(22992, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10555, 16), 8), SFXP(SBV(27181, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7235, 16), 8), SFXP(SBV(24665, 16), 8)), SFXP(SBV(-17430, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24965, 16), 8), UFXP(BV(35334, 16), 8)), UFXP(BV(60299, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24967, 16), 8), SFXP(SBV(-3195, 16), 8)), SFXP(SBV(-16081, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15814, 16), 8), SFXP(SBV(18655, 16), 8)), SFXP(SBV(-2841, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5670, 16), 8), SFXP(SBV(4656, 16), 8)), SFXP(SBV(10326, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23855, 16), 8), SFXP(SBV(-25526, 16), 8)), SFXP(SBV(1671, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15423, 16), 8), UFXP(BV(25991, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(65240, 16), 8), UFXP(BV(58573, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33950, 16), 8), UFXP(BV(57056, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2448, 16), 8), SFXP(SBV(32407, 16), 8)), SFXP(SBV(29959, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27319, 16), 8), SFXP(SBV(-10755, 16), 8)), SFXP(SBV(27462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11245, 16), 8), UFXP(BV(2974, 16), 8)), UFXP(BV(8271, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13397, 16), 8), SFXP(SBV(14202, 16), 8)), SFXP(SBV(-22323, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3705, 16), 8), UFXP(BV(7344, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5869, 16), 8), SFXP(SBV(-13992, 16), 8)), SFXP(SBV(-19861, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40060, 16), 8), UFXP(BV(11428, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27157, 16), 8), SFXP(SBV(-10598, 16), 8)), SFXP(SBV(-16559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13591, 16), 8), UFXP(BV(43950, 16), 8)), UFXP(BV(39539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(689, 16), 8), UFXP(BV(14566, 16), 8)), UFXP(BV(39204, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8477, 16), 8), UFXP(BV(28238, 16), 8)), UFXP(BV(36715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13914, 16), 8), SFXP(SBV(-1376, 16), 8)), SFXP(SBV(15290, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8037, 16), 8), UFXP(BV(39337, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3515, 16), 8), SFXP(SBV(18319, 16), 8)), SFXP(SBV(21834, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23, 16), 8), SFXP(SBV(1010, 16), 8)), SFXP(SBV(-987, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9380, 16), 8), SFXP(SBV(-2266, 16), 8)), SFXP(SBV(11646, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35974, 16), 8), UFXP(BV(24852, 16), 8)), UFXP(BV(60826, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3375, 16), 8), UFXP(BV(49947, 16), 8)), UFXP(BV(18964, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55700, 16), 8), UFXP(BV(37166, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23523, 16), 8), SFXP(SBV(-18624, 16), 8)), SFXP(SBV(7363, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53365, 16), 8), UFXP(BV(35409, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59986, 16), 8), UFXP(BV(14247, 16), 8)), UFXP(BV(45739, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31609, 16), 8), SFXP(SBV(15018, 16), 8)), SFXP(SBV(-19304, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21000, 16), 8), SFXP(SBV(17348, 16), 8)), SFXP(SBV(27188, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54294, 16), 8), UFXP(BV(32846, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26373, 16), 8), SFXP(SBV(-26704, 16), 8)), SFXP(SBV(-331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24886, 16), 8), SFXP(SBV(17941, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29965, 16), 8), UFXP(BV(39462, 16), 8)), UFXP(BV(56039, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15852, 16), 8), UFXP(BV(6410, 16), 8)), UFXP(BV(22262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8881, 16), 8), SFXP(SBV(10799, 16), 8)), SFXP(SBV(-19680, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12303, 16), 8), UFXP(BV(32452, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54682, 16), 8), UFXP(BV(44128, 16), 8)), UFXP(BV(33274, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39518, 16), 8), UFXP(BV(24770, 16), 8)), UFXP(BV(14748, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28968, 16), 8), SFXP(SBV(-6145, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28668, 16), 8), UFXP(BV(29236, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15226, 16), 8), SFXP(SBV(14704, 16), 8)), SFXP(SBV(-22575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7687, 16), 8), SFXP(SBV(16797, 16), 8)), SFXP(SBV(9110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45349, 16), 8), UFXP(BV(39008, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18759, 16), 8), UFXP(BV(5831, 16), 8)), UFXP(BV(12928, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16854, 16), 8), SFXP(SBV(-31941, 16), 8)), SFXP(SBV(5714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37352, 16), 8), UFXP(BV(57567, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17615, 16), 8), UFXP(BV(62663, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22596, 16), 8), UFXP(BV(34385, 16), 8)), UFXP(BV(53747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16658, 16), 8), UFXP(BV(23560, 16), 8)), UFXP(BV(58634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9913, 16), 8), UFXP(BV(22832, 16), 8)), UFXP(BV(32745, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4665, 16), 8), SFXP(SBV(11524, 16), 8)), SFXP(SBV(-6859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27324, 16), 8), SFXP(SBV(2634, 16), 8)), SFXP(SBV(24690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8870, 16), 8), UFXP(BV(28857, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37288, 16), 8), UFXP(BV(339, 16), 8)), UFXP(BV(37627, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24458, 16), 8), SFXP(SBV(24492, 16), 8)), SFXP(SBV(34, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(2816, 16), 8), SFXP(SBV(-16990, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32626, 16), 8), UFXP(BV(52737, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33429, 16), 8), UFXP(BV(30010, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2336, 16), 8), SFXP(SBV(22837, 16), 8)), SFXP(SBV(-20501, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15770, 16), 8), UFXP(BV(34186, 16), 8)), UFXP(BV(49956, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19833, 16), 8), UFXP(BV(53794, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5860, 16), 8), UFXP(BV(51996, 16), 8)), UFXP(BV(57856, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32816, 16), 8), UFXP(BV(56897, 16), 8)), UFXP(BV(24177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29715, 16), 8), SFXP(SBV(-17262, 16), 8)), SFXP(SBV(-12453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24614, 16), 8), SFXP(SBV(4960, 16), 8)), SFXP(SBV(19654, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55354, 16), 8), UFXP(BV(6271, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8500, 16), 8), SFXP(SBV(3769, 16), 8)), SFXP(SBV(4731, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22358, 16), 8), UFXP(BV(32682, 16), 8)), UFXP(BV(36265, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13148, 16), 8), SFXP(SBV(-26095, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27425, 16), 8), SFXP(SBV(-938, 16), 8)), SFXP(SBV(-28363, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17394, 16), 8), SFXP(SBV(10509, 16), 8)), SFXP(SBV(6885, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(111, 16), 8), SFXP(SBV(-39, 16), 8)), SFXP(SBV(-16, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16575, 16), 8), SFXP(SBV(19641, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20716, 16), 8), SFXP(SBV(-3271, 16), 8)), SFXP(SBV(-17445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63696, 16), 8), UFXP(BV(29451, 16), 8)), UFXP(BV(27611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43953, 16), 8), UFXP(BV(30890, 16), 8)), UFXP(BV(9307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24571, 16), 8), SFXP(SBV(-10869, 16), 8)), SFXP(SBV(-30096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25072, 16), 8), SFXP(SBV(14882, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18830, 16), 8), SFXP(SBV(10631, 16), 8)), SFXP(SBV(-8199, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19334, 16), 8), UFXP(BV(12347, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1430, 16), 8), UFXP(BV(20142, 16), 8)), UFXP(BV(21572, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60439, 16), 8), UFXP(BV(58069, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11263, 16), 8), SFXP(SBV(9973, 16), 8)), SFXP(SBV(-19978, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12891, 16), 8), SFXP(SBV(-22222, 16), 8)), SFXP(SBV(-30423, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38155, 16), 8), UFXP(BV(43779, 16), 8)), UFXP(BV(59912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12869, 16), 8), SFXP(SBV(1817, 16), 8)), SFXP(SBV(-14686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58297, 16), 8), UFXP(BV(4927, 16), 8)), UFXP(BV(53370, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32349, 16), 8), SFXP(SBV(-8404, 16), 8)), SFXP(SBV(-23945, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40527, 16), 8), UFXP(BV(33140, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34563, 16), 8), UFXP(BV(24992, 16), 8)), UFXP(BV(9571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5378, 16), 8), SFXP(SBV(-1577, 16), 8)), SFXP(SBV(3801, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55758, 16), 8), UFXP(BV(12523, 16), 8)), UFXP(BV(43235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13299, 16), 8), UFXP(BV(31676, 16), 8)), UFXP(BV(44975, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9114, 16), 8), UFXP(BV(27859, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44727, 16), 8), UFXP(BV(10658, 16), 8)), UFXP(BV(55385, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8016, 16), 8), SFXP(SBV(13452, 16), 8)), SFXP(SBV(-21468, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18057, 16), 8), SFXP(SBV(30071, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55107, 16), 8), UFXP(BV(30381, 16), 8)), UFXP(BV(24726, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2655, 16), 8), UFXP(BV(61749, 16), 8)), UFXP(BV(64404, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24350, 16), 8), SFXP(SBV(-369, 16), 8)), SFXP(SBV(23981, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16066, 16), 8), SFXP(SBV(-10474, 16), 8)), SFXP(SBV(26540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2746, 16), 8), SFXP(SBV(32068, 16), 8)), SFXP(SBV(29322, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45345, 16), 8), UFXP(BV(38091, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23265, 16), 8), SFXP(SBV(-15248, 16), 8)), SFXP(SBV(8017, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34993, 16), 8), UFXP(BV(6385, 16), 8)), UFXP(BV(20806, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17535, 16), 8), UFXP(BV(51404, 16), 8)), UFXP(BV(47566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19763, 16), 8), UFXP(BV(14619, 16), 8)), UFXP(BV(5144, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12126, 16), 8), SFXP(SBV(-9308, 16), 8)), SFXP(SBV(2818, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20755, 16), 8), SFXP(SBV(31534, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11376, 16), 8), SFXP(SBV(9125, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2033, 16), 8), UFXP(BV(61523, 16), 8)), UFXP(BV(63556, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13039, 16), 8), UFXP(BV(38176, 16), 8)), UFXP(BV(51215, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5407, 16), 8), SFXP(SBV(-24237, 16), 8)), SFXP(SBV(-18830, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28321, 16), 8), UFXP(BV(49577, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21816, 16), 8), SFXP(SBV(21190, 16), 8)), SFXP(SBV(626, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47501, 16), 8), UFXP(BV(40133, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28751, 16), 8), SFXP(SBV(-19137, 16), 8)), SFXP(SBV(-17648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32441, 16), 8), SFXP(SBV(3333, 16), 8)), SFXP(SBV(-29151, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23877, 16), 8), SFXP(SBV(-31366, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22565, 16), 8), SFXP(SBV(29523, 16), 8)), SFXP(SBV(-13448, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11819, 16), 8), SFXP(SBV(7800, 16), 8)), SFXP(SBV(-19619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22931, 16), 8), UFXP(BV(60039, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21326, 16), 8), UFXP(BV(17539, 16), 8)), UFXP(BV(38865, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10755, 16), 8), SFXP(SBV(25265, 16), 8)), SFXP(SBV(12851, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3595, 16), 8), UFXP(BV(18348, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1215, 16), 8), UFXP(BV(15906, 16), 8)), UFXP(BV(17121, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20830, 16), 8), UFXP(BV(54431, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40809, 16), 8), UFXP(BV(10700, 16), 8)), UFXP(BV(51509, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65407, 16), 8), UFXP(BV(15174, 16), 8)), UFXP(BV(15045, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25225, 16), 8), SFXP(SBV(4049, 16), 8)), SFXP(SBV(-29274, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28004, 16), 8), UFXP(BV(14873, 16), 8)), UFXP(BV(42877, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15, 16), 8), SFXP(SBV(29717, 16), 8)), SFXP(SBV(29702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25428, 16), 8), SFXP(SBV(-5803, 16), 8)), SFXP(SBV(31231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-17538, 16), 8), SFXP(SBV(-15656, 16), 8)), SFXP(SBV(23983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8403, 16), 8), UFXP(BV(2142, 16), 8)), UFXP(BV(6261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25075, 16), 8), SFXP(SBV(-24168, 16), 8)), SFXP(SBV(-907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11865, 16), 8), UFXP(BV(19956, 16), 8)), UFXP(BV(31821, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16808, 16), 8), SFXP(SBV(-28880, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27528, 16), 8), SFXP(SBV(21318, 16), 8)), SFXP(SBV(-6210, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25109, 16), 8), SFXP(SBV(-28409, 16), 8)), SFXP(SBV(-3300, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55803, 16), 8), UFXP(BV(48304, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51086, 16), 8), UFXP(BV(37439, 16), 8)), UFXP(BV(13647, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32124, 16), 8), SFXP(SBV(-8816, 16), 8)), SFXP(SBV(23308, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32353, 16), 8), SFXP(SBV(5131, 16), 8)), SFXP(SBV(27222, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39161, 16), 8), UFXP(BV(25680, 16), 8)), UFXP(BV(13481, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17587, 16), 8), SFXP(SBV(-11078, 16), 8)), SFXP(SBV(-28665, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9098, 16), 8), UFXP(BV(64471, 16), 8)), UFXP(BV(10163, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7585, 16), 8), SFXP(SBV(8773, 16), 8)), SFXP(SBV(-16358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11388, 16), 8), SFXP(SBV(8988, 16), 8)), SFXP(SBV(6609, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31908, 16), 8), UFXP(BV(1483, 16), 8)), UFXP(BV(53771, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50817, 16), 8), UFXP(BV(31781, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14314, 16), 8), UFXP(BV(36046, 16), 8)), UFXP(BV(43804, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29650, 16), 8), UFXP(BV(21430, 16), 8)), UFXP(BV(8220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6794, 16), 8), UFXP(BV(46400, 16), 8)), UFXP(BV(53194, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11215, 16), 8), SFXP(SBV(-31052, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13517, 16), 8), SFXP(SBV(-12158, 16), 8)), SFXP(SBV(25675, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-7987, 16), 8), SFXP(SBV(-8598, 16), 8)), SFXP(SBV(6106, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-12222, 16), 8), SFXP(SBV(303, 16), 8)), SFXP(SBV(-14465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12482, 16), 8), SFXP(SBV(-8228, 16), 8)), SFXP(SBV(-20710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19783, 16), 8), UFXP(BV(22762, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29379, 16), 8), UFXP(BV(27456, 16), 8)), UFXP(BV(1923, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40877, 16), 8), UFXP(BV(57350, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1474, 16), 8), UFXP(BV(53038, 16), 8)), UFXP(BV(13972, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32562, 16), 8), SFXP(SBV(-10600, 16), 8)), SFXP(SBV(21962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29735, 16), 8), SFXP(SBV(-4791, 16), 8)), SFXP(SBV(-24944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12239, 16), 8), UFXP(BV(2658, 16), 8)), UFXP(BV(14897, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34556, 16), 8), UFXP(BV(10236, 16), 8)), UFXP(BV(24320, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17281, 16), 8), SFXP(SBV(-30454, 16), 8)), SFXP(SBV(-13173, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(1166, 16), 8), SFXP(SBV(4370, 16), 8)), SFXP(SBV(19904, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24919, 16), 8), SFXP(SBV(-1268, 16), 8)), SFXP(SBV(-26187, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(473, 16), 8), SFXP(SBV(-12097, 16), 8)), SFXP(SBV(12570, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46628, 16), 8), UFXP(BV(49949, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13537, 16), 8), UFXP(BV(21500, 16), 8)), UFXP(BV(35037, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7346, 16), 8), SFXP(SBV(14739, 16), 8)), SFXP(SBV(-29724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6380, 16), 8), SFXP(SBV(17315, 16), 8)), SFXP(SBV(-10935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51745, 16), 8), UFXP(BV(60449, 16), 8)), UFXP(BV(56832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9776, 16), 8), UFXP(BV(48288, 16), 8)), UFXP(BV(27024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22340, 16), 8), SFXP(SBV(-1546, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26476, 16), 8), UFXP(BV(16821, 16), 8)), UFXP(BV(9655, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4480, 16), 8), SFXP(SBV(488, 16), 8)), SFXP(SBV(8540, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31838, 16), 8), UFXP(BV(52041, 16), 8)), UFXP(BV(18343, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33424, 16), 8), UFXP(BV(29715, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64134, 16), 8), UFXP(BV(21254, 16), 8)), UFXP(BV(42880, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10299, 16), 8), UFXP(BV(26322, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31443, 16), 8), UFXP(BV(412, 16), 8)), UFXP(BV(31031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11416, 16), 8), SFXP(SBV(-1684, 16), 8)), SFXP(SBV(13100, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9233, 16), 8), SFXP(SBV(2618, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32543, 16), 8), SFXP(SBV(-19955, 16), 8)), SFXP(SBV(-19203, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30820, 16), 8), SFXP(SBV(16794, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35984, 16), 8), UFXP(BV(40781, 16), 8)), UFXP(BV(11229, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20795, 16), 8), UFXP(BV(632, 16), 8)), UFXP(BV(21427, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28568, 16), 8), SFXP(SBV(5724, 16), 8)), SFXP(SBV(22844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26269, 16), 8), SFXP(SBV(-4007, 16), 8)), SFXP(SBV(22262, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38729, 16), 8), UFXP(BV(9233, 16), 8)), UFXP(BV(47962, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9629, 16), 8), UFXP(BV(42173, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20537, 16), 8), SFXP(SBV(-22219, 16), 8)), SFXP(SBV(12995, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11114, 16), 8), SFXP(SBV(15195, 16), 8)), SFXP(SBV(-4081, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16395, 16), 8), UFXP(BV(64211, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11421, 16), 8), SFXP(SBV(19309, 16), 8)), SFXP(SBV(-9469, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(739, 16), 8), SFXP(SBV(3262, 16), 8)), SFXP(SBV(9416, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38936, 16), 8), UFXP(BV(31829, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6954, 16), 8), UFXP(BV(46261, 16), 8)), UFXP(BV(53215, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8410, 16), 8), SFXP(SBV(-25796, 16), 8)), SFXP(SBV(-4529, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34820, 16), 8), UFXP(BV(31215, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3300, 16), 8), SFXP(SBV(30310, 16), 8)), SFXP(SBV(-27010, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5691, 16), 8), UFXP(BV(28525, 16), 8)), UFXP(BV(34216, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4374, 16), 8), SFXP(SBV(17047, 16), 8)), SFXP(SBV(-12673, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8839, 16), 8), SFXP(SBV(5244, 16), 8)), SFXP(SBV(-14083, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25484, 16), 8), SFXP(SBV(31864, 16), 8)), SFXP(SBV(8188, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10479, 16), 8), UFXP(BV(13466, 16), 8)), UFXP(BV(23945, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24046, 16), 8), SFXP(SBV(-21334, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39724, 16), 8), UFXP(BV(16440, 16), 8)), UFXP(BV(23284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24340, 16), 8), UFXP(BV(30622, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28378, 16), 8), SFXP(SBV(29397, 16), 8)), SFXP(SBV(1019, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4724, 16), 8), UFXP(BV(24833, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31935, 16), 8), SFXP(SBV(20055, 16), 8)), SFXP(SBV(-11880, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17302, 16), 8), UFXP(BV(5220, 16), 8)), UFXP(BV(12082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(8986, 16), 8), UFXP(BV(39167, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23006, 16), 8), SFXP(SBV(-13583, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-451, 16), 8), SFXP(SBV(-14553, 16), 8)), SFXP(SBV(14102, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6419, 16), 8), UFXP(BV(40978, 16), 8)), UFXP(BV(47397, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29769, 16), 8), SFXP(SBV(-32741, 16), 8)), SFXP(SBV(3026, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59110, 16), 8), UFXP(BV(24561, 16), 8)), UFXP(BV(34549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26321, 16), 8), SFXP(SBV(3542, 16), 8)), SFXP(SBV(29863, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41972, 16), 8), UFXP(BV(15209, 16), 8)), UFXP(BV(57181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43155, 16), 8), UFXP(BV(12594, 16), 8)), UFXP(BV(25871, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12818, 16), 8), SFXP(SBV(-295, 16), 8)), SFXP(SBV(14770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11468, 16), 8), UFXP(BV(58750, 16), 8)), UFXP(BV(10376, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59043, 16), 8), UFXP(BV(60491, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1697, 16), 8), UFXP(BV(34438, 16), 8)), UFXP(BV(32795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35330, 16), 8), UFXP(BV(28456, 16), 8)), UFXP(BV(60527, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12724, 16), 8), UFXP(BV(64416, 16), 8)), UFXP(BV(11604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9937, 16), 8), SFXP(SBV(14129, 16), 8)), SFXP(SBV(-4192, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55242, 16), 8), UFXP(BV(49035, 16), 8)), UFXP(BV(38741, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15318, 16), 8), SFXP(SBV(-5110, 16), 8)), SFXP(SBV(20428, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60610, 16), 8), UFXP(BV(58407, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27066, 16), 8), SFXP(SBV(-5823, 16), 8)), SFXP(SBV(21243, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30608, 16), 8), SFXP(SBV(-32510, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52294, 16), 8), UFXP(BV(61364, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38247, 16), 8), UFXP(BV(57070, 16), 8)), UFXP(BV(6712, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54997, 16), 8), UFXP(BV(33560, 16), 8)), UFXP(BV(21437, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2143, 16), 8), SFXP(SBV(-307, 16), 8)), SFXP(SBV(1836, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27937, 16), 8), SFXP(SBV(20285, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15654, 16), 8), SFXP(SBV(-30296, 16), 8)), SFXP(SBV(14642, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37412, 16), 8), UFXP(BV(39242, 16), 8)), UFXP(BV(63706, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27427, 16), 8), SFXP(SBV(5134, 16), 8)), SFXP(SBV(32561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31312, 16), 8), UFXP(BV(45037, 16), 8)), UFXP(BV(3564, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(774, 16), 8), SFXP(SBV(-3794, 16), 8)), SFXP(SBV(4568, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20315, 16), 8), SFXP(SBV(-25900, 16), 8)), SFXP(SBV(-5585, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2533, 16), 8), SFXP(SBV(-9826, 16), 8)), SFXP(SBV(-7293, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6636, 16), 8), SFXP(SBV(-18272, 16), 8)), SFXP(SBV(14893, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46784, 16), 8), UFXP(BV(3864, 16), 8)), UFXP(BV(50786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15634, 16), 8), UFXP(BV(30996, 16), 8)), UFXP(BV(46630, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6380, 16), 8), SFXP(SBV(-15114, 16), 8)), SFXP(SBV(8734, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29632, 16), 8), SFXP(SBV(-9329, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44424, 16), 8), UFXP(BV(2574, 16), 8)), UFXP(BV(41850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14822, 16), 8), SFXP(SBV(32479, 16), 8)), SFXP(SBV(18235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39403, 16), 8), UFXP(BV(48926, 16), 8)), UFXP(BV(22793, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4199, 16), 8), SFXP(SBV(3965, 16), 8)), SFXP(SBV(-234, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25626, 16), 8), SFXP(SBV(-20610, 16), 8)), SFXP(SBV(31477, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17008, 16), 8), SFXP(SBV(-19621, 16), 8)), SFXP(SBV(2613, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58676, 16), 8), UFXP(BV(14309, 16), 8)), UFXP(BV(7449, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43825, 16), 8), UFXP(BV(5184, 16), 8)), UFXP(BV(49009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13768, 16), 8), UFXP(BV(65051, 16), 8)), UFXP(BV(13283, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13164, 16), 8), SFXP(SBV(-11132, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31351, 16), 8), UFXP(BV(58889, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2454, 16), 8), SFXP(SBV(-27365, 16), 8)), SFXP(SBV(-29819, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31485, 16), 8), UFXP(BV(36311, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(953, 16), 8), SFXP(SBV(2637, 16), 8)), SFXP(SBV(-1684, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28594, 16), 8), SFXP(SBV(-30290, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10230, 16), 8), SFXP(SBV(-16541, 16), 8)), SFXP(SBV(-26771, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10849, 16), 8), SFXP(SBV(-2835, 16), 8)), SFXP(SBV(-13684, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4764, 16), 8), SFXP(SBV(-16598, 16), 8)), SFXP(SBV(-21362, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-3555, 16), 8), SFXP(SBV(1248, 16), 8)), SFXP(SBV(-17330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8256, 16), 8), UFXP(BV(4578, 16), 8)), UFXP(BV(3678, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21238, 16), 8), SFXP(SBV(-18994, 16), 8)), SFXP(SBV(-2244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1539, 16), 8), SFXP(SBV(93, 16), 8)), SFXP(SBV(-1632, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55234, 16), 8), UFXP(BV(7027, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29828, 16), 8), SFXP(SBV(-28836, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4439, 16), 8), SFXP(SBV(-16742, 16), 8)), SFXP(SBV(-12303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12566, 16), 8), SFXP(SBV(-14675, 16), 8)), SFXP(SBV(-27241, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4193, 16), 8), SFXP(SBV(6862, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18807, 16), 8), UFXP(BV(11608, 16), 8)), UFXP(BV(7199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12354, 16), 8), SFXP(SBV(-24067, 16), 8)), SFXP(SBV(-11713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60840, 16), 8), UFXP(BV(47001, 16), 8)), UFXP(BV(13839, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30210, 16), 8), UFXP(BV(52246, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4226, 16), 8), SFXP(SBV(10617, 16), 8)), SFXP(SBV(21345, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(32108, 16), 8), SFXP(SBV(10075, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25421, 16), 8), SFXP(SBV(31660, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(1643, 16), 8), SFXP(SBV(31053, 16), 8)), SFXP(SBV(2690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(39169, 16), 8), UFXP(BV(8376, 16), 8)), UFXP(BV(36376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10715, 16), 8), SFXP(SBV(-7505, 16), 8)), SFXP(SBV(18220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13350, 16), 8), SFXP(SBV(23046, 16), 8)), SFXP(SBV(9696, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34808, 16), 8), UFXP(BV(28793, 16), 8)), UFXP(BV(63601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5469, 16), 8), UFXP(BV(594, 16), 8)), UFXP(BV(6063, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51128, 16), 8), UFXP(BV(56567, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11565, 16), 8), SFXP(SBV(21827, 16), 8)), SFXP(SBV(-10262, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41345, 16), 8), UFXP(BV(18789, 16), 8)), UFXP(BV(60134, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61281, 16), 8), UFXP(BV(5399, 16), 8)), UFXP(BV(55882, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41685, 16), 8), UFXP(BV(57096, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16910, 16), 8), SFXP(SBV(25514, 16), 8)), SFXP(SBV(-18616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35543, 16), 8), UFXP(BV(8997, 16), 8)), UFXP(BV(26546, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18309, 16), 8), UFXP(BV(56779, 16), 8)), UFXP(BV(63112, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26788, 16), 8), SFXP(SBV(-31264, 16), 8)), SFXP(SBV(5316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58043, 16), 8), UFXP(BV(60488, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53067, 16), 8), UFXP(BV(42459, 16), 8)), UFXP(BV(10608, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12760, 16), 8), SFXP(SBV(-14323, 16), 8)), SFXP(SBV(6983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10600, 16), 8), UFXP(BV(16196, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22662, 16), 8), UFXP(BV(40643, 16), 8)), UFXP(BV(63305, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3514, 16), 8), SFXP(SBV(249, 16), 8)), SFXP(SBV(-3763, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15542, 16), 8), SFXP(SBV(-17021, 16), 8)), SFXP(SBV(-32563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5459, 16), 8), SFXP(SBV(29977, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23454, 16), 8), UFXP(BV(11496, 16), 8)), UFXP(BV(11958, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53595, 16), 8), UFXP(BV(37259, 16), 8)), UFXP(BV(16336, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35540, 16), 8), UFXP(BV(59453, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15945, 16), 8), SFXP(SBV(-16815, 16), 8)), SFXP(SBV(-32760, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11670, 16), 8), SFXP(SBV(-18108, 16), 8)), SFXP(SBV(-26498, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48276, 16), 8), UFXP(BV(45992, 16), 8)), UFXP(BV(2284, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30726, 16), 8), SFXP(SBV(2635, 16), 8)), SFXP(SBV(-11418, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19187, 16), 8), SFXP(SBV(-5376, 16), 8)), SFXP(SBV(24563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3599, 16), 8), SFXP(SBV(986, 16), 8)), SFXP(SBV(-2613, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22257, 16), 8), SFXP(SBV(494, 16), 8)), SFXP(SBV(-22751, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24122, 16), 8), UFXP(BV(64024, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20518, 16), 8), SFXP(SBV(-27432, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(661, 16), 8), UFXP(BV(1659, 16), 8)), UFXP(BV(4283, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(65198, 16), 8), UFXP(BV(18396, 16), 8)), UFXP(BV(32032, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15318, 16), 8), SFXP(SBV(23112, 16), 8)), SFXP(SBV(-6673, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28777, 16), 8), UFXP(BV(58160, 16), 8)), UFXP(BV(49710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42257, 16), 8), UFXP(BV(5974, 16), 8)), UFXP(BV(48231, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65287, 16), 8), UFXP(BV(38434, 16), 8)), UFXP(BV(38185, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59984, 16), 8), UFXP(BV(27377, 16), 8)), UFXP(BV(57782, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24877, 16), 8), SFXP(SBV(12380, 16), 8)), SFXP(SBV(-12497, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58096, 16), 8), UFXP(BV(31048, 16), 8)), UFXP(BV(33604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24586, 16), 8), SFXP(SBV(8706, 16), 8)), SFXP(SBV(15880, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63138, 16), 8), UFXP(BV(4150, 16), 8)), UFXP(BV(40486, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8442, 16), 8), UFXP(BV(56446, 16), 8)), UFXP(BV(64888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32390, 16), 8), UFXP(BV(4080, 16), 8)), UFXP(BV(36470, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8436, 16), 8), UFXP(BV(44048, 16), 8)), UFXP(BV(52484, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50522, 16), 8), UFXP(BV(12837, 16), 8)), UFXP(BV(63359, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10910, 16), 8), UFXP(BV(52078, 16), 8)), UFXP(BV(56729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7502, 16), 8), SFXP(SBV(20490, 16), 8)), SFXP(SBV(10630, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53883, 16), 8), UFXP(BV(50265, 16), 8)), UFXP(BV(38612, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38653, 16), 8), UFXP(BV(40642, 16), 8)), UFXP(BV(13759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28157, 16), 8), SFXP(SBV(18915, 16), 8)), SFXP(SBV(-18464, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38612, 16), 8), UFXP(BV(34564, 16), 8)), UFXP(BV(35879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15052, 16), 8), SFXP(SBV(-22594, 16), 8)), SFXP(SBV(27890, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43285, 16), 8), UFXP(BV(36799, 16), 8)), UFXP(BV(6486, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3560, 16), 8), SFXP(SBV(19825, 16), 8)), SFXP(SBV(16265, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30000, 16), 8), UFXP(BV(4550, 16), 8)), UFXP(BV(34550, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21679, 16), 8), UFXP(BV(47629, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22432, 16), 8), SFXP(SBV(13692, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8152, 16), 8), SFXP(SBV(9976, 16), 8)), SFXP(SBV(18128, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33413, 16), 8), UFXP(BV(34066, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29022, 16), 8), SFXP(SBV(-3341, 16), 8)), SFXP(SBV(25681, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40180, 16), 8), UFXP(BV(44104, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21943, 16), 8), SFXP(SBV(-26921, 16), 8)), SFXP(SBV(-16672, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9188, 16), 8), SFXP(SBV(-30853, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(171, 16), 8), SFXP(SBV(32057, 16), 8)), SFXP(SBV(-31886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9049, 16), 8), UFXP(BV(47894, 16), 8)), UFXP(BV(56943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22210, 16), 8), UFXP(BV(60360, 16), 8)), UFXP(BV(17034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31950, 16), 8), SFXP(SBV(-27280, 16), 8)), SFXP(SBV(3201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30593, 16), 8), SFXP(SBV(-10560, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20165, 16), 8), UFXP(BV(32800, 16), 8)), UFXP(BV(52901, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10467, 16), 8), UFXP(BV(16190, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38700, 16), 8), UFXP(BV(32867, 16), 8)), UFXP(BV(5833, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29765, 16), 8), SFXP(SBV(24315, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3498, 16), 8), UFXP(BV(46912, 16), 8)), UFXP(BV(22122, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28805, 16), 8), UFXP(BV(21374, 16), 8)), UFXP(BV(45697, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26278, 16), 8), SFXP(SBV(18242, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30193, 16), 8), SFXP(SBV(-14779, 16), 8)), SFXP(SBV(-15414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(8366, 16), 8), SFXP(SBV(-21732, 16), 8)), SFXP(SBV(10701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57913, 16), 8), UFXP(BV(44478, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15602, 16), 8), UFXP(BV(31148, 16), 8)), UFXP(BV(46750, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60009, 16), 8), UFXP(BV(23086, 16), 8)), UFXP(BV(36923, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22900, 16), 8), UFXP(BV(19342, 16), 8)), UFXP(BV(3558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20979, 16), 8), SFXP(SBV(-20816, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16597, 16), 8), SFXP(SBV(-11424, 16), 8)), SFXP(SBV(-5173, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4444, 16), 8), UFXP(BV(9129, 16), 8)), UFXP(BV(27401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27010, 16), 8), SFXP(SBV(-8484, 16), 8)), SFXP(SBV(22376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12475, 16), 8), SFXP(SBV(9830, 16), 8)), SFXP(SBV(20268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35537, 16), 8), UFXP(BV(51157, 16), 8)), UFXP(BV(49916, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4310, 16), 8), UFXP(BV(19906, 16), 8)), UFXP(BV(24216, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(39159, 16), 8), UFXP(BV(22849, 16), 8)), UFXP(BV(21685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36055, 16), 8), UFXP(BV(228, 16), 8)), UFXP(BV(32112, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11735, 16), 8), SFXP(SBV(1612, 16), 8)), SFXP(SBV(-13347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27187, 16), 8), UFXP(BV(54621, 16), 8)), UFXP(BV(33540, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18988, 16), 8), UFXP(BV(32579, 16), 8)), UFXP(BV(57150, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15657, 16), 8), SFXP(SBV(12194, 16), 8)), SFXP(SBV(-27851, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42025, 16), 8), UFXP(BV(58755, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35867, 16), 8), UFXP(BV(42122, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11077, 16), 8), UFXP(BV(21631, 16), 8)), UFXP(BV(54982, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27425, 16), 8), SFXP(SBV(-12395, 16), 8)), SFXP(SBV(-15030, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15971, 16), 8), SFXP(SBV(26189, 16), 8)), SFXP(SBV(23376, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57228, 16), 8), UFXP(BV(7503, 16), 8)), UFXP(BV(38872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4353, 16), 8), UFXP(BV(62415, 16), 8)), UFXP(BV(1232, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35454, 16), 8), UFXP(BV(5320, 16), 8)), UFXP(BV(40774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5663, 16), 8), UFXP(BV(53226, 16), 8)), UFXP(BV(17973, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9297, 16), 8), UFXP(BV(41497, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38606, 16), 8), UFXP(BV(16285, 16), 8)), UFXP(BV(22321, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-78, 16), 8), SFXP(SBV(-10210, 16), 8)), SFXP(SBV(-10288, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11812, 16), 8), SFXP(SBV(19911, 16), 8)), SFXP(SBV(8099, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12630, 16), 8), SFXP(SBV(29402, 16), 8)), SFXP(SBV(-16772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6341, 16), 8), SFXP(SBV(-20, 16), 8)), SFXP(SBV(6321, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23710, 16), 8), SFXP(SBV(24061, 16), 8)), SFXP(SBV(351, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29879, 16), 8), SFXP(SBV(-16644, 16), 8)), SFXP(SBV(-19013, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25738, 16), 8), SFXP(SBV(-24901, 16), 8)), SFXP(SBV(14897, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5603, 16), 8), SFXP(SBV(419, 16), 8)), SFXP(SBV(-9171, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59994, 16), 8), UFXP(BV(63429, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2218, 16), 8), SFXP(SBV(27386, 16), 8)), SFXP(SBV(25168, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2526, 16), 8), SFXP(SBV(-6547, 16), 8)), SFXP(SBV(-4021, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25996, 16), 8), SFXP(SBV(736, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26514, 16), 8), UFXP(BV(3395, 16), 8)), UFXP(BV(23942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57834, 16), 8), UFXP(BV(40722, 16), 8)), UFXP(BV(33020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6693, 16), 8), SFXP(SBV(-12533, 16), 8)), SFXP(SBV(-10, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17164, 16), 8), SFXP(SBV(13591, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21365, 16), 8), SFXP(SBV(7301, 16), 8)), SFXP(SBV(-28666, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18826, 16), 8), SFXP(SBV(2791, 16), 8)), SFXP(SBV(8639, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32256, 16), 8), SFXP(SBV(-11711, 16), 8)), SFXP(SBV(-20545, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63728, 16), 8), UFXP(BV(40077, 16), 8)), UFXP(BV(38269, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32099, 16), 8), SFXP(SBV(1229, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29607, 16), 8), SFXP(SBV(26466, 16), 8)), SFXP(SBV(-3141, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6303, 16), 8), SFXP(SBV(-6138, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20551, 16), 8), SFXP(SBV(9440, 16), 8)), SFXP(SBV(28613, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11437, 16), 8), UFXP(BV(30296, 16), 8)), UFXP(BV(46677, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40062, 16), 8), UFXP(BV(27643, 16), 8)), UFXP(BV(12419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16006, 16), 8), UFXP(BV(28040, 16), 8)), UFXP(BV(44046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56699, 16), 8), UFXP(BV(874, 16), 8)), UFXP(BV(57573, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2732, 16), 8), UFXP(BV(12217, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32462, 16), 8), SFXP(SBV(21345, 16), 8)), SFXP(SBV(11117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59768, 16), 8), UFXP(BV(6909, 16), 8)), UFXP(BV(52859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7401, 16), 8), SFXP(SBV(14812, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2670, 16), 8), SFXP(SBV(8110, 16), 8)), SFXP(SBV(-5440, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22334, 16), 8), UFXP(BV(20004, 16), 8)), UFXP(BV(42338, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2436, 16), 8), UFXP(BV(63144, 16), 8)), UFXP(BV(11031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10049, 16), 8), SFXP(SBV(6738, 16), 8)), SFXP(SBV(-3311, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38279, 16), 8), UFXP(BV(17029, 16), 8)), UFXP(BV(21250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20306, 16), 8), UFXP(BV(29032, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49423, 16), 8), UFXP(BV(50362, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54115, 16), 8), UFXP(BV(39541, 16), 8)), UFXP(BV(14574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42817, 16), 8), UFXP(BV(36256, 16), 8)), UFXP(BV(34645, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20158, 16), 8), SFXP(SBV(-24014, 16), 8)), SFXP(SBV(3856, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59051, 16), 8), UFXP(BV(46389, 16), 8)), UFXP(BV(39904, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27426, 16), 8), SFXP(SBV(-25057, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20511, 16), 8), SFXP(SBV(-26310, 16), 8)), SFXP(SBV(-5799, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3690, 16), 8), SFXP(SBV(-7120, 16), 8)), SFXP(SBV(28443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25295, 16), 8), SFXP(SBV(-1883, 16), 8)), SFXP(SBV(23412, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10957, 16), 8), SFXP(SBV(-31434, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1641, 16), 8), UFXP(BV(8641, 16), 8)), UFXP(BV(10282, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22696, 16), 8), UFXP(BV(62099, 16), 8)), UFXP(BV(19259, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63070, 16), 8), UFXP(BV(56891, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27524, 16), 8), UFXP(BV(859, 16), 8)), UFXP(BV(26665, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41508, 16), 8), UFXP(BV(37988, 16), 8)), UFXP(BV(13960, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25245, 16), 8), SFXP(SBV(20069, 16), 8)), SFXP(SBV(-12990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15448, 16), 8), SFXP(SBV(21903, 16), 8)), SFXP(SBV(-10989, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14852, 16), 8), SFXP(SBV(5069, 16), 8)), SFXP(SBV(9783, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64336, 16), 8), UFXP(BV(2487, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8157, 16), 8), SFXP(SBV(-30192, 16), 8)), SFXP(SBV(22035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19532, 16), 8), SFXP(SBV(6422, 16), 8)), SFXP(SBV(13110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41658, 16), 8), UFXP(BV(51910, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62012, 16), 8), UFXP(BV(5206, 16), 8)), UFXP(BV(56806, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-485, 16), 8), SFXP(SBV(-21211, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2918, 16), 8), SFXP(SBV(24752, 16), 8)), SFXP(SBV(21834, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29941, 16), 8), UFXP(BV(19368, 16), 8)), UFXP(BV(10573, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38870, 16), 8), UFXP(BV(46308, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-158, 16), 8), SFXP(SBV(-21269, 16), 8)), SFXP(SBV(21111, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46000, 16), 8), UFXP(BV(29505, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18054, 16), 8), SFXP(SBV(-31029, 16), 8)), SFXP(SBV(-16453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10590, 16), 8), SFXP(SBV(19375, 16), 8)), SFXP(SBV(-8785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16877, 16), 8), SFXP(SBV(1167, 16), 8)), SFXP(SBV(-11399, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22329, 16), 8), SFXP(SBV(30517, 16), 8)), SFXP(SBV(-12690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29537, 16), 8), UFXP(BV(51, 16), 8)), UFXP(BV(5885, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55895, 16), 8), UFXP(BV(58221, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32077, 16), 8), SFXP(SBV(-13840, 16), 8)), SFXP(SBV(-18237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28668, 16), 8), SFXP(SBV(25995, 16), 8)), SFXP(SBV(10873, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16400, 16), 8), SFXP(SBV(-1337, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46082, 16), 8), UFXP(BV(4672, 16), 8)), UFXP(BV(41410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8464, 16), 8), SFXP(SBV(2619, 16), 8)), SFXP(SBV(5845, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33136, 16), 8), UFXP(BV(36716, 16), 8)), UFXP(BV(61956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31096, 16), 8), SFXP(SBV(-15075, 16), 8)), SFXP(SBV(3866, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1417, 16), 8), UFXP(BV(26327, 16), 8)), UFXP(BV(40626, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14297, 16), 8), SFXP(SBV(31278, 16), 8)), SFXP(SBV(-16981, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10590, 16), 8), SFXP(SBV(-12760, 16), 8)), SFXP(SBV(-2170, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33014, 16), 8), UFXP(BV(48186, 16), 8)), UFXP(BV(53728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31143, 16), 8), SFXP(SBV(-19192, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4842, 16), 8), SFXP(SBV(27526, 16), 8)), SFXP(SBV(22684, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22645, 16), 8), SFXP(SBV(-9397, 16), 8)), SFXP(SBV(-13248, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40757, 16), 8), UFXP(BV(38607, 16), 8)), UFXP(BV(51658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26484, 16), 8), SFXP(SBV(10896, 16), 8)), SFXP(SBV(13113, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5967, 16), 8), UFXP(BV(12218, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31347, 16), 8), SFXP(SBV(29203, 16), 8)), SFXP(SBV(-4986, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1038, 16), 8), SFXP(SBV(12808, 16), 8)), SFXP(SBV(-11770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16134, 16), 8), SFXP(SBV(9599, 16), 8)), SFXP(SBV(-6535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58298, 16), 8), UFXP(BV(38050, 16), 8)), UFXP(BV(14243, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15812, 16), 8), SFXP(SBV(-595, 16), 8)), SFXP(SBV(-28786, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22610, 16), 8), SFXP(SBV(12470, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18538, 16), 8), UFXP(BV(39884, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10907, 16), 8), SFXP(SBV(19015, 16), 8)), SFXP(SBV(8108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24922, 16), 8), SFXP(SBV(-13765, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27557, 16), 8), SFXP(SBV(-12240, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54176, 16), 8), UFXP(BV(58927, 16), 8)), UFXP(BV(18587, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14547, 16), 8), SFXP(SBV(4634, 16), 8)), SFXP(SBV(9913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26229, 16), 8), SFXP(SBV(15406, 16), 8)), SFXP(SBV(-23901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28948, 16), 8), SFXP(SBV(23470, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15962, 16), 8), SFXP(SBV(-25732, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15410, 16), 8), UFXP(BV(47775, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6714, 16), 8), UFXP(BV(15933, 16), 8)), UFXP(BV(24652, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46350, 16), 8), UFXP(BV(22529, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51417, 16), 8), UFXP(BV(65105, 16), 8)), UFXP(BV(51848, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18444, 16), 8), UFXP(BV(40850, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29797, 16), 8), UFXP(BV(45353, 16), 8)), UFXP(BV(49980, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23660, 16), 8), SFXP(SBV(31257, 16), 8)), SFXP(SBV(-7597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64008, 16), 8), UFXP(BV(44989, 16), 8)), UFXP(BV(19019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20422, 16), 8), SFXP(SBV(-22957, 16), 8)), SFXP(SBV(-22157, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22947, 16), 8), SFXP(SBV(-30553, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10243, 16), 8), SFXP(SBV(-14684, 16), 8)), SFXP(SBV(-24927, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29166, 16), 8), SFXP(SBV(10103, 16), 8)), SFXP(SBV(19063, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34970, 16), 8), UFXP(BV(38636, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11920, 16), 8), SFXP(SBV(-17606, 16), 8)), SFXP(SBV(-29526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12458, 16), 8), SFXP(SBV(-23600, 16), 8)), SFXP(SBV(29478, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54519, 16), 8), UFXP(BV(47556, 16), 8)), UFXP(BV(35212, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39451, 16), 8), UFXP(BV(6575, 16), 8)), UFXP(BV(32876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40166, 16), 8), UFXP(BV(29291, 16), 8)), UFXP(BV(10875, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22628, 16), 8), UFXP(BV(65212, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1247, 16), 8), SFXP(SBV(-10380, 16), 8)), SFXP(SBV(11627, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23969, 16), 8), SFXP(SBV(-15038, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18434, 16), 8), UFXP(BV(10700, 16), 8)), UFXP(BV(29134, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22223, 16), 8), UFXP(BV(39419, 16), 8)), UFXP(BV(61642, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27304, 16), 8), UFXP(BV(21935, 16), 8)), UFXP(BV(45745, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4200, 16), 8), SFXP(SBV(10203, 16), 8)), SFXP(SBV(-6003, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3317, 16), 8), SFXP(SBV(1718, 16), 8)), SFXP(SBV(5035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15418, 16), 8), SFXP(SBV(17844, 16), 8)), SFXP(SBV(-2426, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25253, 16), 8), SFXP(SBV(9464, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13329, 16), 8), SFXP(SBV(-23200, 16), 8)), SFXP(SBV(-29007, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53537, 16), 8), UFXP(BV(12319, 16), 8)), UFXP(BV(20355, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52654, 16), 8), UFXP(BV(46337, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6386, 16), 8), UFXP(BV(4428, 16), 8)), UFXP(BV(44921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46066, 16), 8), UFXP(BV(29776, 16), 8)), UFXP(BV(16290, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5923, 16), 8), SFXP(SBV(-506, 16), 8)), SFXP(SBV(6429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26158, 16), 8), UFXP(BV(40094, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36086, 16), 8), UFXP(BV(65091, 16), 8)), UFXP(BV(248, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16736, 16), 8), SFXP(SBV(23241, 16), 8)), SFXP(SBV(6505, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57016, 16), 8), UFXP(BV(40377, 16), 8)), UFXP(BV(14283, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56670, 16), 8), UFXP(BV(29506, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15095, 16), 8), SFXP(SBV(-16613, 16), 8)), SFXP(SBV(-3458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33683, 16), 8), UFXP(BV(3869, 16), 8)), UFXP(BV(50308, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9992, 16), 8), UFXP(BV(54783, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14382, 16), 8), UFXP(BV(16136, 16), 8)), UFXP(BV(30518, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11204, 16), 8), UFXP(BV(12637, 16), 8)), UFXP(BV(28779, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8213, 16), 8), SFXP(SBV(14014, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64933, 16), 8), UFXP(BV(1710, 16), 8)), UFXP(BV(63223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7702, 16), 8), UFXP(BV(2217, 16), 8)), UFXP(BV(1165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20557, 16), 8), SFXP(SBV(24890, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13501, 16), 8), UFXP(BV(44428, 16), 8)), UFXP(BV(49296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17609, 16), 8), SFXP(SBV(31949, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41720, 16), 8), UFXP(BV(31881, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8494, 16), 8), UFXP(BV(59660, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29957, 16), 8), SFXP(SBV(-23914, 16), 8)), SFXP(SBV(6043, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15329, 16), 8), SFXP(SBV(28113, 16), 8)), SFXP(SBV(20561, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(20775, 16), 8), SFXP(SBV(-7660, 16), 8)), SFXP(SBV(-31802, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9567, 16), 8), UFXP(BV(13005, 16), 8)), UFXP(BV(22572, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11696, 16), 8), SFXP(SBV(3646, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42624, 16), 8), UFXP(BV(62690, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42864, 16), 8), UFXP(BV(52327, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17430, 16), 8), SFXP(SBV(-30525, 16), 8)), SFXP(SBV(-18829, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10505, 16), 8), UFXP(BV(6502, 16), 8)), UFXP(BV(4666, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32652, 16), 8), UFXP(BV(41296, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43787, 16), 8), UFXP(BV(10026, 16), 8)), UFXP(BV(10941, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9046, 16), 8), SFXP(SBV(26040, 16), 8)), SFXP(SBV(2644, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29204, 16), 8), SFXP(SBV(-21116, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39392, 16), 8), UFXP(BV(44999, 16), 8)), UFXP(BV(42942, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17621, 16), 8), SFXP(SBV(1270, 16), 8)), SFXP(SBV(21881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(456, 16), 8), SFXP(SBV(9169, 16), 8)), SFXP(SBV(-8713, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5776, 16), 8), SFXP(SBV(-13935, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31125, 16), 8), SFXP(SBV(-27678, 16), 8)), SFXP(SBV(6733, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40448, 16), 8), UFXP(BV(21272, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29522, 16), 8), SFXP(SBV(-2993, 16), 8)), SFXP(SBV(32515, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43976, 16), 8), UFXP(BV(63577, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-209, 16), 8), SFXP(SBV(-4962, 16), 8)), SFXP(SBV(-5171, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45183, 16), 8), UFXP(BV(28695, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26920, 16), 8), UFXP(BV(382, 16), 8)), UFXP(BV(40169, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10395, 16), 8), SFXP(SBV(-26467, 16), 8)), SFXP(SBV(16072, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3064, 16), 8), SFXP(SBV(11342, 16), 8)), SFXP(SBV(4677, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28224, 16), 8), UFXP(BV(10720, 16), 8)), UFXP(BV(38944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38203, 16), 8), UFXP(BV(31391, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22222, 16), 8), UFXP(BV(20898, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18824, 16), 8), UFXP(BV(51601, 16), 8)), UFXP(BV(32759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23676, 16), 8), SFXP(SBV(17263, 16), 8)), SFXP(SBV(24597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36798, 16), 8), UFXP(BV(52385, 16), 8)), UFXP(BV(58831, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2953, 16), 8), SFXP(SBV(-10393, 16), 8)), SFXP(SBV(-11188, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31504, 16), 8), SFXP(SBV(25012, 16), 8)), SFXP(SBV(2153, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1860, 16), 8), SFXP(SBV(1708, 16), 8)), SFXP(SBV(-3568, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37741, 16), 8), UFXP(BV(58363, 16), 8)), UFXP(BV(18995, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34407, 16), 8), UFXP(BV(34323, 16), 8)), UFXP(BV(84, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21776, 16), 8), SFXP(SBV(20464, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4376, 16), 8), SFXP(SBV(-22154, 16), 8)), SFXP(SBV(-17778, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16713, 16), 8), SFXP(SBV(-22961, 16), 8)), SFXP(SBV(8316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24586, 16), 8), SFXP(SBV(-23003, 16), 8)), SFXP(SBV(1583, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23657, 16), 8), SFXP(SBV(-26481, 16), 8)), SFXP(SBV(-2824, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15980, 16), 8), SFXP(SBV(-27200, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31036, 16), 8), SFXP(SBV(-23120, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47360, 16), 8), UFXP(BV(31766, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11393, 16), 8), UFXP(BV(33467, 16), 8)), UFXP(BV(44860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61524, 16), 8), UFXP(BV(24591, 16), 8)), UFXP(BV(11668, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9223, 16), 8), SFXP(SBV(2865, 16), 8)), SFXP(SBV(-27853, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48610, 16), 8), UFXP(BV(25201, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17149, 16), 8), UFXP(BV(17752, 16), 8)), UFXP(BV(34901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4635, 16), 8), SFXP(SBV(-7965, 16), 8)), SFXP(SBV(-12600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27545, 16), 8), UFXP(BV(30081, 16), 8)), UFXP(BV(63000, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3043, 16), 8), SFXP(SBV(-17440, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(34369, 16), 8), UFXP(BV(35813, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40718, 16), 8), UFXP(BV(61843, 16), 8)), UFXP(BV(44411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16266, 16), 8), SFXP(SBV(-22146, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31046, 16), 8), SFXP(SBV(4306, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34575, 16), 8), UFXP(BV(42802, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26275, 16), 8), SFXP(SBV(12849, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1006, 16), 8), SFXP(SBV(3028, 16), 8)), SFXP(SBV(-4034, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39785, 16), 8), UFXP(BV(62677, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21893, 16), 8), UFXP(BV(50113, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49521, 16), 8), UFXP(BV(38326, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9718, 16), 8), SFXP(SBV(22066, 16), 8)), SFXP(SBV(-12348, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10541, 16), 8), SFXP(SBV(28774, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(652, 16), 8), SFXP(SBV(30933, 16), 8)), SFXP(SBV(-30281, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57026, 16), 8), UFXP(BV(47215, 16), 8)), UFXP(BV(9811, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16942, 16), 8), UFXP(BV(36679, 16), 8)), UFXP(BV(2573, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13982, 16), 8), UFXP(BV(34744, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31593, 16), 8), SFXP(SBV(-26252, 16), 8)), SFXP(SBV(28499, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5642, 16), 8), UFXP(BV(49130, 16), 8)), UFXP(BV(54772, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7427, 16), 8), UFXP(BV(9890, 16), 8)), UFXP(BV(63073, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43322, 16), 8), UFXP(BV(578, 16), 8)), UFXP(BV(43900, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28307, 16), 8), SFXP(SBV(5640, 16), 8)), SFXP(SBV(-31721, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50693, 16), 8), UFXP(BV(16545, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26736, 16), 8), UFXP(BV(9476, 16), 8)), UFXP(BV(36212, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65325, 16), 8), UFXP(BV(32687, 16), 8)), UFXP(BV(32476, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30338, 16), 8), SFXP(SBV(16636, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32889, 16), 8), UFXP(BV(58789, 16), 8)), UFXP(BV(26142, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25574, 16), 8), SFXP(SBV(-14691, 16), 8)), SFXP(SBV(-10883, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13898, 16), 8), UFXP(BV(20212, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24838, 16), 8), SFXP(SBV(-30567, 16), 8)), SFXP(SBV(5729, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19680, 16), 8), UFXP(BV(18335, 16), 8)), UFXP(BV(1345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19889, 16), 8), UFXP(BV(5867, 16), 8)), UFXP(BV(25756, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26804, 16), 8), UFXP(BV(38841, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6942, 16), 8), SFXP(SBV(-10606, 16), 8)), SFXP(SBV(-17548, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42188, 16), 8), UFXP(BV(65112, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8994, 16), 8), SFXP(SBV(-5066, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12106, 16), 8), UFXP(BV(19137, 16), 8)), UFXP(BV(58505, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14040, 16), 8), UFXP(BV(45609, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24915, 16), 8), SFXP(SBV(32368, 16), 8)), SFXP(SBV(8253, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5291, 16), 8), SFXP(SBV(-7286, 16), 8)), SFXP(SBV(12577, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60416, 16), 8), UFXP(BV(6498, 16), 8)), UFXP(BV(53918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20283, 16), 8), UFXP(BV(7111, 16), 8)), UFXP(BV(13172, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40131, 16), 8), UFXP(BV(55543, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38705, 16), 8), UFXP(BV(62604, 16), 8)), UFXP(BV(41637, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43992, 16), 8), UFXP(BV(7826, 16), 8)), UFXP(BV(36166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6356, 16), 8), SFXP(SBV(17964, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12061, 16), 8), SFXP(SBV(19862, 16), 8)), SFXP(SBV(-31923, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16968, 16), 8), UFXP(BV(31137, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28340, 16), 8), UFXP(BV(37398, 16), 8)), UFXP(BV(56478, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2917, 16), 8), UFXP(BV(26063, 16), 8)), UFXP(BV(28980, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43904, 16), 8), UFXP(BV(8696, 16), 8)), UFXP(BV(52600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47876, 16), 8), UFXP(BV(8251, 16), 8)), UFXP(BV(56127, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2214, 16), 8), SFXP(SBV(-17466, 16), 8)), SFXP(SBV(19680, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33929, 16), 8), UFXP(BV(58833, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42813, 16), 8), UFXP(BV(13089, 16), 8)), UFXP(BV(55902, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25477, 16), 8), SFXP(SBV(20372, 16), 8)), SFXP(SBV(5105, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1262, 16), 8), SFXP(SBV(-23868, 16), 8)), SFXP(SBV(-22606, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25176, 16), 8), UFXP(BV(15477, 16), 8)), UFXP(BV(14739, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8481, 16), 8), UFXP(BV(34965, 16), 8)), UFXP(BV(43446, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25329, 16), 8), SFXP(SBV(-26801, 16), 8)), SFXP(SBV(1472, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27154, 16), 8), UFXP(BV(53472, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9221, 16), 8), UFXP(BV(46648, 16), 8)), UFXP(BV(41839, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15446, 16), 8), SFXP(SBV(-27668, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-5158, 16), 8), SFXP(SBV(-23737, 16), 8)), SFXP(SBV(19512, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4977, 16), 8), SFXP(SBV(-3597, 16), 8)), SFXP(SBV(-1380, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3470, 16), 8), SFXP(SBV(25352, 16), 8)), SFXP(SBV(-28822, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8515, 16), 8), SFXP(SBV(-2009, 16), 8)), SFXP(SBV(-1286, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23466, 16), 8), SFXP(SBV(4752, 16), 8)), SFXP(SBV(-28218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23028, 16), 8), SFXP(SBV(27268, 16), 8)), SFXP(SBV(4240, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19456, 16), 8), SFXP(SBV(14827, 16), 8)), SFXP(SBV(31253, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12592, 16), 8), SFXP(SBV(11835, 16), 8)), SFXP(SBV(-7690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57835, 16), 8), UFXP(BV(12965, 16), 8)), UFXP(BV(44870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27758, 16), 8), UFXP(BV(17700, 16), 8)), UFXP(BV(10058, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14984, 16), 8), SFXP(SBV(-27837, 16), 8)), SFXP(SBV(-22715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29867, 16), 8), SFXP(SBV(-7091, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35937, 16), 8), UFXP(BV(36304, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49571, 16), 8), UFXP(BV(43888, 16), 8)), UFXP(BV(27923, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3452, 16), 8), UFXP(BV(36407, 16), 8)), UFXP(BV(32173, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2919, 16), 8), SFXP(SBV(9740, 16), 8)), SFXP(SBV(-12659, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14426, 16), 8), SFXP(SBV(-19732, 16), 8)), SFXP(SBV(-5306, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(344, 16), 8), UFXP(BV(57221, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14337, 16), 8), UFXP(BV(46589, 16), 8)), UFXP(BV(60926, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28917, 16), 8), SFXP(SBV(10817, 16), 8)), SFXP(SBV(-18100, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57592, 16), 8), UFXP(BV(55333, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10771, 16), 8), UFXP(BV(10795, 16), 8)), UFXP(BV(60976, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43286, 16), 8), UFXP(BV(14842, 16), 8)), UFXP(BV(28444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59199, 16), 8), UFXP(BV(31838, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44347, 16), 8), UFXP(BV(51931, 16), 8)), UFXP(BV(30742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29937, 16), 8), UFXP(BV(63186, 16), 8)), UFXP(BV(27587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25788, 16), 8), UFXP(BV(8657, 16), 8)), UFXP(BV(20089, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30015, 16), 8), SFXP(SBV(14855, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24365, 16), 8), SFXP(SBV(5898, 16), 8)), SFXP(SBV(30263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11031, 16), 8), UFXP(BV(1797, 16), 8)), UFXP(BV(12828, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6589, 16), 8), SFXP(SBV(23053, 16), 8)), SFXP(SBV(29642, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26690, 16), 8), SFXP(SBV(27249, 16), 8)), SFXP(SBV(559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12077, 16), 8), SFXP(SBV(-23983, 16), 8)), SFXP(SBV(11906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56350, 16), 8), UFXP(BV(64121, 16), 8)), UFXP(BV(54935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54711, 16), 8), UFXP(BV(18893, 16), 8)), UFXP(BV(40018, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63764, 16), 8), UFXP(BV(23130, 16), 8)), UFXP(BV(21358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35535, 16), 8), UFXP(BV(8709, 16), 8)), UFXP(BV(26826, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22246, 16), 8), SFXP(SBV(21882, 16), 8)), SFXP(SBV(364, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60599, 16), 8), UFXP(BV(60193, 16), 8)), UFXP(BV(406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24942, 16), 8), UFXP(BV(19307, 16), 8)), UFXP(BV(5635, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56791, 16), 8), UFXP(BV(35699, 16), 8)), UFXP(BV(21092, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15501, 16), 8), SFXP(SBV(-11004, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27754, 16), 8), SFXP(SBV(-30846, 16), 8)), SFXP(SBV(6936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41041, 16), 8), UFXP(BV(13262, 16), 8)), UFXP(BV(54303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11824, 16), 8), SFXP(SBV(21530, 16), 8)), SFXP(SBV(-32182, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9247, 16), 8), UFXP(BV(13909, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63887, 16), 8), UFXP(BV(61760, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47266, 16), 8), UFXP(BV(41068, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21568, 16), 8), UFXP(BV(27393, 16), 8)), UFXP(BV(14100, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18954, 16), 8), SFXP(SBV(-30028, 16), 8)), SFXP(SBV(16554, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63358, 16), 8), UFXP(BV(64965, 16), 8)), UFXP(BV(22010, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55883, 16), 8), UFXP(BV(6078, 16), 8)), UFXP(BV(61961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62670, 16), 8), UFXP(BV(19392, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3235, 16), 8), SFXP(SBV(-23436, 16), 8)), SFXP(SBV(-20201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37789, 16), 8), UFXP(BV(58821, 16), 8)), UFXP(BV(31074, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16062, 16), 8), SFXP(SBV(-21103, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62960, 16), 8), UFXP(BV(36040, 16), 8)), UFXP(BV(26920, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3853, 16), 8), UFXP(BV(22750, 16), 8)), UFXP(BV(26603, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52381, 16), 8), UFXP(BV(19508, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4117, 16), 8), SFXP(SBV(-17898, 16), 8)), SFXP(SBV(-25693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55582, 16), 8), UFXP(BV(23883, 16), 8)), UFXP(BV(31699, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(47254, 16), 8), UFXP(BV(58004, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15068, 16), 8), SFXP(SBV(-15531, 16), 8)), SFXP(SBV(30599, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32405, 16), 8), UFXP(BV(51238, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1513, 16), 8), UFXP(BV(12396, 16), 8)), UFXP(BV(7727, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(34856, 16), 8), UFXP(BV(22375, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28177, 16), 8), SFXP(SBV(4808, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4542, 16), 8), SFXP(SBV(17719, 16), 8)), SFXP(SBV(22261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3223, 16), 8), SFXP(SBV(26245, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16166, 16), 8), SFXP(SBV(-11210, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25419, 16), 8), SFXP(SBV(-14811, 16), 8)), SFXP(SBV(-28837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54588, 16), 8), UFXP(BV(60586, 16), 8)), UFXP(BV(8425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(55149, 16), 8), UFXP(BV(55651, 16), 8)), UFXP(BV(61109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5848, 16), 8), SFXP(SBV(-8050, 16), 8)), SFXP(SBV(-12716, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23155, 16), 8), UFXP(BV(55117, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48651, 16), 8), UFXP(BV(4220, 16), 8)), UFXP(BV(52871, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23547, 16), 8), SFXP(SBV(29839, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8436, 16), 8), SFXP(SBV(-8428, 16), 8)), SFXP(SBV(-16864, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6350, 16), 8), SFXP(SBV(26155, 16), 8)), SFXP(SBV(-32505, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1285, 16), 8), SFXP(SBV(23053, 16), 8)), SFXP(SBV(24338, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22016, 16), 8), SFXP(SBV(-17326, 16), 8)), SFXP(SBV(-17292, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37765, 16), 8), UFXP(BV(25701, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(43898, 16), 8), UFXP(BV(8803, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(423, 16), 8), SFXP(SBV(-23250, 16), 8)), SFXP(SBV(27119, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5262, 16), 8), SFXP(SBV(21453, 16), 8)), SFXP(SBV(16191, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21972, 16), 8), UFXP(BV(46753, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37249, 16), 8), UFXP(BV(46039, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54533, 16), 8), UFXP(BV(23478, 16), 8)), UFXP(BV(20537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46711, 16), 8), UFXP(BV(9104, 16), 8)), UFXP(BV(37607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29780, 16), 8), SFXP(SBV(23356, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16297, 16), 8), SFXP(SBV(-19724, 16), 8)), SFXP(SBV(10449, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49834, 16), 8), UFXP(BV(46705, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6332, 16), 8), SFXP(SBV(11928, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(62236, 16), 8), UFXP(BV(47432, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56034, 16), 8), UFXP(BV(20061, 16), 8)), UFXP(BV(97, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26546, 16), 8), SFXP(SBV(30657, 16), 8)), SFXP(SBV(4111, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1778, 16), 8), SFXP(SBV(32709, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23732, 16), 8), SFXP(SBV(-22924, 16), 8)), SFXP(SBV(-808, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14618, 16), 8), SFXP(SBV(12907, 16), 8)), SFXP(SBV(16114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17955, 16), 8), SFXP(SBV(24878, 16), 8)), SFXP(SBV(-24610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50176, 16), 8), UFXP(BV(37895, 16), 8)), UFXP(BV(21852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23177, 16), 8), UFXP(BV(35191, 16), 8)), UFXP(BV(58368, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11904, 16), 8), SFXP(SBV(5436, 16), 8)), SFXP(SBV(6468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44113, 16), 8), UFXP(BV(55369, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3152, 16), 8), UFXP(BV(61893, 16), 8)), UFXP(BV(65045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37351, 16), 8), UFXP(BV(32815, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43343, 16), 8), UFXP(BV(15648, 16), 8)), UFXP(BV(27900, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17318, 16), 8), UFXP(BV(15411, 16), 8)), UFXP(BV(32729, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26261, 16), 8), UFXP(BV(39389, 16), 8)), UFXP(BV(42907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6669, 16), 8), SFXP(SBV(30185, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-19127, 16), 8), SFXP(SBV(-26442, 16), 8)), SFXP(SBV(9529, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33430, 16), 8), UFXP(BV(56123, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37034, 16), 8), UFXP(BV(56027, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3306, 16), 8), SFXP(SBV(26177, 16), 8)), SFXP(SBV(29483, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47975, 16), 8), UFXP(BV(11330, 16), 8)), UFXP(BV(36645, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14897, 16), 8), SFXP(SBV(29326, 16), 8)), SFXP(SBV(14429, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26194, 16), 8), SFXP(SBV(21011, 16), 8)), SFXP(SBV(-18331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20513, 16), 8), SFXP(SBV(16842, 16), 8)), SFXP(SBV(3671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12204, 16), 8), SFXP(SBV(7327, 16), 8)), SFXP(SBV(-19531, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62582, 16), 8), UFXP(BV(37312, 16), 8)), UFXP(BV(11823, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18932, 16), 8), UFXP(BV(31384, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8445, 16), 8), UFXP(BV(60576, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36448, 16), 8), UFXP(BV(22167, 16), 8)), UFXP(BV(14281, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31293, 16), 8), UFXP(BV(12229, 16), 8)), UFXP(BV(19064, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21132, 16), 8), SFXP(SBV(-4279, 16), 8)), SFXP(SBV(25538, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61210, 16), 8), UFXP(BV(13263, 16), 8)), UFXP(BV(47947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5825, 16), 8), SFXP(SBV(32092, 16), 8)), SFXP(SBV(27619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26468, 16), 8), SFXP(SBV(-23164, 16), 8)), SFXP(SBV(-3304, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31208, 16), 8), UFXP(BV(59723, 16), 8)), UFXP(BV(25395, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9350, 16), 8), SFXP(SBV(-6183, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20247, 16), 8), UFXP(BV(3970, 16), 8)), UFXP(BV(24217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25478, 16), 8), UFXP(BV(1900, 16), 8)), UFXP(BV(27378, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-278, 16), 8), SFXP(SBV(1299, 16), 8)), SFXP(SBV(-1410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25763, 16), 8), SFXP(SBV(-29223, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18214, 16), 8), SFXP(SBV(-24275, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13353, 16), 8), UFXP(BV(5317, 16), 8)), UFXP(BV(18670, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44532, 16), 8), UFXP(BV(1471, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5638, 16), 8), SFXP(SBV(342, 16), 8)), SFXP(SBV(-7533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15548, 16), 8), SFXP(SBV(5248, 16), 8)), SFXP(SBV(10300, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15980, 16), 8), SFXP(SBV(10565, 16), 8)), SFXP(SBV(-5415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(988, 16), 8), SFXP(SBV(23735, 16), 8)), SFXP(SBV(-22747, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32190, 16), 8), SFXP(SBV(19707, 16), 8)), SFXP(SBV(12483, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62271, 16), 8), UFXP(BV(33296, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2372, 16), 8), SFXP(SBV(20244, 16), 8)), SFXP(SBV(9035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28374, 16), 8), SFXP(SBV(12876, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17282, 16), 8), SFXP(SBV(-19265, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23703, 16), 8), SFXP(SBV(27335, 16), 8)), SFXP(SBV(-3632, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5307, 16), 8), SFXP(SBV(28549, 16), 8)), SFXP(SBV(2011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9917, 16), 8), SFXP(SBV(-8566, 16), 8)), SFXP(SBV(-18483, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45597, 16), 8), UFXP(BV(25368, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19134, 16), 8), SFXP(SBV(-5166, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21588, 16), 8), UFXP(BV(42214, 16), 8)), UFXP(BV(20884, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37329, 16), 8), UFXP(BV(36144, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53550, 16), 8), UFXP(BV(21133, 16), 8)), UFXP(BV(9147, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15560, 16), 8), UFXP(BV(21821, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9790, 16), 8), SFXP(SBV(-31333, 16), 8)), SFXP(SBV(18594, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25037, 16), 8), SFXP(SBV(-12609, 16), 8)), SFXP(SBV(12428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10033, 16), 8), SFXP(SBV(-10099, 16), 8)), SFXP(SBV(-20132, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1218, 16), 8), SFXP(SBV(-159, 16), 8)), SFXP(SBV(1377, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47822, 16), 8), UFXP(BV(38139, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1730, 16), 8), SFXP(SBV(-17589, 16), 8)), SFXP(SBV(15859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39799, 16), 8), UFXP(BV(34047, 16), 8)), UFXP(BV(5752, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30948, 16), 8), SFXP(SBV(24062, 16), 8)), SFXP(SBV(-6886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46227, 16), 8), UFXP(BV(33050, 16), 8)), UFXP(BV(4202, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35382, 16), 8), UFXP(BV(4784, 16), 8)), UFXP(BV(30598, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34937, 16), 8), UFXP(BV(31284, 16), 8)), UFXP(BV(3653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7011, 16), 8), UFXP(BV(7068, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(6466, 16), 8), SFXP(SBV(31421, 16), 8)), SFXP(SBV(7193, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31629, 16), 8), UFXP(BV(35768, 16), 8)), UFXP(BV(1861, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16761, 16), 8), SFXP(SBV(-17195, 16), 8)), SFXP(SBV(11691, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43522, 16), 8), UFXP(BV(18535, 16), 8)), UFXP(BV(24987, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23266, 16), 8), SFXP(SBV(-8331, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14950, 16), 8), SFXP(SBV(29233, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39002, 16), 8), UFXP(BV(21408, 16), 8)), UFXP(BV(17594, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47990, 16), 8), UFXP(BV(16367, 16), 8)), UFXP(BV(53517, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27847, 16), 8), UFXP(BV(50697, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27772, 16), 8), SFXP(SBV(31485, 16), 8)), SFXP(SBV(-6279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24851, 16), 8), SFXP(SBV(17410, 16), 8)), SFXP(SBV(-7441, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26551, 16), 8), UFXP(BV(23665, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1560, 16), 8), SFXP(SBV(29013, 16), 8)), SFXP(SBV(-27453, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46061, 16), 8), UFXP(BV(8110, 16), 8)), UFXP(BV(54171, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6042, 16), 8), UFXP(BV(3042, 16), 8)), UFXP(BV(9084, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26618, 16), 8), SFXP(SBV(26886, 16), 8)), SFXP(SBV(268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36991, 16), 8), UFXP(BV(26577, 16), 8)), UFXP(BV(63568, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58061, 16), 8), UFXP(BV(32411, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44116, 16), 8), UFXP(BV(50057, 16), 8)), UFXP(BV(28637, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15833, 16), 8), SFXP(SBV(31034, 16), 8)), SFXP(SBV(15201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2314, 16), 8), SFXP(SBV(-7205, 16), 8)), SFXP(SBV(-410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11698, 16), 8), SFXP(SBV(26263, 16), 8)), SFXP(SBV(-14565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28500, 16), 8), SFXP(SBV(20798, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6369, 16), 8), UFXP(BV(36783, 16), 8)), UFXP(BV(63152, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28035, 16), 8), UFXP(BV(51380, 16), 8)), UFXP(BV(13879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11830, 16), 8), SFXP(SBV(-19735, 16), 8)), SFXP(SBV(-31565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7760, 16), 8), SFXP(SBV(20684, 16), 8)), SFXP(SBV(-28377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-3619, 16), 8), SFXP(SBV(9502, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9455, 16), 8), UFXP(BV(25036, 16), 8)), UFXP(BV(7165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23855, 16), 8), SFXP(SBV(28468, 16), 8)), SFXP(SBV(4613, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22147, 16), 8), SFXP(SBV(32224, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28455, 16), 8), SFXP(SBV(18519, 16), 8)), SFXP(SBV(9936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27135, 16), 8), UFXP(BV(35389, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29267, 16), 8), SFXP(SBV(-7960, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9341, 16), 8), SFXP(SBV(27409, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27831, 16), 8), UFXP(BV(214, 16), 8)), UFXP(BV(23265, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30887, 16), 8), SFXP(SBV(-21028, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22883, 16), 8), SFXP(SBV(24987, 16), 8)), SFXP(SBV(-5281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30900, 16), 8), SFXP(SBV(32543, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29312, 16), 8), SFXP(SBV(-4269, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26751, 16), 8), SFXP(SBV(637, 16), 8)), SFXP(SBV(27388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19137, 16), 8), SFXP(SBV(11442, 16), 8)), SFXP(SBV(-30579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30377, 16), 8), SFXP(SBV(-18236, 16), 8)), SFXP(SBV(12141, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30230, 16), 8), SFXP(SBV(9669, 16), 8)), SFXP(SBV(25637, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31660, 16), 8), SFXP(SBV(22392, 16), 8)), SFXP(SBV(-9268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1715, 16), 8), UFXP(BV(23203, 16), 8)), UFXP(BV(24918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15462, 16), 8), UFXP(BV(21661, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51278, 16), 8), UFXP(BV(37319, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13042, 16), 8), SFXP(SBV(-30685, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12376, 16), 8), SFXP(SBV(2594, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2155, 16), 8), UFXP(BV(6107, 16), 8)), UFXP(BV(61584, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62530, 16), 8), UFXP(BV(19020, 16), 8)), UFXP(BV(43510, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40028, 16), 8), UFXP(BV(15910, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42242, 16), 8), UFXP(BV(44574, 16), 8)), UFXP(BV(15026, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7763, 16), 8), SFXP(SBV(-26496, 16), 8)), SFXP(SBV(-18733, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12453, 16), 8), SFXP(SBV(-28599, 16), 8)), SFXP(SBV(-24484, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48237, 16), 8), UFXP(BV(47091, 16), 8)), UFXP(BV(25798, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4023, 16), 8), UFXP(BV(791, 16), 8)), UFXP(BV(4814, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48954, 16), 8), UFXP(BV(16226, 16), 8)), UFXP(BV(32728, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29361, 16), 8), UFXP(BV(12787, 16), 8)), UFXP(BV(16574, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11929, 16), 8), SFXP(SBV(-21150, 16), 8)), SFXP(SBV(9221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35094, 16), 8), UFXP(BV(36920, 16), 8)), UFXP(BV(63710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1792, 16), 8), UFXP(BV(36461, 16), 8)), UFXP(BV(38253, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23524, 16), 8), SFXP(SBV(29415, 16), 8)), SFXP(SBV(-5891, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50269, 16), 8), UFXP(BV(27369, 16), 8)), UFXP(BV(12102, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43857, 16), 8), UFXP(BV(13854, 16), 8)), UFXP(BV(30003, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29031, 16), 8), UFXP(BV(14113, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15622, 16), 8), SFXP(SBV(-4744, 16), 8)), SFXP(SBV(10878, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1141, 16), 8), UFXP(BV(63411, 16), 8)), UFXP(BV(20480, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26571, 16), 8), SFXP(SBV(27196, 16), 8)), SFXP(SBV(-4706, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10841, 16), 8), UFXP(BV(48342, 16), 8)), UFXP(BV(28035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5309, 16), 8), SFXP(SBV(-10456, 16), 8)), SFXP(SBV(5147, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1110, 16), 8), SFXP(SBV(5828, 16), 8)), SFXP(SBV(4718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28537, 16), 8), SFXP(SBV(-32636, 16), 8)), SFXP(SBV(-31995, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63809, 16), 8), UFXP(BV(22702, 16), 8)), UFXP(BV(20975, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43586, 16), 8), UFXP(BV(33188, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10674, 16), 8), SFXP(SBV(11836, 16), 8)), SFXP(SBV(1162, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29186, 16), 8), SFXP(SBV(-32649, 16), 8)), SFXP(SBV(-3463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60387, 16), 8), UFXP(BV(26598, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8302, 16), 8), SFXP(SBV(-27346, 16), 8)), SFXP(SBV(-29888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42234, 16), 8), UFXP(BV(64277, 16), 8)), UFXP(BV(52902, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58767, 16), 8), UFXP(BV(6128, 16), 8)), UFXP(BV(52639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20027, 16), 8), UFXP(BV(25190, 16), 8)), UFXP(BV(4546, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61987, 16), 8), UFXP(BV(37834, 16), 8)), UFXP(BV(51497, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10606, 16), 8), UFXP(BV(21544, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28124, 16), 8), UFXP(BV(15622, 16), 8)), UFXP(BV(12288, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34720, 16), 8), UFXP(BV(32458, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27555, 16), 8), SFXP(SBV(-18438, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36103, 16), 8), UFXP(BV(30844, 16), 8)), UFXP(BV(24472, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38764, 16), 8), UFXP(BV(59397, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7202, 16), 8), SFXP(SBV(-32459, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26207, 16), 8), SFXP(SBV(-30502, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8858, 16), 8), UFXP(BV(12100, 16), 8)), UFXP(BV(25463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22865, 16), 8), UFXP(BV(40133, 16), 8)), UFXP(BV(48268, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25079, 16), 8), SFXP(SBV(-28556, 16), 8)), SFXP(SBV(3477, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17772, 16), 8), SFXP(SBV(17528, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29947, 16), 8), SFXP(SBV(-20357, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34217, 16), 8), UFXP(BV(2517, 16), 8)), UFXP(BV(36734, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51664, 16), 8), UFXP(BV(12781, 16), 8)), UFXP(BV(64445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54271, 16), 8), UFXP(BV(33097, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52930, 16), 8), UFXP(BV(10480, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23681, 16), 8), SFXP(SBV(447, 16), 8)), SFXP(SBV(24128, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4384, 16), 8), UFXP(BV(13943, 16), 8)), UFXP(BV(18327, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15332, 16), 8), SFXP(SBV(-938, 16), 8)), SFXP(SBV(-14394, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23637, 16), 8), SFXP(SBV(-32276, 16), 8)), SFXP(SBV(-8639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37868, 16), 8), UFXP(BV(8014, 16), 8)), UFXP(BV(45882, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52279, 16), 8), UFXP(BV(19232, 16), 8)), UFXP(BV(5975, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33631, 16), 8), UFXP(BV(15479, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5895, 16), 8), SFXP(SBV(-4586, 16), 8)), SFXP(SBV(-1309, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12962, 16), 8), SFXP(SBV(11092, 16), 8)), SFXP(SBV(24054, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9271, 16), 8), UFXP(BV(33377, 16), 8)), UFXP(BV(29095, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18142, 16), 8), SFXP(SBV(-18789, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9042, 16), 8), SFXP(SBV(-12252, 16), 8)), SFXP(SBV(-3210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53005, 16), 8), UFXP(BV(31167, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21736, 16), 8), UFXP(BV(37699, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26208, 16), 8), SFXP(SBV(10204, 16), 8)), SFXP(SBV(16004, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36461, 16), 8), UFXP(BV(63663, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10273, 16), 8), SFXP(SBV(-14400, 16), 8)), SFXP(SBV(-11967, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(705, 16), 8), UFXP(BV(9003, 16), 8)), UFXP(BV(24793, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10665, 16), 8), SFXP(SBV(10817, 16), 8)), SFXP(SBV(-152, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18835, 16), 8), UFXP(BV(61672, 16), 8)), UFXP(BV(14971, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31403, 16), 8), SFXP(SBV(14024, 16), 8)), SFXP(SBV(17379, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(760, 16), 8), UFXP(BV(5738, 16), 8)), UFXP(BV(17035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-375, 16), 8), SFXP(SBV(763, 16), 8)), SFXP(SBV(-1138, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17253, 16), 8), SFXP(SBV(-22087, 16), 8)), SFXP(SBV(4834, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23247, 16), 8), UFXP(BV(14941, 16), 8)), UFXP(BV(46051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18148, 16), 8), SFXP(SBV(14895, 16), 8)), SFXP(SBV(32493, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59395, 16), 8), UFXP(BV(32326, 16), 8)), UFXP(BV(27069, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23369, 16), 8), SFXP(SBV(-22707, 16), 8)), SFXP(SBV(662, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40893, 16), 8), UFXP(BV(41163, 16), 8)), UFXP(BV(65266, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25411, 16), 8), SFXP(SBV(15796, 16), 8)), SFXP(SBV(9615, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24222, 16), 8), UFXP(BV(5023, 16), 8)), UFXP(BV(29245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60835, 16), 8), UFXP(BV(65391, 16), 8)), UFXP(BV(60690, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9191, 16), 8), SFXP(SBV(-28384, 16), 8)), SFXP(SBV(-19193, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34414, 16), 8), UFXP(BV(54293, 16), 8)), UFXP(BV(23171, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15325, 16), 8), UFXP(BV(21356, 16), 8)), UFXP(BV(33257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8627, 16), 8), SFXP(SBV(8335, 16), 8)), SFXP(SBV(-292, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3284, 16), 8), SFXP(SBV(21192, 16), 8)), SFXP(SBV(9710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31015, 16), 8), UFXP(BV(49809, 16), 8)), UFXP(BV(46742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29068, 16), 8), UFXP(BV(1341, 16), 8)), UFXP(BV(30409, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10811, 16), 8), UFXP(BV(7179, 16), 8)), UFXP(BV(3632, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2533, 16), 8), SFXP(SBV(-25658, 16), 8)), SFXP(SBV(-23125, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50881, 16), 8), UFXP(BV(34576, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18211, 16), 8), UFXP(BV(59601, 16), 8)), UFXP(BV(12276, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28762, 16), 8), SFXP(SBV(12327, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12146, 16), 8), SFXP(SBV(-18197, 16), 8)), SFXP(SBV(-30343, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51350, 16), 8), UFXP(BV(9496, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3396, 16), 8), SFXP(SBV(-1514, 16), 8)), SFXP(SBV(4910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56051, 16), 8), UFXP(BV(7781, 16), 8)), UFXP(BV(63832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41582, 16), 8), UFXP(BV(33292, 16), 8)), UFXP(BV(33657, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10351, 16), 8), SFXP(SBV(24074, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32035, 16), 8), UFXP(BV(7999, 16), 8)), UFXP(BV(40034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12551, 16), 8), SFXP(SBV(8730, 16), 8)), SFXP(SBV(21281, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36479, 16), 8), UFXP(BV(42671, 16), 8)), UFXP(BV(51139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11741, 16), 8), SFXP(SBV(19009, 16), 8)), SFXP(SBV(-7268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37419, 16), 8), UFXP(BV(39362, 16), 8)), UFXP(BV(63593, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15653, 16), 8), SFXP(SBV(7975, 16), 8)), SFXP(SBV(7678, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16210, 16), 8), UFXP(BV(33608, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23948, 16), 8), UFXP(BV(1917, 16), 8)), UFXP(BV(25865, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10501, 16), 8), UFXP(BV(46112, 16), 8)), UFXP(BV(29925, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36068, 16), 8), UFXP(BV(31879, 16), 8)), UFXP(BV(2411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11535, 16), 8), SFXP(SBV(-24273, 16), 8)), SFXP(SBV(-12738, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44044, 16), 8), UFXP(BV(53712, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3854, 16), 8), SFXP(SBV(14923, 16), 8)), SFXP(SBV(-11069, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6183, 16), 8), SFXP(SBV(15785, 16), 8)), SFXP(SBV(-21968, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3331, 16), 8), SFXP(SBV(-7616, 16), 8)), SFXP(SBV(-10947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12571, 16), 8), SFXP(SBV(28793, 16), 8)), SFXP(SBV(-16222, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26806, 16), 8), SFXP(SBV(20812, 16), 8)), SFXP(SBV(17918, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29709, 16), 8), SFXP(SBV(2556, 16), 8)), SFXP(SBV(31054, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15616, 16), 8), SFXP(SBV(30610, 16), 8)), SFXP(SBV(14994, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5500, 16), 8), SFXP(SBV(27108, 16), 8)), SFXP(SBV(-21608, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12264, 16), 8), SFXP(SBV(-22688, 16), 8)), SFXP(SBV(-30584, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23701, 16), 8), SFXP(SBV(6727, 16), 8)), SFXP(SBV(-30428, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57260, 16), 8), UFXP(BV(12298, 16), 8)), UFXP(BV(44962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16951, 16), 8), SFXP(SBV(-1170, 16), 8)), SFXP(SBV(-18121, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27748, 16), 8), UFXP(BV(21296, 16), 8)), UFXP(BV(49044, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28796, 16), 8), UFXP(BV(23574, 16), 8)), UFXP(BV(30267, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25495, 16), 8), UFXP(BV(62433, 16), 8)), UFXP(BV(28598, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11378, 16), 8), SFXP(SBV(16817, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5129, 16), 8), SFXP(SBV(-17740, 16), 8)), SFXP(SBV(12611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21426, 16), 8), UFXP(BV(46309, 16), 8)), UFXP(BV(2199, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34958, 16), 8), UFXP(BV(10354, 16), 8)), UFXP(BV(45312, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19359, 16), 8), SFXP(SBV(32374, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48179, 16), 8), UFXP(BV(14434, 16), 8)), UFXP(BV(62613, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18025, 16), 8), UFXP(BV(63411, 16), 8)), UFXP(BV(20150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58547, 16), 8), UFXP(BV(34025, 16), 8)), UFXP(BV(48243, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1674, 16), 8), SFXP(SBV(22257, 16), 8)), SFXP(SBV(23931, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13493, 16), 8), UFXP(BV(59287, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21531, 16), 8), UFXP(BV(56654, 16), 8)), UFXP(BV(30413, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(64829, 16), 8), UFXP(BV(10587, 16), 8)), UFXP(BV(59593, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3132, 16), 8), SFXP(SBV(-4440, 16), 8)), SFXP(SBV(-7572, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35280, 16), 8), UFXP(BV(58018, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13521, 16), 8), UFXP(BV(9206, 16), 8)), UFXP(BV(22727, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26252, 16), 8), UFXP(BV(32538, 16), 8)), UFXP(BV(58790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53849, 16), 8), UFXP(BV(4513, 16), 8)), UFXP(BV(49336, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22762, 16), 8), UFXP(BV(24051, 16), 8)), UFXP(BV(41320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12692, 16), 8), UFXP(BV(60817, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27552, 16), 8), UFXP(BV(19517, 16), 8)), UFXP(BV(8035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17548, 16), 8), SFXP(SBV(-11805, 16), 8)), SFXP(SBV(-5743, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7837, 16), 8), SFXP(SBV(3763, 16), 8)), SFXP(SBV(-11600, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(400, 16), 8), SFXP(SBV(-10220, 16), 8)), SFXP(SBV(-15968, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19094, 16), 8), SFXP(SBV(9863, 16), 8)), SFXP(SBV(-28957, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39560, 16), 8), UFXP(BV(39976, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54324, 16), 8), UFXP(BV(7362, 16), 8)), UFXP(BV(61686, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28245, 16), 8), SFXP(SBV(-12290, 16), 8)), SFXP(SBV(15955, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5632, 16), 8), SFXP(SBV(3078, 16), 8)), SFXP(SBV(-8710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55459, 16), 8), UFXP(BV(50722, 16), 8)), UFXP(BV(4737, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7251, 16), 8), UFXP(BV(16158, 16), 8)), UFXP(BV(23409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4397, 16), 8), SFXP(SBV(23259, 16), 8)), SFXP(SBV(18862, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31830, 16), 8), SFXP(SBV(22113, 16), 8)), SFXP(SBV(-11593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35157, 16), 8), UFXP(BV(2436, 16), 8)), UFXP(BV(32721, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15662, 16), 8), UFXP(BV(56400, 16), 8)), UFXP(BV(24798, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28416, 16), 8), UFXP(BV(13002, 16), 8)), UFXP(BV(1430, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(694, 16), 8), UFXP(BV(57178, 16), 8)), UFXP(BV(57872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52097, 16), 8), UFXP(BV(58855, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28950, 16), 8), SFXP(SBV(-9382, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10729, 16), 8), UFXP(BV(18304, 16), 8)), UFXP(BV(57961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41718, 16), 8), UFXP(BV(7850, 16), 8)), UFXP(BV(49568, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50322, 16), 8), UFXP(BV(43653, 16), 8)), UFXP(BV(28439, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26382, 16), 8), SFXP(SBV(25448, 16), 8)), SFXP(SBV(-934, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21685, 16), 8), SFXP(SBV(9576, 16), 8)), SFXP(SBV(-24723, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8288, 16), 8), UFXP(BV(46599, 16), 8)), UFXP(BV(54887, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25267, 16), 8), UFXP(BV(11301, 16), 8)), UFXP(BV(13966, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6170, 16), 8), UFXP(BV(49028, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29476, 16), 8), UFXP(BV(10902, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43547, 16), 8), UFXP(BV(52580, 16), 8)), UFXP(BV(30591, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25153, 16), 8), SFXP(SBV(27321, 16), 8)), SFXP(SBV(-13062, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56356, 16), 8), UFXP(BV(10604, 16), 8)), UFXP(BV(40611, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20218, 16), 8), SFXP(SBV(29849, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6652, 16), 8), SFXP(SBV(-12965, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61019, 16), 8), UFXP(BV(4752, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5196, 16), 8), SFXP(SBV(-2915, 16), 8)), SFXP(SBV(8111, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19109, 16), 8), SFXP(SBV(16201, 16), 8)), SFXP(SBV(-2908, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4989, 16), 8), SFXP(SBV(2740, 16), 8)), SFXP(SBV(-7729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4555, 16), 8), SFXP(SBV(24433, 16), 8)), SFXP(SBV(-28988, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4180, 16), 8), SFXP(SBV(23491, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11199, 16), 8), SFXP(SBV(-13387, 16), 8)), SFXP(SBV(-2188, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-25037, 16), 8), SFXP(SBV(-28121, 16), 8)), SFXP(SBV(-2256, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1589, 16), 8), SFXP(SBV(18130, 16), 8)), SFXP(SBV(-16541, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61882, 16), 8), UFXP(BV(45099, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61210, 16), 8), UFXP(BV(46389, 16), 8)), UFXP(BV(42063, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18898, 16), 8), UFXP(BV(7864, 16), 8)), UFXP(BV(11034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13415, 16), 8), SFXP(SBV(7445, 16), 8)), SFXP(SBV(-5970, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27545, 16), 8), UFXP(BV(43448, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4190, 16), 8), SFXP(SBV(-513, 16), 8)), SFXP(SBV(3677, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10935, 16), 8), SFXP(SBV(-28549, 16), 8)), SFXP(SBV(-17614, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5836, 16), 8), UFXP(BV(700, 16), 8)), UFXP(BV(15958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-970, 16), 8), SFXP(SBV(25299, 16), 8)), SFXP(SBV(-30323, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15834, 16), 8), SFXP(SBV(-13833, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39609, 16), 8), UFXP(BV(44665, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18992, 16), 8), SFXP(SBV(16740, 16), 8)), SFXP(SBV(29804, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1658, 16), 8), UFXP(BV(2298, 16), 8)), UFXP(BV(3956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10450, 16), 8), SFXP(SBV(31326, 16), 8)), SFXP(SBV(-31983, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13621, 16), 8), SFXP(SBV(-31161, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7575, 16), 8), SFXP(SBV(-26231, 16), 8)), SFXP(SBV(-18656, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22571, 16), 8), SFXP(SBV(-27255, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1063, 16), 8), SFXP(SBV(-5488, 16), 8)), SFXP(SBV(22789, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23296, 16), 8), UFXP(BV(65253, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58451, 16), 8), UFXP(BV(17209, 16), 8)), UFXP(BV(41242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24307, 16), 8), UFXP(BV(48848, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27885, 16), 8), SFXP(SBV(-22104, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33084, 16), 8), UFXP(BV(6694, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9244, 16), 8), UFXP(BV(12080, 16), 8)), UFXP(BV(62700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14582, 16), 8), SFXP(SBV(-24566, 16), 8)), SFXP(SBV(23047, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20808, 16), 8), SFXP(SBV(29382, 16), 8)), SFXP(SBV(-15346, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14344, 16), 8), SFXP(SBV(-16838, 16), 8)), SFXP(SBV(-31182, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43922, 16), 8), UFXP(BV(20996, 16), 8)), UFXP(BV(63347, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30867, 16), 8), SFXP(SBV(-26779, 16), 8)), SFXP(SBV(7890, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5779, 16), 8), SFXP(SBV(-30596, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17950, 16), 8), UFXP(BV(36833, 16), 8)), UFXP(BV(54783, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22654, 16), 8), SFXP(SBV(-10142, 16), 8)), SFXP(SBV(12512, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31900, 16), 8), SFXP(SBV(-27957, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9824, 16), 8), UFXP(BV(4888, 16), 8)), UFXP(BV(14712, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20591, 16), 8), UFXP(BV(1144, 16), 8)), UFXP(BV(26481, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56145, 16), 8), UFXP(BV(535, 16), 8)), UFXP(BV(55610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45357, 16), 8), UFXP(BV(45451, 16), 8)), UFXP(BV(57424, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19772, 16), 8), SFXP(SBV(14802, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64861, 16), 8), UFXP(BV(26852, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11247, 16), 8), UFXP(BV(28346, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50782, 16), 8), UFXP(BV(50658, 16), 8)), UFXP(BV(21877, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20268, 16), 8), UFXP(BV(57929, 16), 8)), UFXP(BV(27875, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24782, 16), 8), UFXP(BV(60940, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7892, 16), 8), SFXP(SBV(-10563, 16), 8)), SFXP(SBV(-2671, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34511, 16), 8), UFXP(BV(19997, 16), 8)), UFXP(BV(54508, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12687, 16), 8), SFXP(SBV(-31571, 16), 8)), SFXP(SBV(8250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5852, 16), 8), UFXP(BV(5146, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22129, 16), 8), UFXP(BV(55236, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20209, 16), 8), SFXP(SBV(3940, 16), 8)), SFXP(SBV(-16269, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1120, 16), 8), UFXP(BV(61166, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9068, 16), 8), SFXP(SBV(22939, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21711, 16), 8), UFXP(BV(51281, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9333, 16), 8), UFXP(BV(31733, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55693, 16), 8), UFXP(BV(41193, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24275, 16), 8), SFXP(SBV(-25093, 16), 8)), SFXP(SBV(20129, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30799, 16), 8), UFXP(BV(30115, 16), 8)), UFXP(BV(60914, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28728, 16), 8), SFXP(SBV(3292, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26599, 16), 8), SFXP(SBV(-19250, 16), 8)), SFXP(SBV(7349, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17053, 16), 8), SFXP(SBV(-14884, 16), 8)), SFXP(SBV(-31937, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21357, 16), 8), SFXP(SBV(-31492, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59241, 16), 8), UFXP(BV(23995, 16), 8)), UFXP(BV(35246, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8347, 16), 8), SFXP(SBV(5856, 16), 8)), SFXP(SBV(14203, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12693, 16), 8), SFXP(SBV(720, 16), 8)), SFXP(SBV(-11973, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22806, 16), 8), UFXP(BV(31115, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14227, 16), 8), SFXP(SBV(32241, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32274, 16), 8), UFXP(BV(46645, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(20656, 16), 8), SFXP(SBV(-21735, 16), 8)), SFXP(SBV(15730, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29361, 16), 8), UFXP(BV(49454, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3230, 16), 8), SFXP(SBV(-21516, 16), 8)), SFXP(SBV(24746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41556, 16), 8), UFXP(BV(44065, 16), 8)), UFXP(BV(20085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25579, 16), 8), SFXP(SBV(3445, 16), 8)), SFXP(SBV(-29024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1437, 16), 8), SFXP(SBV(8763, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64412, 16), 8), UFXP(BV(10715, 16), 8)), UFXP(BV(53697, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20042, 16), 8), UFXP(BV(20177, 16), 8)), UFXP(BV(40219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49603, 16), 8), UFXP(BV(4607, 16), 8)), UFXP(BV(54210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45103, 16), 8), UFXP(BV(52862, 16), 8)), UFXP(BV(57777, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23250, 16), 8), SFXP(SBV(32543, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11181, 16), 8), UFXP(BV(65300, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31949, 16), 8), SFXP(SBV(-30719, 16), 8)), SFXP(SBV(2868, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36149, 16), 8), UFXP(BV(37917, 16), 8)), UFXP(BV(63768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26852, 16), 8), SFXP(SBV(9804, 16), 8)), SFXP(SBV(20228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18183, 16), 8), SFXP(SBV(-27251, 16), 8)), SFXP(SBV(-9068, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17114, 16), 8), UFXP(BV(34070, 16), 8)), UFXP(BV(51184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25200, 16), 8), SFXP(SBV(3547, 16), 8)), SFXP(SBV(-21478, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12425, 16), 8), UFXP(BV(22521, 16), 8)), UFXP(BV(34946, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57234, 16), 8), UFXP(BV(62850, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31983, 16), 8), SFXP(SBV(-11084, 16), 8)), SFXP(SBV(20899, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20745, 16), 8), SFXP(SBV(17750, 16), 8)), SFXP(SBV(-2995, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38079, 16), 8), UFXP(BV(10514, 16), 8)), UFXP(BV(48593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28948, 16), 8), UFXP(BV(62845, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18336, 16), 8), UFXP(BV(24738, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20364, 16), 8), UFXP(BV(17818, 16), 8)), UFXP(BV(2546, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7824, 16), 8), SFXP(SBV(21030, 16), 8)), SFXP(SBV(-12631, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15428, 16), 8), SFXP(SBV(-27267, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12526, 16), 8), SFXP(SBV(2796, 16), 8)), SFXP(SBV(9730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9043, 16), 8), SFXP(SBV(-25635, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32731, 16), 8), UFXP(BV(57696, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20453, 16), 8), SFXP(SBV(-15019, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9280, 16), 8), UFXP(BV(52102, 16), 8)), UFXP(BV(22714, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17705, 16), 8), SFXP(SBV(24709, 16), 8)), SFXP(SBV(7004, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(883, 16), 8), UFXP(BV(63692, 16), 8)), UFXP(BV(2727, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6854, 16), 8), SFXP(SBV(-32208, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11323, 16), 8), UFXP(BV(51927, 16), 8)), UFXP(BV(24932, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6568, 16), 8), SFXP(SBV(-1309, 16), 8)), SFXP(SBV(-7877, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18815, 16), 8), SFXP(SBV(29610, 16), 8)), SFXP(SBV(13532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30247, 16), 8), SFXP(SBV(8638, 16), 8)), SFXP(SBV(27976, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36499, 16), 8), UFXP(BV(52042, 16), 8)), UFXP(BV(14279, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46983, 16), 8), UFXP(BV(19562, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31629, 16), 8), UFXP(BV(23430, 16), 8)), UFXP(BV(8199, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34437, 16), 8), UFXP(BV(51252, 16), 8)), UFXP(BV(13116, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21910, 16), 8), UFXP(BV(30691, 16), 8)), UFXP(BV(5279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1643, 16), 8), SFXP(SBV(-2395, 16), 8)), SFXP(SBV(-752, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18769, 16), 8), SFXP(SBV(-22450, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15564, 16), 8), SFXP(SBV(31311, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3648, 16), 8), UFXP(BV(1126, 16), 8)), UFXP(BV(4774, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1727, 16), 8), SFXP(SBV(6565, 16), 8)), SFXP(SBV(-4838, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(172, 16), 8), SFXP(SBV(-29054, 16), 8)), SFXP(SBV(29226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9914, 16), 8), UFXP(BV(51637, 16), 8)), UFXP(BV(61551, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10947, 16), 8), SFXP(SBV(7734, 16), 8)), SFXP(SBV(-18681, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3779, 16), 8), UFXP(BV(41073, 16), 8)), UFXP(BV(44852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12338, 16), 8), UFXP(BV(64681, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30711, 16), 8), SFXP(SBV(-27361, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51478, 16), 8), UFXP(BV(12973, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28796, 16), 8), SFXP(SBV(383, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31643, 16), 8), SFXP(SBV(6893, 16), 8)), SFXP(SBV(-27000, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62136, 16), 8), UFXP(BV(35473, 16), 8)), UFXP(BV(26663, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3612, 16), 8), SFXP(SBV(-14482, 16), 8)), SFXP(SBV(-18094, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6105, 16), 8), SFXP(SBV(-10366, 16), 8)), SFXP(SBV(4261, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38188, 16), 8), UFXP(BV(2959, 16), 8)), UFXP(BV(48183, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(32596, 16), 8), SFXP(SBV(-26682, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24021, 16), 8), UFXP(BV(20877, 16), 8)), UFXP(BV(3144, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1561, 16), 8), UFXP(BV(46732, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10522, 16), 8), UFXP(BV(11332, 16), 8)), UFXP(BV(64726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2247, 16), 8), SFXP(SBV(997, 16), 8)), SFXP(SBV(-3244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1198, 16), 8), SFXP(SBV(11166, 16), 8)), SFXP(SBV(-9968, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23086, 16), 8), UFXP(BV(60260, 16), 8)), UFXP(BV(17810, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27093, 16), 8), SFXP(SBV(26032, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18941, 16), 8), SFXP(SBV(19319, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14931, 16), 8), UFXP(BV(24662, 16), 8)), UFXP(BV(62136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5262, 16), 8), UFXP(BV(53387, 16), 8)), UFXP(BV(17411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21122, 16), 8), SFXP(SBV(-28560, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10346, 16), 8), SFXP(SBV(-28039, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44622, 16), 8), UFXP(BV(4490, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43484, 16), 8), UFXP(BV(29613, 16), 8)), UFXP(BV(13871, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57584, 16), 8), UFXP(BV(15558, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15708, 16), 8), SFXP(SBV(-11939, 16), 8)), SFXP(SBV(27647, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29758, 16), 8), SFXP(SBV(16519, 16), 8)), SFXP(SBV(13239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-722, 16), 8), SFXP(SBV(-19885, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46086, 16), 8), UFXP(BV(47436, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19915, 16), 8), SFXP(SBV(-10570, 16), 8)), SFXP(SBV(-30485, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13554, 16), 8), UFXP(BV(30429, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58679, 16), 8), UFXP(BV(56256, 16), 8)), UFXP(BV(2423, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6836, 16), 8), SFXP(SBV(-26993, 16), 8)), SFXP(SBV(31707, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32122, 16), 8), UFXP(BV(48025, 16), 8)), UFXP(BV(14611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5321, 16), 8), UFXP(BV(15170, 16), 8)), UFXP(BV(53166, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17259, 16), 8), UFXP(BV(18042, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30196, 16), 8), UFXP(BV(12108, 16), 8)), UFXP(BV(18088, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52008, 16), 8), UFXP(BV(5677, 16), 8)), UFXP(BV(46331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62172, 16), 8), UFXP(BV(11823, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22084, 16), 8), UFXP(BV(59113, 16), 8)), UFXP(BV(28507, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16560, 16), 8), SFXP(SBV(-11889, 16), 8)), SFXP(SBV(-28449, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31940, 16), 8), UFXP(BV(41250, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12906, 16), 8), SFXP(SBV(11662, 16), 8)), SFXP(SBV(-1244, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57131, 16), 8), UFXP(BV(60497, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8047, 16), 8), UFXP(BV(38651, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55280, 16), 8), UFXP(BV(22553, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5914, 16), 8), UFXP(BV(47609, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18931, 16), 8), UFXP(BV(880, 16), 8)), UFXP(BV(18051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5668, 16), 8), SFXP(SBV(14106, 16), 8)), SFXP(SBV(19774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21990, 16), 8), UFXP(BV(26573, 16), 8)), UFXP(BV(48563, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14199, 16), 8), UFXP(BV(50396, 16), 8)), UFXP(BV(42695, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27707, 16), 8), SFXP(SBV(-29533, 16), 8)), SFXP(SBV(14894, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23694, 16), 8), UFXP(BV(46880, 16), 8)), UFXP(BV(42350, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17731, 16), 8), UFXP(BV(33945, 16), 8)), UFXP(BV(51676, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42073, 16), 8), UFXP(BV(52899, 16), 8)), UFXP(BV(54710, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25930, 16), 8), SFXP(SBV(-5652, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26250, 16), 8), SFXP(SBV(-9124, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10378, 16), 8), UFXP(BV(10285, 16), 8)), UFXP(BV(23728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23947, 16), 8), SFXP(SBV(16516, 16), 8)), SFXP(SBV(-7431, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61591, 16), 8), UFXP(BV(12068, 16), 8)), UFXP(BV(19854, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62550, 16), 8), UFXP(BV(33234, 16), 8)), UFXP(BV(29316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24216, 16), 8), SFXP(SBV(-23385, 16), 8)), SFXP(SBV(17935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23205, 16), 8), UFXP(BV(32680, 16), 8)), UFXP(BV(56061, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(39658, 16), 8), UFXP(BV(55224, 16), 8)), UFXP(BV(35294, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63548, 16), 8), UFXP(BV(10863, 16), 8)), UFXP(BV(9595, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2615, 16), 8), SFXP(SBV(7117, 16), 8)), SFXP(SBV(-9732, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14421, 16), 8), SFXP(SBV(15023, 16), 8)), SFXP(SBV(602, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24992, 16), 8), UFXP(BV(53375, 16), 8)), UFXP(BV(37153, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7095, 16), 8), UFXP(BV(27299, 16), 8)), UFXP(BV(35692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16579, 16), 8), SFXP(SBV(1992, 16), 8)), SFXP(SBV(2067, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1360, 16), 8), SFXP(SBV(32384, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12958, 16), 8), UFXP(BV(40446, 16), 8)), UFXP(BV(15646, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(55935, 16), 8), UFXP(BV(62984, 16), 8)), UFXP(BV(64733, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31670, 16), 8), SFXP(SBV(-32740, 16), 8)), SFXP(SBV(1070, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2464, 16), 8), SFXP(SBV(-56, 16), 8)), SFXP(SBV(2408, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15934, 16), 8), UFXP(BV(6132, 16), 8)), UFXP(BV(9802, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34448, 16), 8), UFXP(BV(63182, 16), 8)), UFXP(BV(36802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23653, 16), 8), SFXP(SBV(8850, 16), 8)), SFXP(SBV(32503, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23282, 16), 8), SFXP(SBV(-9018, 16), 8)), SFXP(SBV(-31823, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9084, 16), 8), SFXP(SBV(-22671, 16), 8)), SFXP(SBV(-31755, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24237, 16), 8), SFXP(SBV(-17814, 16), 8)), SFXP(SBV(6423, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13348, 16), 8), SFXP(SBV(14746, 16), 8)), SFXP(SBV(-1398, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5207, 16), 8), UFXP(BV(43430, 16), 8)), UFXP(BV(48637, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10643, 16), 8), SFXP(SBV(-19010, 16), 8)), SFXP(SBV(29653, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12680, 16), 8), SFXP(SBV(11342, 16), 8)), SFXP(SBV(-24022, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19449, 16), 8), SFXP(SBV(-17225, 16), 8)), SFXP(SBV(-28862, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14395, 16), 8), SFXP(SBV(21455, 16), 8)), SFXP(SBV(-7060, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31309, 16), 8), SFXP(SBV(-19638, 16), 8)), SFXP(SBV(-11671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-8060, 16), 8), SFXP(SBV(-7075, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23476, 16), 8), SFXP(SBV(10140, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45393, 16), 8), UFXP(BV(51523, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51291, 16), 8), UFXP(BV(31332, 16), 8)), UFXP(BV(51618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45094, 16), 8), UFXP(BV(43865, 16), 8)), UFXP(BV(1229, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14330, 16), 8), SFXP(SBV(31365, 16), 8)), SFXP(SBV(17035, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15650, 16), 8), UFXP(BV(29430, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18827, 16), 8), SFXP(SBV(-23192, 16), 8)), SFXP(SBV(-1673, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28411, 16), 8), SFXP(SBV(3408, 16), 8)), SFXP(SBV(31819, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14367, 16), 8), SFXP(SBV(8603, 16), 8)), SFXP(SBV(5764, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16757, 16), 8), SFXP(SBV(27111, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22841, 16), 8), SFXP(SBV(-5520, 16), 8)), SFXP(SBV(28361, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-9243, 16), 8), SFXP(SBV(4599, 16), 8)), SFXP(SBV(30559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13827, 16), 8), SFXP(SBV(-2116, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24019, 16), 8), UFXP(BV(55903, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(439, 16), 8), UFXP(BV(64715, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65473, 16), 8), UFXP(BV(16224, 16), 8)), UFXP(BV(49249, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58533, 16), 8), UFXP(BV(49858, 16), 8)), UFXP(BV(8675, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2066, 16), 8), UFXP(BV(23742, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18783, 16), 8), UFXP(BV(61933, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19488, 16), 8), UFXP(BV(57774, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17050, 16), 8), UFXP(BV(26841, 16), 8)), UFXP(BV(18180, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33749, 16), 8), UFXP(BV(61150, 16), 8)), UFXP(BV(600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49261, 16), 8), UFXP(BV(56520, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25992, 16), 8), SFXP(SBV(32091, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22710, 16), 8), SFXP(SBV(-2856, 16), 8)), SFXP(SBV(-25566, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30941, 16), 8), SFXP(SBV(-28620, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9677, 16), 8), SFXP(SBV(7037, 16), 8)), SFXP(SBV(2640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20546, 16), 8), SFXP(SBV(433, 16), 8)), SFXP(SBV(30785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13886, 16), 8), SFXP(SBV(-9601, 16), 8)), SFXP(SBV(3508, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14642, 16), 8), SFXP(SBV(25132, 16), 8)), SFXP(SBV(-10490, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25930, 16), 8), SFXP(SBV(-12885, 16), 8)), SFXP(SBV(-26721, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29433, 16), 8), SFXP(SBV(13636, 16), 8)), SFXP(SBV(15797, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2231, 16), 8), SFXP(SBV(28112, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8395, 16), 8), SFXP(SBV(-4876, 16), 8)), SFXP(SBV(-13271, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12787, 16), 8), UFXP(BV(44436, 16), 8)), UFXP(BV(57223, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26625, 16), 8), SFXP(SBV(18099, 16), 8)), SFXP(SBV(-8526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26086, 16), 8), SFXP(SBV(-24459, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43425, 16), 8), UFXP(BV(7828, 16), 8)), UFXP(BV(35597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(409, 16), 8), UFXP(BV(31255, 16), 8)), UFXP(BV(31664, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4622, 16), 8), SFXP(SBV(-1970, 16), 8)), SFXP(SBV(-6592, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46601, 16), 8), UFXP(BV(62090, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11432, 16), 8), SFXP(SBV(-26888, 16), 8)), SFXP(SBV(15456, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5416, 16), 8), UFXP(BV(60728, 16), 8)), UFXP(BV(10224, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24542, 16), 8), SFXP(SBV(18818, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19272, 16), 8), SFXP(SBV(-22531, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23594, 16), 8), SFXP(SBV(-14158, 16), 8)), SFXP(SBV(9436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46021, 16), 8), UFXP(BV(11389, 16), 8)), UFXP(BV(57410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24043, 16), 8), SFXP(SBV(-25842, 16), 8)), SFXP(SBV(-15651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(980, 16), 8), SFXP(SBV(-19568, 16), 8)), SFXP(SBV(-18588, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39224, 16), 8), UFXP(BV(35703, 16), 8)), UFXP(BV(3521, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58517, 16), 8), UFXP(BV(6529, 16), 8)), UFXP(BV(51988, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48270, 16), 8), UFXP(BV(11076, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6284, 16), 8), UFXP(BV(54556, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5628, 16), 8), SFXP(SBV(-30030, 16), 8)), SFXP(SBV(-24402, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2477, 16), 8), SFXP(SBV(23676, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21279, 16), 8), SFXP(SBV(27371, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22862, 16), 8), UFXP(BV(23507, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19707, 16), 8), UFXP(BV(20836, 16), 8)), UFXP(BV(31101, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52267, 16), 8), UFXP(BV(38993, 16), 8)), UFXP(BV(31266, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(2954, 16), 8), SFXP(SBV(-17390, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11111, 16), 8), UFXP(BV(11634, 16), 8)), UFXP(BV(46191, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(949, 16), 8), UFXP(BV(25008, 16), 8)), UFXP(BV(25957, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22587, 16), 8), SFXP(SBV(-5291, 16), 8)), SFXP(SBV(-17296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61308, 16), 8), UFXP(BV(42338, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11271, 16), 8), SFXP(SBV(4769, 16), 8)), SFXP(SBV(13359, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64505, 16), 8), UFXP(BV(3653, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32532, 16), 8), SFXP(SBV(9267, 16), 8)), SFXP(SBV(23265, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6425, 16), 8), SFXP(SBV(13410, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30219, 16), 8), SFXP(SBV(-10406, 16), 8)), SFXP(SBV(16829, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23393, 16), 8), SFXP(SBV(-2959, 16), 8)), SFXP(SBV(-20434, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17982, 16), 8), UFXP(BV(58616, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39046, 16), 8), UFXP(BV(31122, 16), 8)), UFXP(BV(7924, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15102, 16), 8), UFXP(BV(1599, 16), 8)), UFXP(BV(16701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22827, 16), 8), SFXP(SBV(-8734, 16), 8)), SFXP(SBV(-7639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51290, 16), 8), UFXP(BV(55677, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8814, 16), 8), SFXP(SBV(-13635, 16), 8)), SFXP(SBV(4821, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51409, 16), 8), UFXP(BV(34909, 16), 8)), UFXP(BV(16500, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8498, 16), 8), UFXP(BV(11035, 16), 8)), UFXP(BV(19533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16267, 16), 8), UFXP(BV(41626, 16), 8)), UFXP(BV(57893, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26721, 16), 8), SFXP(SBV(13672, 16), 8)), SFXP(SBV(13049, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51111, 16), 8), UFXP(BV(25359, 16), 8)), UFXP(BV(25752, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57885, 16), 8), UFXP(BV(63452, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15261, 16), 8), SFXP(SBV(28563, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26683, 16), 8), UFXP(BV(48122, 16), 8)), UFXP(BV(44097, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37019, 16), 8), UFXP(BV(23780, 16), 8)), UFXP(BV(13239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17525, 16), 8), SFXP(SBV(18181, 16), 8)), SFXP(SBV(-656, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32169, 16), 8), SFXP(SBV(-20961, 16), 8)), SFXP(SBV(-12406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40226, 16), 8), UFXP(BV(1351, 16), 8)), UFXP(BV(41577, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25010, 16), 8), SFXP(SBV(19097, 16), 8)), SFXP(SBV(-5913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24089, 16), 8), SFXP(SBV(-29478, 16), 8)), SFXP(SBV(-11969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26090, 16), 8), UFXP(BV(51584, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43793, 16), 8), UFXP(BV(9302, 16), 8)), UFXP(BV(53095, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50862, 16), 8), UFXP(BV(6567, 16), 8)), UFXP(BV(44295, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29, 16), 8), UFXP(BV(34454, 16), 8)), UFXP(BV(31111, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20328, 16), 8), UFXP(BV(5378, 16), 8)), UFXP(BV(25706, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29482, 16), 8), SFXP(SBV(18852, 16), 8)), SFXP(SBV(10630, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29261, 16), 8), SFXP(SBV(7898, 16), 8)), SFXP(SBV(-21363, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63278, 16), 8), UFXP(BV(32076, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46818, 16), 8), UFXP(BV(21425, 16), 8)), UFXP(BV(25393, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7440, 16), 8), UFXP(BV(30893, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31813, 16), 8), SFXP(SBV(15581, 16), 8)), SFXP(SBV(-29837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26794, 16), 8), UFXP(BV(851, 16), 8)), UFXP(BV(25943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7215, 16), 8), UFXP(BV(59174, 16), 8)), UFXP(BV(13577, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25704, 16), 8), UFXP(BV(43836, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45481, 16), 8), UFXP(BV(1417, 16), 8)), UFXP(BV(55136, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5567, 16), 8), SFXP(SBV(3058, 16), 8)), SFXP(SBV(8625, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63847, 16), 8), UFXP(BV(65472, 16), 8)), UFXP(BV(10407, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55309, 16), 8), UFXP(BV(1255, 16), 8)), UFXP(BV(56564, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8027, 16), 8), SFXP(SBV(24394, 16), 8)), SFXP(SBV(-32421, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6508, 16), 8), SFXP(SBV(17909, 16), 8)), SFXP(SBV(3472, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28785, 16), 8), SFXP(SBV(19029, 16), 8)), SFXP(SBV(23041, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(55773, 16), 8), UFXP(BV(3105, 16), 8)), UFXP(BV(21105, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8299, 16), 8), SFXP(SBV(-30376, 16), 8)), SFXP(SBV(-22077, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11087, 16), 8), UFXP(BV(13367, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7748, 16), 8), SFXP(SBV(-6427, 16), 8)), SFXP(SBV(1321, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-4571, 16), 8), SFXP(SBV(-17095, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16505, 16), 8), SFXP(SBV(-19312, 16), 8)), SFXP(SBV(29719, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11334, 16), 8), SFXP(SBV(-12521, 16), 8)), SFXP(SBV(30059, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39236, 16), 8), UFXP(BV(4410, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8434, 16), 8), SFXP(SBV(11194, 16), 8)), SFXP(SBV(-2760, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43777, 16), 8), UFXP(BV(62184, 16), 8)), UFXP(BV(40425, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22771, 16), 8), SFXP(SBV(1750, 16), 8)), SFXP(SBV(-21021, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46570, 16), 8), UFXP(BV(35930, 16), 8)), UFXP(BV(10640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21828, 16), 8), SFXP(SBV(11572, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1032, 16), 8), UFXP(BV(40052, 16), 8)), UFXP(BV(41084, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48463, 16), 8), UFXP(BV(4613, 16), 8)), UFXP(BV(43850, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29906, 16), 8), UFXP(BV(51498, 16), 8)), UFXP(BV(43944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(446, 16), 8), UFXP(BV(43616, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-5376, 16), 8), SFXP(SBV(780, 16), 8)), SFXP(SBV(-16380, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10281, 16), 8), SFXP(SBV(-29609, 16), 8)), SFXP(SBV(19328, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38934, 16), 8), UFXP(BV(46041, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24452, 16), 8), UFXP(BV(39160, 16), 8)), UFXP(BV(63612, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6790, 16), 8), SFXP(SBV(15074, 16), 8)), SFXP(SBV(8284, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(4673, 16), 8), SFXP(SBV(9186, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46961, 16), 8), UFXP(BV(31258, 16), 8)), UFXP(BV(15703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11893, 16), 8), SFXP(SBV(14836, 16), 8)), SFXP(SBV(2943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9125, 16), 8), UFXP(BV(49387, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11746, 16), 8), SFXP(SBV(8100, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23649, 16), 8), UFXP(BV(56688, 16), 8)), UFXP(BV(32497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19068, 16), 8), SFXP(SBV(-9891, 16), 8)), SFXP(SBV(9177, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33118, 16), 8), UFXP(BV(42766, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42829, 16), 8), UFXP(BV(25176, 16), 8)), UFXP(BV(17661, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10607, 16), 8), UFXP(BV(40819, 16), 8)), UFXP(BV(35324, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4550, 16), 8), UFXP(BV(1368, 16), 8)), UFXP(BV(3182, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26961, 16), 8), UFXP(BV(11469, 16), 8)), UFXP(BV(15492, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18370, 16), 8), SFXP(SBV(32493, 16), 8)), SFXP(SBV(-14123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29820, 16), 8), SFXP(SBV(-26576, 16), 8)), SFXP(SBV(15496, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44196, 16), 8), UFXP(BV(1266, 16), 8)), UFXP(BV(42930, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29844, 16), 8), UFXP(BV(47939, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6236, 16), 8), SFXP(SBV(-14856, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15476, 16), 8), UFXP(BV(48936, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4776, 16), 8), SFXP(SBV(-17591, 16), 8)), SFXP(SBV(-22367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18387, 16), 8), SFXP(SBV(-10858, 16), 8)), SFXP(SBV(6565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13439, 16), 8), SFXP(SBV(-16287, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2803, 16), 8), SFXP(SBV(-17474, 16), 8)), SFXP(SBV(20277, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60182, 16), 8), UFXP(BV(26752, 16), 8)), UFXP(BV(21398, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8597, 16), 8), SFXP(SBV(-32299, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5911, 16), 8), SFXP(SBV(-14971, 16), 8)), SFXP(SBV(-20882, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26218, 16), 8), UFXP(BV(42721, 16), 8)), UFXP(BV(49033, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59063, 16), 8), UFXP(BV(19407, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7056, 16), 8), UFXP(BV(35823, 16), 8)), UFXP(BV(42879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23902, 16), 8), SFXP(SBV(-13628, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30651, 16), 8), SFXP(SBV(24768, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3233, 16), 8), UFXP(BV(13429, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8097, 16), 8), SFXP(SBV(-24006, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37040, 16), 8), UFXP(BV(19911, 16), 8)), UFXP(BV(62825, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23380, 16), 8), UFXP(BV(22105, 16), 8)), UFXP(BV(1275, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1961, 16), 8), SFXP(SBV(-7198, 16), 8)), SFXP(SBV(5237, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37018, 16), 8), UFXP(BV(54578, 16), 8)), UFXP(BV(47976, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29249, 16), 8), SFXP(SBV(6129, 16), 8)), SFXP(SBV(-30158, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47758, 16), 8), UFXP(BV(21855, 16), 8)), UFXP(BV(25903, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10124, 16), 8), UFXP(BV(2352, 16), 8)), UFXP(BV(27479, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13814, 16), 8), SFXP(SBV(-17599, 16), 8)), SFXP(SBV(3785, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38183, 16), 8), UFXP(BV(51800, 16), 8)), UFXP(BV(51919, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29073, 16), 8), SFXP(SBV(6671, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22594, 16), 8), UFXP(BV(9002, 16), 8)), UFXP(BV(13592, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1864, 16), 8), SFXP(SBV(-6723, 16), 8)), SFXP(SBV(-8587, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13627, 16), 8), SFXP(SBV(10666, 16), 8)), SFXP(SBV(-24293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32401, 16), 8), UFXP(BV(14334, 16), 8)), UFXP(BV(46735, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60718, 16), 8), UFXP(BV(5861, 16), 8)), UFXP(BV(54857, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40025, 16), 8), UFXP(BV(35927, 16), 8)), UFXP(BV(10416, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57194, 16), 8), UFXP(BV(58173, 16), 8)), UFXP(BV(20538, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28732, 16), 8), SFXP(SBV(10334, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57707, 16), 8), UFXP(BV(14924, 16), 8)), UFXP(BV(42783, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15463, 16), 8), UFXP(BV(37719, 16), 8)), UFXP(BV(53182, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23836, 16), 8), UFXP(BV(61747, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25658, 16), 8), SFXP(SBV(25893, 16), 8)), SFXP(SBV(-13985, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29588, 16), 8), UFXP(BV(64507, 16), 8)), UFXP(BV(30617, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3500, 16), 8), SFXP(SBV(30358, 16), 8)), SFXP(SBV(26858, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19879, 16), 8), SFXP(SBV(-29673, 16), 8)), SFXP(SBV(15984, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31005, 16), 8), UFXP(BV(7669, 16), 8)), UFXP(BV(38674, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2966, 16), 8), SFXP(SBV(-16061, 16), 8)), SFXP(SBV(-19027, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11137, 16), 8), SFXP(SBV(-592, 16), 8)), SFXP(SBV(10545, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58225, 16), 8), UFXP(BV(28297, 16), 8)), UFXP(BV(13381, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15517, 16), 8), SFXP(SBV(17168, 16), 8)), SFXP(SBV(-1651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31795, 16), 8), SFXP(SBV(-4541, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5998, 16), 8), UFXP(BV(44095, 16), 8)), UFXP(BV(50093, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10809, 16), 8), SFXP(SBV(20852, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30992, 16), 8), UFXP(BV(19627, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60421, 16), 8), UFXP(BV(55278, 16), 8)), UFXP(BV(5143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21979, 16), 8), SFXP(SBV(10294, 16), 8)), SFXP(SBV(31828, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3029, 16), 8), UFXP(BV(3418, 16), 8)), UFXP(BV(40441, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10300, 16), 8), SFXP(SBV(662, 16), 8)), SFXP(SBV(-9638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44336, 16), 8), UFXP(BV(16159, 16), 8)), UFXP(BV(28177, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14347, 16), 8), UFXP(BV(3025, 16), 8)), UFXP(BV(11322, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45445, 16), 8), UFXP(BV(50879, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17742, 16), 8), UFXP(BV(35068, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58727, 16), 8), UFXP(BV(23581, 16), 8)), UFXP(BV(16772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32749, 16), 8), SFXP(SBV(-8641, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7259, 16), 8), SFXP(SBV(-14340, 16), 8)), SFXP(SBV(13402, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31808, 16), 8), UFXP(BV(15604, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36098, 16), 8), UFXP(BV(18952, 16), 8)), UFXP(BV(17146, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25899, 16), 8), SFXP(SBV(-15205, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57526, 16), 8), UFXP(BV(25529, 16), 8)), UFXP(BV(31997, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10261, 16), 8), SFXP(SBV(5491, 16), 8)), SFXP(SBV(23482, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28250, 16), 8), SFXP(SBV(32065, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32588, 16), 8), UFXP(BV(49216, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54326, 16), 8), UFXP(BV(43761, 16), 8)), UFXP(BV(10565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31770, 16), 8), SFXP(SBV(-27929, 16), 8)), SFXP(SBV(7375, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13603, 16), 8), UFXP(BV(30689, 16), 8)), UFXP(BV(44292, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42133, 16), 8), UFXP(BV(7179, 16), 8)), UFXP(BV(1886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30264, 16), 8), UFXP(BV(39763, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17608, 16), 8), SFXP(SBV(-16796, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12623, 16), 8), SFXP(SBV(-26870, 16), 8)), SFXP(SBV(-26043, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28836, 16), 8), UFXP(BV(26569, 16), 8)), UFXP(BV(55405, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28780, 16), 8), SFXP(SBV(10353, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37167, 16), 8), UFXP(BV(37212, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42292, 16), 8), UFXP(BV(42886, 16), 8)), UFXP(BV(64942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31577, 16), 8), UFXP(BV(51903, 16), 8)), UFXP(BV(45121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17812, 16), 8), SFXP(SBV(-4107, 16), 8)), SFXP(SBV(13705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5982, 16), 8), UFXP(BV(63543, 16), 8)), UFXP(BV(43029, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21163, 16), 8), SFXP(SBV(29742, 16), 8)), SFXP(SBV(-8579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10796, 16), 8), SFXP(SBV(2227, 16), 8)), SFXP(SBV(-13023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8212, 16), 8), UFXP(BV(61590, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62009, 16), 8), UFXP(BV(59453, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15235, 16), 8), SFXP(SBV(-32554, 16), 8)), SFXP(SBV(28736, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21281, 16), 8), UFXP(BV(41217, 16), 8)), UFXP(BV(62498, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10929, 16), 8), SFXP(SBV(29948, 16), 8)), SFXP(SBV(-32197, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54260, 16), 8), UFXP(BV(15282, 16), 8)), UFXP(BV(27803, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16138, 16), 8), UFXP(BV(43642, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3333, 16), 8), SFXP(SBV(-9468, 16), 8)), SFXP(SBV(-6135, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8784, 16), 8), SFXP(SBV(-12182, 16), 8)), SFXP(SBV(3398, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10279, 16), 8), SFXP(SBV(-19626, 16), 8)), SFXP(SBV(-9347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(65072, 16), 8), UFXP(BV(56444, 16), 8)), UFXP(BV(60512, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27310, 16), 8), SFXP(SBV(-9150, 16), 8)), SFXP(SBV(-6921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19386, 16), 8), UFXP(BV(20241, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25997, 16), 8), UFXP(BV(59456, 16), 8)), UFXP(BV(32077, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59380, 16), 8), UFXP(BV(28752, 16), 8)), UFXP(BV(30628, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19109, 16), 8), UFXP(BV(33207, 16), 8)), UFXP(BV(51438, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17259, 16), 8), UFXP(BV(8771, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34352, 16), 8), UFXP(BV(4635, 16), 8)), UFXP(BV(38987, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21430, 16), 8), SFXP(SBV(3413, 16), 8)), SFXP(SBV(18017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32648, 16), 8), SFXP(SBV(-13175, 16), 8)), SFXP(SBV(-19473, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48879, 16), 8), UFXP(BV(39755, 16), 8)), UFXP(BV(23098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14751, 16), 8), SFXP(SBV(7774, 16), 8)), SFXP(SBV(6977, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8645, 16), 8), SFXP(SBV(-15464, 16), 8)), SFXP(SBV(24109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32385, 16), 8), SFXP(SBV(2664, 16), 8)), SFXP(SBV(29721, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3776, 16), 8), UFXP(BV(25586, 16), 8)), UFXP(BV(49714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22271, 16), 8), UFXP(BV(1525, 16), 8)), UFXP(BV(23796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29088, 16), 8), SFXP(SBV(1323, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63023, 16), 8), UFXP(BV(46355, 16), 8)), UFXP(BV(16668, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55180, 16), 8), UFXP(BV(34584, 16), 8)), UFXP(BV(20596, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(60734, 16), 8), UFXP(BV(40749, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50325, 16), 8), UFXP(BV(28519, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42202, 16), 8), UFXP(BV(9814, 16), 8)), UFXP(BV(52016, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2673, 16), 8), SFXP(SBV(-26360, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2850, 16), 8), SFXP(SBV(-28449, 16), 8)), SFXP(SBV(-25599, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10537, 16), 8), UFXP(BV(26260, 16), 8)), UFXP(BV(36797, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16106, 16), 8), SFXP(SBV(-17595, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5629, 16), 8), SFXP(SBV(20060, 16), 8)), SFXP(SBV(17667, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59586, 16), 8), UFXP(BV(44907, 16), 8)), UFXP(BV(14679, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24470, 16), 8), SFXP(SBV(-2059, 16), 8)), SFXP(SBV(-26529, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4025, 16), 8), SFXP(SBV(-8322, 16), 8)), SFXP(SBV(-12347, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31202, 16), 8), SFXP(SBV(13455, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13542, 16), 8), SFXP(SBV(22907, 16), 8)), SFXP(SBV(9365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(954, 16), 8), SFXP(SBV(14889, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43823, 16), 8), UFXP(BV(6596, 16), 8)), UFXP(BV(37227, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17081, 16), 8), SFXP(SBV(-5092, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12989, 16), 8), SFXP(SBV(-27007, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57855, 16), 8), UFXP(BV(2406, 16), 8)), UFXP(BV(60261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20052, 16), 8), SFXP(SBV(12656, 16), 8)), SFXP(SBV(32708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3690, 16), 8), UFXP(BV(61434, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46506, 16), 8), UFXP(BV(19794, 16), 8)), UFXP(BV(26712, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(295, 16), 8), UFXP(BV(14677, 16), 8)), UFXP(BV(14972, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20212, 16), 8), SFXP(SBV(7744, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26831, 16), 8), UFXP(BV(16575, 16), 8)), UFXP(BV(33266, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20586, 16), 8), SFXP(SBV(-22994, 16), 8)), SFXP(SBV(14033, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39776, 16), 8), UFXP(BV(56080, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53168, 16), 8), UFXP(BV(46406, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10209, 16), 8), SFXP(SBV(-23411, 16), 8)), SFXP(SBV(-13202, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55278, 16), 8), UFXP(BV(17505, 16), 8)), UFXP(BV(37773, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4357, 16), 8), UFXP(BV(7790, 16), 8)), UFXP(BV(12147, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32532, 16), 8), SFXP(SBV(-10365, 16), 8)), SFXP(SBV(22639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26703, 16), 8), UFXP(BV(63412, 16), 8)), UFXP(BV(60816, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8375, 16), 8), SFXP(SBV(2771, 16), 8)), SFXP(SBV(25117, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(543, 16), 8), SFXP(SBV(-5661, 16), 8)), SFXP(SBV(-12007, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21568, 16), 8), SFXP(SBV(6711, 16), 8)), SFXP(SBV(28279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6678, 16), 8), SFXP(SBV(-17940, 16), 8)), SFXP(SBV(-11262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5189, 16), 8), SFXP(SBV(-2602, 16), 8)), SFXP(SBV(2587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31142, 16), 8), UFXP(BV(29582, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43664, 16), 8), UFXP(BV(26442, 16), 8)), UFXP(BV(53565, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49155, 16), 8), UFXP(BV(39305, 16), 8)), UFXP(BV(22924, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27553, 16), 8), SFXP(SBV(22993, 16), 8)), SFXP(SBV(-15656, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34276, 16), 8), UFXP(BV(2799, 16), 8)), UFXP(BV(31477, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6643, 16), 8), UFXP(BV(38455, 16), 8)), UFXP(BV(45098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30373, 16), 8), SFXP(SBV(-17820, 16), 8)), SFXP(SBV(12553, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15373, 16), 8), UFXP(BV(61749, 16), 8)), UFXP(BV(19160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1708, 16), 8), SFXP(SBV(-8033, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18068, 16), 8), UFXP(BV(49192, 16), 8)), UFXP(BV(64008, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5575, 16), 8), SFXP(SBV(1144, 16), 8)), SFXP(SBV(4431, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41150, 16), 8), UFXP(BV(53075, 16), 8)), UFXP(BV(28689, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61062, 16), 8), UFXP(BV(25518, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16244, 16), 8), SFXP(SBV(2256, 16), 8)), SFXP(SBV(-12079, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10931, 16), 8), SFXP(SBV(-28610, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10263, 16), 8), SFXP(SBV(21987, 16), 8)), SFXP(SBV(32250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34306, 16), 8), UFXP(BV(9741, 16), 8)), UFXP(BV(44047, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(4846, 16), 8), UFXP(BV(40824, 16), 8)), UFXP(BV(51890, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12789, 16), 8), SFXP(SBV(-28702, 16), 8)), SFXP(SBV(15913, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64267, 16), 8), UFXP(BV(16094, 16), 8)), UFXP(BV(48173, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2622, 16), 8), SFXP(SBV(-8601, 16), 8)), SFXP(SBV(-11223, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15210, 16), 8), SFXP(SBV(-25756, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22343, 16), 8), SFXP(SBV(-20045, 16), 8)), SFXP(SBV(-23148, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5063, 16), 8), SFXP(SBV(-27989, 16), 8)), SFXP(SBV(22926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31528, 16), 8), UFXP(BV(40995, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36753, 16), 8), UFXP(BV(18238, 16), 8)), UFXP(BV(54991, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-25329, 16), 8), SFXP(SBV(23830, 16), 8)), SFXP(SBV(1523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32699, 16), 8), SFXP(SBV(-983, 16), 8)), SFXP(SBV(31716, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9015, 16), 8), UFXP(BV(20578, 16), 8)), UFXP(BV(29593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32406, 16), 8), UFXP(BV(61894, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11319, 16), 8), SFXP(SBV(5484, 16), 8)), SFXP(SBV(16803, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55524, 16), 8), UFXP(BV(17780, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27471, 16), 8), SFXP(SBV(-22410, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14450, 16), 8), SFXP(SBV(-25237, 16), 8)), SFXP(SBV(-10787, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16832, 16), 8), SFXP(SBV(15747, 16), 8)), SFXP(SBV(1085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-3539, 16), 8), SFXP(SBV(26322, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46677, 16), 8), UFXP(BV(28154, 16), 8)), UFXP(BV(9295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5832, 16), 8), SFXP(SBV(8721, 16), 8)), SFXP(SBV(-2068, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27768, 16), 8), UFXP(BV(58098, 16), 8)), UFXP(BV(35206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(32644, 16), 8), SFXP(SBV(27976, 16), 8)), SFXP(SBV(28433, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62230, 16), 8), UFXP(BV(65314, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2361, 16), 8), UFXP(BV(22304, 16), 8)), UFXP(BV(45593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23266, 16), 8), UFXP(BV(50964, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1866, 16), 8), SFXP(SBV(-24539, 16), 8)), SFXP(SBV(26405, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9594, 16), 8), UFXP(BV(13872, 16), 8)), UFXP(BV(61258, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37686, 16), 8), UFXP(BV(13928, 16), 8)), UFXP(BV(51614, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42096, 16), 8), UFXP(BV(25364, 16), 8)), UFXP(BV(16732, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18044, 16), 8), SFXP(SBV(17643, 16), 8)), SFXP(SBV(-401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9760, 16), 8), SFXP(SBV(3292, 16), 8)), SFXP(SBV(13052, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18064, 16), 8), UFXP(BV(52382, 16), 8)), UFXP(BV(31218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26366, 16), 8), SFXP(SBV(6094, 16), 8)), SFXP(SBV(27726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(241, 16), 8), SFXP(SBV(-25085, 16), 8)), SFXP(SBV(25326, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23801, 16), 8), SFXP(SBV(-23876, 16), 8)), SFXP(SBV(75, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28416, 16), 8), UFXP(BV(20569, 16), 8)), UFXP(BV(48985, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(4254, 16), 8), SFXP(SBV(22567, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12399, 16), 8), SFXP(SBV(-10036, 16), 8)), SFXP(SBV(-2363, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(26815, 16), 8), SFXP(SBV(16036, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28337, 16), 8), SFXP(SBV(-26492, 16), 8)), SFXP(SBV(-10707, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14056, 16), 8), UFXP(BV(2024, 16), 8)), UFXP(BV(16080, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30257, 16), 8), SFXP(SBV(281, 16), 8)), SFXP(SBV(-30538, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6353, 16), 8), SFXP(SBV(29780, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14305, 16), 8), SFXP(SBV(-8153, 16), 8)), SFXP(SBV(-22458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54960, 16), 8), UFXP(BV(39277, 16), 8)), UFXP(BV(28701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1199, 16), 8), SFXP(SBV(-8194, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23122, 16), 8), SFXP(SBV(25592, 16), 8)), SFXP(SBV(2470, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24384, 16), 8), UFXP(BV(19565, 16), 8)), UFXP(BV(43949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59656, 16), 8), UFXP(BV(12580, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22273, 16), 8), SFXP(SBV(-12704, 16), 8)), SFXP(SBV(-9569, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13848, 16), 8), SFXP(SBV(-11179, 16), 8)), SFXP(SBV(-25027, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17018, 16), 8), UFXP(BV(55505, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4322, 16), 8), SFXP(SBV(-9634, 16), 8)), SFXP(SBV(5312, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6207, 16), 8), SFXP(SBV(-21876, 16), 8)), SFXP(SBV(28083, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5136, 16), 8), SFXP(SBV(11303, 16), 8)), SFXP(SBV(-30159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23623, 16), 8), SFXP(SBV(30880, 16), 8)), SFXP(SBV(-7257, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23761, 16), 8), UFXP(BV(40103, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13817, 16), 8), SFXP(SBV(21938, 16), 8)), SFXP(SBV(4404, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52480, 16), 8), UFXP(BV(16075, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3148, 16), 8), UFXP(BV(54197, 16), 8)), UFXP(BV(57345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57750, 16), 8), UFXP(BV(53916, 16), 8)), UFXP(BV(3834, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36431, 16), 8), UFXP(BV(27195, 16), 8)), UFXP(BV(63626, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32299, 16), 8), SFXP(SBV(-30968, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11407, 16), 8), SFXP(SBV(10094, 16), 8)), SFXP(SBV(-8977, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3652, 16), 8), UFXP(BV(43157, 16), 8)), UFXP(BV(25837, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18006, 16), 8), SFXP(SBV(-14779, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-17710, 16), 8), SFXP(SBV(-12397, 16), 8)), SFXP(SBV(5653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54344, 16), 8), UFXP(BV(62734, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6286, 16), 8), UFXP(BV(14229, 16), 8)), UFXP(BV(20515, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41330, 16), 8), UFXP(BV(27283, 16), 8)), UFXP(BV(14047, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15423, 16), 8), SFXP(SBV(-22220, 16), 8)), SFXP(SBV(6797, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28129, 16), 8), SFXP(SBV(30577, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12340, 16), 8), SFXP(SBV(17827, 16), 8)), SFXP(SBV(-5487, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7102, 16), 8), SFXP(SBV(-11878, 16), 8)), SFXP(SBV(-4776, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21514, 16), 8), SFXP(SBV(21789, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13756, 16), 8), SFXP(SBV(27148, 16), 8)), SFXP(SBV(-24632, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48044, 16), 8), UFXP(BV(43911, 16), 8)), UFXP(BV(26419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32902, 16), 8), UFXP(BV(40480, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7199, 16), 8), SFXP(SBV(-6216, 16), 8)), SFXP(SBV(-13415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15528, 16), 8), SFXP(SBV(-3856, 16), 8)), SFXP(SBV(11672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64274, 16), 8), UFXP(BV(18844, 16), 8)), UFXP(BV(45430, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22110, 16), 8), SFXP(SBV(17939, 16), 8)), SFXP(SBV(4171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25528, 16), 8), SFXP(SBV(-18950, 16), 8)), SFXP(SBV(6578, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17453, 16), 8), SFXP(SBV(26805, 16), 8)), SFXP(SBV(-21278, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48158, 16), 8), UFXP(BV(61297, 16), 8)), UFXP(BV(43919, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12131, 16), 8), SFXP(SBV(7259, 16), 8)), SFXP(SBV(16300, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(14043, 16), 8), UFXP(BV(55401, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19544, 16), 8), SFXP(SBV(941, 16), 8)), SFXP(SBV(6303, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8339, 16), 8), UFXP(BV(30258, 16), 8)), UFXP(BV(38597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(827, 16), 8), UFXP(BV(3439, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9602, 16), 8), UFXP(BV(61831, 16), 8)), UFXP(BV(5897, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42432, 16), 8), UFXP(BV(51760, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32654, 16), 8), SFXP(SBV(-16697, 16), 8)), SFXP(SBV(16185, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13623, 16), 8), UFXP(BV(57578, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28656, 16), 8), SFXP(SBV(30151, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25807, 16), 8), SFXP(SBV(28036, 16), 8)), SFXP(SBV(-11693, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31090, 16), 8), SFXP(SBV(30802, 16), 8)), SFXP(SBV(-288, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13897, 16), 8), SFXP(SBV(11583, 16), 8)), SFXP(SBV(-25480, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43006, 16), 8), UFXP(BV(31408, 16), 8)), UFXP(BV(11598, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21655, 16), 8), SFXP(SBV(24881, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40377, 16), 8), UFXP(BV(62969, 16), 8)), UFXP(BV(42944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2416, 16), 8), SFXP(SBV(-20979, 16), 8)), SFXP(SBV(18563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17346, 16), 8), SFXP(SBV(-4225, 16), 8)), SFXP(SBV(-21571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1794, 16), 8), SFXP(SBV(-23606, 16), 8)), SFXP(SBV(31181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40294, 16), 8), UFXP(BV(63238, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51009, 16), 8), UFXP(BV(59351, 16), 8)), UFXP(BV(57194, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56380, 16), 8), UFXP(BV(41296, 16), 8)), UFXP(BV(15084, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10029, 16), 8), UFXP(BV(36190, 16), 8)), UFXP(BV(39375, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17546, 16), 8), SFXP(SBV(-32619, 16), 8)), SFXP(SBV(-7452, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12219, 16), 8), UFXP(BV(48500, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12713, 16), 8), SFXP(SBV(385, 16), 8)), SFXP(SBV(-12328, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25592, 16), 8), SFXP(SBV(-4855, 16), 8)), SFXP(SBV(20737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4032, 16), 8), SFXP(SBV(-11777, 16), 8)), SFXP(SBV(15809, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21545, 16), 8), SFXP(SBV(9936, 16), 8)), SFXP(SBV(-11609, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5455, 16), 8), UFXP(BV(249, 16), 8)), UFXP(BV(5206, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4970, 16), 8), UFXP(BV(56574, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1695, 16), 8), UFXP(BV(30896, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28089, 16), 8), SFXP(SBV(22354, 16), 8)), SFXP(SBV(27908, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50998, 16), 8), UFXP(BV(49159, 16), 8)), UFXP(BV(1839, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12167, 16), 8), UFXP(BV(341, 16), 8)), UFXP(BV(11826, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28325, 16), 8), SFXP(SBV(-7772, 16), 8)), SFXP(SBV(29439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17296, 16), 8), UFXP(BV(49379, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20391, 16), 8), SFXP(SBV(-13513, 16), 8)), SFXP(SBV(-6878, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27096, 16), 8), SFXP(SBV(-22370, 16), 8)), SFXP(SBV(-16070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51397, 16), 8), UFXP(BV(13807, 16), 8)), UFXP(BV(37590, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25663, 16), 8), SFXP(SBV(16356, 16), 8)), SFXP(SBV(9307, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51062, 16), 8), UFXP(BV(60971, 16), 8)), UFXP(BV(37173, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28166, 16), 8), SFXP(SBV(23496, 16), 8)), SFXP(SBV(-13874, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60339, 16), 8), UFXP(BV(36925, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30236, 16), 8), SFXP(SBV(9308, 16), 8)), SFXP(SBV(20928, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49040, 16), 8), UFXP(BV(54083, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32583, 16), 8), SFXP(SBV(8187, 16), 8)), SFXP(SBV(24766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57404, 16), 8), UFXP(BV(21351, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31271, 16), 8), SFXP(SBV(-11133, 16), 8)), SFXP(SBV(-20138, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8248, 16), 8), SFXP(SBV(-6532, 16), 8)), SFXP(SBV(-14780, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44526, 16), 8), UFXP(BV(9010, 16), 8)), UFXP(BV(35516, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13659, 16), 8), SFXP(SBV(-23816, 16), 8)), SFXP(SBV(10157, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6243, 16), 8), SFXP(SBV(-8972, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44320, 16), 8), UFXP(BV(65228, 16), 8)), UFXP(BV(20405, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19088, 16), 8), SFXP(SBV(-31748, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19332, 16), 8), SFXP(SBV(-2176, 16), 8)), SFXP(SBV(-32286, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15689, 16), 8), SFXP(SBV(26558, 16), 8)), SFXP(SBV(-10869, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59169, 16), 8), UFXP(BV(39128, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29244, 16), 8), UFXP(BV(61817, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4407, 16), 8), UFXP(BV(52321, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3666, 16), 8), SFXP(SBV(-8971, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28396, 16), 8), UFXP(BV(42299, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48391, 16), 8), UFXP(BV(42542, 16), 8)), UFXP(BV(46210, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6555, 16), 8), SFXP(SBV(-8161, 16), 8)), SFXP(SBV(-1606, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33554, 16), 8), UFXP(BV(9188, 16), 8)), UFXP(BV(24366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19390, 16), 8), SFXP(SBV(21214, 16), 8)), SFXP(SBV(-31606, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14484, 16), 8), SFXP(SBV(29969, 16), 8)), SFXP(SBV(15485, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29399, 16), 8), SFXP(SBV(-26710, 16), 8)), SFXP(SBV(2689, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49359, 16), 8), UFXP(BV(15134, 16), 8)), UFXP(BV(64493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2714, 16), 8), SFXP(SBV(-24349, 16), 8)), SFXP(SBV(27063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26124, 16), 8), SFXP(SBV(320, 16), 8)), SFXP(SBV(-25804, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62040, 16), 8), UFXP(BV(36491, 16), 8)), UFXP(BV(25549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26459, 16), 8), SFXP(SBV(-31578, 16), 8)), SFXP(SBV(7499, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2578, 16), 8), UFXP(BV(29432, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10834, 16), 8), SFXP(SBV(26156, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50444, 16), 8), UFXP(BV(13773, 16), 8)), UFXP(BV(36671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10616, 16), 8), SFXP(SBV(9037, 16), 8)), SFXP(SBV(-1579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24913, 16), 8), SFXP(SBV(-25964, 16), 8)), SFXP(SBV(-1051, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32955, 16), 8), UFXP(BV(30910, 16), 8)), UFXP(BV(46898, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47604, 16), 8), UFXP(BV(61113, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20351, 16), 8), SFXP(SBV(10592, 16), 8)), SFXP(SBV(-9759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17159, 16), 8), SFXP(SBV(2192, 16), 8)), SFXP(SBV(-15852, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30518, 16), 8), SFXP(SBV(-5654, 16), 8)), SFXP(SBV(24864, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4977, 16), 8), SFXP(SBV(-4049, 16), 8)), SFXP(SBV(9026, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12216, 16), 8), UFXP(BV(14466, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60540, 16), 8), UFXP(BV(20413, 16), 8)), UFXP(BV(15417, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12476, 16), 8), SFXP(SBV(-16020, 16), 8)), SFXP(SBV(5708, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12400, 16), 8), SFXP(SBV(-5141, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8173, 16), 8), SFXP(SBV(16462, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4654, 16), 8), SFXP(SBV(-22768, 16), 8)), SFXP(SBV(-27422, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(561, 16), 8), UFXP(BV(41410, 16), 8)), UFXP(BV(24687, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12111, 16), 8), SFXP(SBV(24336, 16), 8)), SFXP(SBV(12225, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24779, 16), 8), UFXP(BV(26215, 16), 8)), UFXP(BV(47060, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35028, 16), 8), UFXP(BV(51868, 16), 8)), UFXP(BV(19113, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(416, 16), 8), SFXP(SBV(22375, 16), 8)), SFXP(SBV(-21959, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15921, 16), 8), SFXP(SBV(23506, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44735, 16), 8), UFXP(BV(9697, 16), 8)), UFXP(BV(54432, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31429, 16), 8), UFXP(BV(53929, 16), 8)), UFXP(BV(43036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21056, 16), 8), UFXP(BV(22665, 16), 8)), UFXP(BV(43721, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13159, 16), 8), SFXP(SBV(1443, 16), 8)), SFXP(SBV(-14602, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64317, 16), 8), UFXP(BV(8823, 16), 8)), UFXP(BV(55494, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(47441, 16), 8), UFXP(BV(39339, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35747, 16), 8), UFXP(BV(13600, 16), 8)), UFXP(BV(49347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17941, 16), 8), UFXP(BV(52861, 16), 8)), UFXP(BV(5266, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47834, 16), 8), UFXP(BV(43699, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42183, 16), 8), UFXP(BV(18931, 16), 8)), UFXP(BV(61114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24711, 16), 8), SFXP(SBV(23425, 16), 8)), SFXP(SBV(17400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6465, 16), 8), UFXP(BV(38062, 16), 8)), UFXP(BV(44527, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17438, 16), 8), UFXP(BV(50991, 16), 8)), UFXP(BV(31983, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24927, 16), 8), SFXP(SBV(27601, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17798, 16), 8), SFXP(SBV(7618, 16), 8)), SFXP(SBV(-10180, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25030, 16), 8), SFXP(SBV(-12662, 16), 8)), SFXP(SBV(-7177, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22432, 16), 8), UFXP(BV(50699, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9314, 16), 8), SFXP(SBV(27438, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33013, 16), 8), UFXP(BV(13104, 16), 8)), UFXP(BV(19909, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23584, 16), 8), SFXP(SBV(10690, 16), 8)), SFXP(SBV(31262, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61688, 16), 8), UFXP(BV(56395, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8443, 16), 8), SFXP(SBV(-31202, 16), 8)), SFXP(SBV(22759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28412, 16), 8), SFXP(SBV(14214, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22296, 16), 8), UFXP(BV(48682, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17461, 16), 8), UFXP(BV(44773, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51359, 16), 8), UFXP(BV(11519, 16), 8)), UFXP(BV(17195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1016, 16), 8), SFXP(SBV(7460, 16), 8)), SFXP(SBV(-8476, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12125, 16), 8), UFXP(BV(38574, 16), 8)), UFXP(BV(39087, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14894, 16), 8), UFXP(BV(17287, 16), 8)), UFXP(BV(63143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3572, 16), 8), SFXP(SBV(-11484, 16), 8)), SFXP(SBV(-7912, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59237, 16), 8), UFXP(BV(47156, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43194, 16), 8), UFXP(BV(2241, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22966, 16), 8), UFXP(BV(1437, 16), 8)), UFXP(BV(21529, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6103, 16), 8), UFXP(BV(10016, 16), 8)), UFXP(BV(61623, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22637, 16), 8), UFXP(BV(34968, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57289, 16), 8), UFXP(BV(21211, 16), 8)), UFXP(BV(36078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24935, 16), 8), SFXP(SBV(-14368, 16), 8)), SFXP(SBV(-10567, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34239, 16), 8), UFXP(BV(1968, 16), 8)), UFXP(BV(36207, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28378, 16), 8), UFXP(BV(17316, 16), 8)), UFXP(BV(18962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9732, 16), 8), SFXP(SBV(26946, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2838, 16), 8), UFXP(BV(9130, 16), 8)), UFXP(BV(11968, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25018, 16), 8), UFXP(BV(56032, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19368, 16), 8), SFXP(SBV(26101, 16), 8)), SFXP(SBV(-20067, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14046, 16), 8), SFXP(SBV(24956, 16), 8)), SFXP(SBV(-6991, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23956, 16), 8), SFXP(SBV(18325, 16), 8)), SFXP(SBV(5631, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3887, 16), 8), SFXP(SBV(25421, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15055, 16), 8), SFXP(SBV(2924, 16), 8)), SFXP(SBV(-12131, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23262, 16), 8), SFXP(SBV(-10067, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39492, 16), 8), UFXP(BV(36524, 16), 8)), UFXP(BV(63838, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1438, 16), 8), SFXP(SBV(-16336, 16), 8)), SFXP(SBV(14898, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18179, 16), 8), UFXP(BV(16140, 16), 8)), UFXP(BV(2039, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48692, 16), 8), UFXP(BV(9582, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-4633, 16), 8), SFXP(SBV(-15397, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(4896, 16), 8), UFXP(BV(52483, 16), 8)), UFXP(BV(20698, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15219, 16), 8), SFXP(SBV(-7503, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22234, 16), 8), SFXP(SBV(-17027, 16), 8)), SFXP(SBV(-5207, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19764, 16), 8), UFXP(BV(3286, 16), 8)), UFXP(BV(16478, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19898, 16), 8), SFXP(SBV(-24338, 16), 8)), SFXP(SBV(21300, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21129, 16), 8), SFXP(SBV(-4109, 16), 8)), SFXP(SBV(-17020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22852, 16), 8), SFXP(SBV(-26836, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64470, 16), 8), UFXP(BV(2650, 16), 8)), UFXP(BV(1584, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28144, 16), 8), SFXP(SBV(16791, 16), 8)), SFXP(SBV(20601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52252, 16), 8), UFXP(BV(6033, 16), 8)), UFXP(BV(58285, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41366, 16), 8), UFXP(BV(60299, 16), 8)), UFXP(BV(46603, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48684, 16), 8), UFXP(BV(49816, 16), 8)), UFXP(BV(64404, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24059, 16), 8), UFXP(BV(54414, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(7186, 16), 8), UFXP(BV(31937, 16), 8)), UFXP(BV(44513, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31952, 16), 8), UFXP(BV(24274, 16), 8)), UFXP(BV(15042, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31889, 16), 8), SFXP(SBV(23537, 16), 8)), SFXP(SBV(-10110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48492, 16), 8), UFXP(BV(22833, 16), 8)), UFXP(BV(65229, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30194, 16), 8), SFXP(SBV(-19997, 16), 8)), SFXP(SBV(744, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45357, 16), 8), UFXP(BV(1129, 16), 8)), UFXP(BV(46486, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5515, 16), 8), UFXP(BV(51403, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23463, 16), 8), SFXP(SBV(18658, 16), 8)), SFXP(SBV(4805, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6364, 16), 8), UFXP(BV(50623, 16), 8)), UFXP(BV(21277, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10065, 16), 8), SFXP(SBV(-20549, 16), 8)), SFXP(SBV(-10484, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20908, 16), 8), UFXP(BV(873, 16), 8)), UFXP(BV(20035, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44797, 16), 8), UFXP(BV(47758, 16), 8)), UFXP(BV(62575, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25417, 16), 8), UFXP(BV(25121, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11845, 16), 8), UFXP(BV(37355, 16), 8)), UFXP(BV(24463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47877, 16), 8), UFXP(BV(12156, 16), 8)), UFXP(BV(60033, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(32499, 16), 8), SFXP(SBV(15701, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45952, 16), 8), UFXP(BV(37570, 16), 8)), UFXP(BV(8382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4816, 16), 8), UFXP(BV(3709, 16), 8)), UFXP(BV(1107, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3825, 16), 8), SFXP(SBV(-13089, 16), 8)), SFXP(SBV(-9264, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24588, 16), 8), SFXP(SBV(19094, 16), 8)), SFXP(SBV(1088, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1443, 16), 8), UFXP(BV(37266, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-24531, 16), 8), SFXP(SBV(27521, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3837, 16), 8), SFXP(SBV(-4417, 16), 8)), SFXP(SBV(8254, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57621, 16), 8), UFXP(BV(27473, 16), 8)), UFXP(BV(30148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56368, 16), 8), UFXP(BV(6418, 16), 8)), UFXP(BV(62786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41594, 16), 8), UFXP(BV(59950, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31795, 16), 8), UFXP(BV(52107, 16), 8)), UFXP(BV(45224, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51536, 16), 8), UFXP(BV(2024, 16), 8)), UFXP(BV(53560, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31471, 16), 8), SFXP(SBV(-21491, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11290, 16), 8), UFXP(BV(50951, 16), 8)), UFXP(BV(18794, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28462, 16), 8), SFXP(SBV(20317, 16), 8)), SFXP(SBV(30614, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59849, 16), 8), UFXP(BV(962, 16), 8)), UFXP(BV(58887, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60887, 16), 8), UFXP(BV(45002, 16), 8)), UFXP(BV(40353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49352, 16), 8), UFXP(BV(58527, 16), 8)), UFXP(BV(10716, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2710, 16), 8), UFXP(BV(64054, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46485, 16), 8), UFXP(BV(23305, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10149, 16), 8), UFXP(BV(4315, 16), 8)), UFXP(BV(39994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34181, 16), 8), UFXP(BV(48427, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25774, 16), 8), UFXP(BV(37521, 16), 8)), UFXP(BV(42051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17693, 16), 8), SFXP(SBV(15234, 16), 8)), SFXP(SBV(2459, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20398, 16), 8), SFXP(SBV(-27389, 16), 8)), SFXP(SBV(6991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14396, 16), 8), UFXP(BV(40504, 16), 8)), UFXP(BV(54900, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7484, 16), 8), SFXP(SBV(-19757, 16), 8)), SFXP(SBV(-12273, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9720, 16), 8), SFXP(SBV(17658, 16), 8)), SFXP(SBV(-7938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64812, 16), 8), UFXP(BV(62923, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59022, 16), 8), UFXP(BV(38769, 16), 8)), UFXP(BV(32255, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58208, 16), 8), UFXP(BV(58182, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20094, 16), 8), SFXP(SBV(2820, 16), 8)), SFXP(SBV(22914, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4795, 16), 8), SFXP(SBV(-5805, 16), 8)), SFXP(SBV(10600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14151, 16), 8), UFXP(BV(30248, 16), 8)), UFXP(BV(49439, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-25507, 16), 8), SFXP(SBV(-28147, 16), 8)), SFXP(SBV(-13573, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18469, 16), 8), SFXP(SBV(20273, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13679, 16), 8), UFXP(BV(43859, 16), 8)), UFXP(BV(57538, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8628, 16), 8), UFXP(BV(37230, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49866, 16), 8), UFXP(BV(59, 16), 8)), UFXP(BV(49807, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52952, 16), 8), UFXP(BV(40684, 16), 8)), UFXP(BV(12268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2927, 16), 8), UFXP(BV(269, 16), 8)), UFXP(BV(3075, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4862, 16), 8), SFXP(SBV(32106, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10455, 16), 8), UFXP(BV(31115, 16), 8)), UFXP(BV(44876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-13605, 16), 8), SFXP(SBV(-19662, 16), 8)), SFXP(SBV(-3649, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24176, 16), 8), SFXP(SBV(-24771, 16), 8)), SFXP(SBV(595, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27148, 16), 8), SFXP(SBV(12639, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20803, 16), 8), SFXP(SBV(-7035, 16), 8)), SFXP(SBV(13768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43113, 16), 8), UFXP(BV(50451, 16), 8)), UFXP(BV(42317, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5424, 16), 8), UFXP(BV(16037, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4528, 16), 8), UFXP(BV(27353, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4062, 16), 8), SFXP(SBV(26588, 16), 8)), SFXP(SBV(22526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9556, 16), 8), SFXP(SBV(-32106, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63337, 16), 8), UFXP(BV(39313, 16), 8)), UFXP(BV(27108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30961, 16), 8), SFXP(SBV(21151, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51290, 16), 8), UFXP(BV(28026, 16), 8)), UFXP(BV(23264, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48604, 16), 8), UFXP(BV(130, 16), 8)), UFXP(BV(24682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11189, 16), 8), UFXP(BV(29074, 16), 8)), UFXP(BV(40263, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17295, 16), 8), SFXP(SBV(7780, 16), 8)), SFXP(SBV(-25075, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(8906, 16), 8), SFXP(SBV(-1800, 16), 8)), SFXP(SBV(2915, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11905, 16), 8), SFXP(SBV(3473, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61501, 16), 8), UFXP(BV(7140, 16), 8)), UFXP(BV(11365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13794, 16), 8), SFXP(SBV(1097, 16), 8)), SFXP(SBV(-6426, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23240, 16), 8), SFXP(SBV(26645, 16), 8)), SFXP(SBV(-3405, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11857, 16), 8), SFXP(SBV(28537, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7743, 16), 8), SFXP(SBV(-55, 16), 8)), SFXP(SBV(-1663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58032, 16), 8), UFXP(BV(21133, 16), 8)), UFXP(BV(13629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13458, 16), 8), UFXP(BV(4197, 16), 8)), UFXP(BV(9261, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44825, 16), 8), UFXP(BV(10463, 16), 8)), UFXP(BV(34362, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21075, 16), 8), SFXP(SBV(-25403, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8766, 16), 8), UFXP(BV(49468, 16), 8)), UFXP(BV(24834, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4684, 16), 8), SFXP(SBV(5070, 16), 8)), SFXP(SBV(9754, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26321, 16), 8), SFXP(SBV(4511, 16), 8)), SFXP(SBV(-21810, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31419, 16), 8), UFXP(BV(5412, 16), 8)), UFXP(BV(36831, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17074, 16), 8), UFXP(BV(31565, 16), 8)), UFXP(BV(8086, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42118, 16), 8), UFXP(BV(28973, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24475, 16), 8), SFXP(SBV(-31469, 16), 8)), SFXP(SBV(-6994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23594, 16), 8), UFXP(BV(58381, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32706, 16), 8), SFXP(SBV(24363, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(488, 16), 8), UFXP(BV(34415, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26762, 16), 8), UFXP(BV(59247, 16), 8)), UFXP(BV(33051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12940, 16), 8), SFXP(SBV(17937, 16), 8)), SFXP(SBV(-4997, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14652, 16), 8), SFXP(SBV(32258, 16), 8)), SFXP(SBV(-17606, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29996, 16), 8), SFXP(SBV(4470, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22450, 16), 8), SFXP(SBV(14081, 16), 8)), SFXP(SBV(-8369, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22174, 16), 8), SFXP(SBV(-20193, 16), 8)), SFXP(SBV(-1981, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2650, 16), 8), SFXP(SBV(-29358, 16), 8)), SFXP(SBV(23779, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15164, 16), 8), UFXP(BV(30490, 16), 8)), UFXP(BV(45654, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18006, 16), 8), SFXP(SBV(28810, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21378, 16), 8), UFXP(BV(10204, 16), 8)), UFXP(BV(31582, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53639, 16), 8), UFXP(BV(2062, 16), 8)), UFXP(BV(55701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35112, 16), 8), UFXP(BV(61801, 16), 8)), UFXP(BV(22249, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24162, 16), 8), SFXP(SBV(30377, 16), 8)), SFXP(SBV(10997, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4944, 16), 8), UFXP(BV(39975, 16), 8)), UFXP(BV(44919, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57599, 16), 8), UFXP(BV(31702, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3545, 16), 8), SFXP(SBV(9046, 16), 8)), SFXP(SBV(-12591, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11265, 16), 8), UFXP(BV(3825, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21482, 16), 8), UFXP(BV(52894, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17818, 16), 8), SFXP(SBV(3700, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27132, 16), 8), SFXP(SBV(7544, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14320, 16), 8), UFXP(BV(13736, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18555, 16), 8), SFXP(SBV(20728, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2615, 16), 8), UFXP(BV(13109, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30840, 16), 8), SFXP(SBV(-4343, 16), 8)), SFXP(SBV(-1092, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34954, 16), 8), UFXP(BV(37052, 16), 8)), UFXP(BV(12773, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54798, 16), 8), UFXP(BV(35931, 16), 8)), UFXP(BV(23486, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4902, 16), 8), SFXP(SBV(-2198, 16), 8)), SFXP(SBV(2704, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24531, 16), 8), SFXP(SBV(-28489, 16), 8)), SFXP(SBV(-3958, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6797, 16), 8), UFXP(BV(19429, 16), 8)), UFXP(BV(52904, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6949, 16), 8), UFXP(BV(38791, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31926, 16), 8), SFXP(SBV(27767, 16), 8)), SFXP(SBV(-4159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(4905, 16), 8), SFXP(SBV(-15011, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51156, 16), 8), UFXP(BV(61190, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40209, 16), 8), UFXP(BV(33651, 16), 8)), UFXP(BV(6558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32483, 16), 8), SFXP(SBV(11636, 16), 8)), SFXP(SBV(-21417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24627, 16), 8), UFXP(BV(32612, 16), 8)), UFXP(BV(57239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4204, 16), 8), SFXP(SBV(32680, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-5937, 16), 8), SFXP(SBV(-3255, 16), 8)), SFXP(SBV(9953, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62453, 16), 8), UFXP(BV(51578, 16), 8)), UFXP(BV(65439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57558, 16), 8), UFXP(BV(54655, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20395, 16), 8), SFXP(SBV(6193, 16), 8)), SFXP(SBV(14202, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38515, 16), 8), UFXP(BV(28603, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42858, 16), 8), UFXP(BV(49275, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6322, 16), 8), SFXP(SBV(7951, 16), 8)), SFXP(SBV(1629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22362, 16), 8), UFXP(BV(49681, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4079, 16), 8), UFXP(BV(18801, 16), 8)), UFXP(BV(50814, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38893, 16), 8), UFXP(BV(48227, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2908, 16), 8), SFXP(SBV(-13152, 16), 8)), SFXP(SBV(10244, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50071, 16), 8), UFXP(BV(62704, 16), 8)), UFXP(BV(47239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16197, 16), 8), SFXP(SBV(22276, 16), 8)), SFXP(SBV(-6079, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1144, 16), 8), SFXP(SBV(11753, 16), 8)), SFXP(SBV(12897, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7541, 16), 8), SFXP(SBV(-10163, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4297, 16), 8), UFXP(BV(11116, 16), 8)), UFXP(BV(55511, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45625, 16), 8), UFXP(BV(21161, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29267, 16), 8), SFXP(SBV(21095, 16), 8)), SFXP(SBV(15174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40873, 16), 8), UFXP(BV(34833, 16), 8)), UFXP(BV(6040, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-337, 16), 8), SFXP(SBV(-30885, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22884, 16), 8), SFXP(SBV(-19209, 16), 8)), SFXP(SBV(-23443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31520, 16), 8), SFXP(SBV(-20573, 16), 8)), SFXP(SBV(13443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7902, 16), 8), SFXP(SBV(28117, 16), 8)), SFXP(SBV(-20215, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13373, 16), 8), SFXP(SBV(11557, 16), 8)), SFXP(SBV(-13893, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-288, 16), 8), SFXP(SBV(16352, 16), 8)), SFXP(SBV(-16640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30801, 16), 8), SFXP(SBV(5133, 16), 8)), SFXP(SBV(27760, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14343, 16), 8), UFXP(BV(48926, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24428, 16), 8), SFXP(SBV(-18503, 16), 8)), SFXP(SBV(3881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6428, 16), 8), SFXP(SBV(-29572, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20980, 16), 8), SFXP(SBV(3933, 16), 8)), SFXP(SBV(24913, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54570, 16), 8), UFXP(BV(57268, 16), 8)), UFXP(BV(62838, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51539, 16), 8), UFXP(BV(2553, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23393, 16), 8), SFXP(SBV(-13882, 16), 8)), SFXP(SBV(28261, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2180, 16), 8), UFXP(BV(31679, 16), 8)), UFXP(BV(33859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6765, 16), 8), SFXP(SBV(-27479, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61378, 16), 8), UFXP(BV(21005, 16), 8)), UFXP(BV(40373, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28274, 16), 8), SFXP(SBV(-5194, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31040, 16), 8), SFXP(SBV(26750, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7289, 16), 8), UFXP(BV(11182, 16), 8)), UFXP(BV(61643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22568, 16), 8), SFXP(SBV(-6426, 16), 8)), SFXP(SBV(-16142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43883, 16), 8), UFXP(BV(34614, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23975, 16), 8), SFXP(SBV(6774, 16), 8)), SFXP(SBV(30749, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30938, 16), 8), SFXP(SBV(-12664, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21834, 16), 8), SFXP(SBV(-27473, 16), 8)), SFXP(SBV(-16150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48033, 16), 8), UFXP(BV(4216, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18079, 16), 8), SFXP(SBV(-27198, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30328, 16), 8), SFXP(SBV(-24238, 16), 8)), SFXP(SBV(6090, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(591, 16), 8), SFXP(SBV(-7737, 16), 8)), SFXP(SBV(-7146, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55014, 16), 8), UFXP(BV(46058, 16), 8)), UFXP(BV(8956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27267, 16), 8), SFXP(SBV(14060, 16), 8)), SFXP(SBV(-13207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(25075, 16), 8), SFXP(SBV(10940, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33415, 16), 8), UFXP(BV(62344, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24032, 16), 8), SFXP(SBV(2708, 16), 8)), SFXP(SBV(7931, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-424, 16), 8), SFXP(SBV(-26135, 16), 8)), SFXP(SBV(-26559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12169, 16), 8), SFXP(SBV(-11306, 16), 8)), SFXP(SBV(13144, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61951, 16), 8), UFXP(BV(48149, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-909, 16), 8), SFXP(SBV(-8522, 16), 8)), SFXP(SBV(7613, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8747, 16), 8), SFXP(SBV(14962, 16), 8)), SFXP(SBV(23709, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46328, 16), 8), UFXP(BV(60519, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57637, 16), 8), UFXP(BV(60019, 16), 8)), UFXP(BV(12534, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9126, 16), 8), SFXP(SBV(17451, 16), 8)), SFXP(SBV(-8325, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23491, 16), 8), SFXP(SBV(23, 16), 8)), SFXP(SBV(23468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53390, 16), 8), UFXP(BV(46595, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33719, 16), 8), UFXP(BV(46143, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53155, 16), 8), UFXP(BV(24367, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3674, 16), 8), UFXP(BV(9622, 16), 8)), UFXP(BV(13296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13909, 16), 8), UFXP(BV(41855, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19680, 16), 8), SFXP(SBV(-15991, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11438, 16), 8), UFXP(BV(13712, 16), 8)), UFXP(BV(25150, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25338, 16), 8), SFXP(SBV(-24007, 16), 8)), SFXP(SBV(-1331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64988, 16), 8), UFXP(BV(48850, 16), 8)), UFXP(BV(16138, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59357, 16), 8), UFXP(BV(7616, 16), 8)), UFXP(BV(51741, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9176, 16), 8), SFXP(SBV(-2522, 16), 8)), SFXP(SBV(24861, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6027, 16), 8), SFXP(SBV(5839, 16), 8)), SFXP(SBV(-188, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2196, 16), 8), SFXP(SBV(-12511, 16), 8)), SFXP(SBV(-10315, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21750, 16), 8), SFXP(SBV(-560, 16), 8)), SFXP(SBV(-22310, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21624, 16), 8), SFXP(SBV(11865, 16), 8)), SFXP(SBV(32047, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11214, 16), 8), SFXP(SBV(14513, 16), 8)), SFXP(SBV(3299, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21915, 16), 8), UFXP(BV(13384, 16), 8)), UFXP(BV(35299, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-12195, 16), 8), SFXP(SBV(-5003, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5051, 16), 8), SFXP(SBV(29313, 16), 8)), SFXP(SBV(-11464, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32683, 16), 8), SFXP(SBV(-25194, 16), 8)), SFXP(SBV(-7659, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21489, 16), 8), SFXP(SBV(-27126, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62824, 16), 8), UFXP(BV(29792, 16), 8)), UFXP(BV(33032, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9125, 16), 8), UFXP(BV(45935, 16), 8)), UFXP(BV(55060, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29176, 16), 8), SFXP(SBV(32502, 16), 8)), SFXP(SBV(3326, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5573, 16), 8), SFXP(SBV(14962, 16), 8)), SFXP(SBV(-9389, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7486, 16), 8), SFXP(SBV(-1164, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13765, 16), 8), SFXP(SBV(13113, 16), 8)), SFXP(SBV(26878, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7929, 16), 8), UFXP(BV(12216, 16), 8)), UFXP(BV(20145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56137, 16), 8), UFXP(BV(39587, 16), 8)), UFXP(BV(16550, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36599, 16), 8), UFXP(BV(23761, 16), 8)), UFXP(BV(60360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51925, 16), 8), UFXP(BV(30281, 16), 8)), UFXP(BV(21644, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33755, 16), 8), UFXP(BV(60695, 16), 8)), UFXP(BV(28914, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12341, 16), 8), UFXP(BV(60256, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22455, 16), 8), UFXP(BV(44064, 16), 8)), UFXP(BV(43927, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6560, 16), 8), UFXP(BV(39190, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1015, 16), 8), UFXP(BV(40604, 16), 8)), UFXP(BV(41619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2547, 16), 8), SFXP(SBV(28248, 16), 8)), SFXP(SBV(30795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25082, 16), 8), UFXP(BV(46667, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47916, 16), 8), UFXP(BV(27134, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6556, 16), 8), SFXP(SBV(5784, 16), 8)), SFXP(SBV(772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29276, 16), 8), SFXP(SBV(20633, 16), 8)), SFXP(SBV(281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16180, 16), 8), SFXP(SBV(20661, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5654, 16), 8), SFXP(SBV(-5360, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22099, 16), 8), SFXP(SBV(-264, 16), 8)), SFXP(SBV(22363, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52386, 16), 8), UFXP(BV(23373, 16), 8)), UFXP(BV(10223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21412, 16), 8), UFXP(BV(41242, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(55189, 16), 8), UFXP(BV(11650, 16), 8)), UFXP(BV(21163, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38358, 16), 8), UFXP(BV(36318, 16), 8)), UFXP(BV(2040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59877, 16), 8), UFXP(BV(61135, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25961, 16), 8), UFXP(BV(4152, 16), 8)), UFXP(BV(21809, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61124, 16), 8), UFXP(BV(32321, 16), 8)), UFXP(BV(49432, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20658, 16), 8), UFXP(BV(42570, 16), 8)), UFXP(BV(43624, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29599, 16), 8), UFXP(BV(12979, 16), 8)), UFXP(BV(16620, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6277, 16), 8), SFXP(SBV(-9626, 16), 8)), SFXP(SBV(15903, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13907, 16), 8), SFXP(SBV(-28841, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32023, 16), 8), UFXP(BV(53590, 16), 8)), UFXP(BV(20077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16180, 16), 8), SFXP(SBV(-6528, 16), 8)), SFXP(SBV(-19374, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24854, 16), 8), UFXP(BV(20268, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30191, 16), 8), UFXP(BV(55250, 16), 8)), UFXP(BV(40477, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30064, 16), 8), UFXP(BV(52767, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28544, 16), 8), SFXP(SBV(-242, 16), 8)), SFXP(SBV(-28302, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64661, 16), 8), UFXP(BV(13764, 16), 8)), UFXP(BV(50897, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31666, 16), 8), UFXP(BV(38143, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11386, 16), 8), SFXP(SBV(2185, 16), 8)), SFXP(SBV(-13571, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25675, 16), 8), UFXP(BV(37850, 16), 8)), UFXP(BV(63525, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42861, 16), 8), UFXP(BV(23868, 16), 8)), UFXP(BV(63959, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58642, 16), 8), UFXP(BV(6717, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32392, 16), 8), UFXP(BV(32345, 16), 8)), UFXP(BV(47, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37953, 16), 8), UFXP(BV(17021, 16), 8)), UFXP(BV(20932, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1983, 16), 8), SFXP(SBV(-27646, 16), 8)), SFXP(SBV(-29629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4027, 16), 8), UFXP(BV(35806, 16), 8)), UFXP(BV(39833, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5188, 16), 8), SFXP(SBV(-21619, 16), 8)), SFXP(SBV(-26807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16842, 16), 8), SFXP(SBV(-27644, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14487, 16), 8), SFXP(SBV(29832, 16), 8)), SFXP(SBV(-15747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37643, 16), 8), UFXP(BV(6478, 16), 8)), UFXP(BV(44121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1188, 16), 8), SFXP(SBV(-23587, 16), 8)), SFXP(SBV(-24775, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21090, 16), 8), SFXP(SBV(6724, 16), 8)), SFXP(SBV(-27814, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2451, 16), 8), UFXP(BV(49727, 16), 8)), UFXP(BV(52178, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(302, 16), 8), UFXP(BV(38791, 16), 8)), UFXP(BV(39093, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37741, 16), 8), UFXP(BV(29368, 16), 8)), UFXP(BV(8373, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20737, 16), 8), SFXP(SBV(12555, 16), 8)), SFXP(SBV(32244, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11484, 16), 8), UFXP(BV(42827, 16), 8)), UFXP(BV(54311, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15045, 16), 8), SFXP(SBV(-2575, 16), 8)), SFXP(SBV(12470, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4177, 16), 8), SFXP(SBV(-16084, 16), 8)), SFXP(SBV(-11907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32308, 16), 8), UFXP(BV(36820, 16), 8)), UFXP(BV(59280, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9777, 16), 8), SFXP(SBV(10076, 16), 8)), SFXP(SBV(-299, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3701, 16), 8), SFXP(SBV(27158, 16), 8)), SFXP(SBV(-30859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37445, 16), 8), UFXP(BV(65444, 16), 8)), UFXP(BV(37353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10426, 16), 8), UFXP(BV(24231, 16), 8)), UFXP(BV(34657, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6315, 16), 8), SFXP(SBV(-19848, 16), 8)), SFXP(SBV(13533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48017, 16), 8), UFXP(BV(62120, 16), 8)), UFXP(BV(51754, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28432, 16), 8), SFXP(SBV(14710, 16), 8)), SFXP(SBV(-22394, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10384, 16), 8), UFXP(BV(63932, 16), 8)), UFXP(BV(8780, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10897, 16), 8), SFXP(SBV(-19899, 16), 8)), SFXP(SBV(-30796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13313, 16), 8), SFXP(SBV(2564, 16), 8)), SFXP(SBV(-10749, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9476, 16), 8), SFXP(SBV(-30902, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43566, 16), 8), UFXP(BV(38706, 16), 8)), UFXP(BV(16736, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35306, 16), 8), UFXP(BV(29818, 16), 8)), UFXP(BV(49089, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19143, 16), 8), SFXP(SBV(-12568, 16), 8)), SFXP(SBV(-6575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7386, 16), 8), SFXP(SBV(20341, 16), 8)), SFXP(SBV(-12955, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64078, 16), 8), UFXP(BV(771, 16), 8)), UFXP(BV(64849, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20254, 16), 8), UFXP(BV(25998, 16), 8)), UFXP(BV(46252, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54754, 16), 8), UFXP(BV(447, 16), 8)), UFXP(BV(55201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29216, 16), 8), SFXP(SBV(-20954, 16), 8)), SFXP(SBV(-8262, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(60122, 16), 8), UFXP(BV(18713, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30361, 16), 8), SFXP(SBV(21525, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3237, 16), 8), SFXP(SBV(15472, 16), 8)), SFXP(SBV(-18709, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9546, 16), 8), SFXP(SBV(-14749, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4146, 16), 8), UFXP(BV(54299, 16), 8)), UFXP(BV(15383, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17886, 16), 8), UFXP(BV(61459, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23120, 16), 8), UFXP(BV(14758, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9924, 16), 8), UFXP(BV(41262, 16), 8)), UFXP(BV(26683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-32086, 16), 8), SFXP(SBV(7924, 16), 8)), SFXP(SBV(-10121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3163, 16), 8), SFXP(SBV(3771, 16), 8)), SFXP(SBV(-6934, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(64725, 16), 8), UFXP(BV(8809, 16), 8)), UFXP(BV(64510, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(65019, 16), 8), UFXP(BV(17961, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61788, 16), 8), UFXP(BV(61567, 16), 8)), UFXP(BV(48637, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4432, 16), 8), SFXP(SBV(2955, 16), 8)), SFXP(SBV(-14378, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5052, 16), 8), SFXP(SBV(-29854, 16), 8)), SFXP(SBV(24802, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46368, 16), 8), UFXP(BV(1851, 16), 8)), UFXP(BV(48219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44213, 16), 8), UFXP(BV(18548, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50107, 16), 8), UFXP(BV(18542, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18984, 16), 8), SFXP(SBV(-9990, 16), 8)), SFXP(SBV(8994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38205, 16), 8), UFXP(BV(21645, 16), 8)), UFXP(BV(16560, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60158, 16), 8), UFXP(BV(59564, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1951, 16), 8), SFXP(SBV(20409, 16), 8)), SFXP(SBV(18458, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(2007, 16), 8), SFXP(SBV(9070, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29757, 16), 8), SFXP(SBV(21677, 16), 8)), SFXP(SBV(8080, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49790, 16), 8), UFXP(BV(59722, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5797, 16), 8), UFXP(BV(52322, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42840, 16), 8), UFXP(BV(41825, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31473, 16), 8), SFXP(SBV(18849, 16), 8)), SFXP(SBV(-12624, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18621, 16), 8), SFXP(SBV(-8202, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27762, 16), 8), SFXP(SBV(-8626, 16), 8)), SFXP(SBV(-19136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60337, 16), 8), UFXP(BV(14899, 16), 8)), UFXP(BV(9700, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51198, 16), 8), UFXP(BV(16589, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29321, 16), 8), UFXP(BV(64829, 16), 8)), UFXP(BV(30028, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5873, 16), 8), UFXP(BV(61707, 16), 8)), UFXP(BV(2044, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(521, 16), 8), UFXP(BV(50288, 16), 8)), UFXP(BV(50809, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18777, 16), 8), UFXP(BV(18728, 16), 8)), UFXP(BV(62935, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27556, 16), 8), SFXP(SBV(-14473, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5941, 16), 8), SFXP(SBV(-10707, 16), 8)), SFXP(SBV(4766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61883, 16), 8), UFXP(BV(1738, 16), 8)), UFXP(BV(63621, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1407, 16), 8), SFXP(SBV(-3106, 16), 8)), SFXP(SBV(-1699, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39673, 16), 8), UFXP(BV(41425, 16), 8)), UFXP(BV(63784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26725, 16), 8), UFXP(BV(25608, 16), 8)), UFXP(BV(51896, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54176, 16), 8), UFXP(BV(1274, 16), 8)), UFXP(BV(55450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13749, 16), 8), SFXP(SBV(981, 16), 8)), SFXP(SBV(-14730, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5552, 16), 8), UFXP(BV(39865, 16), 8)), UFXP(BV(45417, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23056, 16), 8), SFXP(SBV(-28865, 16), 8)), SFXP(SBV(21785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9437, 16), 8), SFXP(SBV(9162, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8512, 16), 8), SFXP(SBV(7930, 16), 8)), SFXP(SBV(-16442, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14524, 16), 8), SFXP(SBV(-5563, 16), 8)), SFXP(SBV(8961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51481, 16), 8), UFXP(BV(34214, 16), 8)), UFXP(BV(20159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25537, 16), 8), SFXP(SBV(5776, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41516, 16), 8), UFXP(BV(16531, 16), 8)), UFXP(BV(24985, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43273, 16), 8), UFXP(BV(17738, 16), 8)), UFXP(BV(25535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29270, 16), 8), SFXP(SBV(14315, 16), 8)), SFXP(SBV(-21951, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42158, 16), 8), UFXP(BV(60932, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25569, 16), 8), UFXP(BV(52058, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13700, 16), 8), SFXP(SBV(-31474, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65466, 16), 8), UFXP(BV(44633, 16), 8)), UFXP(BV(20833, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29126, 16), 8), SFXP(SBV(-4983, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26497, 16), 8), SFXP(SBV(-13590, 16), 8)), SFXP(SBV(25449, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3510, 16), 8), SFXP(SBV(31798, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16966, 16), 8), SFXP(SBV(-24799, 16), 8)), SFXP(SBV(-5114, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33406, 16), 8), UFXP(BV(10123, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21143, 16), 8), SFXP(SBV(-30949, 16), 8)), SFXP(SBV(9806, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15965, 16), 8), SFXP(SBV(11600, 16), 8)), SFXP(SBV(-27565, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50484, 16), 8), UFXP(BV(19681, 16), 8)), UFXP(BV(30803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30419, 16), 8), SFXP(SBV(-15912, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21434, 16), 8), UFXP(BV(22527, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32204, 16), 8), SFXP(SBV(-15751, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31852, 16), 8), SFXP(SBV(26043, 16), 8)), SFXP(SBV(5809, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24927, 16), 8), SFXP(SBV(22027, 16), 8)), SFXP(SBV(18582, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1570, 16), 8), SFXP(SBV(20035, 16), 8)), SFXP(SBV(8202, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34680, 16), 8), UFXP(BV(11230, 16), 8)), UFXP(BV(23450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53745, 16), 8), UFXP(BV(18634, 16), 8)), UFXP(BV(35111, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4076, 16), 8), SFXP(SBV(-3602, 16), 8)), SFXP(SBV(7678, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20362, 16), 8), SFXP(SBV(2230, 16), 8)), SFXP(SBV(-18132, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3369, 16), 8), UFXP(BV(58063, 16), 8)), UFXP(BV(61432, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33905, 16), 8), UFXP(BV(25293, 16), 8)), UFXP(BV(8612, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30722, 16), 8), UFXP(BV(40693, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47348, 16), 8), UFXP(BV(6083, 16), 8)), UFXP(BV(41265, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59547, 16), 8), UFXP(BV(6506, 16), 8)), UFXP(BV(6003, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45640, 16), 8), UFXP(BV(28173, 16), 8)), UFXP(BV(41981, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27830, 16), 8), SFXP(SBV(4184, 16), 8)), SFXP(SBV(23646, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41450, 16), 8), UFXP(BV(13623, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11900, 16), 8), SFXP(SBV(4703, 16), 8)), SFXP(SBV(16603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24790, 16), 8), SFXP(SBV(8316, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16704, 16), 8), UFXP(BV(2106, 16), 8)), UFXP(BV(18810, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10718, 16), 8), UFXP(BV(20003, 16), 8)), UFXP(BV(56251, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6909, 16), 8), SFXP(SBV(14604, 16), 8)), SFXP(SBV(-21513, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20808, 16), 8), UFXP(BV(47991, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30202, 16), 8), SFXP(SBV(30621, 16), 8)), SFXP(SBV(-419, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4670, 16), 8), SFXP(SBV(5807, 16), 8)), SFXP(SBV(-1137, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18648, 16), 8), SFXP(SBV(-20911, 16), 8)), SFXP(SBV(-2263, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26136, 16), 8), SFXP(SBV(-32474, 16), 8)), SFXP(SBV(6926, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13330, 16), 8), SFXP(SBV(-18387, 16), 8)), SFXP(SBV(5057, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45058, 16), 8), UFXP(BV(20500, 16), 8)), UFXP(BV(24558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4966, 16), 8), SFXP(SBV(-13869, 16), 8)), SFXP(SBV(18835, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7461, 16), 8), SFXP(SBV(-4602, 16), 8)), SFXP(SBV(-2859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14961, 16), 8), SFXP(SBV(-14032, 16), 8)), SFXP(SBV(-929, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16473, 16), 8), SFXP(SBV(-15051, 16), 8)), SFXP(SBV(1422, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32734, 16), 8), SFXP(SBV(19998, 16), 8)), SFXP(SBV(-12804, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6690, 16), 8), UFXP(BV(63657, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54008, 16), 8), UFXP(BV(51691, 16), 8)), UFXP(BV(2317, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4721, 16), 8), UFXP(BV(57366, 16), 8)), UFXP(BV(9333, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18815, 16), 8), SFXP(SBV(-23336, 16), 8)), SFXP(SBV(11169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26263, 16), 8), UFXP(BV(3230, 16), 8)), UFXP(BV(29493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24820, 16), 8), SFXP(SBV(19193, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6608, 16), 8), UFXP(BV(58802, 16), 8)), UFXP(BV(65410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26499, 16), 8), SFXP(SBV(31643, 16), 8)), SFXP(SBV(-5144, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47262, 16), 8), UFXP(BV(11806, 16), 8)), UFXP(BV(59068, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11430, 16), 8), SFXP(SBV(-1207, 16), 8)), SFXP(SBV(-12637, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5953, 16), 8), UFXP(BV(24435, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31288, 16), 8), SFXP(SBV(5252, 16), 8)), SFXP(SBV(-26036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47758, 16), 8), UFXP(BV(12760, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29890, 16), 8), UFXP(BV(34180, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25447, 16), 8), SFXP(SBV(-2581, 16), 8)), SFXP(SBV(-28028, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32722, 16), 8), UFXP(BV(47731, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30433, 16), 8), SFXP(SBV(5495, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47769, 16), 8), UFXP(BV(53299, 16), 8)), UFXP(BV(35532, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38223, 16), 8), UFXP(BV(43218, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12489, 16), 8), UFXP(BV(23601, 16), 8)), UFXP(BV(37267, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32340, 16), 8), SFXP(SBV(151, 16), 8)), SFXP(SBV(32491, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31336, 16), 8), SFXP(SBV(17405, 16), 8)), SFXP(SBV(-16795, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24698, 16), 8), SFXP(SBV(29455, 16), 8)), SFXP(SBV(23670, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18405, 16), 8), UFXP(BV(15499, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11058, 16), 8), SFXP(SBV(-24331, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4738, 16), 8), SFXP(SBV(29603, 16), 8)), SFXP(SBV(23598, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17145, 16), 8), SFXP(SBV(-23588, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21323, 16), 8), UFXP(BV(22871, 16), 8)), UFXP(BV(44194, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11198, 16), 8), SFXP(SBV(26967, 16), 8)), SFXP(SBV(-27371, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51143, 16), 8), UFXP(BV(62997, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4659, 16), 8), SFXP(SBV(-28315, 16), 8)), SFXP(SBV(23656, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14887, 16), 8), SFXP(SBV(1828, 16), 8)), SFXP(SBV(-16715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-330, 16), 8), SFXP(SBV(-7170, 16), 8)), SFXP(SBV(6840, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27380, 16), 8), SFXP(SBV(27575, 16), 8)), SFXP(SBV(195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21628, 16), 8), SFXP(SBV(26913, 16), 8)), SFXP(SBV(16995, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3843, 16), 8), UFXP(BV(17984, 16), 8)), UFXP(BV(7827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15959, 16), 8), UFXP(BV(21558, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35954, 16), 8), UFXP(BV(52273, 16), 8)), UFXP(BV(1465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(32474, 16), 8), SFXP(SBV(6934, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15987, 16), 8), UFXP(BV(60296, 16), 8)), UFXP(BV(10747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41861, 16), 8), UFXP(BV(60361, 16), 8)), UFXP(BV(47036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11610, 16), 8), UFXP(BV(19731, 16), 8)), UFXP(BV(42863, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16483, 16), 8), SFXP(SBV(20351, 16), 8)), SFXP(SBV(-3868, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3920, 16), 8), SFXP(SBV(16201, 16), 8)), SFXP(SBV(12281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(11163, 16), 8), SFXP(SBV(9330, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22692, 16), 8), UFXP(BV(39655, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4775, 16), 8), UFXP(BV(62437, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29017, 16), 8), SFXP(SBV(-27803, 16), 8)), SFXP(SBV(-1214, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13671, 16), 8), SFXP(SBV(-18101, 16), 8)), SFXP(SBV(4430, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5838, 16), 8), SFXP(SBV(20908, 16), 8)), SFXP(SBV(-15070, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17944, 16), 8), SFXP(SBV(-2101, 16), 8)), SFXP(SBV(15843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18539, 16), 8), SFXP(SBV(-12461, 16), 8)), SFXP(SBV(6078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26022, 16), 8), SFXP(SBV(-28707, 16), 8)), SFXP(SBV(-2685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50651, 16), 8), UFXP(BV(415, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11411, 16), 8), SFXP(SBV(-15531, 16), 8)), SFXP(SBV(26942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11280, 16), 8), UFXP(BV(40964, 16), 8)), UFXP(BV(52244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27587, 16), 8), SFXP(SBV(17033, 16), 8)), SFXP(SBV(-20916, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39342, 16), 8), UFXP(BV(50326, 16), 8)), UFXP(BV(54552, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24224, 16), 8), UFXP(BV(42378, 16), 8)), UFXP(BV(47382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61710, 16), 8), UFXP(BV(45617, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21982, 16), 8), UFXP(BV(16246, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17016, 16), 8), SFXP(SBV(-10390, 16), 8)), SFXP(SBV(27406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6391, 16), 8), UFXP(BV(46410, 16), 8)), UFXP(BV(25517, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11354, 16), 8), UFXP(BV(13640, 16), 8)), UFXP(BV(24994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9832, 16), 8), UFXP(BV(53698, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30747, 16), 8), SFXP(SBV(-15185, 16), 8)), SFXP(SBV(-15562, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39228, 16), 8), UFXP(BV(30628, 16), 8)), UFXP(BV(4320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64173, 16), 8), UFXP(BV(35267, 16), 8)), UFXP(BV(28906, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4726, 16), 8), SFXP(SBV(2671, 16), 8)), SFXP(SBV(-2055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13759, 16), 8), SFXP(SBV(-4216, 16), 8)), SFXP(SBV(-17975, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25516, 16), 8), UFXP(BV(29872, 16), 8)), UFXP(BV(55388, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46011, 16), 8), UFXP(BV(18981, 16), 8)), UFXP(BV(27030, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4559, 16), 8), UFXP(BV(4069, 16), 8)), UFXP(BV(490, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24006, 16), 8), UFXP(BV(32972, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9067, 16), 8), SFXP(SBV(-22418, 16), 8)), SFXP(SBV(-31485, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31954, 16), 8), SFXP(SBV(-27996, 16), 8)), SFXP(SBV(-3958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32587, 16), 8), SFXP(SBV(32234, 16), 8)), SFXP(SBV(-353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17437, 16), 8), UFXP(BV(53061, 16), 8)), UFXP(BV(29912, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27682, 16), 8), UFXP(BV(35597, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41287, 16), 8), UFXP(BV(64471, 16), 8)), UFXP(BV(40222, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17599, 16), 8), SFXP(SBV(9632, 16), 8)), SFXP(SBV(27231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5524, 16), 8), SFXP(SBV(-31713, 16), 8)), SFXP(SBV(28299, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25216, 16), 8), SFXP(SBV(23384, 16), 8)), SFXP(SBV(-1832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51957, 16), 8), UFXP(BV(6571, 16), 8)), UFXP(BV(22910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56462, 16), 8), UFXP(BV(25548, 16), 8)), UFXP(BV(30914, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56300, 16), 8), UFXP(BV(32101, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7240, 16), 8), UFXP(BV(8464, 16), 8)), UFXP(BV(15704, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14932, 16), 8), SFXP(SBV(28585, 16), 8)), SFXP(SBV(-13653, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2280, 16), 8), SFXP(SBV(-10642, 16), 8)), SFXP(SBV(-12922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21913, 16), 8), SFXP(SBV(29055, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10085, 16), 8), SFXP(SBV(17959, 16), 8)), SFXP(SBV(-13409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3875, 16), 8), SFXP(SBV(-11442, 16), 8)), SFXP(SBV(-15317, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60991, 16), 8), UFXP(BV(41381, 16), 8)), UFXP(BV(19610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12984, 16), 8), UFXP(BV(59063, 16), 8)), UFXP(BV(6511, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2417, 16), 8), SFXP(SBV(21689, 16), 8)), SFXP(SBV(-8167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23842, 16), 8), SFXP(SBV(-31054, 16), 8)), SFXP(SBV(-7212, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21077, 16), 8), SFXP(SBV(13426, 16), 8)), SFXP(SBV(7651, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1035, 16), 8), UFXP(BV(61402, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62805, 16), 8), UFXP(BV(42045, 16), 8)), UFXP(BV(20760, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5871, 16), 8), UFXP(BV(61685, 16), 8)), UFXP(BV(38403, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23170, 16), 8), SFXP(SBV(10543, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15394, 16), 8), SFXP(SBV(24690, 16), 8)), SFXP(SBV(-9296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9851, 16), 8), SFXP(SBV(-2458, 16), 8)), SFXP(SBV(-12309, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7768, 16), 8), SFXP(SBV(-10500, 16), 8)), SFXP(SBV(-9070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63255, 16), 8), UFXP(BV(30847, 16), 8)), UFXP(BV(28566, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31310, 16), 8), SFXP(SBV(29494, 16), 8)), SFXP(SBV(2774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20416, 16), 8), UFXP(BV(58911, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16070, 16), 8), SFXP(SBV(23531, 16), 8)), SFXP(SBV(-7461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24353, 16), 8), UFXP(BV(1174, 16), 8)), UFXP(BV(25527, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11896, 16), 8), SFXP(SBV(-3588, 16), 8)), SFXP(SBV(-8308, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13540, 16), 8), UFXP(BV(30461, 16), 8)), UFXP(BV(38237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9721, 16), 8), SFXP(SBV(-19677, 16), 8)), SFXP(SBV(-9956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4987, 16), 8), SFXP(SBV(13819, 16), 8)), SFXP(SBV(-18806, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48959, 16), 8), UFXP(BV(23732, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22094, 16), 8), SFXP(SBV(12208, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5128, 16), 8), UFXP(BV(34254, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18641, 16), 8), UFXP(BV(17381, 16), 8)), UFXP(BV(20438, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6541, 16), 8), SFXP(SBV(15072, 16), 8)), SFXP(SBV(8531, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2456, 16), 8), SFXP(SBV(-4646, 16), 8)), SFXP(SBV(-7102, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41640, 16), 8), UFXP(BV(2192, 16), 8)), UFXP(BV(28862, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30592, 16), 8), SFXP(SBV(-9584, 16), 8)), SFXP(SBV(31176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6453, 16), 8), SFXP(SBV(5536, 16), 8)), SFXP(SBV(11989, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40298, 16), 8), UFXP(BV(18941, 16), 8)), UFXP(BV(59239, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41646, 16), 8), UFXP(BV(25101, 16), 8)), UFXP(BV(1211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13149, 16), 8), UFXP(BV(41800, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30573, 16), 8), SFXP(SBV(-1635, 16), 8)), SFXP(SBV(32208, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8701, 16), 8), UFXP(BV(29237, 16), 8)), UFXP(BV(37938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15768, 16), 8), SFXP(SBV(-8733, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2419, 16), 8), UFXP(BV(1482, 16), 8)), UFXP(BV(3901, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47169, 16), 8), UFXP(BV(29020, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(62053, 16), 8), UFXP(BV(1085, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8265, 16), 8), SFXP(SBV(22498, 16), 8)), SFXP(SBV(5456, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17855, 16), 8), SFXP(SBV(16101, 16), 8)), SFXP(SBV(1754, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13683, 16), 8), SFXP(SBV(8834, 16), 8)), SFXP(SBV(4849, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40877, 16), 8), UFXP(BV(51925, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22084, 16), 8), UFXP(BV(38144, 16), 8)), UFXP(BV(49476, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45516, 16), 8), UFXP(BV(9055, 16), 8)), UFXP(BV(37086, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(41317, 16), 8), UFXP(BV(20317, 16), 8)), UFXP(BV(2253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23164, 16), 8), UFXP(BV(58058, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21100, 16), 8), SFXP(SBV(-4766, 16), 8)), SFXP(SBV(394, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18367, 16), 8), SFXP(SBV(-32246, 16), 8)), SFXP(SBV(-13879, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34529, 16), 8), UFXP(BV(14083, 16), 8)), UFXP(BV(20446, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28678, 16), 8), SFXP(SBV(-14005, 16), 8)), SFXP(SBV(-3976, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2766, 16), 8), UFXP(BV(228, 16), 8)), UFXP(BV(2994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21137, 16), 8), UFXP(BV(22250, 16), 8)), UFXP(BV(43387, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26494, 16), 8), UFXP(BV(42100, 16), 8)), UFXP(BV(31645, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(638, 16), 8), UFXP(BV(35129, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23624, 16), 8), UFXP(BV(17084, 16), 8)), UFXP(BV(40708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16910, 16), 8), UFXP(BV(20547, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22520, 16), 8), UFXP(BV(2080, 16), 8)), UFXP(BV(20440, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36225, 16), 8), UFXP(BV(26715, 16), 8)), UFXP(BV(62940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47224, 16), 8), UFXP(BV(10460, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8763, 16), 8), SFXP(SBV(-23657, 16), 8)), SFXP(SBV(-14894, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8753, 16), 8), SFXP(SBV(4999, 16), 8)), SFXP(SBV(3754, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28721, 16), 8), SFXP(SBV(20576, 16), 8)), SFXP(SBV(8145, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24444, 16), 8), SFXP(SBV(4864, 16), 8)), SFXP(SBV(-29308, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27166, 16), 8), SFXP(SBV(507, 16), 8)), SFXP(SBV(-26659, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8683, 16), 8), UFXP(BV(11936, 16), 8)), UFXP(BV(20619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32666, 16), 8), SFXP(SBV(-26467, 16), 8)), SFXP(SBV(-6199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5599, 16), 8), SFXP(SBV(24079, 16), 8)), SFXP(SBV(-18480, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5261, 16), 8), UFXP(BV(32655, 16), 8)), UFXP(BV(15726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28929, 16), 8), SFXP(SBV(-5982, 16), 8)), SFXP(SBV(20629, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14079, 16), 8), SFXP(SBV(-21818, 16), 8)), SFXP(SBV(-7739, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20401, 16), 8), SFXP(SBV(-24212, 16), 8)), SFXP(SBV(3811, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57193, 16), 8), UFXP(BV(61385, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21267, 16), 8), SFXP(SBV(-20509, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61116, 16), 8), UFXP(BV(23988, 16), 8)), UFXP(BV(25128, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36073, 16), 8), UFXP(BV(14676, 16), 8)), UFXP(BV(21397, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-19398, 16), 8), SFXP(SBV(-11837, 16), 8)), SFXP(SBV(-20574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57644, 16), 8), UFXP(BV(41791, 16), 8)), UFXP(BV(33899, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13453, 16), 8), SFXP(SBV(20578, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19425, 16), 8), SFXP(SBV(4838, 16), 8)), SFXP(SBV(24263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23385, 16), 8), UFXP(BV(43004, 16), 8)), UFXP(BV(61690, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6442, 16), 8), SFXP(SBV(-10031, 16), 8)), SFXP(SBV(3589, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28578, 16), 8), UFXP(BV(34322, 16), 8)), UFXP(BV(59792, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14410, 16), 8), UFXP(BV(59129, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56506, 16), 8), UFXP(BV(55891, 16), 8)), UFXP(BV(15861, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14608, 16), 8), SFXP(SBV(-29031, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13524, 16), 8), SFXP(SBV(-30493, 16), 8)), SFXP(SBV(-21519, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-162, 16), 8), SFXP(SBV(-27792, 16), 8)), SFXP(SBV(17587, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25070, 16), 8), SFXP(SBV(-23559, 16), 8)), SFXP(SBV(-16907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56680, 16), 8), UFXP(BV(36132, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29927, 16), 8), UFXP(BV(35027, 16), 8)), UFXP(BV(31507, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11215, 16), 8), SFXP(SBV(-270, 16), 8)), SFXP(SBV(-10945, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8178, 16), 8), SFXP(SBV(16688, 16), 8)), SFXP(SBV(8510, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8944, 16), 8), UFXP(BV(47384, 16), 8)), UFXP(BV(17078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18728, 16), 8), SFXP(SBV(-13019, 16), 8)), SFXP(SBV(5709, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22356, 16), 8), SFXP(SBV(-4084, 16), 8)), SFXP(SBV(-26440, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17464, 16), 8), UFXP(BV(25633, 16), 8)), UFXP(BV(43097, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47312, 16), 8), UFXP(BV(2443, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34809, 16), 8), UFXP(BV(49830, 16), 8)), UFXP(BV(25309, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28239, 16), 8), SFXP(SBV(-17422, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32307, 16), 8), UFXP(BV(4145, 16), 8)), UFXP(BV(36452, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13194, 16), 8), SFXP(SBV(-11263, 16), 8)), SFXP(SBV(1931, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(20785, 16), 8), UFXP(BV(17606, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31560, 16), 8), SFXP(SBV(26544, 16), 8)), SFXP(SBV(7432, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8987, 16), 8), SFXP(SBV(-30314, 16), 8)), SFXP(SBV(21327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38959, 16), 8), UFXP(BV(54684, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49218, 16), 8), UFXP(BV(1393, 16), 8)), UFXP(BV(50611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60401, 16), 8), UFXP(BV(30409, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20880, 16), 8), SFXP(SBV(-20177, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10420, 16), 8), UFXP(BV(60328, 16), 8)), UFXP(BV(5212, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56421, 16), 8), UFXP(BV(36051, 16), 8)), UFXP(BV(15587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18279, 16), 8), UFXP(BV(32206, 16), 8)), UFXP(BV(50485, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22091, 16), 8), SFXP(SBV(3254, 16), 8)), SFXP(SBV(-25345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6946, 16), 8), UFXP(BV(8203, 16), 8)), UFXP(BV(15149, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16475, 16), 8), SFXP(SBV(-15192, 16), 8)), SFXP(SBV(-1283, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29307, 16), 8), SFXP(SBV(7158, 16), 8)), SFXP(SBV(-32516, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26562, 16), 8), SFXP(SBV(-4110, 16), 8)), SFXP(SBV(-22452, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(27702, 16), 8), SFXP(SBV(-20028, 16), 8)), SFXP(SBV(-4561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44645, 16), 8), UFXP(BV(59641, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25919, 16), 8), UFXP(BV(43707, 16), 8)), UFXP(BV(4090, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12114, 16), 8), SFXP(SBV(17469, 16), 8)), SFXP(SBV(-5355, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19782, 16), 8), UFXP(BV(61228, 16), 8)), UFXP(BV(24090, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36842, 16), 8), UFXP(BV(9042, 16), 8)), UFXP(BV(56087, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27323, 16), 8), SFXP(SBV(21558, 16), 8)), SFXP(SBV(-5765, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2875, 16), 8), SFXP(SBV(-26788, 16), 8)), SFXP(SBV(23913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(790, 16), 8), SFXP(SBV(28118, 16), 8)), SFXP(SBV(28908, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58547, 16), 8), UFXP(BV(6097, 16), 8)), UFXP(BV(64644, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40924, 16), 8), UFXP(BV(58194, 16), 8)), UFXP(BV(62280, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(41600, 16), 8), UFXP(BV(37062, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-657, 16), 8), SFXP(SBV(-26448, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21341, 16), 8), SFXP(SBV(31106, 16), 8)), SFXP(SBV(9765, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22458, 16), 8), SFXP(SBV(3475, 16), 8)), SFXP(SBV(-18983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2566, 16), 8), UFXP(BV(45642, 16), 8)), UFXP(BV(64274, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28665, 16), 8), SFXP(SBV(-27353, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53747, 16), 8), UFXP(BV(22729, 16), 8)), UFXP(BV(31018, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18992, 16), 8), UFXP(BV(36460, 16), 8)), UFXP(BV(48068, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34176, 16), 8), UFXP(BV(41769, 16), 8)), UFXP(BV(10409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24370, 16), 8), SFXP(SBV(1610, 16), 8)), SFXP(SBV(25980, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29180, 16), 8), UFXP(BV(38430, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14026, 16), 8), UFXP(BV(8823, 16), 8)), UFXP(BV(22849, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22907, 16), 8), SFXP(SBV(-21182, 16), 8)), SFXP(SBV(1725, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17373, 16), 8), SFXP(SBV(-10646, 16), 8)), SFXP(SBV(-6727, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27234, 16), 8), UFXP(BV(35456, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19636, 16), 8), SFXP(SBV(31725, 16), 8)), SFXP(SBV(12089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6263, 16), 8), UFXP(BV(51568, 16), 8)), UFXP(BV(57831, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15815, 16), 8), SFXP(SBV(-11946, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31137, 16), 8), SFXP(SBV(20506, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43045, 16), 8), UFXP(BV(42410, 16), 8)), UFXP(BV(635, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30624, 16), 8), SFXP(SBV(-17587, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32900, 16), 8), UFXP(BV(58207, 16), 8)), UFXP(BV(25571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7541, 16), 8), SFXP(SBV(13317, 16), 8)), SFXP(SBV(5776, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7389, 16), 8), UFXP(BV(47806, 16), 8)), UFXP(BV(55195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27482, 16), 8), SFXP(SBV(-465, 16), 8)), SFXP(SBV(27947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16360, 16), 8), SFXP(SBV(-18945, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36303, 16), 8), UFXP(BV(32722, 16), 8)), UFXP(BV(3581, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15362, 16), 8), SFXP(SBV(-24278, 16), 8)), SFXP(SBV(-8916, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12276, 16), 8), SFXP(SBV(13072, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18651, 16), 8), UFXP(BV(62532, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28535, 16), 8), UFXP(BV(12138, 16), 8)), UFXP(BV(16397, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18843, 16), 8), UFXP(BV(64956, 16), 8)), UFXP(BV(19423, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25827, 16), 8), SFXP(SBV(27871, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37204, 16), 8), UFXP(BV(61866, 16), 8)), UFXP(BV(12438, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8614, 16), 8), SFXP(SBV(-29774, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24292, 16), 8), UFXP(BV(55878, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26502, 16), 8), UFXP(BV(61312, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12903, 16), 8), UFXP(BV(48162, 16), 8)), UFXP(BV(30277, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16767, 16), 8), SFXP(SBV(14816, 16), 8)), SFXP(SBV(-12649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63196, 16), 8), UFXP(BV(47769, 16), 8)), UFXP(BV(61282, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36521, 16), 8), UFXP(BV(15015, 16), 8)), UFXP(BV(21506, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14172, 16), 8), UFXP(BV(33971, 16), 8)), UFXP(BV(48143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6916, 16), 8), SFXP(SBV(-24814, 16), 8)), SFXP(SBV(31730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24640, 16), 8), SFXP(SBV(325, 16), 8)), SFXP(SBV(-24315, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63396, 16), 8), UFXP(BV(6131, 16), 8)), UFXP(BV(57265, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25865, 16), 8), SFXP(SBV(-1321, 16), 8)), SFXP(SBV(2395, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31123, 16), 8), SFXP(SBV(-15702, 16), 8)), SFXP(SBV(15421, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10986, 16), 8), UFXP(BV(54060, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7320, 16), 8), UFXP(BV(20103, 16), 8)), UFXP(BV(50533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53754, 16), 8), UFXP(BV(29988, 16), 8)), UFXP(BV(23766, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23655, 16), 8), SFXP(SBV(-1245, 16), 8)), SFXP(SBV(-24900, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57497, 16), 8), UFXP(BV(24441, 16), 8)), UFXP(BV(49903, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21683, 16), 8), SFXP(SBV(-1909, 16), 8)), SFXP(SBV(-23592, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50229, 16), 8), UFXP(BV(58625, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9759, 16), 8), SFXP(SBV(25832, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15824, 16), 8), UFXP(BV(37107, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22397, 16), 8), SFXP(SBV(-32519, 16), 8)), SFXP(SBV(26983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61799, 16), 8), UFXP(BV(28892, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18041, 16), 8), SFXP(SBV(16866, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62234, 16), 8), UFXP(BV(60761, 16), 8)), UFXP(BV(1473, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1593, 16), 8), SFXP(SBV(-24929, 16), 8)), SFXP(SBV(-26522, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63981, 16), 8), UFXP(BV(56140, 16), 8)), UFXP(BV(6130, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15204, 16), 8), SFXP(SBV(-14431, 16), 8)), SFXP(SBV(-29635, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57572, 16), 8), UFXP(BV(50399, 16), 8)), UFXP(BV(62070, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15874, 16), 8), SFXP(SBV(-22266, 16), 8)), SFXP(SBV(4409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25233, 16), 8), SFXP(SBV(3267, 16), 8)), SFXP(SBV(28500, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7638, 16), 8), SFXP(SBV(-12006, 16), 8)), SFXP(SBV(-4368, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14132, 16), 8), SFXP(SBV(-8612, 16), 8)), SFXP(SBV(-5520, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46310, 16), 8), UFXP(BV(35271, 16), 8)), UFXP(BV(16045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11335, 16), 8), UFXP(BV(28252, 16), 8)), UFXP(BV(48619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45676, 16), 8), UFXP(BV(24409, 16), 8)), UFXP(BV(4549, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24200, 16), 8), UFXP(BV(34257, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10778, 16), 8), UFXP(BV(60322, 16), 8)), UFXP(BV(5564, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1802, 16), 8), UFXP(BV(31215, 16), 8)), UFXP(BV(33017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31973, 16), 8), SFXP(SBV(-9436, 16), 8)), SFXP(SBV(22537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11109, 16), 8), UFXP(BV(2530, 16), 8)), UFXP(BV(8579, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3367, 16), 8), UFXP(BV(31521, 16), 8)), UFXP(BV(34888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60949, 16), 8), UFXP(BV(26600, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53217, 16), 8), UFXP(BV(28058, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24288, 16), 8), SFXP(SBV(-6724, 16), 8)), SFXP(SBV(-31012, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11839, 16), 8), UFXP(BV(43888, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57768, 16), 8), UFXP(BV(61446, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26924, 16), 8), SFXP(SBV(22361, 16), 8)), SFXP(SBV(4563, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51166, 16), 8), UFXP(BV(2707, 16), 8)), UFXP(BV(48459, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15340, 16), 8), SFXP(SBV(1032, 16), 8)), SFXP(SBV(14308, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8287, 16), 8), UFXP(BV(22547, 16), 8)), UFXP(BV(51276, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23218, 16), 8), SFXP(SBV(15954, 16), 8)), SFXP(SBV(7264, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18105, 16), 8), SFXP(SBV(5197, 16), 8)), SFXP(SBV(25671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10799, 16), 8), SFXP(SBV(16375, 16), 8)), SFXP(SBV(-27174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61204, 16), 8), UFXP(BV(36900, 16), 8)), UFXP(BV(40159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27695, 16), 8), SFXP(SBV(-29754, 16), 8)), SFXP(SBV(7630, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57208, 16), 8), UFXP(BV(27831, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7866, 16), 8), SFXP(SBV(-31879, 16), 8)), SFXP(SBV(25791, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27479, 16), 8), SFXP(SBV(32408, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22092, 16), 8), SFXP(SBV(-19621, 16), 8)), SFXP(SBV(-2471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27226, 16), 8), SFXP(SBV(30755, 16), 8)), SFXP(SBV(5957, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10735, 16), 8), SFXP(SBV(-31453, 16), 8)), SFXP(SBV(20718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24565, 16), 8), SFXP(SBV(-26910, 16), 8)), SFXP(SBV(-14061, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27163, 16), 8), SFXP(SBV(18928, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28051, 16), 8), UFXP(BV(24329, 16), 8)), UFXP(BV(52380, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3171, 16), 8), SFXP(SBV(-1223, 16), 8)), SFXP(SBV(-1948, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29419, 16), 8), SFXP(SBV(6690, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52974, 16), 8), UFXP(BV(59672, 16), 8)), UFXP(BV(47110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10370, 16), 8), UFXP(BV(5324, 16), 8)), UFXP(BV(5046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35369, 16), 8), UFXP(BV(14483, 16), 8)), UFXP(BV(49852, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30705, 16), 8), SFXP(SBV(-7238, 16), 8)), SFXP(SBV(16167, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(7998, 16), 8), UFXP(BV(60232, 16), 8)), UFXP(BV(46771, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23106, 16), 8), SFXP(SBV(3295, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40616, 16), 8), UFXP(BV(46094, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21736, 16), 8), SFXP(SBV(29914, 16), 8)), SFXP(SBV(13886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12980, 16), 8), SFXP(SBV(191, 16), 8)), SFXP(SBV(12789, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42153, 16), 8), UFXP(BV(43496, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24558, 16), 8), UFXP(BV(46948, 16), 8)), UFXP(BV(43146, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15679, 16), 8), SFXP(SBV(-20171, 16), 8)), SFXP(SBV(4492, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13620, 16), 8), SFXP(SBV(20733, 16), 8)), SFXP(SBV(-11052, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18178, 16), 8), SFXP(SBV(25395, 16), 8)), SFXP(SBV(21963, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17548, 16), 8), UFXP(BV(13657, 16), 8)), UFXP(BV(31205, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23502, 16), 8), UFXP(BV(24956, 16), 8)), UFXP(BV(62853, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(849, 16), 8), UFXP(BV(26722, 16), 8)), UFXP(BV(23086, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50538, 16), 8), UFXP(BV(63888, 16), 8)), UFXP(BV(29477, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56795, 16), 8), UFXP(BV(22644, 16), 8)), UFXP(BV(13903, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21844, 16), 8), SFXP(SBV(11554, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5234, 16), 8), SFXP(SBV(-12680, 16), 8)), SFXP(SBV(2897, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48483, 16), 8), UFXP(BV(33574, 16), 8)), UFXP(BV(14909, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21146, 16), 8), SFXP(SBV(-30864, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13201, 16), 8), UFXP(BV(1206, 16), 8)), UFXP(BV(11995, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40070, 16), 8), UFXP(BV(33428, 16), 8)), UFXP(BV(7962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26524, 16), 8), SFXP(SBV(23362, 16), 8)), SFXP(SBV(-4309, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4795, 16), 8), UFXP(BV(53272, 16), 8)), UFXP(BV(17059, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4575, 16), 8), SFXP(SBV(13328, 16), 8)), SFXP(SBV(-17903, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42583, 16), 8), UFXP(BV(57911, 16), 8)), UFXP(BV(50208, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48889, 16), 8), UFXP(BV(9281, 16), 8)), UFXP(BV(58170, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37951, 16), 8), UFXP(BV(65128, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22060, 16), 8), SFXP(SBV(15259, 16), 8)), SFXP(SBV(6801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22744, 16), 8), SFXP(SBV(-2549, 16), 8)), SFXP(SBV(-25293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12110, 16), 8), UFXP(BV(6109, 16), 8)), UFXP(BV(18219, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14677, 16), 8), SFXP(SBV(22633, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52902, 16), 8), UFXP(BV(21968, 16), 8)), UFXP(BV(9334, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6860, 16), 8), SFXP(SBV(-19682, 16), 8)), SFXP(SBV(-12822, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23740, 16), 8), SFXP(SBV(-29963, 16), 8)), SFXP(SBV(-6223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44951, 16), 8), UFXP(BV(19015, 16), 8)), UFXP(BV(62040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30332, 16), 8), UFXP(BV(35934, 16), 8)), UFXP(BV(730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5178, 16), 8), SFXP(SBV(-986, 16), 8)), SFXP(SBV(-4192, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2711, 16), 8), UFXP(BV(61136, 16), 8)), UFXP(BV(63847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13669, 16), 8), SFXP(SBV(-25836, 16), 8)), SFXP(SBV(-3245, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(27859, 16), 8), SFXP(SBV(26091, 16), 8)), SFXP(SBV(21284, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14234, 16), 8), SFXP(SBV(704, 16), 8)), SFXP(SBV(-13530, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39194, 16), 8), UFXP(BV(37701, 16), 8)), UFXP(BV(11359, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25727, 16), 8), SFXP(SBV(-12998, 16), 8)), SFXP(SBV(-12729, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18997, 16), 8), UFXP(BV(33000, 16), 8)), UFXP(BV(51533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10493, 16), 8), SFXP(SBV(19023, 16), 8)), SFXP(SBV(-8530, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29510, 16), 8), SFXP(SBV(1518, 16), 8)), SFXP(SBV(27992, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14733, 16), 8), UFXP(BV(15741, 16), 8)), UFXP(BV(53938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31602, 16), 8), SFXP(SBV(3780, 16), 8)), SFXP(SBV(27822, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26427, 16), 8), UFXP(BV(47988, 16), 8)), UFXP(BV(43975, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21005, 16), 8), SFXP(SBV(-24411, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6365, 16), 8), SFXP(SBV(27755, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(726, 16), 8), SFXP(SBV(-9403, 16), 8)), SFXP(SBV(10129, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18156, 16), 8), UFXP(BV(30433, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(1767, 16), 8), SFXP(SBV(-11422, 16), 8)), SFXP(SBV(-13302, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7551, 16), 8), SFXP(SBV(-5361, 16), 8)), SFXP(SBV(-27057, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30533, 16), 8), UFXP(BV(11281, 16), 8)), UFXP(BV(41814, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-32451, 16), 8), SFXP(SBV(-32338, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20739, 16), 8), UFXP(BV(56526, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61519, 16), 8), UFXP(BV(16814, 16), 8)), UFXP(BV(44705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56038, 16), 8), UFXP(BV(39353, 16), 8)), UFXP(BV(29094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38443, 16), 8), UFXP(BV(2200, 16), 8)), UFXP(BV(40643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12090, 16), 8), SFXP(SBV(24768, 16), 8)), SFXP(SBV(-9941, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1023, 16), 8), SFXP(SBV(22675, 16), 8)), SFXP(SBV(-23698, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(936, 16), 8), SFXP(SBV(28972, 16), 8)), SFXP(SBV(29908, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27105, 16), 8), SFXP(SBV(9530, 16), 8)), SFXP(SBV(-25986, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64079, 16), 8), UFXP(BV(55891, 16), 8)), UFXP(BV(54434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25886, 16), 8), SFXP(SBV(12070, 16), 8)), SFXP(SBV(-24700, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49908, 16), 8), UFXP(BV(1878, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25328, 16), 8), SFXP(SBV(15321, 16), 8)), SFXP(SBV(10007, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30122, 16), 8), SFXP(SBV(-13873, 16), 8)), SFXP(SBV(6047, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10787, 16), 8), SFXP(SBV(9491, 16), 8)), SFXP(SBV(-6703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1875, 16), 8), SFXP(SBV(25280, 16), 8)), SFXP(SBV(27155, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19944, 16), 8), UFXP(BV(46648, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15007, 16), 8), UFXP(BV(10685, 16), 8)), UFXP(BV(4322, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26681, 16), 8), SFXP(SBV(-25413, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64573, 16), 8), UFXP(BV(55075, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18822, 16), 8), SFXP(SBV(392, 16), 8)), SFXP(SBV(18430, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-23994, 16), 8), SFXP(SBV(-10012, 16), 8)), SFXP(SBV(20886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48943, 16), 8), UFXP(BV(15359, 16), 8)), UFXP(BV(33584, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51244, 16), 8), UFXP(BV(1527, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7782, 16), 8), SFXP(SBV(184, 16), 8)), SFXP(SBV(7966, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58132, 16), 8), UFXP(BV(39934, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(26337, 16), 8), SFXP(SBV(122, 16), 8)), SFXP(SBV(12552, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3666, 16), 8), SFXP(SBV(-414, 16), 8)), SFXP(SBV(-5929, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(25600, 16), 8), SFXP(SBV(10596, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8558, 16), 8), UFXP(BV(42179, 16), 8)), UFXP(BV(50737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14091, 16), 8), SFXP(SBV(-27583, 16), 8)), SFXP(SBV(13492, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1106, 16), 8), SFXP(SBV(-2499, 16), 8)), SFXP(SBV(10797, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44053, 16), 8), UFXP(BV(63542, 16), 8)), UFXP(BV(46047, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33051, 16), 8), UFXP(BV(64137, 16), 8)), UFXP(BV(31652, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28982, 16), 8), UFXP(BV(18519, 16), 8)), UFXP(BV(47501, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4887, 16), 8), SFXP(SBV(16777, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42509, 16), 8), UFXP(BV(4028, 16), 8)), UFXP(BV(46537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30749, 16), 8), UFXP(BV(36022, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3486, 16), 8), UFXP(BV(36073, 16), 8)), UFXP(BV(32949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38787, 16), 8), UFXP(BV(18103, 16), 8)), UFXP(BV(56890, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9945, 16), 8), SFXP(SBV(14453, 16), 8)), SFXP(SBV(-4508, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23855, 16), 8), SFXP(SBV(-31185, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27214, 16), 8), SFXP(SBV(-3738, 16), 8)), SFXP(SBV(30952, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31808, 16), 8), SFXP(SBV(-28791, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46779, 16), 8), UFXP(BV(7709, 16), 8)), UFXP(BV(54488, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49341, 16), 8), UFXP(BV(12850, 16), 8)), UFXP(BV(36491, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19831, 16), 8), SFXP(SBV(-20246, 16), 8)), SFXP(SBV(-415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13019, 16), 8), SFXP(SBV(-6301, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(46293, 16), 8), UFXP(BV(1979, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1265, 16), 8), UFXP(BV(47480, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48141, 16), 8), UFXP(BV(8233, 16), 8)), UFXP(BV(39908, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38458, 16), 8), UFXP(BV(21812, 16), 8)), UFXP(BV(60270, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18581, 16), 8), SFXP(SBV(61, 16), 8)), SFXP(SBV(-18520, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34412, 16), 8), UFXP(BV(39886, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9435, 16), 8), SFXP(SBV(-2043, 16), 8)), SFXP(SBV(11478, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62256, 16), 8), UFXP(BV(64638, 16), 8)), UFXP(BV(63154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20066, 16), 8), SFXP(SBV(-8708, 16), 8)), SFXP(SBV(-11358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25692, 16), 8), SFXP(SBV(-11872, 16), 8)), SFXP(SBV(13820, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12958, 16), 8), SFXP(SBV(-26484, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15234, 16), 8), UFXP(BV(2720, 16), 8)), UFXP(BV(12514, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15922, 16), 8), SFXP(SBV(-15798, 16), 8)), SFXP(SBV(478, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9000, 16), 8), SFXP(SBV(-11362, 16), 8)), SFXP(SBV(2362, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15912, 16), 8), SFXP(SBV(-8429, 16), 8)), SFXP(SBV(24341, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53002, 16), 8), UFXP(BV(46741, 16), 8)), UFXP(BV(43420, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(930, 16), 8), SFXP(SBV(-2130, 16), 8)), SFXP(SBV(-7737, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(65232, 16), 8), UFXP(BV(2016, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13455, 16), 8), UFXP(BV(5440, 16), 8)), UFXP(BV(18895, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(46413, 16), 8), UFXP(BV(24108, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(32004, 16), 8), SFXP(SBV(-26362, 16), 8)), SFXP(SBV(-18862, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4443, 16), 8), UFXP(BV(55755, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10538, 16), 8), UFXP(BV(7730, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3682, 16), 8), UFXP(BV(50036, 16), 8)), UFXP(BV(53718, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64625, 16), 8), UFXP(BV(26963, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20000, 16), 8), SFXP(SBV(-6414, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21949, 16), 8), UFXP(BV(40614, 16), 8)), UFXP(BV(62563, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(45173, 16), 8), UFXP(BV(9240, 16), 8)), UFXP(BV(57599, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8651, 16), 8), SFXP(SBV(-28592, 16), 8)), SFXP(SBV(19941, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61508, 16), 8), UFXP(BV(27244, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45689, 16), 8), UFXP(BV(41559, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19897, 16), 8), SFXP(SBV(-5518, 16), 8)), SFXP(SBV(-25415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31193, 16), 8), SFXP(SBV(-28626, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16628, 16), 8), UFXP(BV(9700, 16), 8)), UFXP(BV(6928, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8469, 16), 8), SFXP(SBV(5305, 16), 8)), SFXP(SBV(21107, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31034, 16), 8), SFXP(SBV(16132, 16), 8)), SFXP(SBV(10454, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8125, 16), 8), UFXP(BV(41973, 16), 8)), UFXP(BV(21431, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40560, 16), 8), UFXP(BV(41703, 16), 8)), UFXP(BV(53720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47028, 16), 8), UFXP(BV(34454, 16), 8)), UFXP(BV(12574, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16936, 16), 8), SFXP(SBV(27121, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62500, 16), 8), UFXP(BV(32799, 16), 8)), UFXP(BV(29701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53090, 16), 8), UFXP(BV(45574, 16), 8)), UFXP(BV(33128, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8563, 16), 8), UFXP(BV(14081, 16), 8)), UFXP(BV(60018, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18697, 16), 8), SFXP(SBV(16809, 16), 8)), SFXP(SBV(-1888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2839, 16), 8), UFXP(BV(21414, 16), 8)), UFXP(BV(24253, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7504, 16), 8), SFXP(SBV(-5789, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26567, 16), 8), SFXP(SBV(28808, 16), 8)), SFXP(SBV(2241, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46226, 16), 8), UFXP(BV(56309, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34091, 16), 8), UFXP(BV(39174, 16), 8)), UFXP(BV(60453, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35695, 16), 8), UFXP(BV(4569, 16), 8)), UFXP(BV(40264, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25041, 16), 8), UFXP(BV(47243, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6736, 16), 8), SFXP(SBV(-11973, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17436, 16), 8), SFXP(SBV(-15281, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25674, 16), 8), UFXP(BV(27739, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18831, 16), 8), UFXP(BV(35264, 16), 8)), UFXP(BV(38067, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64942, 16), 8), UFXP(BV(13692, 16), 8)), UFXP(BV(13098, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2566, 16), 8), UFXP(BV(8870, 16), 8)), UFXP(BV(59232, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30534, 16), 8), SFXP(SBV(-15915, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1145, 16), 8), SFXP(SBV(-31850, 16), 8)), SFXP(SBV(-30705, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-930, 16), 8), SFXP(SBV(9972, 16), 8)), SFXP(SBV(9042, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33778, 16), 8), UFXP(BV(38233, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15182, 16), 8), SFXP(SBV(-20097, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53547, 16), 8), UFXP(BV(46496, 16), 8)), UFXP(BV(26145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27820, 16), 8), UFXP(BV(55826, 16), 8)), UFXP(BV(18110, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28023, 16), 8), SFXP(SBV(28981, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25431, 16), 8), SFXP(SBV(-27970, 16), 8)), SFXP(SBV(-26023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47816, 16), 8), UFXP(BV(8109, 16), 8)), UFXP(BV(55925, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8355, 16), 8), UFXP(BV(18130, 16), 8)), UFXP(BV(55761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25930, 16), 8), SFXP(SBV(-9636, 16), 8)), SFXP(SBV(29970, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16484, 16), 8), SFXP(SBV(-12347, 16), 8)), SFXP(SBV(4137, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13637, 16), 8), SFXP(SBV(-11352, 16), 8)), SFXP(SBV(-24989, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7809, 16), 8), SFXP(SBV(15576, 16), 8)), SFXP(SBV(-16376, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1733, 16), 8), UFXP(BV(28058, 16), 8)), UFXP(BV(29791, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31269, 16), 8), SFXP(SBV(-26369, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61639, 16), 8), UFXP(BV(38567, 16), 8)), UFXP(BV(23072, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31385, 16), 8), SFXP(SBV(12957, 16), 8)), SFXP(SBV(-21194, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28071, 16), 8), UFXP(BV(54832, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13715, 16), 8), SFXP(SBV(-2469, 16), 8)), SFXP(SBV(16184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26250, 16), 8), SFXP(SBV(17718, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7397, 16), 8), SFXP(SBV(16263, 16), 8)), SFXP(SBV(-23660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1075, 16), 8), UFXP(BV(49648, 16), 8)), UFXP(BV(11875, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25418, 16), 8), SFXP(SBV(31129, 16), 8)), SFXP(SBV(-5711, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7543, 16), 8), SFXP(SBV(-19731, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14623, 16), 8), UFXP(BV(49920, 16), 8)), UFXP(BV(33437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56670, 16), 8), UFXP(BV(51954, 16), 8)), UFXP(BV(32111, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57640, 16), 8), UFXP(BV(64342, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37256, 16), 8), UFXP(BV(62731, 16), 8)), UFXP(BV(19817, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39389, 16), 8), UFXP(BV(10928, 16), 8)), UFXP(BV(50317, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2632, 16), 8), SFXP(SBV(30421, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24546, 16), 8), SFXP(SBV(-2547, 16), 8)), SFXP(SBV(-27093, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29904, 16), 8), SFXP(SBV(21436, 16), 8)), SFXP(SBV(-14196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15212, 16), 8), UFXP(BV(34804, 16), 8)), UFXP(BV(45944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11892, 16), 8), UFXP(BV(16402, 16), 8)), UFXP(BV(61026, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11931, 16), 8), SFXP(SBV(12950, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13682, 16), 8), SFXP(SBV(1978, 16), 8)), SFXP(SBV(-25357, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30681, 16), 8), SFXP(SBV(5552, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18523, 16), 8), SFXP(SBV(-6396, 16), 8)), SFXP(SBV(-24919, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23199, 16), 8), SFXP(SBV(7744, 16), 8)), SFXP(SBV(-30943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45946, 16), 8), UFXP(BV(44371, 16), 8)), UFXP(BV(1575, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50675, 16), 8), UFXP(BV(54134, 16), 8)), UFXP(BV(39273, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7868, 16), 8), SFXP(SBV(-21589, 16), 8)), SFXP(SBV(-29457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15716, 16), 8), UFXP(BV(42535, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64368, 16), 8), UFXP(BV(40580, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27695, 16), 8), SFXP(SBV(7491, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47855, 16), 8), UFXP(BV(5834, 16), 8)), UFXP(BV(42021, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25847, 16), 8), UFXP(BV(53008, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23013, 16), 8), SFXP(SBV(8494, 16), 8)), SFXP(SBV(31507, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22707, 16), 8), SFXP(SBV(9027, 16), 8)), SFXP(SBV(-13680, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12678, 16), 8), UFXP(BV(26425, 16), 8)), UFXP(BV(63473, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40942, 16), 8), UFXP(BV(14152, 16), 8)), UFXP(BV(26790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34395, 16), 8), UFXP(BV(47123, 16), 8)), UFXP(BV(39776, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17664, 16), 8), SFXP(SBV(7759, 16), 8)), SFXP(SBV(-9905, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35244, 16), 8), UFXP(BV(4947, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26470, 16), 8), UFXP(BV(39084, 16), 8)), UFXP(BV(43528, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56908, 16), 8), UFXP(BV(26762, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60103, 16), 8), UFXP(BV(57369, 16), 8)), UFXP(BV(34062, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19118, 16), 8), SFXP(SBV(31460, 16), 8)), SFXP(SBV(-9873, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19637, 16), 8), SFXP(SBV(20858, 16), 8)), SFXP(SBV(1221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60484, 16), 8), UFXP(BV(56161, 16), 8)), UFXP(BV(4323, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12558, 16), 8), SFXP(SBV(31334, 16), 8)), SFXP(SBV(-18776, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12360, 16), 8), SFXP(SBV(-23266, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25083, 16), 8), SFXP(SBV(25747, 16), 8)), SFXP(SBV(664, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5868, 16), 8), SFXP(SBV(14583, 16), 8)), SFXP(SBV(-8715, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23039, 16), 8), UFXP(BV(64369, 16), 8)), UFXP(BV(25791, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8867, 16), 8), SFXP(SBV(-11650, 16), 8)), SFXP(SBV(-2783, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13262, 16), 8), SFXP(SBV(-21232, 16), 8)), SFXP(SBV(31042, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48853, 16), 8), UFXP(BV(38284, 16), 8)), UFXP(BV(10569, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17784, 16), 8), SFXP(SBV(-23344, 16), 8)), SFXP(SBV(5560, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18368, 16), 8), SFXP(SBV(-3767, 16), 8)), SFXP(SBV(14601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26106, 16), 8), UFXP(BV(37964, 16), 8)), UFXP(BV(53678, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19291, 16), 8), SFXP(SBV(6178, 16), 8)), SFXP(SBV(6795, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15330, 16), 8), SFXP(SBV(-19921, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15576, 16), 8), SFXP(SBV(-4799, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48504, 16), 8), UFXP(BV(27857, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16978, 16), 8), SFXP(SBV(9098, 16), 8)), SFXP(SBV(7880, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8005, 16), 8), SFXP(SBV(-24685, 16), 8)), SFXP(SBV(-32690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57300, 16), 8), UFXP(BV(3140, 16), 8)), UFXP(BV(60440, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18586, 16), 8), SFXP(SBV(-12228, 16), 8)), SFXP(SBV(30814, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21735, 16), 8), SFXP(SBV(-17254, 16), 8)), SFXP(SBV(4481, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21059, 16), 8), SFXP(SBV(-24209, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53807, 16), 8), UFXP(BV(3665, 16), 8)), UFXP(BV(49426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53134, 16), 8), UFXP(BV(58036, 16), 8)), UFXP(BV(45634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(15015, 16), 8), UFXP(BV(39233, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28698, 16), 8), SFXP(SBV(-1523, 16), 8)), SFXP(SBV(25878, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19681, 16), 8), UFXP(BV(7697, 16), 8)), UFXP(BV(11984, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(347, 16), 8), UFXP(BV(17143, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11325, 16), 8), UFXP(BV(2073, 16), 8)), UFXP(BV(9252, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6278, 16), 8), UFXP(BV(1975, 16), 8)), UFXP(BV(8253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22669, 16), 8), UFXP(BV(8364, 16), 8)), UFXP(BV(14305, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21809, 16), 8), SFXP(SBV(6917, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10198, 16), 8), SFXP(SBV(18841, 16), 8)), SFXP(SBV(-29039, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43962, 16), 8), UFXP(BV(38020, 16), 8)), UFXP(BV(40979, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11975, 16), 8), UFXP(BV(65499, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29049, 16), 8), UFXP(BV(39165, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61470, 16), 8), UFXP(BV(57031, 16), 8)), UFXP(BV(4439, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2281, 16), 8), SFXP(SBV(-1652, 16), 8)), SFXP(SBV(-14720, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28461, 16), 8), SFXP(SBV(-26913, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28060, 16), 8), UFXP(BV(61903, 16), 8)), UFXP(BV(24427, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63789, 16), 8), UFXP(BV(59743, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16465, 16), 8), SFXP(SBV(24444, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22316, 16), 8), UFXP(BV(31496, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35029, 16), 8), UFXP(BV(59939, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19766, 16), 8), SFXP(SBV(-20653, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60788, 16), 8), UFXP(BV(30023, 16), 8)), UFXP(BV(51167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28463, 16), 8), SFXP(SBV(-29476, 16), 8)), SFXP(SBV(1013, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15186, 16), 8), UFXP(BV(33366, 16), 8)), UFXP(BV(48552, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62613, 16), 8), UFXP(BV(33238, 16), 8)), UFXP(BV(30315, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5200, 16), 8), SFXP(SBV(-30985, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1928, 16), 8), SFXP(SBV(-16469, 16), 8)), SFXP(SBV(14541, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23991, 16), 8), SFXP(SBV(-1403, 16), 8)), SFXP(SBV(-22588, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30128, 16), 8), SFXP(SBV(-6199, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2340, 16), 8), UFXP(BV(10944, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32085, 16), 8), UFXP(BV(11820, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20444, 16), 8), UFXP(BV(65298, 16), 8)), UFXP(BV(20206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5560, 16), 8), SFXP(SBV(-11746, 16), 8)), SFXP(SBV(-17306, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22001, 16), 8), UFXP(BV(27997, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53534, 16), 8), UFXP(BV(27243, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55134, 16), 8), UFXP(BV(11775, 16), 8)), UFXP(BV(43359, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16224, 16), 8), SFXP(SBV(20530, 16), 8)), SFXP(SBV(-28782, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30084, 16), 8), SFXP(SBV(-22028, 16), 8)), SFXP(SBV(8056, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12936, 16), 8), SFXP(SBV(7430, 16), 8)), SFXP(SBV(-17769, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38437, 16), 8), UFXP(BV(55090, 16), 8)), UFXP(BV(27991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47623, 16), 8), UFXP(BV(4174, 16), 8)), UFXP(BV(55582, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6390, 16), 8), SFXP(SBV(16539, 16), 8)), SFXP(SBV(-22929, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32473, 16), 8), UFXP(BV(32923, 16), 8)), UFXP(BV(65396, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26437, 16), 8), SFXP(SBV(-17017, 16), 8)), SFXP(SBV(-22082, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24190, 16), 8), SFXP(SBV(8026, 16), 8)), SFXP(SBV(-32216, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22388, 16), 8), UFXP(BV(21662, 16), 8)), UFXP(BV(44050, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29829, 16), 8), UFXP(BV(9631, 16), 8)), UFXP(BV(8088, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30335, 16), 8), UFXP(BV(42161, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30349, 16), 8), SFXP(SBV(-10017, 16), 8)), SFXP(SBV(25170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19926, 16), 8), SFXP(SBV(30170, 16), 8)), SFXP(SBV(-15440, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30364, 16), 8), SFXP(SBV(25715, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33369, 16), 8), UFXP(BV(39611, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13394, 16), 8), SFXP(SBV(15175, 16), 8)), SFXP(SBV(-28569, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14698, 16), 8), SFXP(SBV(24529, 16), 8)), SFXP(SBV(26309, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15160, 16), 8), SFXP(SBV(-6208, 16), 8)), SFXP(SBV(-21368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56308, 16), 8), UFXP(BV(34310, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59875, 16), 8), UFXP(BV(17276, 16), 8)), UFXP(BV(11615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6440, 16), 8), SFXP(SBV(7717, 16), 8)), SFXP(SBV(-1277, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21391, 16), 8), UFXP(BV(21224, 16), 8)), UFXP(BV(167, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17644, 16), 8), UFXP(BV(28036, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8155, 16), 8), UFXP(BV(41163, 16), 8)), UFXP(BV(49318, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3839, 16), 8), SFXP(SBV(-13194, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57615, 16), 8), UFXP(BV(63463, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35605, 16), 8), UFXP(BV(50257, 16), 8)), UFXP(BV(43030, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5679, 16), 8), SFXP(SBV(-2058, 16), 8)), SFXP(SBV(-3621, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30937, 16), 8), SFXP(SBV(-28686, 16), 8)), SFXP(SBV(6773, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40186, 16), 8), UFXP(BV(35726, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14321, 16), 8), UFXP(BV(38689, 16), 8)), UFXP(BV(1629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52422, 16), 8), UFXP(BV(37946, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13407, 16), 8), SFXP(SBV(2572, 16), 8)), SFXP(SBV(-10835, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61176, 16), 8), UFXP(BV(1126, 16), 8)), UFXP(BV(62302, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23747, 16), 8), SFXP(SBV(14318, 16), 8)), SFXP(SBV(-9429, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9485, 16), 8), SFXP(SBV(4380, 16), 8)), SFXP(SBV(-13865, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9994, 16), 8), UFXP(BV(53078, 16), 8)), UFXP(BV(40499, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6738, 16), 8), UFXP(BV(7871, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9932, 16), 8), SFXP(SBV(13450, 16), 8)), SFXP(SBV(-23382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60353, 16), 8), UFXP(BV(35652, 16), 8)), UFXP(BV(16490, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5074, 16), 8), SFXP(SBV(-14540, 16), 8)), SFXP(SBV(19614, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56208, 16), 8), UFXP(BV(61521, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57407, 16), 8), UFXP(BV(3567, 16), 8)), UFXP(BV(13454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8028, 16), 8), SFXP(SBV(30938, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20048, 16), 8), UFXP(BV(61055, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64755, 16), 8), UFXP(BV(25394, 16), 8)), UFXP(BV(39361, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15732, 16), 8), UFXP(BV(29104, 16), 8)), UFXP(BV(44836, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(29196, 16), 8), UFXP(BV(15762, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58636, 16), 8), UFXP(BV(11679, 16), 8)), UFXP(BV(4779, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27095, 16), 8), SFXP(SBV(-3567, 16), 8)), SFXP(SBV(30662, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-664, 16), 8), SFXP(SBV(3002, 16), 8)), SFXP(SBV(2338, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24666, 16), 8), SFXP(SBV(-14149, 16), 8)), SFXP(SBV(10517, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28123, 16), 8), SFXP(SBV(-5145, 16), 8)), SFXP(SBV(22978, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6953, 16), 8), SFXP(SBV(-29689, 16), 8)), SFXP(SBV(-22736, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7641, 16), 8), SFXP(SBV(-48, 16), 8)), SFXP(SBV(-1433, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6954, 16), 8), SFXP(SBV(17706, 16), 8)), SFXP(SBV(-10752, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-119, 16), 8), SFXP(SBV(-24399, 16), 8)), SFXP(SBV(11341, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42042, 16), 8), UFXP(BV(17135, 16), 8)), UFXP(BV(24907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8887, 16), 8), SFXP(SBV(6430, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22412, 16), 8), UFXP(BV(54814, 16), 8)), UFXP(BV(11690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10165, 16), 8), UFXP(BV(35076, 16), 8)), UFXP(BV(45241, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1545, 16), 8), SFXP(SBV(128, 16), 8)), SFXP(SBV(1417, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20296, 16), 8), SFXP(SBV(2843, 16), 8)), SFXP(SBV(23139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25660, 16), 8), SFXP(SBV(27354, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63231, 16), 8), UFXP(BV(1709, 16), 8)), UFXP(BV(28900, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24846, 16), 8), SFXP(SBV(-5934, 16), 8)), SFXP(SBV(30780, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28214, 16), 8), UFXP(BV(8234, 16), 8)), UFXP(BV(19980, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27183, 16), 8), SFXP(SBV(2816, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61078, 16), 8), UFXP(BV(39761, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39322, 16), 8), UFXP(BV(11849, 16), 8)), UFXP(BV(27473, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41415, 16), 8), UFXP(BV(59256, 16), 8)), UFXP(BV(35135, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34636, 16), 8), UFXP(BV(26598, 16), 8)), UFXP(BV(61234, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19761, 16), 8), SFXP(SBV(-18617, 16), 8)), SFXP(SBV(1144, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26830, 16), 8), UFXP(BV(958, 16), 8)), UFXP(BV(25872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19213, 16), 8), UFXP(BV(60651, 16), 8)), UFXP(BV(29920, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7604, 16), 8), UFXP(BV(13397, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26207, 16), 8), SFXP(SBV(7858, 16), 8)), SFXP(SBV(-31471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4545, 16), 8), SFXP(SBV(14756, 16), 8)), SFXP(SBV(19301, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15756, 16), 8), UFXP(BV(47076, 16), 8)), UFXP(BV(62832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7325, 16), 8), UFXP(BV(47961, 16), 8)), UFXP(BV(55286, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14673, 16), 8), SFXP(SBV(8152, 16), 8)), SFXP(SBV(6521, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10027, 16), 8), SFXP(SBV(-30688, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34457, 16), 8), UFXP(BV(2688, 16), 8)), UFXP(BV(31769, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(161, 16), 8), UFXP(BV(46354, 16), 8)), UFXP(BV(46515, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12760, 16), 8), UFXP(BV(11816, 16), 8)), UFXP(BV(64665, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62750, 16), 8), UFXP(BV(9079, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26870, 16), 8), UFXP(BV(30371, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43502, 16), 8), UFXP(BV(8273, 16), 8)), UFXP(BV(29572, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26485, 16), 8), SFXP(SBV(-26771, 16), 8)), SFXP(SBV(12280, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61819, 16), 8), UFXP(BV(7810, 16), 8)), UFXP(BV(54009, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24105, 16), 8), SFXP(SBV(-18375, 16), 8)), SFXP(SBV(-26256, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10972, 16), 8), UFXP(BV(2576, 16), 8)), UFXP(BV(8396, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42281, 16), 8), UFXP(BV(25497, 16), 8)), UFXP(BV(2242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7196, 16), 8), UFXP(BV(3184, 16), 8)), UFXP(BV(4012, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24720, 16), 8), SFXP(SBV(11665, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1985, 16), 8), UFXP(BV(56544, 16), 8)), UFXP(BV(45221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33080, 16), 8), UFXP(BV(42754, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29841, 16), 8), SFXP(SBV(-17680, 16), 8)), SFXP(SBV(29279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8357, 16), 8), SFXP(SBV(-28466, 16), 8)), SFXP(SBV(20109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15329, 16), 8), SFXP(SBV(230, 16), 8)), SFXP(SBV(13773, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62189, 16), 8), UFXP(BV(65076, 16), 8)), UFXP(BV(62649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60166, 16), 8), UFXP(BV(47285, 16), 8)), UFXP(BV(12881, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50548, 16), 8), UFXP(BV(49387, 16), 8)), UFXP(BV(1161, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17661, 16), 8), SFXP(SBV(21482, 16), 8)), SFXP(SBV(26393, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25107, 16), 8), SFXP(SBV(-28099, 16), 8)), SFXP(SBV(-2992, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25513, 16), 8), SFXP(SBV(5805, 16), 8)), SFXP(SBV(19708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55455, 16), 8), UFXP(BV(30028, 16), 8)), UFXP(BV(19947, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42527, 16), 8), UFXP(BV(9248, 16), 8)), UFXP(BV(28959, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13962, 16), 8), UFXP(BV(51230, 16), 8)), UFXP(BV(28268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8822, 16), 8), UFXP(BV(2377, 16), 8)), UFXP(BV(11199, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(977, 16), 8), UFXP(BV(12733, 16), 8)), UFXP(BV(48595, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17739, 16), 8), SFXP(SBV(-8273, 16), 8)), SFXP(SBV(9466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26951, 16), 8), UFXP(BV(16614, 16), 8)), UFXP(BV(10337, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(25834, 16), 8), SFXP(SBV(-18456, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(55868, 16), 8), UFXP(BV(7180, 16), 8)), UFXP(BV(59595, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9005, 16), 8), SFXP(SBV(23140, 16), 8)), SFXP(SBV(-32145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59861, 16), 8), UFXP(BV(9476, 16), 8)), UFXP(BV(53105, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16081, 16), 8), UFXP(BV(21915, 16), 8)), UFXP(BV(37996, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65105, 16), 8), UFXP(BV(52574, 16), 8)), UFXP(BV(12531, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64299, 16), 8), UFXP(BV(2920, 16), 8)), UFXP(BV(61379, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16036, 16), 8), SFXP(SBV(-12413, 16), 8)), SFXP(SBV(-8873, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18169, 16), 8), UFXP(BV(47385, 16), 8)), UFXP(BV(36320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14384, 16), 8), UFXP(BV(10477, 16), 8)), UFXP(BV(3907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5026, 16), 8), UFXP(BV(45418, 16), 8)), UFXP(BV(39715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-382, 16), 8), SFXP(SBV(-5063, 16), 8)), SFXP(SBV(-5445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54987, 16), 8), UFXP(BV(50657, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21778, 16), 8), UFXP(BV(49638, 16), 8)), UFXP(BV(28417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8688, 16), 8), UFXP(BV(55314, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9888, 16), 8), SFXP(SBV(29744, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(24392, 16), 8), UFXP(BV(59857, 16), 8)), UFXP(BV(1617, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6644, 16), 8), SFXP(SBV(-24415, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13055, 16), 8), SFXP(SBV(16191, 16), 8)), SFXP(SBV(-29246, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30943, 16), 8), SFXP(SBV(2286, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20920, 16), 8), SFXP(SBV(1277, 16), 8)), SFXP(SBV(-19643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21675, 16), 8), SFXP(SBV(28891, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6448, 16), 8), SFXP(SBV(-25018, 16), 8)), SFXP(SBV(31466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27075, 16), 8), UFXP(BV(5002, 16), 8)), UFXP(BV(22073, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57064, 16), 8), UFXP(BV(58056, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28263, 16), 8), SFXP(SBV(-27091, 16), 8)), SFXP(SBV(23747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9291, 16), 8), UFXP(BV(2018, 16), 8)), UFXP(BV(11309, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33662, 16), 8), UFXP(BV(19881, 16), 8)), UFXP(BV(13781, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5302, 16), 8), UFXP(BV(4400, 16), 8)), UFXP(BV(25593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49727, 16), 8), UFXP(BV(22926, 16), 8)), UFXP(BV(26801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8820, 16), 8), SFXP(SBV(-13830, 16), 8)), SFXP(SBV(5010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29227, 16), 8), SFXP(SBV(741, 16), 8)), SFXP(SBV(-28486, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11001, 16), 8), UFXP(BV(1634, 16), 8)), UFXP(BV(12635, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27504, 16), 8), UFXP(BV(59605, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53651, 16), 8), UFXP(BV(16119, 16), 8)), UFXP(BV(35790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39367, 16), 8), UFXP(BV(31070, 16), 8)), UFXP(BV(8297, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-890, 16), 8), SFXP(SBV(-2301, 16), 8)), SFXP(SBV(8000, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12322, 16), 8), UFXP(BV(37387, 16), 8)), UFXP(BV(40471, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48574, 16), 8), UFXP(BV(46564, 16), 8)), UFXP(BV(2010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28161, 16), 8), SFXP(SBV(8621, 16), 8)), SFXP(SBV(-28754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33844, 16), 8), UFXP(BV(39981, 16), 8)), UFXP(BV(42733, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5157, 16), 8), UFXP(BV(61284, 16), 8)), UFXP(BV(54889, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26193, 16), 8), UFXP(BV(31489, 16), 8)), UFXP(BV(57682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14020, 16), 8), UFXP(BV(14640, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44322, 16), 8), UFXP(BV(52340, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8455, 16), 8), UFXP(BV(41504, 16), 8)), UFXP(BV(60046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33884, 16), 8), UFXP(BV(28721, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49247, 16), 8), UFXP(BV(3529, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10323, 16), 8), SFXP(SBV(-4536, 16), 8)), SFXP(SBV(5787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44846, 16), 8), UFXP(BV(3499, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44982, 16), 8), UFXP(BV(52875, 16), 8)), UFXP(BV(57643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8226, 16), 8), SFXP(SBV(-1811, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(714, 16), 8), SFXP(SBV(13832, 16), 8)), SFXP(SBV(-26957, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32078, 16), 8), SFXP(SBV(19078, 16), 8)), SFXP(SBV(-14380, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4139, 16), 8), SFXP(SBV(-16103, 16), 8)), SFXP(SBV(11964, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44646, 16), 8), UFXP(BV(43511, 16), 8)), UFXP(BV(1135, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48645, 16), 8), UFXP(BV(12548, 16), 8)), UFXP(BV(25069, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16162, 16), 8), UFXP(BV(22234, 16), 8)), UFXP(BV(27439, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2796, 16), 8), SFXP(SBV(17900, 16), 8)), SFXP(SBV(-15104, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9972, 16), 8), SFXP(SBV(32515, 16), 8)), SFXP(SBV(-22543, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30782, 16), 8), UFXP(BV(43055, 16), 8)), UFXP(BV(53263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43384, 16), 8), UFXP(BV(48073, 16), 8)), UFXP(BV(25921, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6192, 16), 8), SFXP(SBV(7060, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6977, 16), 8), SFXP(SBV(22219, 16), 8)), SFXP(SBV(-29196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28443, 16), 8), UFXP(BV(63325, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14484, 16), 8), SFXP(SBV(-32030, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31105, 16), 8), UFXP(BV(4424, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21518, 16), 8), SFXP(SBV(10677, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40787, 16), 8), UFXP(BV(5061, 16), 8)), UFXP(BV(35726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13449, 16), 8), SFXP(SBV(4337, 16), 8)), SFXP(SBV(9112, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20976, 16), 8), SFXP(SBV(11717, 16), 8)), SFXP(SBV(32693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22716, 16), 8), UFXP(BV(5861, 16), 8)), UFXP(BV(28577, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27389, 16), 8), SFXP(SBV(3830, 16), 8)), SFXP(SBV(23559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64352, 16), 8), UFXP(BV(24592, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59091, 16), 8), UFXP(BV(61637, 16), 8)), UFXP(BV(6000, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13748, 16), 8), SFXP(SBV(-4598, 16), 8)), SFXP(SBV(18346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34776, 16), 8), UFXP(BV(957, 16), 8)), UFXP(BV(33819, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5143, 16), 8), SFXP(SBV(-1441, 16), 8)), SFXP(SBV(3702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-12256, 16), 8), SFXP(SBV(5445, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13647, 16), 8), SFXP(SBV(14254, 16), 8)), SFXP(SBV(607, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53757, 16), 8), UFXP(BV(43216, 16), 8)), UFXP(BV(10541, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43360, 16), 8), UFXP(BV(47769, 16), 8)), UFXP(BV(25593, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12536, 16), 8), SFXP(SBV(23732, 16), 8)), SFXP(SBV(17521, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23883, 16), 8), SFXP(SBV(9196, 16), 8)), SFXP(SBV(14687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46865, 16), 8), UFXP(BV(48814, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26940, 16), 8), SFXP(SBV(29296, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31156, 16), 8), SFXP(SBV(-5269, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5433, 16), 8), SFXP(SBV(22807, 16), 8)), SFXP(SBV(25274, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59104, 16), 8), UFXP(BV(46127, 16), 8)), UFXP(BV(12977, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11269, 16), 8), SFXP(SBV(-20820, 16), 8)), SFXP(SBV(-9551, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-407, 16), 8), SFXP(SBV(13196, 16), 8)), SFXP(SBV(-20980, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18335, 16), 8), UFXP(BV(53754, 16), 8)), UFXP(BV(30117, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31616, 16), 8), SFXP(SBV(30018, 16), 8)), SFXP(SBV(-1598, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3373, 16), 8), SFXP(SBV(-19290, 16), 8)), SFXP(SBV(15917, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15608, 16), 8), SFXP(SBV(11034, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21064, 16), 8), SFXP(SBV(28986, 16), 8)), SFXP(SBV(7922, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22309, 16), 8), UFXP(BV(31316, 16), 8)), UFXP(BV(53625, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14853, 16), 8), SFXP(SBV(-7760, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59784, 16), 8), UFXP(BV(7479, 16), 8)), UFXP(BV(52305, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21713, 16), 8), SFXP(SBV(40, 16), 8)), SFXP(SBV(-21673, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57383, 16), 8), UFXP(BV(14778, 16), 8)), UFXP(BV(42605, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59698, 16), 8), UFXP(BV(7071, 16), 8)), UFXP(BV(1233, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13582, 16), 8), SFXP(SBV(-21655, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8911, 16), 8), SFXP(SBV(-1402, 16), 8)), SFXP(SBV(-10313, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5371, 16), 8), SFXP(SBV(15950, 16), 8)), SFXP(SBV(21321, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11831, 16), 8), SFXP(SBV(-4507, 16), 8)), SFXP(SBV(-7324, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7948, 16), 8), UFXP(BV(4474, 16), 8)), UFXP(BV(3474, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25382, 16), 8), SFXP(SBV(-27664, 16), 8)), SFXP(SBV(-12490, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61506, 16), 8), UFXP(BV(48560, 16), 8)), UFXP(BV(44530, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18667, 16), 8), SFXP(SBV(20878, 16), 8)), SFXP(SBV(-2211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37784, 16), 8), UFXP(BV(62967, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6665, 16), 8), SFXP(SBV(-5667, 16), 8)), SFXP(SBV(-12332, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3792, 16), 8), UFXP(BV(48572, 16), 8)), UFXP(BV(52364, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51437, 16), 8), UFXP(BV(2372, 16), 8)), UFXP(BV(49065, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61826, 16), 8), UFXP(BV(38594, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16646, 16), 8), SFXP(SBV(-14464, 16), 8)), SFXP(SBV(-2182, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49860, 16), 8), UFXP(BV(12474, 16), 8)), UFXP(BV(37386, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1919, 16), 8), SFXP(SBV(5342, 16), 8)), SFXP(SBV(25491, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32431, 16), 8), SFXP(SBV(-4940, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22542, 16), 8), UFXP(BV(52611, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6924, 16), 8), SFXP(SBV(-18117, 16), 8)), SFXP(SBV(-11193, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31278, 16), 8), SFXP(SBV(21323, 16), 8)), SFXP(SBV(-9955, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(8868, 16), 8), SFXP(SBV(14399, 16), 8)), SFXP(SBV(-25498, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15299, 16), 8), SFXP(SBV(21067, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20769, 16), 8), UFXP(BV(60537, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18968, 16), 8), SFXP(SBV(17965, 16), 8)), SFXP(SBV(-1003, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1432, 16), 8), UFXP(BV(57691, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15758, 16), 8), SFXP(SBV(30242, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32732, 16), 8), SFXP(SBV(12382, 16), 8)), SFXP(SBV(-20422, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22194, 16), 8), SFXP(SBV(-1122, 16), 8)), SFXP(SBV(23316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45815, 16), 8), UFXP(BV(40774, 16), 8)), UFXP(BV(5041, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16347, 16), 8), SFXP(SBV(-32393, 16), 8)), SFXP(SBV(-16046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46237, 16), 8), UFXP(BV(38532, 16), 8)), UFXP(BV(7705, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13791, 16), 8), SFXP(SBV(17487, 16), 8)), SFXP(SBV(-31278, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(64849, 16), 8), UFXP(BV(15480, 16), 8)), UFXP(BV(54713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39077, 16), 8), UFXP(BV(16030, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9815, 16), 8), SFXP(SBV(-8101, 16), 8)), SFXP(SBV(-17916, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3704, 16), 8), SFXP(SBV(32367, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18661, 16), 8), SFXP(SBV(-1161, 16), 8)), SFXP(SBV(-19822, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26695, 16), 8), UFXP(BV(3918, 16), 8)), UFXP(BV(22777, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16561, 16), 8), SFXP(SBV(21172, 16), 8)), SFXP(SBV(-4611, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14444, 16), 8), SFXP(SBV(21192, 16), 8)), SFXP(SBV(6748, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5220, 16), 8), UFXP(BV(22661, 16), 8)), UFXP(BV(27881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-465, 16), 8), SFXP(SBV(20045, 16), 8)), SFXP(SBV(19580, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20785, 16), 8), SFXP(SBV(-9709, 16), 8)), SFXP(SBV(30494, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59450, 16), 8), UFXP(BV(32684, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37678, 16), 8), UFXP(BV(33670, 16), 8)), UFXP(BV(4008, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27001, 16), 8), SFXP(SBV(23656, 16), 8)), SFXP(SBV(-4693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56832, 16), 8), UFXP(BV(29755, 16), 8)), UFXP(BV(27077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17247, 16), 8), SFXP(SBV(10104, 16), 8)), SFXP(SBV(-25358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20059, 16), 8), SFXP(SBV(9579, 16), 8)), SFXP(SBV(-29638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44645, 16), 8), UFXP(BV(34532, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26677, 16), 8), SFXP(SBV(18983, 16), 8)), SFXP(SBV(-7694, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27598, 16), 8), UFXP(BV(4243, 16), 8)), UFXP(BV(31841, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28001, 16), 8), SFXP(SBV(-16076, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58063, 16), 8), UFXP(BV(9554, 16), 8)), UFXP(BV(2081, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25940, 16), 8), SFXP(SBV(-20473, 16), 8)), SFXP(SBV(-5467, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14250, 16), 8), SFXP(SBV(4551, 16), 8)), SFXP(SBV(18801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(8217, 16), 8), SFXP(SBV(6511, 16), 8)), SFXP(SBV(12379, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11325, 16), 8), SFXP(SBV(-24917, 16), 8)), SFXP(SBV(-29294, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59187, 16), 8), UFXP(BV(19810, 16), 8)), UFXP(BV(39377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11847, 16), 8), SFXP(SBV(9182, 16), 8)), SFXP(SBV(21029, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6654, 16), 8), SFXP(SBV(-8425, 16), 8)), SFXP(SBV(-15079, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32059, 16), 8), UFXP(BV(41149, 16), 8)), UFXP(BV(7672, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5006, 16), 8), SFXP(SBV(-20271, 16), 8)), SFXP(SBV(15265, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18847, 16), 8), SFXP(SBV(-9092, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25633, 16), 8), UFXP(BV(1134, 16), 8)), UFXP(BV(24499, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52127, 16), 8), UFXP(BV(20083, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17015, 16), 8), SFXP(SBV(19865, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17347, 16), 8), SFXP(SBV(-15243, 16), 8)), SFXP(SBV(2104, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33, 16), 8), UFXP(BV(7660, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5650, 16), 8), SFXP(SBV(-7066, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43401, 16), 8), UFXP(BV(3696, 16), 8)), UFXP(BV(36777, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14035, 16), 8), UFXP(BV(43332, 16), 8)), UFXP(BV(16347, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32120, 16), 8), SFXP(SBV(-29586, 16), 8)), SFXP(SBV(2534, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26540, 16), 8), SFXP(SBV(3868, 16), 8)), SFXP(SBV(-30408, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11202, 16), 8), UFXP(BV(31874, 16), 8)), UFXP(BV(44864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16711, 16), 8), UFXP(BV(13324, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36955, 16), 8), UFXP(BV(34684, 16), 8)), UFXP(BV(2271, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5686, 16), 8), SFXP(SBV(24100, 16), 8)), SFXP(SBV(29786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42961, 16), 8), UFXP(BV(10546, 16), 8)), UFXP(BV(32415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18212, 16), 8), SFXP(SBV(-7422, 16), 8)), SFXP(SBV(25634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16101, 16), 8), UFXP(BV(14226, 16), 8)), UFXP(BV(30327, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8419, 16), 8), SFXP(SBV(-19384, 16), 8)), SFXP(SBV(10965, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1413, 16), 8), UFXP(BV(12439, 16), 8)), UFXP(BV(13852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6043, 16), 8), UFXP(BV(42480, 16), 8)), UFXP(BV(48523, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54202, 16), 8), UFXP(BV(24679, 16), 8)), UFXP(BV(13345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12373, 16), 8), UFXP(BV(18489, 16), 8)), UFXP(BV(30862, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3217, 16), 8), UFXP(BV(4791, 16), 8)), UFXP(BV(60205, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3638, 16), 8), SFXP(SBV(26280, 16), 8)), SFXP(SBV(29918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57176, 16), 8), UFXP(BV(27417, 16), 8)), UFXP(BV(19057, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34005, 16), 8), UFXP(BV(18604, 16), 8)), UFXP(BV(52609, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40577, 16), 8), UFXP(BV(37376, 16), 8)), UFXP(BV(3201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36426, 16), 8), UFXP(BV(18499, 16), 8)), UFXP(BV(10765, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38583, 16), 8), UFXP(BV(5333, 16), 8)), UFXP(BV(33250, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27594, 16), 8), SFXP(SBV(-3663, 16), 8)), SFXP(SBV(31257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1527, 16), 8), SFXP(SBV(-2009, 16), 8)), SFXP(SBV(3536, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32317, 16), 8), SFXP(SBV(-24268, 16), 8)), SFXP(SBV(-8049, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20243, 16), 8), SFXP(SBV(18658, 16), 8)), SFXP(SBV(-26635, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27518, 16), 8), SFXP(SBV(2420, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16606, 16), 8), UFXP(BV(24715, 16), 8)), UFXP(BV(41321, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28768, 16), 8), SFXP(SBV(-18173, 16), 8)), SFXP(SBV(10595, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15350, 16), 8), SFXP(SBV(2545, 16), 8)), SFXP(SBV(12805, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49578, 16), 8), UFXP(BV(60205, 16), 8)), UFXP(BV(54909, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44415, 16), 8), UFXP(BV(57160, 16), 8)), UFXP(BV(21100, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26937, 16), 8), UFXP(BV(9712, 16), 8)), UFXP(BV(36649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9611, 16), 8), UFXP(BV(27303, 16), 8)), UFXP(BV(47844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21273, 16), 8), SFXP(SBV(8250, 16), 8)), SFXP(SBV(-29523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16475, 16), 8), SFXP(SBV(-15751, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7391, 16), 8), SFXP(SBV(2529, 16), 8)), SFXP(SBV(4862, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17299, 16), 8), SFXP(SBV(-29646, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22395, 16), 8), SFXP(SBV(10052, 16), 8)), SFXP(SBV(32447, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25987, 16), 8), UFXP(BV(39337, 16), 8)), UFXP(BV(65324, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56706, 16), 8), UFXP(BV(53671, 16), 8)), UFXP(BV(3035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17163, 16), 8), SFXP(SBV(-31605, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61617, 16), 8), UFXP(BV(32155, 16), 8)), UFXP(BV(28236, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57277, 16), 8), UFXP(BV(37408, 16), 8)), UFXP(BV(19869, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53580, 16), 8), UFXP(BV(38239, 16), 8)), UFXP(BV(15341, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41717, 16), 8), UFXP(BV(46937, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25811, 16), 8), SFXP(SBV(-22496, 16), 8)), SFXP(SBV(17229, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19614, 16), 8), SFXP(SBV(-5324, 16), 8)), SFXP(SBV(-14290, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13634, 16), 8), SFXP(SBV(21201, 16), 8)), SFXP(SBV(15006, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20738, 16), 8), SFXP(SBV(23527, 16), 8)), SFXP(SBV(2789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6192, 16), 8), SFXP(SBV(-10461, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26573, 16), 8), UFXP(BV(3944, 16), 8)), UFXP(BV(22629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56192, 16), 8), UFXP(BV(35067, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49271, 16), 8), UFXP(BV(10236, 16), 8)), UFXP(BV(3990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14623, 16), 8), SFXP(SBV(23989, 16), 8)), SFXP(SBV(-5978, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2096, 16), 8), SFXP(SBV(6406, 16), 8)), SFXP(SBV(-8502, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(14450, 16), 8), UFXP(BV(590, 16), 8)), UFXP(BV(33302, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30322, 16), 8), SFXP(SBV(-2114, 16), 8)), SFXP(SBV(28208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22933, 16), 8), SFXP(SBV(-2095, 16), 8)), SFXP(SBV(-20838, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2157, 16), 8), SFXP(SBV(-2272, 16), 8)), SFXP(SBV(-4429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5819, 16), 8), UFXP(BV(25021, 16), 8)), UFXP(BV(46334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38910, 16), 8), UFXP(BV(33030, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1096, 16), 8), SFXP(SBV(-142, 16), 8)), SFXP(SBV(-954, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18412, 16), 8), SFXP(SBV(25971, 16), 8)), SFXP(SBV(7559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23508, 16), 8), UFXP(BV(14762, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25394, 16), 8), SFXP(SBV(-21216, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28885, 16), 8), SFXP(SBV(27258, 16), 8)), SFXP(SBV(-4616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65168, 16), 8), UFXP(BV(23845, 16), 8)), UFXP(BV(23477, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14304, 16), 8), SFXP(SBV(28436, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18067, 16), 8), SFXP(SBV(26540, 16), 8)), SFXP(SBV(20929, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19324, 16), 8), SFXP(SBV(11856, 16), 8)), SFXP(SBV(-7468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56620, 16), 8), UFXP(BV(40874, 16), 8)), UFXP(BV(61747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9911, 16), 8), UFXP(BV(22341, 16), 8)), UFXP(BV(53106, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35785, 16), 8), UFXP(BV(43458, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20273, 16), 8), UFXP(BV(9157, 16), 8)), UFXP(BV(11116, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18874, 16), 8), SFXP(SBV(-4497, 16), 8)), SFXP(SBV(-14377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14312, 16), 8), SFXP(SBV(3823, 16), 8)), SFXP(SBV(10489, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24238, 16), 8), SFXP(SBV(23938, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44950, 16), 8), UFXP(BV(40079, 16), 8)), UFXP(BV(24956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8318, 16), 8), SFXP(SBV(30389, 16), 8)), SFXP(SBV(22071, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20174, 16), 8), SFXP(SBV(-17565, 16), 8)), SFXP(SBV(2609, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28450, 16), 8), SFXP(SBV(19673, 16), 8)), SFXP(SBV(8777, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31730, 16), 8), SFXP(SBV(28211, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46962, 16), 8), UFXP(BV(42253, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45119, 16), 8), UFXP(BV(4196, 16), 8)), UFXP(BV(40923, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14809, 16), 8), SFXP(SBV(-5141, 16), 8)), SFXP(SBV(9668, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24921, 16), 8), UFXP(BV(11635, 16), 8)), UFXP(BV(18528, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10228, 16), 8), UFXP(BV(60688, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19459, 16), 8), SFXP(SBV(-15460, 16), 8)), SFXP(SBV(3999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18963, 16), 8), SFXP(SBV(-18662, 16), 8)), SFXP(SBV(-301, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61128, 16), 8), UFXP(BV(51265, 16), 8)), UFXP(BV(51425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5846, 16), 8), UFXP(BV(63204, 16), 8)), UFXP(BV(3514, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23700, 16), 8), SFXP(SBV(-6523, 16), 8)), SFXP(SBV(-30223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40136, 16), 8), UFXP(BV(49832, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6170, 16), 8), SFXP(SBV(10348, 16), 8)), SFXP(SBV(-16518, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34103, 16), 8), UFXP(BV(34665, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58026, 16), 8), UFXP(BV(38529, 16), 8)), UFXP(BV(19497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24881, 16), 8), SFXP(SBV(30507, 16), 8)), SFXP(SBV(15898, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52108, 16), 8), UFXP(BV(17559, 16), 8)), UFXP(BV(4131, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28179, 16), 8), SFXP(SBV(-20399, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25765, 16), 8), SFXP(SBV(28119, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10264, 16), 8), SFXP(SBV(-11810, 16), 8)), SFXP(SBV(14756, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2266, 16), 8), SFXP(SBV(21806, 16), 8)), SFXP(SBV(-3590, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18712, 16), 8), SFXP(SBV(32466, 16), 8)), SFXP(SBV(13765, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58414, 16), 8), UFXP(BV(30030, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5780, 16), 8), SFXP(SBV(25852, 16), 8)), SFXP(SBV(20072, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11292, 16), 8), SFXP(SBV(-31270, 16), 8)), SFXP(SBV(19978, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16061, 16), 8), SFXP(SBV(-4758, 16), 8)), SFXP(SBV(11303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27236, 16), 8), SFXP(SBV(-24026, 16), 8)), SFXP(SBV(3210, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23277, 16), 8), SFXP(SBV(-12939, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18450, 16), 8), UFXP(BV(7798, 16), 8)), UFXP(BV(37716, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24834, 16), 8), SFXP(SBV(-25229, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10994, 16), 8), UFXP(BV(42259, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30763, 16), 8), SFXP(SBV(-17522, 16), 8)), SFXP(SBV(17251, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3155, 16), 8), SFXP(SBV(16463, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9057, 16), 8), UFXP(BV(5800, 16), 8)), UFXP(BV(14857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-690, 16), 8), SFXP(SBV(4849, 16), 8)), SFXP(SBV(-5539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6981, 16), 8), UFXP(BV(40597, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7095, 16), 8), SFXP(SBV(-19198, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13012, 16), 8), SFXP(SBV(-20013, 16), 8)), SFXP(SBV(-7001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16632, 16), 8), SFXP(SBV(-28821, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7928, 16), 8), SFXP(SBV(-17634, 16), 8)), SFXP(SBV(25562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19223, 16), 8), SFXP(SBV(27204, 16), 8)), SFXP(SBV(7981, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20696, 16), 8), UFXP(BV(55976, 16), 8)), UFXP(BV(11136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45031, 16), 8), UFXP(BV(20164, 16), 8)), UFXP(BV(24867, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61207, 16), 8), UFXP(BV(6367, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11150, 16), 8), SFXP(SBV(4974, 16), 8)), SFXP(SBV(-20034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11778, 16), 8), SFXP(SBV(-18394, 16), 8)), SFXP(SBV(-5701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31998, 16), 8), SFXP(SBV(20500, 16), 8)), SFXP(SBV(6436, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6044, 16), 8), SFXP(SBV(-27739, 16), 8)), SFXP(SBV(-459, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1488, 16), 8), UFXP(BV(39261, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28837, 16), 8), UFXP(BV(41650, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3136, 16), 8), UFXP(BV(6305, 16), 8)), UFXP(BV(11701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57934, 16), 8), UFXP(BV(41171, 16), 8)), UFXP(BV(16763, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1880, 16), 8), UFXP(BV(39129, 16), 8)), UFXP(BV(41009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9394, 16), 8), UFXP(BV(22970, 16), 8)), UFXP(BV(51960, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29264, 16), 8), SFXP(SBV(-18645, 16), 8)), SFXP(SBV(-10619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25422, 16), 8), UFXP(BV(9409, 16), 8)), UFXP(BV(16013, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30287, 16), 8), SFXP(SBV(-18700, 16), 8)), SFXP(SBV(-11587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18512, 16), 8), UFXP(BV(55592, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54114, 16), 8), UFXP(BV(45305, 16), 8)), UFXP(BV(33883, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40516, 16), 8), UFXP(BV(5306, 16), 8)), UFXP(BV(45822, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37902, 16), 8), UFXP(BV(21979, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29868, 16), 8), SFXP(SBV(-27021, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54221, 16), 8), UFXP(BV(46265, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22685, 16), 8), SFXP(SBV(-38, 16), 8)), SFXP(SBV(3368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(531, 16), 8), UFXP(BV(39819, 16), 8)), UFXP(BV(26248, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5106, 16), 8), SFXP(SBV(-23887, 16), 8)), SFXP(SBV(28993, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14697, 16), 8), SFXP(SBV(23046, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20068, 16), 8), SFXP(SBV(26170, 16), 8)), SFXP(SBV(-6102, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24326, 16), 8), SFXP(SBV(-30287, 16), 8)), SFXP(SBV(5961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59646, 16), 8), UFXP(BV(41544, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60564, 16), 8), UFXP(BV(43195, 16), 8)), UFXP(BV(60912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(1288, 16), 8), SFXP(SBV(-22494, 16), 8)), SFXP(SBV(17900, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16248, 16), 8), SFXP(SBV(25761, 16), 8)), SFXP(SBV(-23527, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42512, 16), 8), UFXP(BV(61828, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30435, 16), 8), SFXP(SBV(29743, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(1086, 16), 8), SFXP(SBV(-3713, 16), 8)), SFXP(SBV(-15751, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37716, 16), 8), UFXP(BV(49538, 16), 8)), UFXP(BV(21718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-5081, 16), 8), SFXP(SBV(10866, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27417, 16), 8), UFXP(BV(29870, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8837, 16), 8), UFXP(BV(55850, 16), 8)), UFXP(BV(18523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13263, 16), 8), SFXP(SBV(3984, 16), 8)), SFXP(SBV(9279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11613, 16), 8), SFXP(SBV(16175, 16), 8)), SFXP(SBV(4562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11527, 16), 8), SFXP(SBV(-25289, 16), 8)), SFXP(SBV(24584, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58487, 16), 8), UFXP(BV(53430, 16), 8)), UFXP(BV(46381, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40573, 16), 8), UFXP(BV(12054, 16), 8)), UFXP(BV(28519, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60975, 16), 8), UFXP(BV(55990, 16), 8)), UFXP(BV(51429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24578, 16), 8), UFXP(BV(56454, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6603, 16), 8), SFXP(SBV(-19893, 16), 8)), SFXP(SBV(26496, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-19794, 16), 8), SFXP(SBV(-6476, 16), 8)), SFXP(SBV(-23562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9924, 16), 8), SFXP(SBV(-11243, 16), 8)), SFXP(SBV(1319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10414, 16), 8), SFXP(SBV(311, 16), 8)), SFXP(SBV(10725, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(163, 16), 8), SFXP(SBV(-2616, 16), 8)), SFXP(SBV(-2453, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60246, 16), 8), UFXP(BV(30831, 16), 8)), UFXP(BV(25541, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18671, 16), 8), SFXP(SBV(-17559, 16), 8)), SFXP(SBV(1112, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43503, 16), 8), UFXP(BV(53300, 16), 8)), UFXP(BV(55739, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3817, 16), 8), SFXP(SBV(-19535, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31742, 16), 8), UFXP(BV(44668, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13413, 16), 8), UFXP(BV(39528, 16), 8)), UFXP(BV(52941, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24604, 16), 8), UFXP(BV(44336, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11878, 16), 8), SFXP(SBV(-24032, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7677, 16), 8), UFXP(BV(31646, 16), 8)), UFXP(BV(41567, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41716, 16), 8), UFXP(BV(34571, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14156, 16), 8), SFXP(SBV(32319, 16), 8)), SFXP(SBV(18163, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39358, 16), 8), UFXP(BV(45383, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25431, 16), 8), SFXP(SBV(-9522, 16), 8)), SFXP(SBV(-30583, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57086, 16), 8), UFXP(BV(64083, 16), 8)), UFXP(BV(58539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5146, 16), 8), UFXP(BV(20038, 16), 8)), UFXP(BV(50644, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57186, 16), 8), UFXP(BV(4171, 16), 8)), UFXP(BV(61357, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19145, 16), 8), SFXP(SBV(12767, 16), 8)), SFXP(SBV(-28257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30025, 16), 8), SFXP(SBV(24139, 16), 8)), SFXP(SBV(-5886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15030, 16), 8), UFXP(BV(36485, 16), 8)), UFXP(BV(51515, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29318, 16), 8), SFXP(SBV(2127, 16), 8)), SFXP(SBV(27191, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19215, 16), 8), SFXP(SBV(87, 16), 8)), SFXP(SBV(-19128, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9670, 16), 8), UFXP(BV(49324, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25536, 16), 8), SFXP(SBV(-21591, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25185, 16), 8), SFXP(SBV(-14055, 16), 8)), SFXP(SBV(11130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49900, 16), 8), UFXP(BV(29674, 16), 8)), UFXP(BV(20226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35867, 16), 8), UFXP(BV(763, 16), 8)), UFXP(BV(36630, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45387, 16), 8), UFXP(BV(52825, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12665, 16), 8), SFXP(SBV(-26555, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4711, 16), 8), SFXP(SBV(7971, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12912, 16), 8), SFXP(SBV(8211, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17975, 16), 8), SFXP(SBV(-4169, 16), 8)), SFXP(SBV(-22144, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48960, 16), 8), UFXP(BV(24978, 16), 8)), UFXP(BV(8402, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34350, 16), 8), UFXP(BV(58631, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16451, 16), 8), SFXP(SBV(-23462, 16), 8)), SFXP(SBV(7011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23785, 16), 8), SFXP(SBV(19677, 16), 8)), SFXP(SBV(4108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3021, 16), 8), UFXP(BV(37238, 16), 8)), UFXP(BV(31319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30096, 16), 8), SFXP(SBV(-19761, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4517, 16), 8), SFXP(SBV(11441, 16), 8)), SFXP(SBV(6924, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(284, 16), 8), SFXP(SBV(-1892, 16), 8)), SFXP(SBV(-2099, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23046, 16), 8), SFXP(SBV(-3732, 16), 8)), SFXP(SBV(19314, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4607, 16), 8), SFXP(SBV(1081, 16), 8)), SFXP(SBV(-3526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28876, 16), 8), SFXP(SBV(-4297, 16), 8)), SFXP(SBV(-24579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8168, 16), 8), SFXP(SBV(-31080, 16), 8)), SFXP(SBV(22912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6909, 16), 8), SFXP(SBV(19348, 16), 8)), SFXP(SBV(2119, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3059, 16), 8), SFXP(SBV(-17117, 16), 8)), SFXP(SBV(14058, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45908, 16), 8), UFXP(BV(36911, 16), 8)), UFXP(BV(8997, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26527, 16), 8), SFXP(SBV(-30134, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17705, 16), 8), SFXP(SBV(-31582, 16), 8)), SFXP(SBV(-21529, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13605, 16), 8), UFXP(BV(7829, 16), 8)), UFXP(BV(21434, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53559, 16), 8), UFXP(BV(34456, 16), 8)), UFXP(BV(19103, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38918, 16), 8), UFXP(BV(48787, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2791, 16), 8), UFXP(BV(39226, 16), 8)), UFXP(BV(42017, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(750, 16), 8), UFXP(BV(26246, 16), 8)), UFXP(BV(26996, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32124, 16), 8), SFXP(SBV(5933, 16), 8)), SFXP(SBV(-27479, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50488, 16), 8), UFXP(BV(37825, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23320, 16), 8), SFXP(SBV(-19926, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38204, 16), 8), UFXP(BV(60512, 16), 8)), UFXP(BV(52038, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9814, 16), 8), SFXP(SBV(28345, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17742, 16), 8), SFXP(SBV(-26367, 16), 8)), SFXP(SBV(21427, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22646, 16), 8), UFXP(BV(25437, 16), 8)), UFXP(BV(62745, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16, 16), 8), UFXP(BV(8624, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10393, 16), 8), SFXP(SBV(-3333, 16), 8)), SFXP(SBV(-13726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11200, 16), 8), SFXP(SBV(27247, 16), 8)), SFXP(SBV(16047, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65157, 16), 8), UFXP(BV(56564, 16), 8)), UFXP(BV(8593, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31502, 16), 8), SFXP(SBV(-15551, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6574, 16), 8), UFXP(BV(43417, 16), 8)), UFXP(BV(28693, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5183, 16), 8), SFXP(SBV(1167, 16), 8)), SFXP(SBV(23627, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49492, 16), 8), UFXP(BV(63203, 16), 8)), UFXP(BV(51825, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16443, 16), 8), UFXP(BV(42073, 16), 8)), UFXP(BV(15393, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63206, 16), 8), UFXP(BV(52617, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39089, 16), 8), UFXP(BV(13233, 16), 8)), UFXP(BV(25856, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19344, 16), 8), UFXP(BV(26945, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17422, 16), 8), SFXP(SBV(10592, 16), 8)), SFXP(SBV(-28014, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62545, 16), 8), UFXP(BV(3324, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18421, 16), 8), SFXP(SBV(-20915, 16), 8)), SFXP(SBV(2347, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24300, 16), 8), SFXP(SBV(-8049, 16), 8)), SFXP(SBV(-16251, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29228, 16), 8), SFXP(SBV(6132, 16), 8)), SFXP(SBV(-23096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25968, 16), 8), SFXP(SBV(-25130, 16), 8)), SFXP(SBV(6780, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11522, 16), 8), UFXP(BV(13790, 16), 8)), UFXP(BV(30834, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17014, 16), 8), SFXP(SBV(-31282, 16), 8)), SFXP(SBV(-17240, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-407, 16), 8), SFXP(SBV(-26660, 16), 8)), SFXP(SBV(-27067, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3769, 16), 8), SFXP(SBV(-29623, 16), 8)), SFXP(SBV(22622, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2331, 16), 8), UFXP(BV(31622, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5369, 16), 8), UFXP(BV(11108, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24481, 16), 8), SFXP(SBV(-6735, 16), 8)), SFXP(SBV(17746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59873, 16), 8), UFXP(BV(29636, 16), 8)), UFXP(BV(30237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13407, 16), 8), SFXP(SBV(11549, 16), 8)), SFXP(SBV(-1858, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8148, 16), 8), UFXP(BV(34845, 16), 8)), UFXP(BV(38839, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17050, 16), 8), SFXP(SBV(30729, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-924, 16), 8), SFXP(SBV(30926, 16), 8)), SFXP(SBV(30002, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4674, 16), 8), SFXP(SBV(-29555, 16), 8)), SFXP(SBV(-31307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31241, 16), 8), SFXP(SBV(18180, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6952, 16), 8), SFXP(SBV(4833, 16), 8)), SFXP(SBV(175, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17910, 16), 8), UFXP(BV(46189, 16), 8)), UFXP(BV(20161, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20716, 16), 8), UFXP(BV(4232, 16), 8)), UFXP(BV(16484, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18869, 16), 8), SFXP(SBV(10439, 16), 8)), SFXP(SBV(17005, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63948, 16), 8), UFXP(BV(21635, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39379, 16), 8), UFXP(BV(19607, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16297, 16), 8), SFXP(SBV(25343, 16), 8)), SFXP(SBV(-23896, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8087, 16), 8), UFXP(BV(59841, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4341, 16), 8), UFXP(BV(17359, 16), 8)), UFXP(BV(21700, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24441, 16), 8), UFXP(BV(18145, 16), 8)), UFXP(BV(6296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31070, 16), 8), SFXP(SBV(-26204, 16), 8)), SFXP(SBV(4866, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31550, 16), 8), SFXP(SBV(-11860, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18477, 16), 8), UFXP(BV(54630, 16), 8)), UFXP(BV(29383, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25472, 16), 8), UFXP(BV(35816, 16), 8)), UFXP(BV(55192, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42876, 16), 8), UFXP(BV(9647, 16), 8)), UFXP(BV(52523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15070, 16), 8), SFXP(SBV(-18409, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4554, 16), 8), SFXP(SBV(24586, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-7760, 16), 8), SFXP(SBV(8453, 16), 8)), SFXP(SBV(5912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26009, 16), 8), SFXP(SBV(-11618, 16), 8)), SFXP(SBV(14391, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63451, 16), 8), UFXP(BV(29886, 16), 8)), UFXP(BV(33565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32737, 16), 8), SFXP(SBV(-21543, 16), 8)), SFXP(SBV(-11256, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19967, 16), 8), UFXP(BV(5257, 16), 8)), UFXP(BV(25224, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39275, 16), 8), UFXP(BV(51005, 16), 8)), UFXP(BV(24744, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20065, 16), 8), UFXP(BV(7060, 16), 8)), UFXP(BV(27125, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9588, 16), 8), SFXP(SBV(-1602, 16), 8)), SFXP(SBV(-5537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13820, 16), 8), UFXP(BV(49272, 16), 8)), UFXP(BV(38479, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3514, 16), 8), SFXP(SBV(4827, 16), 8)), SFXP(SBV(-1313, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31479, 16), 8), SFXP(SBV(28151, 16), 8)), SFXP(SBV(11825, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43876, 16), 8), UFXP(BV(9759, 16), 8)), UFXP(BV(53635, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49802, 16), 8), UFXP(BV(4989, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24317, 16), 8), SFXP(SBV(84, 16), 8)), SFXP(SBV(7979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3723, 16), 8), SFXP(SBV(-16674, 16), 8)), SFXP(SBV(-20397, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24536, 16), 8), SFXP(SBV(31926, 16), 8)), SFXP(SBV(9074, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61760, 16), 8), UFXP(BV(60551, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9223, 16), 8), UFXP(BV(43620, 16), 8)), UFXP(BV(52843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24710, 16), 8), SFXP(SBV(31819, 16), 8)), SFXP(SBV(-7109, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43988, 16), 8), UFXP(BV(27640, 16), 8)), UFXP(BV(30737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10244, 16), 8), SFXP(SBV(-10592, 16), 8)), SFXP(SBV(348, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8599, 16), 8), SFXP(SBV(25532, 16), 8)), SFXP(SBV(-16933, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12874, 16), 8), UFXP(BV(21877, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62714, 16), 8), UFXP(BV(14595, 16), 8)), UFXP(BV(48119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9172, 16), 8), UFXP(BV(18300, 16), 8)), UFXP(BV(294, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3468, 16), 8), SFXP(SBV(21697, 16), 8)), SFXP(SBV(-18229, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14547, 16), 8), UFXP(BV(51308, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23468, 16), 8), UFXP(BV(49394, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14851, 16), 8), SFXP(SBV(15866, 16), 8)), SFXP(SBV(1015, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15796, 16), 8), SFXP(SBV(-14089, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-7837, 16), 8), SFXP(SBV(3627, 16), 8)), SFXP(SBV(20037, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55532, 16), 8), UFXP(BV(50399, 16), 8)), UFXP(BV(5133, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1506, 16), 8), UFXP(BV(32552, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29322, 16), 8), SFXP(SBV(2157, 16), 8)), SFXP(SBV(31479, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26000, 16), 8), SFXP(SBV(155, 16), 8)), SFXP(SBV(-15743, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8815, 16), 8), SFXP(SBV(31731, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57621, 16), 8), UFXP(BV(3598, 16), 8)), UFXP(BV(54023, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27914, 16), 8), SFXP(SBV(7338, 16), 8)), SFXP(SBV(20576, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9528, 16), 8), SFXP(SBV(19507, 16), 8)), SFXP(SBV(29035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30668, 16), 8), SFXP(SBV(-14038, 16), 8)), SFXP(SBV(-16630, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14590, 16), 8), UFXP(BV(41731, 16), 8)), UFXP(BV(19045, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31922, 16), 8), SFXP(SBV(7427, 16), 8)), SFXP(SBV(-24495, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13453, 16), 8), UFXP(BV(47145, 16), 8)), UFXP(BV(31844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13313, 16), 8), SFXP(SBV(-24778, 16), 8)), SFXP(SBV(27445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58019, 16), 8), UFXP(BV(17807, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8484, 16), 8), UFXP(BV(17375, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2282, 16), 8), SFXP(SBV(23274, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-3893, 16), 8), SFXP(SBV(-31082, 16), 8)), SFXP(SBV(13912, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26883, 16), 8), UFXP(BV(2505, 16), 8)), UFXP(BV(911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8214, 16), 8), SFXP(SBV(2099, 16), 8)), SFXP(SBV(6115, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18477, 16), 8), SFXP(SBV(9586, 16), 8)), SFXP(SBV(29019, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39256, 16), 8), UFXP(BV(40384, 16), 8)), UFXP(BV(32250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23283, 16), 8), UFXP(BV(55979, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10578, 16), 8), SFXP(SBV(29560, 16), 8)), SFXP(SBV(-23756, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31764, 16), 8), UFXP(BV(63609, 16), 8)), UFXP(BV(29837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37069, 16), 8), UFXP(BV(45300, 16), 8)), UFXP(BV(57305, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10446, 16), 8), UFXP(BV(62452, 16), 8)), UFXP(BV(7362, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30657, 16), 8), UFXP(BV(457, 16), 8)), UFXP(BV(30200, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-7466, 16), 8), SFXP(SBV(-11038, 16), 8)), SFXP(SBV(-5768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8195, 16), 8), SFXP(SBV(32562, 16), 8)), SFXP(SBV(-24367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13053, 16), 8), SFXP(SBV(-2809, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20276, 16), 8), UFXP(BV(122, 16), 8)), UFXP(BV(20154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30284, 16), 8), UFXP(BV(32775, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57099, 16), 8), UFXP(BV(33433, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7245, 16), 8), UFXP(BV(58755, 16), 8)), UFXP(BV(14026, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1510, 16), 8), UFXP(BV(60892, 16), 8)), UFXP(BV(6154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8363, 16), 8), UFXP(BV(49012, 16), 8)), UFXP(BV(57375, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12859, 16), 8), UFXP(BV(30284, 16), 8)), UFXP(BV(43143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36276, 16), 8), UFXP(BV(25186, 16), 8)), UFXP(BV(61462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9590, 16), 8), UFXP(BV(44233, 16), 8)), UFXP(BV(53823, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54742, 16), 8), UFXP(BV(3879, 16), 8)), UFXP(BV(58621, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18766, 16), 8), SFXP(SBV(6971, 16), 8)), SFXP(SBV(-25737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21242, 16), 8), SFXP(SBV(26460, 16), 8)), SFXP(SBV(-32664, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3589, 16), 8), SFXP(SBV(-17636, 16), 8)), SFXP(SBV(14047, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15341, 16), 8), SFXP(SBV(27842, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26659, 16), 8), SFXP(SBV(-2385, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20112, 16), 8), UFXP(BV(60935, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(64295, 16), 8), UFXP(BV(15386, 16), 8)), UFXP(BV(63141, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4156, 16), 8), UFXP(BV(30534, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20711, 16), 8), SFXP(SBV(-26391, 16), 8)), SFXP(SBV(-5680, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11124, 16), 8), SFXP(SBV(17029, 16), 8)), SFXP(SBV(-5905, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43436, 16), 8), UFXP(BV(32407, 16), 8)), UFXP(BV(11029, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21898, 16), 8), SFXP(SBV(3802, 16), 8)), SFXP(SBV(25700, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62184, 16), 8), UFXP(BV(27808, 16), 8)), UFXP(BV(34376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6993, 16), 8), SFXP(SBV(17233, 16), 8)), SFXP(SBV(-24226, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14141, 16), 8), SFXP(SBV(26026, 16), 8)), SFXP(SBV(11885, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24962, 16), 8), SFXP(SBV(-9405, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22315, 16), 8), SFXP(SBV(-22570, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24406, 16), 8), SFXP(SBV(18919, 16), 8)), SFXP(SBV(-5487, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61169, 16), 8), UFXP(BV(11342, 16), 8)), UFXP(BV(23098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-276, 16), 8), SFXP(SBV(-16887, 16), 8)), SFXP(SBV(18207, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37335, 16), 8), UFXP(BV(49070, 16), 8)), UFXP(BV(12938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11902, 16), 8), UFXP(BV(48114, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8800, 16), 8), UFXP(BV(21276, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29509, 16), 8), UFXP(BV(7891, 16), 8)), UFXP(BV(37400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31873, 16), 8), UFXP(BV(27671, 16), 8)), UFXP(BV(4202, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22230, 16), 8), UFXP(BV(7671, 16), 8)), UFXP(BV(14559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26259, 16), 8), SFXP(SBV(15593, 16), 8)), SFXP(SBV(-10666, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25942, 16), 8), SFXP(SBV(-8936, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37362, 16), 8), UFXP(BV(15090, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15844, 16), 8), UFXP(BV(29708, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18919, 16), 8), UFXP(BV(30759, 16), 8)), UFXP(BV(44939, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18366, 16), 8), SFXP(SBV(25317, 16), 8)), SFXP(SBV(-18711, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14863, 16), 8), SFXP(SBV(7596, 16), 8)), SFXP(SBV(7267, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59625, 16), 8), UFXP(BV(26532, 16), 8)), UFXP(BV(20621, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4903, 16), 8), SFXP(SBV(14780, 16), 8)), SFXP(SBV(-19683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5067, 16), 8), SFXP(SBV(30298, 16), 8)), SFXP(SBV(25231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5018, 16), 8), SFXP(SBV(-12928, 16), 8)), SFXP(SBV(-17946, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29762, 16), 8), SFXP(SBV(25512, 16), 8)), SFXP(SBV(-4250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57890, 16), 8), UFXP(BV(55631, 16), 8)), UFXP(BV(62619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59862, 16), 8), UFXP(BV(55722, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62146, 16), 8), UFXP(BV(26346, 16), 8)), UFXP(BV(35800, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30986, 16), 8), UFXP(BV(39988, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8732, 16), 8), UFXP(BV(8328, 16), 8)), UFXP(BV(21919, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15630, 16), 8), UFXP(BV(53752, 16), 8)), UFXP(BV(3846, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36959, 16), 8), UFXP(BV(29676, 16), 8)), UFXP(BV(7283, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12711, 16), 8), SFXP(SBV(15176, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6902, 16), 8), SFXP(SBV(-20624, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50043, 16), 8), UFXP(BV(29827, 16), 8)), UFXP(BV(63427, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17562, 16), 8), UFXP(BV(10269, 16), 8)), UFXP(BV(7293, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7223, 16), 8), SFXP(SBV(18924, 16), 8)), SFXP(SBV(-26147, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26902, 16), 8), UFXP(BV(28437, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2594, 16), 8), SFXP(SBV(-29313, 16), 8)), SFXP(SBV(-31907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49427, 16), 8), UFXP(BV(47124, 16), 8)), UFXP(BV(2303, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42506, 16), 8), UFXP(BV(43553, 16), 8)), UFXP(BV(20523, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61451, 16), 8), UFXP(BV(5284, 16), 8)), UFXP(BV(1199, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20689, 16), 8), UFXP(BV(41693, 16), 8)), UFXP(BV(62382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27411, 16), 8), UFXP(BV(5289, 16), 8)), UFXP(BV(32700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7990, 16), 8), SFXP(SBV(-15815, 16), 8)), SFXP(SBV(-7825, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7074, 16), 8), SFXP(SBV(193, 16), 8)), SFXP(SBV(-7267, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55883, 16), 8), UFXP(BV(56492, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6584, 16), 8), UFXP(BV(41010, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31738, 16), 8), SFXP(SBV(15522, 16), 8)), SFXP(SBV(-16216, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11565, 16), 8), SFXP(SBV(-4127, 16), 8)), SFXP(SBV(7438, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21190, 16), 8), UFXP(BV(47364, 16), 8)), UFXP(BV(39362, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25926, 16), 8), SFXP(SBV(1892, 16), 8)), SFXP(SBV(-4998, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1389, 16), 8), UFXP(BV(31231, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10830, 16), 8), SFXP(SBV(208, 16), 8)), SFXP(SBV(11038, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11300, 16), 8), SFXP(SBV(-8648, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57113, 16), 8), UFXP(BV(63770, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27722, 16), 8), UFXP(BV(43404, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4452, 16), 8), SFXP(SBV(11811, 16), 8)), SFXP(SBV(-16263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44485, 16), 8), UFXP(BV(42935, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14136, 16), 8), SFXP(SBV(23439, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22278, 16), 8), UFXP(BV(59906, 16), 8)), UFXP(BV(35882, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20913, 16), 8), SFXP(SBV(-21742, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1770, 16), 8), UFXP(BV(50168, 16), 8)), UFXP(BV(51938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60334, 16), 8), UFXP(BV(22629, 16), 8)), UFXP(BV(24779, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17818, 16), 8), UFXP(BV(64612, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16934, 16), 8), UFXP(BV(48131, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23939, 16), 8), UFXP(BV(47161, 16), 8)), UFXP(BV(19194, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20734, 16), 8), SFXP(SBV(3482, 16), 8)), SFXP(SBV(17252, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22405, 16), 8), UFXP(BV(43427, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14477, 16), 8), SFXP(SBV(-11639, 16), 8)), SFXP(SBV(-26116, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11090, 16), 8), UFXP(BV(20578, 16), 8)), UFXP(BV(31668, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48334, 16), 8), UFXP(BV(55900, 16), 8)), UFXP(BV(2886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62393, 16), 8), UFXP(BV(24094, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51015, 16), 8), UFXP(BV(64194, 16), 8)), UFXP(BV(12890, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48318, 16), 8), UFXP(BV(5703, 16), 8)), UFXP(BV(54021, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47713, 16), 8), UFXP(BV(62597, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11234, 16), 8), SFXP(SBV(-3689, 16), 8)), SFXP(SBV(30811, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7748, 16), 8), SFXP(SBV(11380, 16), 8)), SFXP(SBV(-16742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27940, 16), 8), UFXP(BV(40345, 16), 8)), UFXP(BV(2749, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39546, 16), 8), UFXP(BV(63547, 16), 8)), UFXP(BV(41535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1589, 16), 8), SFXP(SBV(-24097, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6033, 16), 8), SFXP(SBV(16763, 16), 8)), SFXP(SBV(-22796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22226, 16), 8), SFXP(SBV(-27391, 16), 8)), SFXP(SBV(5165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25255, 16), 8), SFXP(SBV(29416, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15326, 16), 8), SFXP(SBV(5597, 16), 8)), SFXP(SBV(-20923, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19431, 16), 8), SFXP(SBV(6066, 16), 8)), SFXP(SBV(1671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11098, 16), 8), SFXP(SBV(-12990, 16), 8)), SFXP(SBV(1892, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6955, 16), 8), SFXP(SBV(28526, 16), 8)), SFXP(SBV(-11438, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4540, 16), 8), UFXP(BV(28732, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6510, 16), 8), SFXP(SBV(-24744, 16), 8)), SFXP(SBV(-26127, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16961, 16), 8), SFXP(SBV(-11240, 16), 8)), SFXP(SBV(-28201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25451, 16), 8), UFXP(BV(21126, 16), 8)), UFXP(BV(46577, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18275, 16), 8), SFXP(SBV(3076, 16), 8)), SFXP(SBV(-22978, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-181, 16), 8), SFXP(SBV(1381, 16), 8)), SFXP(SBV(-1562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30417, 16), 8), SFXP(SBV(-3515, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(25161, 16), 8), SFXP(SBV(-20512, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49866, 16), 8), UFXP(BV(13647, 16), 8)), UFXP(BV(36219, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9444, 16), 8), SFXP(SBV(-25321, 16), 8)), SFXP(SBV(-16603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10554, 16), 8), SFXP(SBV(14356, 16), 8)), SFXP(SBV(3802, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63738, 16), 8), UFXP(BV(51394, 16), 8)), UFXP(BV(12344, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5428, 16), 8), UFXP(BV(33282, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30549, 16), 8), UFXP(BV(6200, 16), 8)), UFXP(BV(18963, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37629, 16), 8), UFXP(BV(10613, 16), 8)), UFXP(BV(27016, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51634, 16), 8), UFXP(BV(3390, 16), 8)), UFXP(BV(55024, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30899, 16), 8), UFXP(BV(31179, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60056, 16), 8), UFXP(BV(5974, 16), 8)), UFXP(BV(25208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31311, 16), 8), SFXP(SBV(-30842, 16), 8)), SFXP(SBV(3383, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19562, 16), 8), SFXP(SBV(-29192, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51397, 16), 8), UFXP(BV(51802, 16), 8)), UFXP(BV(37663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59353, 16), 8), UFXP(BV(2160, 16), 8)), UFXP(BV(57193, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6273, 16), 8), SFXP(SBV(-17900, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33300, 16), 8), UFXP(BV(27513, 16), 8)), UFXP(BV(60813, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53004, 16), 8), UFXP(BV(53526, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20925, 16), 8), UFXP(BV(41415, 16), 8)), UFXP(BV(45046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36516, 16), 8), UFXP(BV(4929, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1008, 16), 8), SFXP(SBV(480, 16), 8)), SFXP(SBV(-1890, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13732, 16), 8), SFXP(SBV(20728, 16), 8)), SFXP(SBV(2250, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1227, 16), 8), SFXP(SBV(-11648, 16), 8)), SFXP(SBV(12875, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33076, 16), 8), UFXP(BV(2153, 16), 8)), UFXP(BV(35229, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22543, 16), 8), SFXP(SBV(-4032, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18427, 16), 8), SFXP(SBV(-6074, 16), 8)), SFXP(SBV(24501, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3849, 16), 8), UFXP(BV(37901, 16), 8)), UFXP(BV(45559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31862, 16), 8), UFXP(BV(34708, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5339, 16), 8), UFXP(BV(31151, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8767, 16), 8), UFXP(BV(43721, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37290, 16), 8), UFXP(BV(52936, 16), 8)), UFXP(BV(24690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14275, 16), 8), UFXP(BV(26295, 16), 8)), UFXP(BV(53516, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(429, 16), 8), UFXP(BV(34043, 16), 8)), UFXP(BV(34472, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23550, 16), 8), SFXP(SBV(-6810, 16), 8)), SFXP(SBV(30360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39872, 16), 8), UFXP(BV(56228, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23042, 16), 8), UFXP(BV(62628, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1330, 16), 8), SFXP(SBV(-21406, 16), 8)), SFXP(SBV(-20076, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52578, 16), 8), UFXP(BV(24873, 16), 8)), UFXP(BV(27705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13708, 16), 8), UFXP(BV(56523, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18814, 16), 8), SFXP(SBV(25348, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36766, 16), 8), UFXP(BV(48668, 16), 8)), UFXP(BV(53634, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16223, 16), 8), SFXP(SBV(-14569, 16), 8)), SFXP(SBV(5750, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15747, 16), 8), SFXP(SBV(-18539, 16), 8)), SFXP(SBV(-26253, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13085, 16), 8), SFXP(SBV(14645, 16), 8)), SFXP(SBV(-27730, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27561, 16), 8), UFXP(BV(23087, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25664, 16), 8), SFXP(SBV(-28612, 16), 8)), SFXP(SBV(15231, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30102, 16), 8), UFXP(BV(63924, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1112, 16), 8), SFXP(SBV(-20965, 16), 8)), SFXP(SBV(19853, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12690, 16), 8), SFXP(SBV(-28098, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38733, 16), 8), UFXP(BV(15780, 16), 8)), UFXP(BV(28230, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3135, 16), 8), UFXP(BV(54805, 16), 8)), UFXP(BV(57940, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13299, 16), 8), SFXP(SBV(-27016, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7225, 16), 8), SFXP(SBV(-13918, 16), 8)), SFXP(SBV(21143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21944, 16), 8), UFXP(BV(29976, 16), 8)), UFXP(BV(51920, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35857, 16), 8), UFXP(BV(9419, 16), 8)), UFXP(BV(45276, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27238, 16), 8), UFXP(BV(14099, 16), 8)), UFXP(BV(58319, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37711, 16), 8), UFXP(BV(6171, 16), 8)), UFXP(BV(43882, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22730, 16), 8), SFXP(SBV(31080, 16), 8)), SFXP(SBV(8350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-26012, 16), 8), SFXP(SBV(-26966, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8254, 16), 8), SFXP(SBV(-23890, 16), 8)), SFXP(SBV(16167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15255, 16), 8), SFXP(SBV(16500, 16), 8)), SFXP(SBV(-1245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28023, 16), 8), UFXP(BV(38906, 16), 8)), UFXP(BV(54653, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10935, 16), 8), SFXP(SBV(-7183, 16), 8)), SFXP(SBV(18118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2, 16), 8), SFXP(SBV(-13459, 16), 8)), SFXP(SBV(-106, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19083, 16), 8), SFXP(SBV(29017, 16), 8)), SFXP(SBV(-17436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63941, 16), 8), UFXP(BV(59122, 16), 8)), UFXP(BV(4819, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47008, 16), 8), UFXP(BV(54906, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23943, 16), 8), SFXP(SBV(17114, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32220, 16), 8), SFXP(SBV(22604, 16), 8)), SFXP(SBV(-9616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27028, 16), 8), SFXP(SBV(21398, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31532, 16), 8), SFXP(SBV(-20068, 16), 8)), SFXP(SBV(13936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41110, 16), 8), UFXP(BV(53633, 16), 8)), UFXP(BV(29207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14021, 16), 8), SFXP(SBV(-5612, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39686, 16), 8), UFXP(BV(64515, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28893, 16), 8), SFXP(SBV(4402, 16), 8)), SFXP(SBV(24491, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1485, 16), 8), UFXP(BV(31831, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(191, 16), 8), SFXP(SBV(-1971, 16), 8)), SFXP(SBV(-1780, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22366, 16), 8), SFXP(SBV(-1955, 16), 8)), SFXP(SBV(-24321, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15542, 16), 8), UFXP(BV(63308, 16), 8)), UFXP(BV(17770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16714, 16), 8), UFXP(BV(49224, 16), 8)), UFXP(BV(33026, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30389, 16), 8), SFXP(SBV(7058, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(27774, 16), 8), SFXP(SBV(7512, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29520, 16), 8), SFXP(SBV(-22681, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26912, 16), 8), UFXP(BV(24427, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4767, 16), 8), UFXP(BV(7766, 16), 8)), UFXP(BV(12533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31139, 16), 8), UFXP(BV(44192, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22224, 16), 8), SFXP(SBV(2818, 16), 8)), SFXP(SBV(-19406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4270, 16), 8), SFXP(SBV(11667, 16), 8)), SFXP(SBV(2007, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2409, 16), 8), UFXP(BV(4836, 16), 8)), UFXP(BV(45508, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18961, 16), 8), SFXP(SBV(16757, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20372, 16), 8), SFXP(SBV(26414, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9555, 16), 8), SFXP(SBV(-23670, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25381, 16), 8), SFXP(SBV(30234, 16), 8)), SFXP(SBV(-4853, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25702, 16), 8), SFXP(SBV(29457, 16), 8)), SFXP(SBV(-3755, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25091, 16), 8), SFXP(SBV(28578, 16), 8)), SFXP(SBV(17069, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8334, 16), 8), SFXP(SBV(28864, 16), 8)), SFXP(SBV(-22155, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46106, 16), 8), UFXP(BV(34494, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27223, 16), 8), SFXP(SBV(-11650, 16), 8)), SFXP(SBV(6325, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24424, 16), 8), SFXP(SBV(24980, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43434, 16), 8), UFXP(BV(47501, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52546, 16), 8), UFXP(BV(57100, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40256, 16), 8), UFXP(BV(42352, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(27638, 16), 8), SFXP(SBV(-13309, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1841, 16), 8), UFXP(BV(38662, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5221, 16), 8), SFXP(SBV(15269, 16), 8)), SFXP(SBV(-20490, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24018, 16), 8), SFXP(SBV(4871, 16), 8)), SFXP(SBV(-1753, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64581, 16), 8), UFXP(BV(11140, 16), 8)), UFXP(BV(53441, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1351, 16), 8), SFXP(SBV(-20537, 16), 8)), SFXP(SBV(-19186, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17143, 16), 8), SFXP(SBV(20549, 16), 8)), SFXP(SBV(-3406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24911, 16), 8), SFXP(SBV(4671, 16), 8)), SFXP(SBV(20240, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2348, 16), 8), SFXP(SBV(-1177, 16), 8)), SFXP(SBV(3525, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15334, 16), 8), UFXP(BV(49752, 16), 8)), UFXP(BV(65086, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12428, 16), 8), SFXP(SBV(-27366, 16), 8)), SFXP(SBV(-14938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(20342, 16), 8), UFXP(BV(36767, 16), 8)), UFXP(BV(37956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9432, 16), 8), SFXP(SBV(4558, 16), 8)), SFXP(SBV(13990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30190, 16), 8), SFXP(SBV(-3036, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39877, 16), 8), UFXP(BV(38858, 16), 8)), UFXP(BV(1019, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63764, 16), 8), UFXP(BV(769, 16), 8)), UFXP(BV(62995, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43309, 16), 8), UFXP(BV(42314, 16), 8)), UFXP(BV(15081, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(715, 16), 8), UFXP(BV(63729, 16), 8)), UFXP(BV(2522, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27754, 16), 8), SFXP(SBV(10899, 16), 8)), SFXP(SBV(16855, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54193, 16), 8), UFXP(BV(62614, 16), 8)), UFXP(BV(51271, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(884, 16), 8), UFXP(BV(47778, 16), 8)), UFXP(BV(18642, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19818, 16), 8), UFXP(BV(52422, 16), 8)), UFXP(BV(32932, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12040, 16), 8), SFXP(SBV(-32435, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14463, 16), 8), SFXP(SBV(11129, 16), 8)), SFXP(SBV(25592, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27972, 16), 8), SFXP(SBV(-14092, 16), 8)), SFXP(SBV(13880, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51843, 16), 8), UFXP(BV(5180, 16), 8)), UFXP(BV(46663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21485, 16), 8), UFXP(BV(64526, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1543, 16), 8), UFXP(BV(44929, 16), 8)), UFXP(BV(8658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26863, 16), 8), SFXP(SBV(32360, 16), 8)), SFXP(SBV(-5497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15778, 16), 8), SFXP(SBV(-16579, 16), 8)), SFXP(SBV(-32357, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-17797, 16), 8), SFXP(SBV(-17963, 16), 8)), SFXP(SBV(3596, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2, 16), 8), SFXP(SBV(23976, 16), 8)), SFXP(SBV(-188, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23433, 16), 8), SFXP(SBV(28454, 16), 8)), SFXP(SBV(-13649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54355, 16), 8), UFXP(BV(20410, 16), 8)), UFXP(BV(33945, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41357, 16), 8), UFXP(BV(29381, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-724, 16), 8), SFXP(SBV(847, 16), 8)), SFXP(SBV(123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10326, 16), 8), SFXP(SBV(-28028, 16), 8)), SFXP(SBV(17702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33222, 16), 8), UFXP(BV(60872, 16), 8)), UFXP(BV(28558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20325, 16), 8), SFXP(SBV(11166, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28016, 16), 8), SFXP(SBV(22954, 16), 8)), SFXP(SBV(5062, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7496, 16), 8), SFXP(SBV(-21570, 16), 8)), SFXP(SBV(-29066, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2389, 16), 8), UFXP(BV(13868, 16), 8)), UFXP(BV(16257, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47688, 16), 8), UFXP(BV(9717, 16), 8)), UFXP(BV(57405, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41575, 16), 8), UFXP(BV(38816, 16), 8)), UFXP(BV(2759, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38487, 16), 8), UFXP(BV(29997, 16), 8)), UFXP(BV(2948, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15534, 16), 8), UFXP(BV(37715, 16), 8)), UFXP(BV(53249, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(717, 16), 8), UFXP(BV(30625, 16), 8)), UFXP(BV(31342, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28963, 16), 8), UFXP(BV(5694, 16), 8)), UFXP(BV(34657, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31039, 16), 8), SFXP(SBV(-2609, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59009, 16), 8), UFXP(BV(24714, 16), 8)), UFXP(BV(34295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25318, 16), 8), SFXP(SBV(24566, 16), 8)), SFXP(SBV(-15652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29798, 16), 8), SFXP(SBV(10985, 16), 8)), SFXP(SBV(18813, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(14321, 16), 8), UFXP(BV(43973, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2049, 16), 8), SFXP(SBV(26747, 16), 8)), SFXP(SBV(24698, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16310, 16), 8), SFXP(SBV(-1485, 16), 8)), SFXP(SBV(14825, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16394, 16), 8), SFXP(SBV(-2714, 16), 8)), SFXP(SBV(-13680, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57731, 16), 8), UFXP(BV(22678, 16), 8)), UFXP(BV(35053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43594, 16), 8), UFXP(BV(49716, 16), 8)), UFXP(BV(59414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32011, 16), 8), UFXP(BV(17410, 16), 8)), UFXP(BV(14310, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16699, 16), 8), SFXP(SBV(11046, 16), 8)), SFXP(SBV(-27745, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7406, 16), 8), SFXP(SBV(-7491, 16), 8)), SFXP(SBV(85, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61653, 16), 8), UFXP(BV(48701, 16), 8)), UFXP(BV(63353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3298, 16), 8), UFXP(BV(19579, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23391, 16), 8), SFXP(SBV(-28983, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1617, 16), 8), SFXP(SBV(-10083, 16), 8)), SFXP(SBV(-8466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(65517, 16), 8), UFXP(BV(49861, 16), 8)), UFXP(BV(46731, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36324, 16), 8), UFXP(BV(35656, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41538, 16), 8), UFXP(BV(46039, 16), 8)), UFXP(BV(22041, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27719, 16), 8), SFXP(SBV(-18675, 16), 8)), SFXP(SBV(-9044, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6694, 16), 8), SFXP(SBV(-27978, 16), 8)), SFXP(SBV(21284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49147, 16), 8), UFXP(BV(61572, 16), 8)), UFXP(BV(45183, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22305, 16), 8), UFXP(BV(45357, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58526, 16), 8), UFXP(BV(15610, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20226, 16), 8), SFXP(SBV(8365, 16), 8)), SFXP(SBV(11861, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8898, 16), 8), UFXP(BV(18781, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26698, 16), 8), SFXP(SBV(24847, 16), 8)), SFXP(SBV(1851, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28540, 16), 8), SFXP(SBV(-30263, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22396, 16), 8), SFXP(SBV(-30653, 16), 8)), SFXP(SBV(-5318, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33152, 16), 8), UFXP(BV(34701, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26031, 16), 8), SFXP(SBV(32080, 16), 8)), SFXP(SBV(7425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8960, 16), 8), UFXP(BV(49610, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-26342, 16), 8), SFXP(SBV(28934, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50076, 16), 8), UFXP(BV(58334, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27304, 16), 8), SFXP(SBV(6021, 16), 8)), SFXP(SBV(21283, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19689, 16), 8), UFXP(BV(51225, 16), 8)), UFXP(BV(34000, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10748, 16), 8), SFXP(SBV(32343, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6641, 16), 8), SFXP(SBV(7116, 16), 8)), SFXP(SBV(-12008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30849, 16), 8), UFXP(BV(31927, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26053, 16), 8), SFXP(SBV(24920, 16), 8)), SFXP(SBV(1133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17774, 16), 8), SFXP(SBV(20279, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31550, 16), 8), SFXP(SBV(10947, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5356, 16), 8), SFXP(SBV(-5594, 16), 8)), SFXP(SBV(-10950, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58688, 16), 8), UFXP(BV(16073, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31463, 16), 8), SFXP(SBV(-27077, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8778, 16), 8), SFXP(SBV(-22929, 16), 8)), SFXP(SBV(219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31097, 16), 8), UFXP(BV(46413, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(24554, 16), 8), UFXP(BV(18653, 16), 8)), UFXP(BV(19613, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21792, 16), 8), SFXP(SBV(-1453, 16), 8)), SFXP(SBV(-20339, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4628, 16), 8), SFXP(SBV(-27870, 16), 8)), SFXP(SBV(23242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52392, 16), 8), UFXP(BV(35094, 16), 8)), UFXP(BV(17298, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57939, 16), 8), UFXP(BV(51771, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16025, 16), 8), SFXP(SBV(16558, 16), 8)), SFXP(SBV(-533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57709, 16), 8), UFXP(BV(49807, 16), 8)), UFXP(BV(7902, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31970, 16), 8), SFXP(SBV(21650, 16), 8)), SFXP(SBV(11916, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1900, 16), 8), SFXP(SBV(-9277, 16), 8)), SFXP(SBV(-7377, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63102, 16), 8), UFXP(BV(10257, 16), 8)), UFXP(BV(52845, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29512, 16), 8), SFXP(SBV(-31906, 16), 8)), SFXP(SBV(-2394, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12463, 16), 8), UFXP(BV(62537, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63684, 16), 8), UFXP(BV(15660, 16), 8)), UFXP(BV(29045, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27098, 16), 8), SFXP(SBV(341, 16), 8)), SFXP(SBV(29440, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15322, 16), 8), UFXP(BV(41949, 16), 8)), UFXP(BV(38909, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23130, 16), 8), UFXP(BV(46442, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7793, 16), 8), SFXP(SBV(27853, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30904, 16), 8), UFXP(BV(17749, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57066, 16), 8), UFXP(BV(35600, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19016, 16), 8), SFXP(SBV(-31677, 16), 8)), SFXP(SBV(14843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-7018, 16), 8), SFXP(SBV(-18430, 16), 8)), SFXP(SBV(-19047, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51656, 16), 8), UFXP(BV(19942, 16), 8)), UFXP(BV(6062, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3727, 16), 8), SFXP(SBV(-11095, 16), 8)), SFXP(SBV(14822, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55397, 16), 8), UFXP(BV(28215, 16), 8)), UFXP(BV(27182, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13277, 16), 8), SFXP(SBV(14731, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53681, 16), 8), UFXP(BV(45343, 16), 8)), UFXP(BV(8338, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24301, 16), 8), SFXP(SBV(-14323, 16), 8)), SFXP(SBV(16634, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13251, 16), 8), SFXP(SBV(26868, 16), 8)), SFXP(SBV(-14477, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13362, 16), 8), SFXP(SBV(7070, 16), 8)), SFXP(SBV(6292, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1722, 16), 8), SFXP(SBV(-7550, 16), 8)), SFXP(SBV(-5828, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31182, 16), 8), SFXP(SBV(-21323, 16), 8)), SFXP(SBV(-9859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22060, 16), 8), SFXP(SBV(14341, 16), 8)), SFXP(SBV(-7719, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27241, 16), 8), SFXP(SBV(-21725, 16), 8)), SFXP(SBV(18001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20078, 16), 8), SFXP(SBV(9448, 16), 8)), SFXP(SBV(-20108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39984, 16), 8), UFXP(BV(43211, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10300, 16), 8), SFXP(SBV(4646, 16), 8)), SFXP(SBV(14946, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20571, 16), 8), SFXP(SBV(3607, 16), 8)), SFXP(SBV(24178, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45379, 16), 8), UFXP(BV(55213, 16), 8)), UFXP(BV(35056, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19057, 16), 8), UFXP(BV(7080, 16), 8)), UFXP(BV(26137, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10990, 16), 8), SFXP(SBV(18249, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27923, 16), 8), UFXP(BV(33499, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19702, 16), 8), SFXP(SBV(2694, 16), 8)), SFXP(SBV(22396, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24862, 16), 8), SFXP(SBV(-2230, 16), 8)), SFXP(SBV(-27092, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10044, 16), 8), SFXP(SBV(-26740, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53991, 16), 8), UFXP(BV(37570, 16), 8)), UFXP(BV(59281, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62618, 16), 8), UFXP(BV(31522, 16), 8)), UFXP(BV(42619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29687, 16), 8), UFXP(BV(58322, 16), 8)), UFXP(BV(22473, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16120, 16), 8), SFXP(SBV(4863, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2099, 16), 8), SFXP(SBV(25054, 16), 8)), SFXP(SBV(-27153, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1693, 16), 8), UFXP(BV(30748, 16), 8)), UFXP(BV(36481, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10379, 16), 8), UFXP(BV(43582, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18541, 16), 8), SFXP(SBV(-6195, 16), 8)), SFXP(SBV(12346, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5788, 16), 8), SFXP(SBV(-11913, 16), 8)), SFXP(SBV(17701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29914, 16), 8), SFXP(SBV(-15833, 16), 8)), SFXP(SBV(-15102, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2932, 16), 8), UFXP(BV(47111, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5583, 16), 8), SFXP(SBV(30049, 16), 8)), SFXP(SBV(33, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3375, 16), 8), SFXP(SBV(-3148, 16), 8)), SFXP(SBV(6523, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50012, 16), 8), UFXP(BV(64870, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31056, 16), 8), UFXP(BV(20287, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31540, 16), 8), UFXP(BV(60368, 16), 8)), UFXP(BV(26372, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44077, 16), 8), UFXP(BV(9124, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20612, 16), 8), UFXP(BV(50119, 16), 8)), UFXP(BV(37667, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24083, 16), 8), UFXP(BV(3247, 16), 8)), UFXP(BV(20836, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10731, 16), 8), UFXP(BV(58351, 16), 8)), UFXP(BV(21123, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61331, 16), 8), UFXP(BV(56160, 16), 8)), UFXP(BV(19608, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28399, 16), 8), SFXP(SBV(-10603, 16), 8)), SFXP(SBV(26534, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12182, 16), 8), UFXP(BV(42168, 16), 8)), UFXP(BV(54350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1612, 16), 8), SFXP(SBV(4757, 16), 8)), SFXP(SBV(-6369, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25050, 16), 8), SFXP(SBV(-15879, 16), 8)), SFXP(SBV(-24607, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35229, 16), 8), UFXP(BV(56500, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17823, 16), 8), UFXP(BV(35191, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64792, 16), 8), UFXP(BV(14093, 16), 8)), UFXP(BV(13349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37632, 16), 8), UFXP(BV(18746, 16), 8)), UFXP(BV(3150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42306, 16), 8), UFXP(BV(26742, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1195, 16), 8), SFXP(SBV(-13728, 16), 8)), SFXP(SBV(14923, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19945, 16), 8), UFXP(BV(34042, 16), 8)), UFXP(BV(53987, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19095, 16), 8), UFXP(BV(39520, 16), 8)), UFXP(BV(64207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20602, 16), 8), SFXP(SBV(-1583, 16), 8)), SFXP(SBV(-19019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5565, 16), 8), SFXP(SBV(-6871, 16), 8)), SFXP(SBV(12436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17777, 16), 8), UFXP(BV(65294, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19892, 16), 8), SFXP(SBV(23452, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19469, 16), 8), SFXP(SBV(18903, 16), 8)), SFXP(SBV(-4205, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12470, 16), 8), SFXP(SBV(16978, 16), 8)), SFXP(SBV(4508, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30735, 16), 8), SFXP(SBV(-18933, 16), 8)), SFXP(SBV(20690, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17987, 16), 8), SFXP(SBV(-20858, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2172, 16), 8), UFXP(BV(46895, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46646, 16), 8), UFXP(BV(53928, 16), 8)), UFXP(BV(58254, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23322, 16), 8), UFXP(BV(49283, 16), 8)), UFXP(BV(33310, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23756, 16), 8), UFXP(BV(39936, 16), 8)), UFXP(BV(63692, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64542, 16), 8), UFXP(BV(35166, 16), 8)), UFXP(BV(34172, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36023, 16), 8), UFXP(BV(46962, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49026, 16), 8), UFXP(BV(54764, 16), 8)), UFXP(BV(38254, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12225, 16), 8), SFXP(SBV(-308, 16), 8)), SFXP(SBV(-12533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15605, 16), 8), SFXP(SBV(-6662, 16), 8)), SFXP(SBV(-12879, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59722, 16), 8), UFXP(BV(13648, 16), 8)), UFXP(BV(46074, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9290, 16), 8), SFXP(SBV(-7441, 16), 8)), SFXP(SBV(-16731, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14776, 16), 8), SFXP(SBV(30827, 16), 8)), SFXP(SBV(19933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31429, 16), 8), SFXP(SBV(19546, 16), 8)), SFXP(SBV(-11883, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50242, 16), 8), UFXP(BV(10208, 16), 8)), UFXP(BV(60450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28757, 16), 8), UFXP(BV(25693, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12258, 16), 8), UFXP(BV(49831, 16), 8)), UFXP(BV(26753, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20923, 16), 8), SFXP(SBV(-4743, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36131, 16), 8), UFXP(BV(15451, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25079, 16), 8), SFXP(SBV(25757, 16), 8)), SFXP(SBV(-678, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(7202, 16), 8), UFXP(BV(51463, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28005, 16), 8), SFXP(SBV(19387, 16), 8)), SFXP(SBV(-18144, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24027, 16), 8), UFXP(BV(50353, 16), 8)), UFXP(BV(39210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15379, 16), 8), UFXP(BV(52286, 16), 8)), UFXP(BV(60849, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31092, 16), 8), SFXP(SBV(23449, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20821, 16), 8), UFXP(BV(16282, 16), 8)), UFXP(BV(4539, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13883, 16), 8), SFXP(SBV(-31426, 16), 8)), SFXP(SBV(-17543, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17469, 16), 8), SFXP(SBV(200, 16), 8)), SFXP(SBV(-13647, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4161, 16), 8), UFXP(BV(37490, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23586, 16), 8), SFXP(SBV(-8600, 16), 8)), SFXP(SBV(32186, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10520, 16), 8), SFXP(SBV(-23311, 16), 8)), SFXP(SBV(-31705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37310, 16), 8), UFXP(BV(35874, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3691, 16), 8), UFXP(BV(49332, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12938, 16), 8), UFXP(BV(39084, 16), 8)), UFXP(BV(52022, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56905, 16), 8), UFXP(BV(29444, 16), 8)), UFXP(BV(20813, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16839, 16), 8), UFXP(BV(43613, 16), 8)), UFXP(BV(38762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20977, 16), 8), SFXP(SBV(9522, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19371, 16), 8), UFXP(BV(45934, 16), 8)), UFXP(BV(38973, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6113, 16), 8), SFXP(SBV(27427, 16), 8)), SFXP(SBV(-31996, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20018, 16), 8), SFXP(SBV(24930, 16), 8)), SFXP(SBV(16671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-5937, 16), 8), SFXP(SBV(25165, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21212, 16), 8), UFXP(BV(505, 16), 8)), UFXP(BV(41843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29842, 16), 8), SFXP(SBV(-10110, 16), 8)), SFXP(SBV(-19732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19818, 16), 8), UFXP(BV(14143, 16), 8)), UFXP(BV(33961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3681, 16), 8), UFXP(BV(52447, 16), 8)), UFXP(BV(16770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1134, 16), 8), SFXP(SBV(-22089, 16), 8)), SFXP(SBV(23223, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15156, 16), 8), SFXP(SBV(3683, 16), 8)), SFXP(SBV(-11473, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30070, 16), 8), UFXP(BV(48288, 16), 8)), UFXP(BV(35858, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29279, 16), 8), UFXP(BV(7710, 16), 8)), UFXP(BV(36989, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13659, 16), 8), UFXP(BV(23495, 16), 8)), UFXP(BV(37154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23128, 16), 8), SFXP(SBV(-6874, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25844, 16), 8), SFXP(SBV(-16144, 16), 8)), SFXP(SBV(-9700, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2573, 16), 8), UFXP(BV(28306, 16), 8)), UFXP(BV(22354, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5275, 16), 8), UFXP(BV(43347, 16), 8)), UFXP(BV(48622, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29963, 16), 8), UFXP(BV(46430, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6999, 16), 8), SFXP(SBV(-9797, 16), 8)), SFXP(SBV(-2798, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5200, 16), 8), UFXP(BV(4352, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13865, 16), 8), SFXP(SBV(-15744, 16), 8)), SFXP(SBV(29609, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27427, 16), 8), SFXP(SBV(-1279, 16), 8)), SFXP(SBV(-26148, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19578, 16), 8), SFXP(SBV(20990, 16), 8)), SFXP(SBV(-1412, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13856, 16), 8), SFXP(SBV(-20460, 16), 8)), SFXP(SBV(-6604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27085, 16), 8), SFXP(SBV(9259, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64436, 16), 8), UFXP(BV(37999, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3286, 16), 8), UFXP(BV(5307, 16), 8)), UFXP(BV(63515, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29060, 16), 8), SFXP(SBV(-30065, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26911, 16), 8), UFXP(BV(33604, 16), 8)), UFXP(BV(58843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21228, 16), 8), SFXP(SBV(6222, 16), 8)), SFXP(SBV(-15006, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16780, 16), 8), SFXP(SBV(6413, 16), 8)), SFXP(SBV(-27137, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14339, 16), 8), SFXP(SBV(6067, 16), 8)), SFXP(SBV(8272, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15492, 16), 8), SFXP(SBV(-8275, 16), 8)), SFXP(SBV(-23767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20605, 16), 8), UFXP(BV(19812, 16), 8)), UFXP(BV(40417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31273, 16), 8), UFXP(BV(25026, 16), 8)), UFXP(BV(6247, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27440, 16), 8), UFXP(BV(40185, 16), 8)), UFXP(BV(2089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50146, 16), 8), UFXP(BV(51185, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34080, 16), 8), UFXP(BV(32463, 16), 8)), UFXP(BV(1007, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20223, 16), 8), UFXP(BV(64143, 16), 8)), UFXP(BV(21616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2348, 16), 8), SFXP(SBV(-9826, 16), 8)), SFXP(SBV(-12174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15705, 16), 8), UFXP(BV(34115, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15472, 16), 8), SFXP(SBV(-14007, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(832, 16), 8), UFXP(BV(17758, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32207, 16), 8), SFXP(SBV(-31184, 16), 8)), SFXP(SBV(-1023, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18167, 16), 8), SFXP(SBV(13782, 16), 8)), SFXP(SBV(4385, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62719, 16), 8), UFXP(BV(32246, 16), 8)), UFXP(BV(35824, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11216, 16), 8), SFXP(SBV(32509, 16), 8)), SFXP(SBV(-17491, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41462, 16), 8), UFXP(BV(1914, 16), 8)), UFXP(BV(39548, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2206, 16), 8), SFXP(SBV(13839, 16), 8)), SFXP(SBV(-16045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3310, 16), 8), UFXP(BV(52831, 16), 8)), UFXP(BV(27728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13262, 16), 8), SFXP(SBV(7369, 16), 8)), SFXP(SBV(-11468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37440, 16), 8), UFXP(BV(27216, 16), 8)), UFXP(BV(64656, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9654, 16), 8), SFXP(SBV(16972, 16), 8)), SFXP(SBV(-7318, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6941, 16), 8), SFXP(SBV(3484, 16), 8)), SFXP(SBV(-10425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26258, 16), 8), UFXP(BV(30934, 16), 8)), UFXP(BV(57192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2533, 16), 8), SFXP(SBV(8494, 16), 8)), SFXP(SBV(5961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50194, 16), 8), UFXP(BV(36556, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23103, 16), 8), UFXP(BV(57073, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60954, 16), 8), UFXP(BV(54290, 16), 8)), UFXP(BV(6664, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65117, 16), 8), UFXP(BV(7791, 16), 8)), UFXP(BV(57326, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12571, 16), 8), UFXP(BV(45777, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19340, 16), 8), UFXP(BV(59327, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9543, 16), 8), UFXP(BV(7887, 16), 8)), UFXP(BV(17430, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35052, 16), 8), UFXP(BV(23143, 16), 8)), UFXP(BV(58195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6215, 16), 8), SFXP(SBV(-926, 16), 8)), SFXP(SBV(7141, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(25022, 16), 8), SFXP(SBV(-9582, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28676, 16), 8), UFXP(BV(14197, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-4389, 16), 8), SFXP(SBV(-23297, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28748, 16), 8), SFXP(SBV(2455, 16), 8)), SFXP(SBV(26293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63373, 16), 8), UFXP(BV(54745, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-155, 16), 8), SFXP(SBV(-19475, 16), 8)), SFXP(SBV(11792, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31433, 16), 8), SFXP(SBV(-11833, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13841, 16), 8), SFXP(SBV(1382, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61957, 16), 8), UFXP(BV(53594, 16), 8)), UFXP(BV(50015, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13563, 16), 8), SFXP(SBV(-12562, 16), 8)), SFXP(SBV(10181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29069, 16), 8), SFXP(SBV(14730, 16), 8)), SFXP(SBV(-21737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7133, 16), 8), SFXP(SBV(-23234, 16), 8)), SFXP(SBV(-7984, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(7186, 16), 8), UFXP(BV(11287, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10955, 16), 8), UFXP(BV(59218, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57294, 16), 8), UFXP(BV(20760, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25388, 16), 8), SFXP(SBV(32136, 16), 8)), SFXP(SBV(8012, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29218, 16), 8), SFXP(SBV(331, 16), 8)), SFXP(SBV(28887, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56576, 16), 8), UFXP(BV(56301, 16), 8)), UFXP(BV(275, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11313, 16), 8), SFXP(SBV(32300, 16), 8)), SFXP(SBV(-20987, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61960, 16), 8), UFXP(BV(61555, 16), 8)), UFXP(BV(57979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-6037, 16), 8), SFXP(SBV(14368, 16), 8)), SFXP(SBV(-11147, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21141, 16), 8), UFXP(BV(20136, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2663, 16), 8), UFXP(BV(32132, 16), 8)), UFXP(BV(34795, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5605, 16), 8), SFXP(SBV(20784, 16), 8)), SFXP(SBV(15179, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27520, 16), 8), UFXP(BV(29486, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24329, 16), 8), SFXP(SBV(-28916, 16), 8)), SFXP(SBV(-4587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38429, 16), 8), UFXP(BV(7663, 16), 8)), UFXP(BV(36206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9990, 16), 8), SFXP(SBV(-23553, 16), 8)), SFXP(SBV(13563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32411, 16), 8), SFXP(SBV(-28809, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26606, 16), 8), SFXP(SBV(4934, 16), 8)), SFXP(SBV(11498, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(273, 16), 8), UFXP(BV(26591, 16), 8)), UFXP(BV(26864, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8750, 16), 8), SFXP(SBV(-19559, 16), 8)), SFXP(SBV(28309, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38547, 16), 8), UFXP(BV(59908, 16), 8)), UFXP(BV(32919, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26743, 16), 8), SFXP(SBV(-30976, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31342, 16), 8), UFXP(BV(5586, 16), 8)), UFXP(BV(25756, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58955, 16), 8), UFXP(BV(40393, 16), 8)), UFXP(BV(18562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6273, 16), 8), SFXP(SBV(-7017, 16), 8)), SFXP(SBV(13290, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18215, 16), 8), SFXP(SBV(7860, 16), 8)), SFXP(SBV(10355, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58221, 16), 8), UFXP(BV(55585, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20701, 16), 8), UFXP(BV(36074, 16), 8)), UFXP(BV(50163, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13122, 16), 8), SFXP(SBV(-12924, 16), 8)), SFXP(SBV(-26046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-12363, 16), 8), SFXP(SBV(2461, 16), 8)), SFXP(SBV(12224, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9904, 16), 8), UFXP(BV(53762, 16), 8)), UFXP(BV(48302, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3482, 16), 8), UFXP(BV(61725, 16), 8)), UFXP(BV(65207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19706, 16), 8), SFXP(SBV(-31495, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25483, 16), 8), SFXP(SBV(-14781, 16), 8)), SFXP(SBV(-10702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6361, 16), 8), UFXP(BV(13070, 16), 8)), UFXP(BV(19431, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16666, 16), 8), UFXP(BV(11651, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3313, 16), 8), SFXP(SBV(9764, 16), 8)), SFXP(SBV(-4713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7552, 16), 8), UFXP(BV(684, 16), 8)), UFXP(BV(8236, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4560, 16), 8), SFXP(SBV(3252, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14223, 16), 8), UFXP(BV(20425, 16), 8)), UFXP(BV(59334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22659, 16), 8), UFXP(BV(36733, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18247, 16), 8), SFXP(SBV(27542, 16), 8)), SFXP(SBV(2959, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1285, 16), 8), UFXP(BV(40165, 16), 8)), UFXP(BV(41450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23565, 16), 8), SFXP(SBV(21139, 16), 8)), SFXP(SBV(-2426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65429, 16), 8), UFXP(BV(26234, 16), 8)), UFXP(BV(26127, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12433, 16), 8), UFXP(BV(32447, 16), 8)), UFXP(BV(45522, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-23359, 16), 8), SFXP(SBV(20972, 16), 8)), SFXP(SBV(-13070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64008, 16), 8), UFXP(BV(46358, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2008, 16), 8), SFXP(SBV(21789, 16), 8)), SFXP(SBV(-23797, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22812, 16), 8), UFXP(BV(7992, 16), 8)), UFXP(BV(56803, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6525, 16), 8), UFXP(BV(29175, 16), 8)), UFXP(BV(22724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7298, 16), 8), SFXP(SBV(22984, 16), 8)), SFXP(SBV(-15686, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12951, 16), 8), SFXP(SBV(1029, 16), 8)), SFXP(SBV(-11922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25012, 16), 8), SFXP(SBV(14819, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57240, 16), 8), UFXP(BV(32722, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27381, 16), 8), SFXP(SBV(-320, 16), 8)), SFXP(SBV(-27701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2970, 16), 8), SFXP(SBV(-10038, 16), 8)), SFXP(SBV(-14616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62282, 16), 8), UFXP(BV(16454, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26527, 16), 8), UFXP(BV(9137, 16), 8)), UFXP(BV(17390, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50505, 16), 8), UFXP(BV(52126, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9590, 16), 8), SFXP(SBV(-22635, 16), 8)), SFXP(SBV(-4040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42821, 16), 8), UFXP(BV(55212, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11068, 16), 8), SFXP(SBV(-1083, 16), 8)), SFXP(SBV(-9985, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46208, 16), 8), UFXP(BV(13496, 16), 8)), UFXP(BV(59704, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20676, 16), 8), SFXP(SBV(-18328, 16), 8)), SFXP(SBV(2348, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46569, 16), 8), UFXP(BV(4554, 16), 8)), UFXP(BV(42015, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37558, 16), 8), UFXP(BV(30305, 16), 8)), UFXP(BV(55162, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27147, 16), 8), UFXP(BV(49362, 16), 8)), UFXP(BV(57149, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43967, 16), 8), UFXP(BV(15250, 16), 8)), UFXP(BV(28717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50430, 16), 8), UFXP(BV(42483, 16), 8)), UFXP(BV(7947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6565, 16), 8), SFXP(SBV(-11777, 16), 8)), SFXP(SBV(18342, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13550, 16), 8), UFXP(BV(10666, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9358, 16), 8), SFXP(SBV(-20750, 16), 8)), SFXP(SBV(-30108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11114, 16), 8), SFXP(SBV(-9832, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18019, 16), 8), SFXP(SBV(14810, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2456, 16), 8), UFXP(BV(48305, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6850, 16), 8), SFXP(SBV(9287, 16), 8)), SFXP(SBV(-16137, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26637, 16), 8), SFXP(SBV(-12184, 16), 8)), SFXP(SBV(14453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5210, 16), 8), SFXP(SBV(7068, 16), 8)), SFXP(SBV(-12773, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24202, 16), 8), SFXP(SBV(-13541, 16), 8)), SFXP(SBV(10661, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20573, 16), 8), SFXP(SBV(19201, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(727, 16), 8), UFXP(BV(4007, 16), 8)), UFXP(BV(4734, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15569, 16), 8), SFXP(SBV(1003, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11580, 16), 8), SFXP(SBV(5218, 16), 8)), SFXP(SBV(-6362, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49949, 16), 8), UFXP(BV(33317, 16), 8)), UFXP(BV(17730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27047, 16), 8), SFXP(SBV(-26484, 16), 8)), SFXP(SBV(-563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8691, 16), 8), SFXP(SBV(-17154, 16), 8)), SFXP(SBV(25845, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28684, 16), 8), SFXP(SBV(19208, 16), 8)), SFXP(SBV(10492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58934, 16), 8), UFXP(BV(34681, 16), 8)), UFXP(BV(24253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55954, 16), 8), UFXP(BV(55121, 16), 8)), UFXP(BV(45539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54021, 16), 8), UFXP(BV(52264, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12952, 16), 8), SFXP(SBV(-28832, 16), 8)), SFXP(SBV(15880, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10421, 16), 8), SFXP(SBV(-2270, 16), 8)), SFXP(SBV(-8151, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2983, 16), 8), UFXP(BV(56175, 16), 8)), UFXP(BV(12344, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57671, 16), 8), UFXP(BV(9949, 16), 8)), UFXP(BV(13060, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25906, 16), 8), SFXP(SBV(-26519, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38725, 16), 8), UFXP(BV(49272, 16), 8)), UFXP(BV(54989, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43546, 16), 8), UFXP(BV(10161, 16), 8)), UFXP(BV(24466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20753, 16), 8), SFXP(SBV(-25805, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5498, 16), 8), UFXP(BV(49058, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63665, 16), 8), UFXP(BV(42250, 16), 8)), UFXP(BV(21415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9998, 16), 8), SFXP(SBV(9136, 16), 8)), SFXP(SBV(19134, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60687, 16), 8), UFXP(BV(16376, 16), 8)), UFXP(BV(15447, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24852, 16), 8), SFXP(SBV(4048, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-961, 16), 8), SFXP(SBV(29653, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51664, 16), 8), UFXP(BV(17707, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30443, 16), 8), SFXP(SBV(-14073, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38464, 16), 8), UFXP(BV(32229, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24145, 16), 8), UFXP(BV(44996, 16), 8)), UFXP(BV(44685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12241, 16), 8), UFXP(BV(14941, 16), 8)), UFXP(BV(27182, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48457, 16), 8), UFXP(BV(57967, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24257, 16), 8), SFXP(SBV(30044, 16), 8)), SFXP(SBV(28738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13836, 16), 8), SFXP(SBV(-18158, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10498, 16), 8), SFXP(SBV(23532, 16), 8)), SFXP(SBV(-13034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(756, 16), 8), SFXP(SBV(-7765, 16), 8)), SFXP(SBV(-22932, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25204, 16), 8), SFXP(SBV(-9478, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25133, 16), 8), UFXP(BV(34867, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7917, 16), 8), SFXP(SBV(-8873, 16), 8)), SFXP(SBV(-12260, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61064, 16), 8), UFXP(BV(29134, 16), 8)), UFXP(BV(31930, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27265, 16), 8), SFXP(SBV(-2945, 16), 8)), SFXP(SBV(-24320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46885, 16), 8), UFXP(BV(42823, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2698, 16), 8), SFXP(SBV(11950, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11119, 16), 8), SFXP(SBV(16839, 16), 8)), SFXP(SBV(-27958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29405, 16), 8), SFXP(SBV(-30795, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52120, 16), 8), UFXP(BV(38162, 16), 8)), UFXP(BV(13958, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3447, 16), 8), UFXP(BV(55018, 16), 8)), UFXP(BV(58465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17824, 16), 8), SFXP(SBV(-5278, 16), 8)), SFXP(SBV(-12546, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43999, 16), 8), UFXP(BV(13373, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51175, 16), 8), UFXP(BV(23568, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30762, 16), 8), UFXP(BV(56981, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16256, 16), 8), SFXP(SBV(15135, 16), 8)), SFXP(SBV(1121, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19429, 16), 8), UFXP(BV(62006, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(60416, 16), 8), UFXP(BV(36609, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63245, 16), 8), UFXP(BV(57450, 16), 8)), UFXP(BV(5795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25144, 16), 8), UFXP(BV(772, 16), 8)), UFXP(BV(25916, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2384, 16), 8), UFXP(BV(58817, 16), 8)), UFXP(BV(61201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13019, 16), 8), SFXP(SBV(-2864, 16), 8)), SFXP(SBV(14579, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23230, 16), 8), UFXP(BV(29691, 16), 8)), UFXP(BV(52921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37140, 16), 8), UFXP(BV(56308, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5137, 16), 8), SFXP(SBV(29861, 16), 8)), SFXP(SBV(9378, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11020, 16), 8), UFXP(BV(55784, 16), 8)), UFXP(BV(1268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(179, 16), 8), UFXP(BV(43742, 16), 8)), UFXP(BV(30585, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2952, 16), 8), SFXP(SBV(-3288, 16), 8)), SFXP(SBV(336, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24222, 16), 8), SFXP(SBV(-24876, 16), 8)), SFXP(SBV(16438, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49260, 16), 8), UFXP(BV(51831, 16), 8)), UFXP(BV(62965, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2124, 16), 8), SFXP(SBV(-27107, 16), 8)), SFXP(SBV(24983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5292, 16), 8), UFXP(BV(20476, 16), 8)), UFXP(BV(50352, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12629, 16), 8), SFXP(SBV(13061, 16), 8)), SFXP(SBV(-25690, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29450, 16), 8), SFXP(SBV(13517, 16), 8)), SFXP(SBV(-15933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12075, 16), 8), SFXP(SBV(6478, 16), 8)), SFXP(SBV(18553, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15672, 16), 8), UFXP(BV(2309, 16), 8)), UFXP(BV(17981, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25662, 16), 8), SFXP(SBV(20041, 16), 8)), SFXP(SBV(-5621, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20816, 16), 8), SFXP(SBV(19503, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56279, 16), 8), UFXP(BV(14207, 16), 8)), UFXP(BV(43073, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2056, 16), 8), UFXP(BV(63275, 16), 8)), UFXP(BV(49426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52964, 16), 8), UFXP(BV(32889, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49771, 16), 8), UFXP(BV(45851, 16), 8)), UFXP(BV(30086, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(689, 16), 8), SFXP(SBV(5889, 16), 8)), SFXP(SBV(15850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10400, 16), 8), SFXP(SBV(-8688, 16), 8)), SFXP(SBV(-1712, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8194, 16), 8), SFXP(SBV(24826, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24173, 16), 8), SFXP(SBV(-12665, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5610, 16), 8), SFXP(SBV(127, 16), 8)), SFXP(SBV(-5483, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14319, 16), 8), UFXP(BV(34865, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(1150, 16), 8), SFXP(SBV(8876, 16), 8)), SFXP(SBV(-25663, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7506, 16), 8), SFXP(SBV(1537, 16), 8)), SFXP(SBV(9043, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-3017, 16), 8), SFXP(SBV(-4568, 16), 8)), SFXP(SBV(-11702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62948, 16), 8), UFXP(BV(49290, 16), 8)), UFXP(BV(13658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24302, 16), 8), SFXP(SBV(-11632, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5080, 16), 8), SFXP(SBV(-4330, 16), 8)), SFXP(SBV(-20387, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26601, 16), 8), SFXP(SBV(7680, 16), 8)), SFXP(SBV(18921, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11480, 16), 8), SFXP(SBV(-4831, 16), 8)), SFXP(SBV(20032, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3192, 16), 8), SFXP(SBV(17544, 16), 8)), SFXP(SBV(-14352, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(7496, 16), 8), UFXP(BV(23821, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33638, 16), 8), UFXP(BV(43783, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20645, 16), 8), UFXP(BV(23005, 16), 8)), UFXP(BV(63176, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25804, 16), 8), UFXP(BV(50868, 16), 8)), UFXP(BV(40472, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15702, 16), 8), SFXP(SBV(17320, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30924, 16), 8), SFXP(SBV(-23328, 16), 8)), SFXP(SBV(-7596, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1563, 16), 8), SFXP(SBV(-9107, 16), 8)), SFXP(SBV(-10670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25144, 16), 8), SFXP(SBV(17554, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12090, 16), 8), UFXP(BV(40758, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1029, 16), 8), UFXP(BV(13485, 16), 8)), UFXP(BV(54203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29022, 16), 8), UFXP(BV(6721, 16), 8)), UFXP(BV(22301, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(65138, 16), 8), UFXP(BV(56491, 16), 8)), UFXP(BV(21486, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33907, 16), 8), UFXP(BV(28153, 16), 8)), UFXP(BV(58826, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32710, 16), 8), SFXP(SBV(-10132, 16), 8)), SFXP(SBV(-22694, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45579, 16), 8), UFXP(BV(37239, 16), 8)), UFXP(BV(11006, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62460, 16), 8), UFXP(BV(16500, 16), 8)), UFXP(BV(13424, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40976, 16), 8), UFXP(BV(24517, 16), 8)), UFXP(BV(16459, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2981, 16), 8), SFXP(SBV(24646, 16), 8)), SFXP(SBV(-24848, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28489, 16), 8), UFXP(BV(54002, 16), 8)), UFXP(BV(40023, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21113, 16), 8), SFXP(SBV(-6311, 16), 8)), SFXP(SBV(27424, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5273, 16), 8), SFXP(SBV(17058, 16), 8)), SFXP(SBV(22331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32032, 16), 8), SFXP(SBV(1138, 16), 8)), SFXP(SBV(-30894, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10302, 16), 8), UFXP(BV(31901, 16), 8)), UFXP(BV(42203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27432, 16), 8), UFXP(BV(8882, 16), 8)), UFXP(BV(36314, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19939, 16), 8), SFXP(SBV(-699, 16), 8)), SFXP(SBV(20638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55153, 16), 8), UFXP(BV(23795, 16), 8)), UFXP(BV(31358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21240, 16), 8), SFXP(SBV(8686, 16), 8)), SFXP(SBV(229, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57604, 16), 8), UFXP(BV(8775, 16), 8)), UFXP(BV(843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11026, 16), 8), SFXP(SBV(-27671, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22387, 16), 8), UFXP(BV(20046, 16), 8)), UFXP(BV(49072, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39829, 16), 8), UFXP(BV(54806, 16), 8)), UFXP(BV(50559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-19951, 16), 8), SFXP(SBV(21250, 16), 8)), SFXP(SBV(-17689, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14761, 16), 8), SFXP(SBV(12671, 16), 8)), SFXP(SBV(27432, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17629, 16), 8), UFXP(BV(22416, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13056, 16), 8), UFXP(BV(3194, 16), 8)), UFXP(BV(16250, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24977, 16), 8), SFXP(SBV(-24624, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7754, 16), 8), UFXP(BV(28518, 16), 8)), UFXP(BV(44772, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29634, 16), 8), UFXP(BV(43158, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53692, 16), 8), UFXP(BV(38356, 16), 8)), UFXP(BV(26512, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51195, 16), 8), UFXP(BV(9040, 16), 8)), UFXP(BV(60235, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22262, 16), 8), SFXP(SBV(-4923, 16), 8)), SFXP(SBV(17339, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19439, 16), 8), UFXP(BV(62072, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59077, 16), 8), UFXP(BV(49852, 16), 8)), UFXP(BV(35523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3165, 16), 8), SFXP(SBV(5631, 16), 8)), SFXP(SBV(-8796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23448, 16), 8), SFXP(SBV(17523, 16), 8)), SFXP(SBV(-24565, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7589, 16), 8), UFXP(BV(39295, 16), 8)), UFXP(BV(46884, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11932, 16), 8), SFXP(SBV(30658, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32076, 16), 8), SFXP(SBV(-18743, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18814, 16), 8), UFXP(BV(22140, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55664, 16), 8), UFXP(BV(64080, 16), 8)), UFXP(BV(57120, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13404, 16), 8), SFXP(SBV(30602, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7380, 16), 8), SFXP(SBV(21042, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17192, 16), 8), SFXP(SBV(18492, 16), 8)), SFXP(SBV(29852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62167, 16), 8), UFXP(BV(59640, 16), 8)), UFXP(BV(2527, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(392, 16), 8), SFXP(SBV(12245, 16), 8)), SFXP(SBV(-11853, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20861, 16), 8), SFXP(SBV(3920, 16), 8)), SFXP(SBV(-16941, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22996, 16), 8), SFXP(SBV(-4416, 16), 8)), SFXP(SBV(18580, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21932, 16), 8), SFXP(SBV(7419, 16), 8)), SFXP(SBV(14513, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25332, 16), 8), UFXP(BV(22254, 16), 8)), UFXP(BV(3078, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10558, 16), 8), UFXP(BV(8476, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8196, 16), 8), SFXP(SBV(-26503, 16), 8)), SFXP(SBV(18307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16716, 16), 8), SFXP(SBV(-23891, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18772, 16), 8), SFXP(SBV(-9392, 16), 8)), SFXP(SBV(28164, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17218, 16), 8), UFXP(BV(56102, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49330, 16), 8), UFXP(BV(57236, 16), 8)), UFXP(BV(19060, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9797, 16), 8), UFXP(BV(57430, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3058, 16), 8), SFXP(SBV(12766, 16), 8)), SFXP(SBV(9708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33186, 16), 8), UFXP(BV(59054, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63426, 16), 8), UFXP(BV(47164, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23614, 16), 8), SFXP(SBV(-7701, 16), 8)), SFXP(SBV(-15913, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44043, 16), 8), UFXP(BV(2367, 16), 8)), UFXP(BV(14010, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41261, 16), 8), UFXP(BV(36947, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5026, 16), 8), SFXP(SBV(18144, 16), 8)), SFXP(SBV(-13118, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43838, 16), 8), UFXP(BV(26663, 16), 8)), UFXP(BV(17175, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51693, 16), 8), UFXP(BV(52133, 16), 8)), UFXP(BV(41236, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11285, 16), 8), SFXP(SBV(-7121, 16), 8)), SFXP(SBV(4164, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10823, 16), 8), UFXP(BV(55459, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6596, 16), 8), SFXP(SBV(14026, 16), 8)), SFXP(SBV(20622, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60321, 16), 8), UFXP(BV(39246, 16), 8)), UFXP(BV(21075, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22641, 16), 8), UFXP(BV(26374, 16), 8)), UFXP(BV(49015, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9210, 16), 8), UFXP(BV(35763, 16), 8)), UFXP(BV(44973, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24555, 16), 8), SFXP(SBV(-2932, 16), 8)), SFXP(SBV(27487, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31491, 16), 8), UFXP(BV(7514, 16), 8)), UFXP(BV(6806, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10053, 16), 8), SFXP(SBV(14578, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61169, 16), 8), UFXP(BV(46188, 16), 8)), UFXP(BV(14981, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22400, 16), 8), SFXP(SBV(30559, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33638, 16), 8), UFXP(BV(46, 16), 8)), UFXP(BV(6044, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32006, 16), 8), SFXP(SBV(12564, 16), 8)), SFXP(SBV(19442, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18325, 16), 8), SFXP(SBV(10108, 16), 8)), SFXP(SBV(-8217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19479, 16), 8), UFXP(BV(42831, 16), 8)), UFXP(BV(42184, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(55196, 16), 8), UFXP(BV(10101, 16), 8)), UFXP(BV(15182, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18845, 16), 8), SFXP(SBV(-26496, 16), 8)), SFXP(SBV(20195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13878, 16), 8), SFXP(SBV(-18058, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18191, 16), 8), UFXP(BV(23695, 16), 8)), UFXP(BV(41886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1634, 16), 8), SFXP(SBV(-15698, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59892, 16), 8), UFXP(BV(58400, 16), 8)), UFXP(BV(1492, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8311, 16), 8), SFXP(SBV(-27624, 16), 8)), SFXP(SBV(20696, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19878, 16), 8), UFXP(BV(20419, 16), 8)), UFXP(BV(12640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3118, 16), 8), SFXP(SBV(-11356, 16), 8)), SFXP(SBV(8238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8567, 16), 8), UFXP(BV(57349, 16), 8)), UFXP(BV(18631, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31267, 16), 8), SFXP(SBV(9214, 16), 8)), SFXP(SBV(-22053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8147, 16), 8), UFXP(BV(46977, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15625, 16), 8), SFXP(SBV(-2823, 16), 8)), SFXP(SBV(-18448, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31038, 16), 8), SFXP(SBV(13861, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21899, 16), 8), SFXP(SBV(30333, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4578, 16), 8), SFXP(SBV(25303, 16), 8)), SFXP(SBV(6263, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(895, 16), 8), SFXP(SBV(-235, 16), 8)), SFXP(SBV(1130, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20822, 16), 8), SFXP(SBV(15923, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56547, 16), 8), UFXP(BV(18305, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62977, 16), 8), UFXP(BV(24035, 16), 8)), UFXP(BV(38942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16459, 16), 8), UFXP(BV(47679, 16), 8)), UFXP(BV(34316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26397, 16), 8), SFXP(SBV(1469, 16), 8)), SFXP(SBV(-24928, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26157, 16), 8), SFXP(SBV(5026, 16), 8)), SFXP(SBV(-10752, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28442, 16), 8), SFXP(SBV(17389, 16), 8)), SFXP(SBV(-11053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48598, 16), 8), UFXP(BV(8945, 16), 8)), UFXP(BV(57543, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11119, 16), 8), SFXP(SBV(-28750, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30869, 16), 8), SFXP(SBV(29152, 16), 8)), SFXP(SBV(23737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9915, 16), 8), SFXP(SBV(31868, 16), 8)), SFXP(SBV(-23753, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19462, 16), 8), SFXP(SBV(26735, 16), 8)), SFXP(SBV(7273, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5673, 16), 8), SFXP(SBV(-21757, 16), 8)), SFXP(SBV(-27430, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13882, 16), 8), SFXP(SBV(7863, 16), 8)), SFXP(SBV(6019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23616, 16), 8), SFXP(SBV(-28511, 16), 8)), SFXP(SBV(-4895, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16125, 16), 8), UFXP(BV(3063, 16), 8)), UFXP(BV(13062, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49617, 16), 8), UFXP(BV(4507, 16), 8)), UFXP(BV(45110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9360, 16), 8), UFXP(BV(49676, 16), 8)), UFXP(BV(25220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15000, 16), 8), SFXP(SBV(-7776, 16), 8)), SFXP(SBV(7224, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28866, 16), 8), UFXP(BV(1477, 16), 8)), UFXP(BV(27389, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16156, 16), 8), UFXP(BV(18606, 16), 8)), UFXP(BV(34762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28521, 16), 8), SFXP(SBV(27779, 16), 8)), SFXP(SBV(-742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61512, 16), 8), UFXP(BV(30120, 16), 8)), UFXP(BV(28312, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27206, 16), 8), SFXP(SBV(-5670, 16), 8)), SFXP(SBV(-21536, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44385, 16), 8), UFXP(BV(27099, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31065, 16), 8), UFXP(BV(1473, 16), 8)), UFXP(BV(47674, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3831, 16), 8), SFXP(SBV(9527, 16), 8)), SFXP(SBV(5696, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11198, 16), 8), UFXP(BV(38124, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-3424, 16), 8), SFXP(SBV(27017, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18759, 16), 8), UFXP(BV(49606, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38719, 16), 8), UFXP(BV(6876, 16), 8)), UFXP(BV(45595, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57142, 16), 8), UFXP(BV(11470, 16), 8)), UFXP(BV(4325, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33691, 16), 8), UFXP(BV(3150, 16), 8)), UFXP(BV(30541, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26150, 16), 8), SFXP(SBV(30551, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1466, 16), 8), SFXP(SBV(15468, 16), 8)), SFXP(SBV(-23042, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23122, 16), 8), SFXP(SBV(-30147, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17000, 16), 8), UFXP(BV(41388, 16), 8)), UFXP(BV(58388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26085, 16), 8), SFXP(SBV(2727, 16), 8)), SFXP(SBV(23358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15904, 16), 8), SFXP(SBV(-1714, 16), 8)), SFXP(SBV(14190, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11642, 16), 8), SFXP(SBV(28860, 16), 8)), SFXP(SBV(-17218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13050, 16), 8), SFXP(SBV(32373, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17873, 16), 8), SFXP(SBV(1185, 16), 8)), SFXP(SBV(16688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16508, 16), 8), SFXP(SBV(-14980, 16), 8)), SFXP(SBV(-1528, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18907, 16), 8), SFXP(SBV(10836, 16), 8)), SFXP(SBV(-13865, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39320, 16), 8), UFXP(BV(36370, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15489, 16), 8), UFXP(BV(27350, 16), 8)), UFXP(BV(53675, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(466, 16), 8), SFXP(SBV(4596, 16), 8)), SFXP(SBV(5062, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39570, 16), 8), UFXP(BV(48220, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8575, 16), 8), UFXP(BV(64341, 16), 8)), UFXP(BV(9770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15831, 16), 8), SFXP(SBV(315, 16), 8)), SFXP(SBV(-16146, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32347, 16), 8), SFXP(SBV(19273, 16), 8)), SFXP(SBV(-13074, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9533, 16), 8), SFXP(SBV(26837, 16), 8)), SFXP(SBV(17304, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12009, 16), 8), SFXP(SBV(18960, 16), 8)), SFXP(SBV(-6951, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23256, 16), 8), SFXP(SBV(8944, 16), 8)), SFXP(SBV(-14312, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1805, 16), 8), UFXP(BV(38131, 16), 8)), UFXP(BV(29210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52659, 16), 8), UFXP(BV(24901, 16), 8)), UFXP(BV(12024, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22782, 16), 8), UFXP(BV(59713, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14754, 16), 8), SFXP(SBV(-9767, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54832, 16), 8), UFXP(BV(50355, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3832, 16), 8), UFXP(BV(51497, 16), 8)), UFXP(BV(17871, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62754, 16), 8), UFXP(BV(9520, 16), 8)), UFXP(BV(39905, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8727, 16), 8), UFXP(BV(22960, 16), 8)), UFXP(BV(31687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23903, 16), 8), UFXP(BV(26421, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13353, 16), 8), SFXP(SBV(-31300, 16), 8)), SFXP(SBV(-17947, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50165, 16), 8), UFXP(BV(36948, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30757, 16), 8), UFXP(BV(33684, 16), 8)), UFXP(BV(64441, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18592, 16), 8), UFXP(BV(47685, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22648, 16), 8), UFXP(BV(47894, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27438, 16), 8), SFXP(SBV(1741, 16), 8)), SFXP(SBV(29179, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49324, 16), 8), UFXP(BV(28991, 16), 8)), UFXP(BV(20333, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44474, 16), 8), UFXP(BV(48162, 16), 8)), UFXP(BV(27100, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(695, 16), 8), UFXP(BV(60876, 16), 8)), UFXP(BV(61571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-164, 16), 8), SFXP(SBV(6064, 16), 8)), SFXP(SBV(-6228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5283, 16), 8), SFXP(SBV(28669, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24919, 16), 8), UFXP(BV(45177, 16), 8)), UFXP(BV(6611, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8792, 16), 8), SFXP(SBV(32322, 16), 8)), SFXP(SBV(4053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50018, 16), 8), UFXP(BV(40419, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49003, 16), 8), UFXP(BV(41532, 16), 8)), UFXP(BV(7471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29998, 16), 8), SFXP(SBV(-24795, 16), 8)), SFXP(SBV(-21886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53807, 16), 8), UFXP(BV(40769, 16), 8)), UFXP(BV(13038, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-7080, 16), 8), SFXP(SBV(14166, 16), 8)), SFXP(SBV(1437, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31181, 16), 8), SFXP(SBV(7919, 16), 8)), SFXP(SBV(-18499, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54578, 16), 8), UFXP(BV(40565, 16), 8)), UFXP(BV(14013, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64076, 16), 8), UFXP(BV(43854, 16), 8)), UFXP(BV(42394, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43228, 16), 8), UFXP(BV(4013, 16), 8)), UFXP(BV(39215, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19518, 16), 8), SFXP(SBV(-30930, 16), 8)), SFXP(SBV(-15088, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13907, 16), 8), UFXP(BV(64307, 16), 8)), UFXP(BV(12678, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46897, 16), 8), UFXP(BV(52564, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17379, 16), 8), SFXP(SBV(4812, 16), 8)), SFXP(SBV(-12567, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22071, 16), 8), SFXP(SBV(-15215, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5945, 16), 8), SFXP(SBV(27851, 16), 8)), SFXP(SBV(-21906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37210, 16), 8), UFXP(BV(36593, 16), 8)), UFXP(BV(8267, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21156, 16), 8), UFXP(BV(51261, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28358, 16), 8), SFXP(SBV(10383, 16), 8)), SFXP(SBV(-17975, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43299, 16), 8), UFXP(BV(29282, 16), 8)), UFXP(BV(37461, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7132, 16), 8), SFXP(SBV(-515, 16), 8)), SFXP(SBV(14348, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18926, 16), 8), SFXP(SBV(-23932, 16), 8)), SFXP(SBV(5006, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26654, 16), 8), UFXP(BV(13362, 16), 8)), UFXP(BV(40016, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22235, 16), 8), SFXP(SBV(2046, 16), 8)), SFXP(SBV(24281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30353, 16), 8), SFXP(SBV(-31824, 16), 8)), SFXP(SBV(-1471, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56917, 16), 8), UFXP(BV(61254, 16), 8)), UFXP(BV(52774, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32056, 16), 8), SFXP(SBV(20444, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14348, 16), 8), SFXP(SBV(12246, 16), 8)), SFXP(SBV(2102, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6080, 16), 8), SFXP(SBV(17046, 16), 8)), SFXP(SBV(-23126, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14779, 16), 8), UFXP(BV(22520, 16), 8)), UFXP(BV(37299, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6848, 16), 8), UFXP(BV(11837, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13293, 16), 8), SFXP(SBV(-14102, 16), 8)), SFXP(SBV(-27395, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(47260, 16), 8), UFXP(BV(37006, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26017, 16), 8), UFXP(BV(15909, 16), 8)), UFXP(BV(43950, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57321, 16), 8), UFXP(BV(44768, 16), 8)), UFXP(BV(12553, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(47964, 16), 8), UFXP(BV(6039, 16), 8)), UFXP(BV(17352, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3807, 16), 8), UFXP(BV(2695, 16), 8)), UFXP(BV(6502, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59822, 16), 8), UFXP(BV(62229, 16), 8)), UFXP(BV(63129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18652, 16), 8), SFXP(SBV(-16794, 16), 8)), SFXP(SBV(1858, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40097, 16), 8), UFXP(BV(46021, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2154, 16), 8), SFXP(SBV(11628, 16), 8)), SFXP(SBV(-9474, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1152, 16), 8), SFXP(SBV(-32407, 16), 8)), SFXP(SBV(-31255, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13793, 16), 8), UFXP(BV(21853, 16), 8)), UFXP(BV(63303, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40043, 16), 8), UFXP(BV(42873, 16), 8)), UFXP(BV(21435, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19056, 16), 8), SFXP(SBV(20727, 16), 8)), SFXP(SBV(1671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28830, 16), 8), SFXP(SBV(-26565, 16), 8)), SFXP(SBV(22981, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29332, 16), 8), UFXP(BV(6910, 16), 8)), UFXP(BV(36242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35050, 16), 8), UFXP(BV(41311, 16), 8)), UFXP(BV(19960, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24206, 16), 8), SFXP(SBV(17812, 16), 8)), SFXP(SBV(-19727, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26199, 16), 8), SFXP(SBV(5361, 16), 8)), SFXP(SBV(24355, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61855, 16), 8), UFXP(BV(65382, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45105, 16), 8), UFXP(BV(40789, 16), 8)), UFXP(BV(20358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60538, 16), 8), UFXP(BV(16008, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40014, 16), 8), UFXP(BV(12156, 16), 8)), UFXP(BV(27858, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50209, 16), 8), UFXP(BV(58215, 16), 8)), UFXP(BV(14380, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52141, 16), 8), UFXP(BV(64418, 16), 8)), UFXP(BV(51023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47540, 16), 8), UFXP(BV(57563, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56541, 16), 8), UFXP(BV(24600, 16), 8)), UFXP(BV(31941, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20316, 16), 8), UFXP(BV(26936, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1332, 16), 8), UFXP(BV(61536, 16), 8)), UFXP(BV(58035, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32396, 16), 8), UFXP(BV(18331, 16), 8)), UFXP(BV(14065, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57610, 16), 8), UFXP(BV(57308, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19208, 16), 8), SFXP(SBV(23846, 16), 8)), SFXP(SBV(-22482, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11770, 16), 8), UFXP(BV(54166, 16), 8)), UFXP(BV(400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26482, 16), 8), UFXP(BV(17587, 16), 8)), UFXP(BV(49821, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48129, 16), 8), UFXP(BV(36325, 16), 8)), UFXP(BV(13497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13730, 16), 8), SFXP(SBV(-7242, 16), 8)), SFXP(SBV(-20972, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8330, 16), 8), UFXP(BV(52078, 16), 8)), UFXP(BV(56170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8324, 16), 8), SFXP(SBV(30721, 16), 8)), SFXP(SBV(26491, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52196, 16), 8), UFXP(BV(18905, 16), 8)), UFXP(BV(33291, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12997, 16), 8), SFXP(SBV(-20849, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1489, 16), 8), UFXP(BV(35916, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29924, 16), 8), SFXP(SBV(-16777, 16), 8)), SFXP(SBV(5005, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48725, 16), 8), UFXP(BV(39822, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3912, 16), 8), SFXP(SBV(6143, 16), 8)), SFXP(SBV(-2231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10256, 16), 8), SFXP(SBV(2853, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(839, 16), 8), UFXP(BV(23071, 16), 8)), UFXP(BV(10075, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63384, 16), 8), UFXP(BV(54414, 16), 8)), UFXP(BV(8970, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6603, 16), 8), SFXP(SBV(23204, 16), 8)), SFXP(SBV(29807, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58652, 16), 8), UFXP(BV(10137, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(47799, 16), 8), UFXP(BV(19740, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6694, 16), 8), SFXP(SBV(29792, 16), 8)), SFXP(SBV(23098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27750, 16), 8), SFXP(SBV(-7663, 16), 8)), SFXP(SBV(-30123, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52802, 16), 8), UFXP(BV(32510, 16), 8)), UFXP(BV(20292, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25720, 16), 8), SFXP(SBV(8189, 16), 8)), SFXP(SBV(-17531, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10842, 16), 8), SFXP(SBV(8157, 16), 8)), SFXP(SBV(-17782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24163, 16), 8), UFXP(BV(46630, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31612, 16), 8), SFXP(SBV(28587, 16), 8)), SFXP(SBV(-5337, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5988, 16), 8), UFXP(BV(22516, 16), 8)), UFXP(BV(49008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18426, 16), 8), UFXP(BV(55436, 16), 8)), UFXP(BV(57932, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28240, 16), 8), SFXP(SBV(-32592, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7644, 16), 8), SFXP(SBV(-4471, 16), 8)), SFXP(SBV(3173, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23685, 16), 8), SFXP(SBV(-28643, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21042, 16), 8), SFXP(SBV(-25596, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-656, 16), 8), SFXP(SBV(-98, 16), 8)), SFXP(SBV(-754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9341, 16), 8), UFXP(BV(4236, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2368, 16), 8), SFXP(SBV(-12594, 16), 8)), SFXP(SBV(10226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47855, 16), 8), UFXP(BV(57344, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18973, 16), 8), SFXP(SBV(-5695, 16), 8)), SFXP(SBV(13278, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15839, 16), 8), UFXP(BV(21237, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15895, 16), 8), UFXP(BV(36144, 16), 8)), UFXP(BV(52039, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16419, 16), 8), SFXP(SBV(8196, 16), 8)), SFXP(SBV(-8223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59660, 16), 8), UFXP(BV(26543, 16), 8)), UFXP(BV(33117, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25702, 16), 8), SFXP(SBV(-20746, 16), 8)), SFXP(SBV(4956, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58165, 16), 8), UFXP(BV(49055, 16), 8)), UFXP(BV(9110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10383, 16), 8), UFXP(BV(5824, 16), 8)), UFXP(BV(39605, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15908, 16), 8), SFXP(SBV(2139, 16), 8)), SFXP(SBV(13769, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5859, 16), 8), SFXP(SBV(20464, 16), 8)), SFXP(SBV(-14605, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28686, 16), 8), SFXP(SBV(11513, 16), 8)), SFXP(SBV(-17173, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19128, 16), 8), SFXP(SBV(-13500, 16), 8)), SFXP(SBV(-5628, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6648, 16), 8), SFXP(SBV(-1788, 16), 8)), SFXP(SBV(4860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54719, 16), 8), UFXP(BV(49370, 16), 8)), UFXP(BV(5349, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14897, 16), 8), SFXP(SBV(-27860, 16), 8)), SFXP(SBV(12963, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24409, 16), 8), UFXP(BV(60450, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8366, 16), 8), SFXP(SBV(10631, 16), 8)), SFXP(SBV(18997, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15489, 16), 8), UFXP(BV(17121, 16), 8)), UFXP(BV(52847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56411, 16), 8), UFXP(BV(46212, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37697, 16), 8), UFXP(BV(35005, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59970, 16), 8), UFXP(BV(83, 16), 8)), UFXP(BV(60053, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5023, 16), 8), SFXP(SBV(27377, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39006, 16), 8), UFXP(BV(42025, 16), 8)), UFXP(BV(15495, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20448, 16), 8), SFXP(SBV(-26809, 16), 8)), SFXP(SBV(-18279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2033, 16), 8), SFXP(SBV(-17002, 16), 8)), SFXP(SBV(19035, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40563, 16), 8), UFXP(BV(2956, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1609, 16), 8), SFXP(SBV(15007, 16), 8)), SFXP(SBV(-28786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54770, 16), 8), UFXP(BV(8195, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33157, 16), 8), UFXP(BV(205, 16), 8)), UFXP(BV(32952, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49379, 16), 8), UFXP(BV(19550, 16), 8)), UFXP(BV(29829, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9060, 16), 8), SFXP(SBV(-30363, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7047, 16), 8), SFXP(SBV(-9949, 16), 8)), SFXP(SBV(2902, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15838, 16), 8), UFXP(BV(32876, 16), 8)), UFXP(BV(48714, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4915, 16), 8), SFXP(SBV(-31397, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1599, 16), 8), SFXP(SBV(12441, 16), 8)), SFXP(SBV(10842, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26300, 16), 8), SFXP(SBV(28001, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33856, 16), 8), UFXP(BV(5991, 16), 8)), UFXP(BV(5877, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22496, 16), 8), SFXP(SBV(21149, 16), 8)), SFXP(SBV(-23460, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6895, 16), 8), UFXP(BV(35830, 16), 8)), UFXP(BV(36601, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14422, 16), 8), SFXP(SBV(-25320, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48840, 16), 8), UFXP(BV(37575, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23753, 16), 8), UFXP(BV(10447, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23786, 16), 8), UFXP(BV(58510, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4520, 16), 8), SFXP(SBV(-8691, 16), 8)), SFXP(SBV(13211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23119, 16), 8), UFXP(BV(9480, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25235, 16), 8), UFXP(BV(23763, 16), 8)), UFXP(BV(1472, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40612, 16), 8), UFXP(BV(50610, 16), 8)), UFXP(BV(25686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62780, 16), 8), UFXP(BV(57668, 16), 8)), UFXP(BV(5112, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4591, 16), 8), SFXP(SBV(11599, 16), 8)), SFXP(SBV(7008, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22144, 16), 8), SFXP(SBV(14310, 16), 8)), SFXP(SBV(7834, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30665, 16), 8), UFXP(BV(46174, 16), 8)), UFXP(BV(25936, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17704, 16), 8), SFXP(SBV(15743, 16), 8)), SFXP(SBV(-1961, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(60, 16), 8), SFXP(SBV(-17777, 16), 8)), SFXP(SBV(-17717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10496, 16), 8), UFXP(BV(37551, 16), 8)), UFXP(BV(32263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51709, 16), 8), UFXP(BV(43023, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63090, 16), 8), UFXP(BV(63280, 16), 8)), UFXP(BV(65346, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2102, 16), 8), SFXP(SBV(7457, 16), 8)), SFXP(SBV(4307, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61713, 16), 8), UFXP(BV(57935, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4695, 16), 8), SFXP(SBV(-17323, 16), 8)), SFXP(SBV(-9979, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28040, 16), 8), UFXP(BV(21824, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30256, 16), 8), UFXP(BV(58837, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-26604, 16), 8), SFXP(SBV(10773, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20962, 16), 8), SFXP(SBV(-23436, 16), 8)), SFXP(SBV(2474, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62489, 16), 8), UFXP(BV(55643, 16), 8)), UFXP(BV(6846, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3408, 16), 8), UFXP(BV(19383, 16), 8)), UFXP(BV(22791, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42688, 16), 8), UFXP(BV(12203, 16), 8)), UFXP(BV(30485, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12386, 16), 8), SFXP(SBV(-32216, 16), 8)), SFXP(SBV(19830, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18505, 16), 8), SFXP(SBV(24011, 16), 8)), SFXP(SBV(-31703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12206, 16), 8), SFXP(SBV(11053, 16), 8)), SFXP(SBV(2715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27484, 16), 8), SFXP(SBV(24166, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23801, 16), 8), UFXP(BV(40844, 16), 8)), UFXP(BV(64645, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27370, 16), 8), UFXP(BV(42686, 16), 8)), UFXP(BV(50220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24218, 16), 8), SFXP(SBV(15592, 16), 8)), SFXP(SBV(32300, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47303, 16), 8), UFXP(BV(35773, 16), 8)), UFXP(BV(11530, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(41216, 16), 8), UFXP(BV(26843, 16), 8)), UFXP(BV(61883, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22697, 16), 8), UFXP(BV(24986, 16), 8)), UFXP(BV(63247, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61514, 16), 8), UFXP(BV(19065, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39926, 16), 8), UFXP(BV(47852, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2382, 16), 8), SFXP(SBV(8475, 16), 8)), SFXP(SBV(-10857, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11993, 16), 8), UFXP(BV(28279, 16), 8)), UFXP(BV(49250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62307, 16), 8), UFXP(BV(33259, 16), 8)), UFXP(BV(29048, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17808, 16), 8), UFXP(BV(24023, 16), 8)), UFXP(BV(41831, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34168, 16), 8), UFXP(BV(18170, 16), 8)), UFXP(BV(52338, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31997, 16), 8), SFXP(SBV(-17447, 16), 8)), SFXP(SBV(14550, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26999, 16), 8), UFXP(BV(54367, 16), 8)), UFXP(BV(38168, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29093, 16), 8), SFXP(SBV(23192, 16), 8)), SFXP(SBV(5901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25738, 16), 8), SFXP(SBV(-14883, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37180, 16), 8), UFXP(BV(59148, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54124, 16), 8), UFXP(BV(60944, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2284, 16), 8), SFXP(SBV(-3290, 16), 8)), SFXP(SBV(5574, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27634, 16), 8), SFXP(SBV(-592, 16), 8)), SFXP(SBV(1633, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24178, 16), 8), UFXP(BV(2310, 16), 8)), UFXP(BV(21868, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19043, 16), 8), SFXP(SBV(-2396, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38249, 16), 8), UFXP(BV(13578, 16), 8)), UFXP(BV(62611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12025, 16), 8), UFXP(BV(29836, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60256, 16), 8), UFXP(BV(20685, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12486, 16), 8), SFXP(SBV(-20507, 16), 8)), SFXP(SBV(-32543, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17573, 16), 8), SFXP(SBV(24808, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61864, 16), 8), UFXP(BV(1744, 16), 8)), UFXP(BV(60120, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42599, 16), 8), UFXP(BV(57881, 16), 8)), UFXP(BV(34944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1861, 16), 8), UFXP(BV(23584, 16), 8)), UFXP(BV(40372, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21188, 16), 8), SFXP(SBV(-18105, 16), 8)), SFXP(SBV(3083, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31328, 16), 8), UFXP(BV(40038, 16), 8)), UFXP(BV(49986, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13607, 16), 8), SFXP(SBV(-14522, 16), 8)), SFXP(SBV(-915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54557, 16), 8), UFXP(BV(10637, 16), 8)), UFXP(BV(65194, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32666, 16), 8), UFXP(BV(55749, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27746, 16), 8), UFXP(BV(6899, 16), 8)), UFXP(BV(34645, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10295, 16), 8), UFXP(BV(41941, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13524, 16), 8), UFXP(BV(62920, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22378, 16), 8), SFXP(SBV(8900, 16), 8)), SFXP(SBV(8447, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32983, 16), 8), UFXP(BV(47981, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25889, 16), 8), SFXP(SBV(11466, 16), 8)), SFXP(SBV(-20104, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31393, 16), 8), SFXP(SBV(-28756, 16), 8)), SFXP(SBV(-5387, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7264, 16), 8), UFXP(BV(25699, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49506, 16), 8), UFXP(BV(61767, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45363, 16), 8), UFXP(BV(11656, 16), 8)), UFXP(BV(33818, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57169, 16), 8), UFXP(BV(4722, 16), 8)), UFXP(BV(52447, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40104, 16), 8), UFXP(BV(38486, 16), 8)), UFXP(BV(1618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44970, 16), 8), UFXP(BV(41154, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56444, 16), 8), UFXP(BV(38389, 16), 8)), UFXP(BV(18055, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19905, 16), 8), UFXP(BV(25408, 16), 8)), UFXP(BV(45313, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23553, 16), 8), UFXP(BV(9523, 16), 8)), UFXP(BV(14030, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1386, 16), 8), SFXP(SBV(27486, 16), 8)), SFXP(SBV(-26100, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27276, 16), 8), SFXP(SBV(-24538, 16), 8)), SFXP(SBV(-2738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26878, 16), 8), SFXP(SBV(-28253, 16), 8)), SFXP(SBV(1375, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28640, 16), 8), SFXP(SBV(6698, 16), 8)), SFXP(SBV(-28442, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17825, 16), 8), SFXP(SBV(-28962, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41961, 16), 8), UFXP(BV(39571, 16), 8)), UFXP(BV(63560, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2582, 16), 8), UFXP(BV(7032, 16), 8)), UFXP(BV(5389, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31559, 16), 8), SFXP(SBV(31564, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19345, 16), 8), SFXP(SBV(31749, 16), 8)), SFXP(SBV(12404, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17944, 16), 8), UFXP(BV(41661, 16), 8)), UFXP(BV(59605, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3458, 16), 8), UFXP(BV(60352, 16), 8)), UFXP(BV(63810, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(102, 16), 8), UFXP(BV(49674, 16), 8)), UFXP(BV(19791, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7060, 16), 8), UFXP(BV(1867, 16), 8)), UFXP(BV(5193, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13659, 16), 8), UFXP(BV(6464, 16), 8)), UFXP(BV(7195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26515, 16), 8), SFXP(SBV(15859, 16), 8)), SFXP(SBV(23162, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9617, 16), 8), SFXP(SBV(7196, 16), 8)), SFXP(SBV(-2421, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47568, 16), 8), UFXP(BV(46211, 16), 8)), UFXP(BV(1357, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47280, 16), 8), UFXP(BV(3540, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33520, 16), 8), UFXP(BV(20262, 16), 8)), UFXP(BV(53782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3269, 16), 8), UFXP(BV(63185, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15927, 16), 8), SFXP(SBV(-28673, 16), 8)), SFXP(SBV(12746, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(808, 16), 8), SFXP(SBV(-18763, 16), 8)), SFXP(SBV(19571, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19155, 16), 8), UFXP(BV(57368, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28489, 16), 8), UFXP(BV(14653, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44286, 16), 8), UFXP(BV(49699, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17426, 16), 8), UFXP(BV(39533, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49908, 16), 8), UFXP(BV(49040, 16), 8)), UFXP(BV(868, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26474, 16), 8), SFXP(SBV(12015, 16), 8)), SFXP(SBV(-27047, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45432, 16), 8), UFXP(BV(23020, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12447, 16), 8), SFXP(SBV(9563, 16), 8)), SFXP(SBV(-22010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21659, 16), 8), SFXP(SBV(5797, 16), 8)), SFXP(SBV(31706, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14145, 16), 8), SFXP(SBV(-25522, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15295, 16), 8), SFXP(SBV(13024, 16), 8)), SFXP(SBV(8299, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28455, 16), 8), UFXP(BV(33689, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49275, 16), 8), UFXP(BV(23406, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1812, 16), 8), SFXP(SBV(-22125, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26297, 16), 8), UFXP(BV(21694, 16), 8)), UFXP(BV(47991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40706, 16), 8), UFXP(BV(27330, 16), 8)), UFXP(BV(13376, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4964, 16), 8), UFXP(BV(61568, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(2643, 16), 8), SFXP(SBV(-13837, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21024, 16), 8), SFXP(SBV(12210, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32275, 16), 8), SFXP(SBV(-2510, 16), 8)), SFXP(SBV(-30751, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17084, 16), 8), UFXP(BV(44055, 16), 8)), UFXP(BV(56398, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49000, 16), 8), UFXP(BV(46324, 16), 8)), UFXP(BV(2676, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5964, 16), 8), SFXP(SBV(22823, 16), 8)), SFXP(SBV(-16859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32240, 16), 8), SFXP(SBV(58, 16), 8)), SFXP(SBV(32298, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27171, 16), 8), SFXP(SBV(8730, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60422, 16), 8), UFXP(BV(23441, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22798, 16), 8), SFXP(SBV(-8552, 16), 8)), SFXP(SBV(14246, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2308, 16), 8), SFXP(SBV(-30420, 16), 8)), SFXP(SBV(-28112, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31843, 16), 8), SFXP(SBV(21520, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23152, 16), 8), SFXP(SBV(27713, 16), 8)), SFXP(SBV(4561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37261, 16), 8), UFXP(BV(8603, 16), 8)), UFXP(BV(45864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44501, 16), 8), UFXP(BV(11715, 16), 8)), UFXP(BV(56216, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49036, 16), 8), UFXP(BV(56088, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43801, 16), 8), UFXP(BV(23109, 16), 8)), UFXP(BV(20692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22961, 16), 8), SFXP(SBV(-24940, 16), 8)), SFXP(SBV(1979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19386, 16), 8), SFXP(SBV(13187, 16), 8)), SFXP(SBV(-32573, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8973, 16), 8), SFXP(SBV(-1541, 16), 8)), SFXP(SBV(7432, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50309, 16), 8), UFXP(BV(57043, 16), 8)), UFXP(BV(58802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32417, 16), 8), SFXP(SBV(-14875, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48322, 16), 8), UFXP(BV(18146, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20860, 16), 8), SFXP(SBV(-1987, 16), 8)), SFXP(SBV(-30838, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1915, 16), 8), SFXP(SBV(-12812, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14179, 16), 8), SFXP(SBV(425, 16), 8)), SFXP(SBV(13754, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32406, 16), 8), SFXP(SBV(-30293, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59726, 16), 8), UFXP(BV(39603, 16), 8)), UFXP(BV(33793, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8833, 16), 8), SFXP(SBV(10098, 16), 8)), SFXP(SBV(18931, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65513, 16), 8), UFXP(BV(26891, 16), 8)), UFXP(BV(38622, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55466, 16), 8), UFXP(BV(34262, 16), 8)), UFXP(BV(24192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7418, 16), 8), SFXP(SBV(-3980, 16), 8)), SFXP(SBV(15746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49912, 16), 8), UFXP(BV(4818, 16), 8)), UFXP(BV(45094, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2960, 16), 8), SFXP(SBV(-27575, 16), 8)), SFXP(SBV(-24615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3578, 16), 8), SFXP(SBV(22734, 16), 8)), SFXP(SBV(26312, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25367, 16), 8), SFXP(SBV(-7487, 16), 8)), SFXP(SBV(32682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11294, 16), 8), SFXP(SBV(4205, 16), 8)), SFXP(SBV(-7089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62466, 16), 8), UFXP(BV(9427, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15319, 16), 8), UFXP(BV(8113, 16), 8)), UFXP(BV(7206, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39761, 16), 8), UFXP(BV(25635, 16), 8)), UFXP(BV(14126, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25052, 16), 8), SFXP(SBV(4183, 16), 8)), SFXP(SBV(20869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15199, 16), 8), SFXP(SBV(3413, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61725, 16), 8), UFXP(BV(33133, 16), 8)), UFXP(BV(58951, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29404, 16), 8), SFXP(SBV(17930, 16), 8)), SFXP(SBV(-27812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12774, 16), 8), SFXP(SBV(8148, 16), 8)), SFXP(SBV(13357, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64040, 16), 8), UFXP(BV(7468, 16), 8)), UFXP(BV(56572, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9969, 16), 8), SFXP(SBV(1079, 16), 8)), SFXP(SBV(8890, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47760, 16), 8), UFXP(BV(1302, 16), 8)), UFXP(BV(46458, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17961, 16), 8), SFXP(SBV(-9400, 16), 8)), SFXP(SBV(8561, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22942, 16), 8), SFXP(SBV(-19443, 16), 8)), SFXP(SBV(-3499, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43821, 16), 8), UFXP(BV(33435, 16), 8)), UFXP(BV(11720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42079, 16), 8), UFXP(BV(38937, 16), 8)), UFXP(BV(43126, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17672, 16), 8), SFXP(SBV(-19496, 16), 8)), SFXP(SBV(28368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18070, 16), 8), UFXP(BV(50422, 16), 8)), UFXP(BV(20140, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50674, 16), 8), UFXP(BV(31312, 16), 8)), UFXP(BV(16450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7104, 16), 8), SFXP(SBV(-11049, 16), 8)), SFXP(SBV(-3945, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21353, 16), 8), SFXP(SBV(25070, 16), 8)), SFXP(SBV(-3717, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12631, 16), 8), SFXP(SBV(-23606, 16), 8)), SFXP(SBV(14931, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10820, 16), 8), SFXP(SBV(-23159, 16), 8)), SFXP(SBV(-31557, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13910, 16), 8), SFXP(SBV(16147, 16), 8)), SFXP(SBV(-2237, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55211, 16), 8), UFXP(BV(7229, 16), 8)), UFXP(BV(62440, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23933, 16), 8), SFXP(SBV(13526, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25252, 16), 8), UFXP(BV(48782, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8815, 16), 8), UFXP(BV(30383, 16), 8)), UFXP(BV(39198, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57271, 16), 8), UFXP(BV(3207, 16), 8)), UFXP(BV(54064, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27947, 16), 8), SFXP(SBV(22546, 16), 8)), SFXP(SBV(15043, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46739, 16), 8), UFXP(BV(23307, 16), 8)), UFXP(BV(23432, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7530, 16), 8), SFXP(SBV(-8773, 16), 8)), SFXP(SBV(-4094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42818, 16), 8), UFXP(BV(62176, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43574, 16), 8), UFXP(BV(42523, 16), 8)), UFXP(BV(28920, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12874, 16), 8), UFXP(BV(19546, 16), 8)), UFXP(BV(32420, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5932, 16), 8), UFXP(BV(29361, 16), 8)), UFXP(BV(35293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56864, 16), 8), UFXP(BV(16303, 16), 8)), UFXP(BV(7631, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10817, 16), 8), SFXP(SBV(9100, 16), 8)), SFXP(SBV(-19917, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16217, 16), 8), UFXP(BV(37167, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20095, 16), 8), SFXP(SBV(25239, 16), 8)), SFXP(SBV(-15083, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45615, 16), 8), UFXP(BV(60891, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2765, 16), 8), UFXP(BV(924, 16), 8)), UFXP(BV(9979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11196, 16), 8), SFXP(SBV(-11751, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12315, 16), 8), SFXP(SBV(-9856, 16), 8)), SFXP(SBV(-22171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31355, 16), 8), SFXP(SBV(-4752, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48213, 16), 8), UFXP(BV(26603, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48337, 16), 8), UFXP(BV(3871, 16), 8)), UFXP(BV(44466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3865, 16), 8), SFXP(SBV(2880, 16), 8)), SFXP(SBV(-22055, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49394, 16), 8), UFXP(BV(52708, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28065, 16), 8), SFXP(SBV(-31429, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48890, 16), 8), UFXP(BV(52116, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14743, 16), 8), SFXP(SBV(29866, 16), 8)), SFXP(SBV(15123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29169, 16), 8), SFXP(SBV(-17119, 16), 8)), SFXP(SBV(-12050, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16341, 16), 8), SFXP(SBV(9904, 16), 8)), SFXP(SBV(-6437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61476, 16), 8), UFXP(BV(50734, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20361, 16), 8), SFXP(SBV(21346, 16), 8)), SFXP(SBV(23829, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31814, 16), 8), UFXP(BV(44798, 16), 8)), UFXP(BV(52552, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20727, 16), 8), UFXP(BV(1486, 16), 8)), UFXP(BV(54778, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17527, 16), 8), SFXP(SBV(-12450, 16), 8)), SFXP(SBV(-419, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2751, 16), 8), SFXP(SBV(18717, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15433, 16), 8), SFXP(SBV(21749, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16391, 16), 8), SFXP(SBV(-28786, 16), 8)), SFXP(SBV(8084, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16132, 16), 8), UFXP(BV(1565, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10401, 16), 8), SFXP(SBV(16266, 16), 8)), SFXP(SBV(-26667, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17894, 16), 8), UFXP(BV(25616, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15929, 16), 8), SFXP(SBV(24841, 16), 8)), SFXP(SBV(8912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7342, 16), 8), SFXP(SBV(-23012, 16), 8)), SFXP(SBV(-30354, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39448, 16), 8), UFXP(BV(13474, 16), 8)), UFXP(BV(52922, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45037, 16), 8), UFXP(BV(18009, 16), 8)), UFXP(BV(63046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23348, 16), 8), SFXP(SBV(1009, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63964, 16), 8), UFXP(BV(43335, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53239, 16), 8), UFXP(BV(45651, 16), 8)), UFXP(BV(56619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54249, 16), 8), UFXP(BV(18476, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58093, 16), 8), UFXP(BV(22053, 16), 8)), UFXP(BV(23659, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8330, 16), 8), SFXP(SBV(15495, 16), 8)), SFXP(SBV(23825, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63999, 16), 8), UFXP(BV(2211, 16), 8)), UFXP(BV(61788, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11803, 16), 8), SFXP(SBV(4773, 16), 8)), SFXP(SBV(-7030, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50484, 16), 8), UFXP(BV(49558, 16), 8)), UFXP(BV(926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43993, 16), 8), UFXP(BV(5395, 16), 8)), UFXP(BV(49388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4952, 16), 8), SFXP(SBV(24511, 16), 8)), SFXP(SBV(29463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56132, 16), 8), UFXP(BV(53568, 16), 8)), UFXP(BV(2564, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11977, 16), 8), SFXP(SBV(26982, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5817, 16), 8), UFXP(BV(50350, 16), 8)), UFXP(BV(29974, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26969, 16), 8), SFXP(SBV(18483, 16), 8)), SFXP(SBV(20084, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12478, 16), 8), SFXP(SBV(-19107, 16), 8)), SFXP(SBV(31585, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3207, 16), 8), UFXP(BV(3462, 16), 8)), UFXP(BV(43369, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41308, 16), 8), UFXP(BV(46243, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20983, 16), 8), SFXP(SBV(1613, 16), 8)), SFXP(SBV(1137, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1144, 16), 8), UFXP(BV(58396, 16), 8)), UFXP(BV(59540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13347, 16), 8), SFXP(SBV(25213, 16), 8)), SFXP(SBV(-3803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11933, 16), 8), SFXP(SBV(-30813, 16), 8)), SFXP(SBV(-5496, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28850, 16), 8), SFXP(SBV(-441, 16), 8)), SFXP(SBV(29291, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60779, 16), 8), UFXP(BV(11201, 16), 8)), UFXP(BV(49578, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16838, 16), 8), SFXP(SBV(20744, 16), 8)), SFXP(SBV(3906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(780, 16), 8), UFXP(BV(32143, 16), 8)), UFXP(BV(32923, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24890, 16), 8), SFXP(SBV(1370, 16), 8)), SFXP(SBV(23520, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7480, 16), 8), UFXP(BV(56505, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25889, 16), 8), SFXP(SBV(-10690, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3159, 16), 8), SFXP(SBV(-25894, 16), 8)), SFXP(SBV(29053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47509, 16), 8), UFXP(BV(38769, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26398, 16), 8), SFXP(SBV(5517, 16), 8)), SFXP(SBV(20881, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50029, 16), 8), UFXP(BV(44069, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6379, 16), 8), UFXP(BV(6511, 16), 8)), UFXP(BV(12890, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10456, 16), 8), SFXP(SBV(30827, 16), 8)), SFXP(SBV(20371, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50371, 16), 8), UFXP(BV(21472, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15262, 16), 8), SFXP(SBV(23350, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11317, 16), 8), SFXP(SBV(32288, 16), 8)), SFXP(SBV(14436, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11377, 16), 8), SFXP(SBV(9312, 16), 8)), SFXP(SBV(-2065, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29265, 16), 8), UFXP(BV(65092, 16), 8)), UFXP(BV(35515, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29488, 16), 8), SFXP(SBV(26135, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15188, 16), 8), UFXP(BV(26130, 16), 8)), UFXP(BV(41318, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5486, 16), 8), SFXP(SBV(-8533, 16), 8)), SFXP(SBV(14019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18775, 16), 8), SFXP(SBV(-12888, 16), 8)), SFXP(SBV(-31663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13997, 16), 8), UFXP(BV(11958, 16), 8)), UFXP(BV(2039, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28215, 16), 8), SFXP(SBV(19273, 16), 8)), SFXP(SBV(-8942, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20735, 16), 8), SFXP(SBV(28215, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10561, 16), 8), UFXP(BV(17002, 16), 8)), UFXP(BV(59095, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15223, 16), 8), UFXP(BV(52014, 16), 8)), UFXP(BV(28745, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60161, 16), 8), UFXP(BV(23938, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42991, 16), 8), UFXP(BV(2195, 16), 8)), UFXP(BV(40935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31293, 16), 8), UFXP(BV(59905, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17172, 16), 8), SFXP(SBV(-18277, 16), 8)), SFXP(SBV(30087, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61134, 16), 8), UFXP(BV(34489, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19868, 16), 8), UFXP(BV(6786, 16), 8)), UFXP(BV(13082, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27337, 16), 8), SFXP(SBV(-675, 16), 8)), SFXP(SBV(28012, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12187, 16), 8), SFXP(SBV(22230, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37036, 16), 8), UFXP(BV(41673, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10943, 16), 8), SFXP(SBV(8831, 16), 8)), SFXP(SBV(19774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57291, 16), 8), UFXP(BV(41206, 16), 8)), UFXP(BV(32961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44359, 16), 8), UFXP(BV(5997, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28073, 16), 8), SFXP(SBV(11491, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3155, 16), 8), UFXP(BV(25888, 16), 8)), UFXP(BV(29043, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59797, 16), 8), UFXP(BV(27541, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41016, 16), 8), UFXP(BV(6541, 16), 8)), UFXP(BV(47557, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30907, 16), 8), SFXP(SBV(1837, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4392, 16), 8), SFXP(SBV(27085, 16), 8)), SFXP(SBV(-31477, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34019, 16), 8), UFXP(BV(28389, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2700, 16), 8), SFXP(SBV(5270, 16), 8)), SFXP(SBV(7970, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63390, 16), 8), UFXP(BV(26806, 16), 8)), UFXP(BV(18491, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32710, 16), 8), SFXP(SBV(-11870, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31713, 16), 8), SFXP(SBV(28951, 16), 8)), SFXP(SBV(2762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20790, 16), 8), SFXP(SBV(-12351, 16), 8)), SFXP(SBV(-8439, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12499, 16), 8), SFXP(SBV(-13938, 16), 8)), SFXP(SBV(-1439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62728, 16), 8), UFXP(BV(7974, 16), 8)), UFXP(BV(54754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53527, 16), 8), UFXP(BV(23350, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3849, 16), 8), SFXP(SBV(-10280, 16), 8)), SFXP(SBV(14129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23079, 16), 8), SFXP(SBV(-18207, 16), 8)), SFXP(SBV(-4872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58956, 16), 8), UFXP(BV(7535, 16), 8)), UFXP(BV(51421, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10920, 16), 8), SFXP(SBV(-16398, 16), 8)), SFXP(SBV(21419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19196, 16), 8), UFXP(BV(29218, 16), 8)), UFXP(BV(55514, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13529, 16), 8), SFXP(SBV(28616, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23950, 16), 8), UFXP(BV(29907, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3603, 16), 8), SFXP(SBV(-8428, 16), 8)), SFXP(SBV(-12031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14686, 16), 8), SFXP(SBV(-9231, 16), 8)), SFXP(SBV(-23917, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6625, 16), 8), SFXP(SBV(-23743, 16), 8)), SFXP(SBV(-30368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36385, 16), 8), UFXP(BV(7884, 16), 8)), UFXP(BV(44269, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39893, 16), 8), UFXP(BV(2475, 16), 8)), UFXP(BV(37418, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8060, 16), 8), SFXP(SBV(-18953, 16), 8)), SFXP(SBV(27013, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23415, 16), 8), UFXP(BV(40796, 16), 8)), UFXP(BV(61383, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63097, 16), 8), UFXP(BV(17427, 16), 8)), UFXP(BV(14988, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19112, 16), 8), UFXP(BV(910, 16), 8)), UFXP(BV(20022, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12547, 16), 8), SFXP(SBV(-28635, 16), 8)), SFXP(SBV(-16088, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31248, 16), 8), SFXP(SBV(30106, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32034, 16), 8), SFXP(SBV(-24375, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-8008, 16), 8), SFXP(SBV(5985, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33724, 16), 8), UFXP(BV(64991, 16), 8)), UFXP(BV(33179, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49540, 16), 8), UFXP(BV(3772, 16), 8)), UFXP(BV(9045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16820, 16), 8), UFXP(BV(25939, 16), 8)), UFXP(BV(56417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14243, 16), 8), UFXP(BV(19413, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8057, 16), 8), SFXP(SBV(-12451, 16), 8)), SFXP(SBV(-1350, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42114, 16), 8), UFXP(BV(6522, 16), 8)), UFXP(BV(35592, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23501, 16), 8), SFXP(SBV(816, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5690, 16), 8), UFXP(BV(35152, 16), 8)), UFXP(BV(60412, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16982, 16), 8), SFXP(SBV(-24088, 16), 8)), SFXP(SBV(7106, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31991, 16), 8), UFXP(BV(7305, 16), 8)), UFXP(BV(24686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60818, 16), 8), UFXP(BV(50919, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64032, 16), 8), UFXP(BV(34743, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24297, 16), 8), SFXP(SBV(27218, 16), 8)), SFXP(SBV(27360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48130, 16), 8), UFXP(BV(44919, 16), 8)), UFXP(BV(56514, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28713, 16), 8), SFXP(SBV(31848, 16), 8)), SFXP(SBV(3135, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56759, 16), 8), UFXP(BV(27710, 16), 8)), UFXP(BV(29049, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18355, 16), 8), UFXP(BV(34602, 16), 8)), UFXP(BV(52957, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64747, 16), 8), UFXP(BV(12407, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33552, 16), 8), UFXP(BV(41799, 16), 8)), UFXP(BV(38793, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12016, 16), 8), SFXP(SBV(29212, 16), 8)), SFXP(SBV(-24308, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27410, 16), 8), SFXP(SBV(-1487, 16), 8)), SFXP(SBV(-25923, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10197, 16), 8), SFXP(SBV(27880, 16), 8)), SFXP(SBV(-27459, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11000, 16), 8), SFXP(SBV(-14168, 16), 8)), SFXP(SBV(18958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1769, 16), 8), SFXP(SBV(29740, 16), 8)), SFXP(SBV(-31509, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22600, 16), 8), SFXP(SBV(-27276, 16), 8)), SFXP(SBV(4676, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15789, 16), 8), SFXP(SBV(-7686, 16), 8)), SFXP(SBV(-8103, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21677, 16), 8), SFXP(SBV(-21827, 16), 8)), SFXP(SBV(-150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31516, 16), 8), UFXP(BV(14779, 16), 8)), UFXP(BV(16737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2865, 16), 8), SFXP(SBV(-1005, 16), 8)), SFXP(SBV(11248, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23062, 16), 8), UFXP(BV(32015, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9291, 16), 8), SFXP(SBV(2435, 16), 8)), SFXP(SBV(22838, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-19163, 16), 8), SFXP(SBV(-3529, 16), 8)), SFXP(SBV(2020, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39307, 16), 8), UFXP(BV(26504, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12330, 16), 8), UFXP(BV(37884, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31613, 16), 8), UFXP(BV(20347, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24250, 16), 8), SFXP(SBV(4001, 16), 8)), SFXP(SBV(28251, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12357, 16), 8), SFXP(SBV(-28850, 16), 8)), SFXP(SBV(-16320, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8092, 16), 8), SFXP(SBV(-3610, 16), 8)), SFXP(SBV(-4482, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25821, 16), 8), UFXP(BV(9855, 16), 8)), UFXP(BV(15966, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24120, 16), 8), SFXP(SBV(7203, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42712, 16), 8), UFXP(BV(49178, 16), 8)), UFXP(BV(13042, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11405, 16), 8), SFXP(SBV(-1939, 16), 8)), SFXP(SBV(-13344, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1804, 16), 8), UFXP(BV(4799, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29466, 16), 8), SFXP(SBV(15825, 16), 8)), SFXP(SBV(-13641, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45640, 16), 8), UFXP(BV(51024, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15139, 16), 8), SFXP(SBV(-16975, 16), 8)), SFXP(SBV(32114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13650, 16), 8), SFXP(SBV(-25982, 16), 8)), SFXP(SBV(-12332, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23286, 16), 8), SFXP(SBV(16737, 16), 8)), SFXP(SBV(6549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10526, 16), 8), SFXP(SBV(-13524, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15692, 16), 8), SFXP(SBV(-22605, 16), 8)), SFXP(SBV(-27239, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33556, 16), 8), UFXP(BV(6018, 16), 8)), UFXP(BV(39574, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17194, 16), 8), SFXP(SBV(-5300, 16), 8)), SFXP(SBV(22494, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12635, 16), 8), SFXP(SBV(-22508, 16), 8)), SFXP(SBV(3220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48536, 16), 8), UFXP(BV(13600, 16), 8)), UFXP(BV(34936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44075, 16), 8), UFXP(BV(56489, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21415, 16), 8), SFXP(SBV(-25226, 16), 8)), SFXP(SBV(-18895, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14910, 16), 8), UFXP(BV(53647, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18748, 16), 8), SFXP(SBV(30528, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11808, 16), 8), UFXP(BV(62956, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17939, 16), 8), SFXP(SBV(-25458, 16), 8)), SFXP(SBV(-14478, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35510, 16), 8), UFXP(BV(54356, 16), 8)), UFXP(BV(24330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12634, 16), 8), UFXP(BV(34903, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15737, 16), 8), UFXP(BV(60090, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-532, 16), 8), SFXP(SBV(28947, 16), 8)), SFXP(SBV(5380, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(20188, 16), 8), SFXP(SBV(-6855, 16), 8)), SFXP(SBV(-16293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15963, 16), 8), UFXP(BV(3249, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1493, 16), 8), UFXP(BV(55965, 16), 8)), UFXP(BV(57458, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17715, 16), 8), SFXP(SBV(-11229, 16), 8)), SFXP(SBV(6486, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16314, 16), 8), SFXP(SBV(-28085, 16), 8)), SFXP(SBV(11771, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10173, 16), 8), UFXP(BV(20460, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30041, 16), 8), SFXP(SBV(-14051, 16), 8)), SFXP(SBV(-15990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17120, 16), 8), SFXP(SBV(-32307, 16), 8)), SFXP(SBV(-15187, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30677, 16), 8), SFXP(SBV(17201, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22204, 16), 8), SFXP(SBV(-16249, 16), 8)), SFXP(SBV(5955, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4675, 16), 8), SFXP(SBV(7603, 16), 8)), SFXP(SBV(-7772, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48131, 16), 8), UFXP(BV(1986, 16), 8)), UFXP(BV(50117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11285, 16), 8), UFXP(BV(20256, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6109, 16), 8), SFXP(SBV(26626, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(34872, 16), 8), UFXP(BV(27046, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18628, 16), 8), SFXP(SBV(-25733, 16), 8)), SFXP(SBV(-28066, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57986, 16), 8), UFXP(BV(8435, 16), 8)), UFXP(BV(49551, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9741, 16), 8), SFXP(SBV(-3256, 16), 8)), SFXP(SBV(-6485, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41126, 16), 8), UFXP(BV(14470, 16), 8)), UFXP(BV(55596, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61509, 16), 8), UFXP(BV(38717, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60355, 16), 8), UFXP(BV(60361, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17697, 16), 8), SFXP(SBV(-15574, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1607, 16), 8), SFXP(SBV(28348, 16), 8)), SFXP(SBV(18658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14033, 16), 8), SFXP(SBV(31240, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16623, 16), 8), UFXP(BV(18836, 16), 8)), UFXP(BV(43441, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24083, 16), 8), UFXP(BV(45541, 16), 8)), UFXP(BV(44078, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27601, 16), 8), UFXP(BV(177, 16), 8)), UFXP(BV(27424, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3377, 16), 8), UFXP(BV(29420, 16), 8)), UFXP(BV(32797, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10600, 16), 8), SFXP(SBV(-3486, 16), 8)), SFXP(SBV(7114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3444, 16), 8), SFXP(SBV(-16825, 16), 8)), SFXP(SBV(20269, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8157, 16), 8), SFXP(SBV(-2975, 16), 8)), SFXP(SBV(29257, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5037, 16), 8), UFXP(BV(14995, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9532, 16), 8), SFXP(SBV(3728, 16), 8)), SFXP(SBV(13260, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31181, 16), 8), SFXP(SBV(-6514, 16), 8)), SFXP(SBV(27841, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30968, 16), 8), UFXP(BV(37423, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29446, 16), 8), SFXP(SBV(-30647, 16), 8)), SFXP(SBV(-1201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7040, 16), 8), SFXP(SBV(18212, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10631, 16), 8), SFXP(SBV(-13614, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13605, 16), 8), SFXP(SBV(13679, 16), 8)), SFXP(SBV(-74, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29292, 16), 8), UFXP(BV(15216, 16), 8)), UFXP(BV(14076, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35842, 16), 8), UFXP(BV(30058, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18663, 16), 8), SFXP(SBV(-4499, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19217, 16), 8), SFXP(SBV(14930, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15349, 16), 8), SFXP(SBV(23741, 16), 8)), SFXP(SBV(8392, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53811, 16), 8), UFXP(BV(52211, 16), 8)), UFXP(BV(1600, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26381, 16), 8), SFXP(SBV(28155, 16), 8)), SFXP(SBV(-11000, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30238, 16), 8), SFXP(SBV(-31225, 16), 8)), SFXP(SBV(-18194, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60329, 16), 8), UFXP(BV(24090, 16), 8)), UFXP(BV(18883, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2687, 16), 8), UFXP(BV(11904, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16154, 16), 8), SFXP(SBV(-20725, 16), 8)), SFXP(SBV(28657, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48423, 16), 8), UFXP(BV(30212, 16), 8)), UFXP(BV(13039, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59984, 16), 8), UFXP(BV(2352, 16), 8)), UFXP(BV(26815, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44534, 16), 8), UFXP(BV(7680, 16), 8)), UFXP(BV(25300, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26308, 16), 8), SFXP(SBV(-20893, 16), 8)), SFXP(SBV(-5415, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51256, 16), 8), UFXP(BV(21073, 16), 8)), UFXP(BV(6793, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8015, 16), 8), SFXP(SBV(-29913, 16), 8)), SFXP(SBV(19030, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18483, 16), 8), SFXP(SBV(-11031, 16), 8)), SFXP(SBV(-7452, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16838, 16), 8), SFXP(SBV(-24558, 16), 8)), SFXP(SBV(-23136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51771, 16), 8), UFXP(BV(38682, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18008, 16), 8), UFXP(BV(8069, 16), 8)), UFXP(BV(43315, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59022, 16), 8), UFXP(BV(34023, 16), 8)), UFXP(BV(24999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22311, 16), 8), SFXP(SBV(27151, 16), 8)), SFXP(SBV(-16074, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24600, 16), 8), SFXP(SBV(5934, 16), 8)), SFXP(SBV(-19603, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18597, 16), 8), UFXP(BV(26108, 16), 8)), UFXP(BV(44705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27781, 16), 8), UFXP(BV(11937, 16), 8)), UFXP(BV(50213, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14803, 16), 8), SFXP(SBV(17792, 16), 8)), SFXP(SBV(19768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27948, 16), 8), UFXP(BV(33808, 16), 8)), UFXP(BV(61756, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39732, 16), 8), UFXP(BV(36737, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20006, 16), 8), UFXP(BV(14770, 16), 8)), UFXP(BV(40141, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31227, 16), 8), SFXP(SBV(357, 16), 8)), SFXP(SBV(-30870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31028, 16), 8), SFXP(SBV(29399, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22929, 16), 8), UFXP(BV(10979, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20679, 16), 8), SFXP(SBV(-14102, 16), 8)), SFXP(SBV(-30755, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7132, 16), 8), SFXP(SBV(26559, 16), 8)), SFXP(SBV(19427, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21128, 16), 8), SFXP(SBV(-8894, 16), 8)), SFXP(SBV(12234, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56206, 16), 8), UFXP(BV(54231, 16), 8)), UFXP(BV(1975, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29030, 16), 8), SFXP(SBV(1444, 16), 8)), SFXP(SBV(27586, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19790, 16), 8), SFXP(SBV(-3386, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26058, 16), 8), SFXP(SBV(-14038, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22886, 16), 8), UFXP(BV(63104, 16), 8)), UFXP(BV(5303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31839, 16), 8), SFXP(SBV(6032, 16), 8)), SFXP(SBV(29311, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(81, 16), 8), SFXP(SBV(18538, 16), 8)), SFXP(SBV(5865, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30983, 16), 8), SFXP(SBV(13535, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29340, 16), 8), UFXP(BV(54413, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33959, 16), 8), UFXP(BV(15864, 16), 8)), UFXP(BV(7245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64776, 16), 8), UFXP(BV(1383, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19723, 16), 8), SFXP(SBV(128, 16), 8)), SFXP(SBV(9861, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18849, 16), 8), SFXP(SBV(-1572, 16), 8)), SFXP(SBV(15328, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28166, 16), 8), SFXP(SBV(-278, 16), 8)), SFXP(SBV(-30587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15593, 16), 8), UFXP(BV(34375, 16), 8)), UFXP(BV(49968, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6726, 16), 8), UFXP(BV(38630, 16), 8)), UFXP(BV(31903, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5800, 16), 8), SFXP(SBV(26702, 16), 8)), SFXP(SBV(15143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23558, 16), 8), UFXP(BV(45381, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4113, 16), 8), UFXP(BV(2440, 16), 8)), UFXP(BV(39203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35706, 16), 8), UFXP(BV(64795, 16), 8)), UFXP(BV(36447, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38106, 16), 8), UFXP(BV(7544, 16), 8)), UFXP(BV(30562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30020, 16), 8), SFXP(SBV(13047, 16), 8)), SFXP(SBV(-22636, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61474, 16), 8), UFXP(BV(18928, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28292, 16), 8), SFXP(SBV(-6781, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63045, 16), 8), UFXP(BV(60870, 16), 8)), UFXP(BV(2175, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23268, 16), 8), UFXP(BV(1235, 16), 8)), UFXP(BV(22033, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56226, 16), 8), UFXP(BV(64159, 16), 8)), UFXP(BV(54849, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38890, 16), 8), UFXP(BV(35955, 16), 8)), UFXP(BV(2935, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3203, 16), 8), SFXP(SBV(26305, 16), 8)), SFXP(SBV(-23102, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36678, 16), 8), UFXP(BV(40593, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59348, 16), 8), UFXP(BV(60479, 16), 8)), UFXP(BV(54291, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19568, 16), 8), UFXP(BV(17576, 16), 8)), UFXP(BV(1992, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19321, 16), 8), UFXP(BV(33566, 16), 8)), UFXP(BV(52887, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3744, 16), 8), SFXP(SBV(21346, 16), 8)), SFXP(SBV(-17602, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31008, 16), 8), SFXP(SBV(-594, 16), 8)), SFXP(SBV(30414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21411, 16), 8), SFXP(SBV(23233, 16), 8)), SFXP(SBV(22948, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21885, 16), 8), SFXP(SBV(7138, 16), 8)), SFXP(SBV(29023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4050, 16), 8), UFXP(BV(30876, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7256, 16), 8), SFXP(SBV(-3444, 16), 8)), SFXP(SBV(10700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27964, 16), 8), SFXP(SBV(1711, 16), 8)), SFXP(SBV(29675, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30251, 16), 8), SFXP(SBV(29096, 16), 8)), SFXP(SBV(-30344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24006, 16), 8), SFXP(SBV(-25885, 16), 8)), SFXP(SBV(2494, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53027, 16), 8), UFXP(BV(8238, 16), 8)), UFXP(BV(44789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17425, 16), 8), SFXP(SBV(31651, 16), 8)), SFXP(SBV(-14226, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11031, 16), 8), SFXP(SBV(25590, 16), 8)), SFXP(SBV(-11443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(49, 16), 8), SFXP(SBV(25387, 16), 8)), SFXP(SBV(4859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33525, 16), 8), UFXP(BV(57103, 16), 8)), UFXP(BV(6936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6420, 16), 8), UFXP(BV(6870, 16), 8)), UFXP(BV(41214, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2092, 16), 8), UFXP(BV(37100, 16), 8)), UFXP(BV(39192, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37696, 16), 8), UFXP(BV(31967, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29652, 16), 8), SFXP(SBV(26353, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17681, 16), 8), SFXP(SBV(-25317, 16), 8)), SFXP(SBV(-20918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32542, 16), 8), UFXP(BV(51820, 16), 8)), UFXP(BV(18826, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41459, 16), 8), UFXP(BV(26533, 16), 8)), UFXP(BV(14926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4470, 16), 8), UFXP(BV(57302, 16), 8)), UFXP(BV(61772, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6761, 16), 8), UFXP(BV(63409, 16), 8)), UFXP(BV(36242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38425, 16), 8), UFXP(BV(50344, 16), 8)), UFXP(BV(53617, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16367, 16), 8), SFXP(SBV(5157, 16), 8)), SFXP(SBV(11210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51771, 16), 8), UFXP(BV(18676, 16), 8)), UFXP(BV(33095, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34898, 16), 8), UFXP(BV(13509, 16), 8)), UFXP(BV(21389, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45092, 16), 8), UFXP(BV(62158, 16), 8)), UFXP(BV(41714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59403, 16), 8), UFXP(BV(48716, 16), 8)), UFXP(BV(42583, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50314, 16), 8), UFXP(BV(27758, 16), 8)), UFXP(BV(16044, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23773, 16), 8), SFXP(SBV(-1808, 16), 8)), SFXP(SBV(25581, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17492, 16), 8), UFXP(BV(53596, 16), 8)), UFXP(BV(29432, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35127, 16), 8), UFXP(BV(49883, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14018, 16), 8), SFXP(SBV(-11815, 16), 8)), SFXP(SBV(25833, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53495, 16), 8), UFXP(BV(62454, 16), 8)), UFXP(BV(9026, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(139, 16), 8), SFXP(SBV(5601, 16), 8)), SFXP(SBV(-5462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24792, 16), 8), UFXP(BV(63404, 16), 8)), UFXP(BV(26924, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23203, 16), 8), SFXP(SBV(-6690, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7908, 16), 8), SFXP(SBV(-667, 16), 8)), SFXP(SBV(-20604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9838, 16), 8), SFXP(SBV(12529, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29024, 16), 8), SFXP(SBV(19187, 16), 8)), SFXP(SBV(-12638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30498, 16), 8), UFXP(BV(17680, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8333, 16), 8), SFXP(SBV(17685, 16), 8)), SFXP(SBV(9352, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62529, 16), 8), UFXP(BV(17087, 16), 8)), UFXP(BV(14080, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10400, 16), 8), UFXP(BV(62903, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13571, 16), 8), UFXP(BV(34319, 16), 8)), UFXP(BV(47890, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27764, 16), 8), SFXP(SBV(30590, 16), 8)), SFXP(SBV(-2826, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9814, 16), 8), SFXP(SBV(-21563, 16), 8)), SFXP(SBV(-25331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41010, 16), 8), UFXP(BV(11620, 16), 8)), UFXP(BV(52630, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55525, 16), 8), UFXP(BV(33339, 16), 8)), UFXP(BV(23328, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59963, 16), 8), UFXP(BV(48911, 16), 8)), UFXP(BV(11052, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34636, 16), 8), UFXP(BV(59693, 16), 8)), UFXP(BV(40479, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2121, 16), 8), UFXP(BV(25431, 16), 8)), UFXP(BV(42226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57152, 16), 8), UFXP(BV(12688, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31155, 16), 8), UFXP(BV(32852, 16), 8)), UFXP(BV(367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17986, 16), 8), SFXP(SBV(-4578, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44228, 16), 8), UFXP(BV(44802, 16), 8)), UFXP(BV(64962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29706, 16), 8), SFXP(SBV(-27043, 16), 8)), SFXP(SBV(2663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15732, 16), 8), UFXP(BV(38426, 16), 8)), UFXP(BV(2101, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15661, 16), 8), SFXP(SBV(11441, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42937, 16), 8), UFXP(BV(18169, 16), 8)), UFXP(BV(24768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2492, 16), 8), UFXP(BV(43750, 16), 8)), UFXP(BV(24278, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22731, 16), 8), UFXP(BV(14702, 16), 8)), UFXP(BV(8029, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36840, 16), 8), UFXP(BV(50214, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(1028, 16), 8), SFXP(SBV(-23087, 16), 8)), SFXP(SBV(-27172, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32357, 16), 8), SFXP(SBV(3613, 16), 8)), SFXP(SBV(29566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43174, 16), 8), UFXP(BV(54326, 16), 8)), UFXP(BV(31964, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36602, 16), 8), UFXP(BV(61584, 16), 8)), UFXP(BV(23244, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63214, 16), 8), UFXP(BV(8215, 16), 8)), UFXP(BV(54999, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1654, 16), 8), UFXP(BV(40695, 16), 8)), UFXP(BV(42349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59104, 16), 8), UFXP(BV(26176, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7754, 16), 8), SFXP(SBV(-30232, 16), 8)), SFXP(SBV(-22478, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15746, 16), 8), SFXP(SBV(22493, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21553, 16), 8), SFXP(SBV(-17405, 16), 8)), SFXP(SBV(-4148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(64655, 16), 8), UFXP(BV(42050, 16), 8)), UFXP(BV(3257, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58526, 16), 8), UFXP(BV(35076, 16), 8)), UFXP(BV(23450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14716, 16), 8), SFXP(SBV(7190, 16), 8)), SFXP(SBV(7526, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5722, 16), 8), UFXP(BV(23698, 16), 8)), UFXP(BV(5400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1721, 16), 8), UFXP(BV(20006, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24878, 16), 8), SFXP(SBV(17694, 16), 8)), SFXP(SBV(-7184, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62599, 16), 8), UFXP(BV(1379, 16), 8)), UFXP(BV(61220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37931, 16), 8), UFXP(BV(19025, 16), 8)), UFXP(BV(56956, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55309, 16), 8), UFXP(BV(31285, 16), 8)), UFXP(BV(24024, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32050, 16), 8), UFXP(BV(16691, 16), 8)), UFXP(BV(48741, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29746, 16), 8), UFXP(BV(41753, 16), 8)), UFXP(BV(1838, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24727, 16), 8), SFXP(SBV(-2116, 16), 8)), SFXP(SBV(22611, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18347, 16), 8), SFXP(SBV(24217, 16), 8)), SFXP(SBV(31648, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13609, 16), 8), UFXP(BV(56215, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29157, 16), 8), SFXP(SBV(-3290, 16), 8)), SFXP(SBV(-25867, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26334, 16), 8), SFXP(SBV(-31322, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1223, 16), 8), UFXP(BV(64447, 16), 8)), UFXP(BV(134, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7302, 16), 8), SFXP(SBV(4905, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(616, 16), 8), UFXP(BV(43394, 16), 8)), UFXP(BV(44010, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(43731, 16), 8), UFXP(BV(42373, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51075, 16), 8), UFXP(BV(46831, 16), 8)), UFXP(BV(37222, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51053, 16), 8), UFXP(BV(390, 16), 8)), UFXP(BV(51443, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37551, 16), 8), UFXP(BV(36686, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36013, 16), 8), UFXP(BV(60415, 16), 8)), UFXP(BV(44784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46640, 16), 8), UFXP(BV(30503, 16), 8)), UFXP(BV(16137, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19762, 16), 8), SFXP(SBV(-23455, 16), 8)), SFXP(SBV(-24391, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56555, 16), 8), UFXP(BV(42653, 16), 8)), UFXP(BV(13902, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27940, 16), 8), SFXP(SBV(-9875, 16), 8)), SFXP(SBV(-27721, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5643, 16), 8), SFXP(SBV(8458, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22918, 16), 8), SFXP(SBV(-23723, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7500, 16), 8), SFXP(SBV(8896, 16), 8)), SFXP(SBV(1519, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44224, 16), 8), UFXP(BV(18402, 16), 8)), UFXP(BV(33217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59173, 16), 8), UFXP(BV(42413, 16), 8)), UFXP(BV(36050, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26488, 16), 8), UFXP(BV(18245, 16), 8)), UFXP(BV(8243, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24284, 16), 8), SFXP(SBV(-488, 16), 8)), SFXP(SBV(24772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(244, 16), 8), SFXP(SBV(5973, 16), 8)), SFXP(SBV(5694, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4702, 16), 8), SFXP(SBV(-25335, 16), 8)), SFXP(SBV(-20633, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27494, 16), 8), SFXP(SBV(22484, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(939, 16), 8), UFXP(BV(42584, 16), 8)), UFXP(BV(43523, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50494, 16), 8), UFXP(BV(103, 16), 8)), UFXP(BV(50597, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(188, 16), 8), SFXP(SBV(-15959, 16), 8)), SFXP(SBV(-11719, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28405, 16), 8), UFXP(BV(36301, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23943, 16), 8), UFXP(BV(35827, 16), 8)), UFXP(BV(59770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5889, 16), 8), SFXP(SBV(21149, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17378, 16), 8), SFXP(SBV(-25594, 16), 8)), SFXP(SBV(32079, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31736, 16), 8), UFXP(BV(45684, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11323, 16), 8), UFXP(BV(50417, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25718, 16), 8), SFXP(SBV(27312, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2958, 16), 8), UFXP(BV(40002, 16), 8)), UFXP(BV(42960, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(11135, 16), 8), SFXP(SBV(20202, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62106, 16), 8), UFXP(BV(54554, 16), 8)), UFXP(BV(7552, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41905, 16), 8), UFXP(BV(63497, 16), 8)), UFXP(BV(39866, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25715, 16), 8), SFXP(SBV(-10284, 16), 8)), SFXP(SBV(-15557, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28447, 16), 8), UFXP(BV(5664, 16), 8)), UFXP(BV(39566, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3110, 16), 8), SFXP(SBV(16183, 16), 8)), SFXP(SBV(-9, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57814, 16), 8), UFXP(BV(7360, 16), 8)), UFXP(BV(23753, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11704, 16), 8), SFXP(SBV(-14836, 16), 8)), SFXP(SBV(-26540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25590, 16), 8), SFXP(SBV(32477, 16), 8)), SFXP(SBV(-6887, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7395, 16), 8), SFXP(SBV(21311, 16), 8)), SFXP(SBV(-28706, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8480, 16), 8), SFXP(SBV(5816, 16), 8)), SFXP(SBV(3953, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5516, 16), 8), SFXP(SBV(-24484, 16), 8)), SFXP(SBV(-18968, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4090, 16), 8), SFXP(SBV(26610, 16), 8)), SFXP(SBV(-22520, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63841, 16), 8), UFXP(BV(40120, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25910, 16), 8), SFXP(SBV(-6570, 16), 8)), SFXP(SBV(-9595, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21141, 16), 8), SFXP(SBV(24605, 16), 8)), SFXP(SBV(19790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3892, 16), 8), UFXP(BV(20585, 16), 8)), UFXP(BV(24477, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42820, 16), 8), UFXP(BV(47255, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64675, 16), 8), UFXP(BV(562, 16), 8)), UFXP(BV(64113, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32768, 16), 8), UFXP(BV(26811, 16), 8)), UFXP(BV(59579, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28020, 16), 8), UFXP(BV(46106, 16), 8)), UFXP(BV(47450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35756, 16), 8), UFXP(BV(15101, 16), 8)), UFXP(BV(20655, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39587, 16), 8), UFXP(BV(22510, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61442, 16), 8), UFXP(BV(4644, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12070, 16), 8), SFXP(SBV(-7577, 16), 8)), SFXP(SBV(-19647, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17231, 16), 8), SFXP(SBV(15462, 16), 8)), SFXP(SBV(7850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13324, 16), 8), SFXP(SBV(29706, 16), 8)), SFXP(SBV(16382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31214, 16), 8), UFXP(BV(54298, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6311, 16), 8), UFXP(BV(55975, 16), 8)), UFXP(BV(15872, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18442, 16), 8), SFXP(SBV(-19823, 16), 8)), SFXP(SBV(-27271, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46298, 16), 8), UFXP(BV(20088, 16), 8)), UFXP(BV(850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21311, 16), 8), SFXP(SBV(10043, 16), 8)), SFXP(SBV(-15927, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3416, 16), 8), SFXP(SBV(5320, 16), 8)), SFXP(SBV(-1904, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21507, 16), 8), SFXP(SBV(27835, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24398, 16), 8), UFXP(BV(5122, 16), 8)), UFXP(BV(29520, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11953, 16), 8), UFXP(BV(18050, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1909, 16), 8), UFXP(BV(10409, 16), 8)), UFXP(BV(12318, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6796, 16), 8), SFXP(SBV(-3102, 16), 8)), SFXP(SBV(3694, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17123, 16), 8), SFXP(SBV(-15476, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2805, 16), 8), UFXP(BV(56359, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26462, 16), 8), SFXP(SBV(30512, 16), 8)), SFXP(SBV(-4050, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6601, 16), 8), SFXP(SBV(-3862, 16), 8)), SFXP(SBV(-2739, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10536, 16), 8), UFXP(BV(27762, 16), 8)), UFXP(BV(38298, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26346, 16), 8), SFXP(SBV(8794, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26487, 16), 8), SFXP(SBV(-705, 16), 8)), SFXP(SBV(-25782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18164, 16), 8), UFXP(BV(63804, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38383, 16), 8), UFXP(BV(1452, 16), 8)), UFXP(BV(39835, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49309, 16), 8), UFXP(BV(31495, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31487, 16), 8), SFXP(SBV(24960, 16), 8)), SFXP(SBV(9089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49463, 16), 8), UFXP(BV(9381, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57352, 16), 8), UFXP(BV(12169, 16), 8)), UFXP(BV(45183, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28530, 16), 8), UFXP(BV(61431, 16), 8)), UFXP(BV(24425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37734, 16), 8), UFXP(BV(47009, 16), 8)), UFXP(BV(19207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9808, 16), 8), SFXP(SBV(4800, 16), 8)), SFXP(SBV(-14608, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23292, 16), 8), UFXP(BV(62837, 16), 8)), UFXP(BV(15554, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21130, 16), 8), SFXP(SBV(29257, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5540, 16), 8), UFXP(BV(55500, 16), 8)), UFXP(BV(15576, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44511, 16), 8), UFXP(BV(60793, 16), 8)), UFXP(BV(49254, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39395, 16), 8), UFXP(BV(52451, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45766, 16), 8), UFXP(BV(5288, 16), 8)), UFXP(BV(51054, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27833, 16), 8), UFXP(BV(4400, 16), 8)), UFXP(BV(23433, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38546, 16), 8), UFXP(BV(200, 16), 8)), UFXP(BV(38746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24861, 16), 8), UFXP(BV(37439, 16), 8)), UFXP(BV(62300, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1476, 16), 8), SFXP(SBV(21667, 16), 8)), SFXP(SBV(23143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22321, 16), 8), SFXP(SBV(5841, 16), 8)), SFXP(SBV(-28162, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9856, 16), 8), SFXP(SBV(-21852, 16), 8)), SFXP(SBV(31708, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32210, 16), 8), SFXP(SBV(11330, 16), 8)), SFXP(SBV(20880, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8534, 16), 8), SFXP(SBV(15850, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4655, 16), 8), SFXP(SBV(-18825, 16), 8)), SFXP(SBV(-23480, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19665, 16), 8), SFXP(SBV(-26925, 16), 8)), SFXP(SBV(-18946, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9095, 16), 8), SFXP(SBV(-18563, 16), 8)), SFXP(SBV(27658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6200, 16), 8), SFXP(SBV(6494, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28706, 16), 8), SFXP(SBV(984, 16), 8)), SFXP(SBV(-27722, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62893, 16), 8), UFXP(BV(51748, 16), 8)), UFXP(BV(49105, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(963, 16), 8), SFXP(SBV(-8336, 16), 8)), SFXP(SBV(-7373, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11696, 16), 8), UFXP(BV(11560, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14885, 16), 8), SFXP(SBV(-27263, 16), 8)), SFXP(SBV(-12378, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4945, 16), 8), SFXP(SBV(26358, 16), 8)), SFXP(SBV(31303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(320, 16), 8), SFXP(SBV(19447, 16), 8)), SFXP(SBV(19767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23034, 16), 8), UFXP(BV(5549, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23493, 16), 8), SFXP(SBV(-15624, 16), 8)), SFXP(SBV(-7869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7608, 16), 8), SFXP(SBV(19050, 16), 8)), SFXP(SBV(26658, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15379, 16), 8), UFXP(BV(12785, 16), 8)), UFXP(BV(2594, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13228, 16), 8), SFXP(SBV(29037, 16), 8)), SFXP(SBV(-23271, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3173, 16), 8), UFXP(BV(12685, 16), 8)), UFXP(BV(26152, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56634, 16), 8), UFXP(BV(40589, 16), 8)), UFXP(BV(933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13262, 16), 8), SFXP(SBV(-5095, 16), 8)), SFXP(SBV(-1801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16475, 16), 8), SFXP(SBV(25411, 16), 8)), SFXP(SBV(-8936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49918, 16), 8), UFXP(BV(57789, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6398, 16), 8), SFXP(SBV(-29807, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32052, 16), 8), SFXP(SBV(-29952, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42279, 16), 8), UFXP(BV(39369, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24796, 16), 8), UFXP(BV(30488, 16), 8)), UFXP(BV(55284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41244, 16), 8), UFXP(BV(61103, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14758, 16), 8), SFXP(SBV(10203, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17017, 16), 8), SFXP(SBV(11664, 16), 8)), SFXP(SBV(-11095, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64277, 16), 8), UFXP(BV(31518, 16), 8)), UFXP(BV(30259, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-186, 16), 8), SFXP(SBV(8714, 16), 8)), SFXP(SBV(8528, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31921, 16), 8), SFXP(SBV(23381, 16), 8)), SFXP(SBV(8540, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4199, 16), 8), UFXP(BV(52719, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27316, 16), 8), SFXP(SBV(27190, 16), 8)), SFXP(SBV(11030, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12203, 16), 8), SFXP(SBV(-23020, 16), 8)), SFXP(SBV(16795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10267, 16), 8), UFXP(BV(40422, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(414, 16), 8), UFXP(BV(41467, 16), 8)), UFXP(BV(41881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10895, 16), 8), SFXP(SBV(-30135, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30375, 16), 8), SFXP(SBV(25646, 16), 8)), SFXP(SBV(-4729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8465, 16), 8), SFXP(SBV(146, 16), 8)), SFXP(SBV(8611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49100, 16), 8), UFXP(BV(33962, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64368, 16), 8), UFXP(BV(36571, 16), 8)), UFXP(BV(35403, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(62466, 16), 8), UFXP(BV(52744, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19538, 16), 8), UFXP(BV(19021, 16), 8)), UFXP(BV(517, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22254, 16), 8), UFXP(BV(38990, 16), 8)), UFXP(BV(47052, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43322, 16), 8), UFXP(BV(57814, 16), 8)), UFXP(BV(51044, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52003, 16), 8), UFXP(BV(35928, 16), 8)), UFXP(BV(16075, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20756, 16), 8), UFXP(BV(62179, 16), 8)), UFXP(BV(17399, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26914, 16), 8), UFXP(BV(34739, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28493, 16), 8), SFXP(SBV(-4943, 16), 8)), SFXP(SBV(-32100, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5750, 16), 8), UFXP(BV(10757, 16), 8)), UFXP(BV(16507, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3652, 16), 8), UFXP(BV(13578, 16), 8)), UFXP(BV(17230, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24724, 16), 8), UFXP(BV(26983, 16), 8)), UFXP(BV(63277, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56186, 16), 8), UFXP(BV(13188, 16), 8)), UFXP(BV(42998, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21905, 16), 8), SFXP(SBV(-4182, 16), 8)), SFXP(SBV(-26087, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6635, 16), 8), SFXP(SBV(-5396, 16), 8)), SFXP(SBV(12031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6991, 16), 8), SFXP(SBV(-17811, 16), 8)), SFXP(SBV(27642, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40738, 16), 8), UFXP(BV(6659, 16), 8)), UFXP(BV(34079, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13518, 16), 8), SFXP(SBV(28260, 16), 8)), SFXP(SBV(23758, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57146, 16), 8), UFXP(BV(33422, 16), 8)), UFXP(BV(25032, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2938, 16), 8), SFXP(SBV(5005, 16), 8)), SFXP(SBV(2067, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22919, 16), 8), UFXP(BV(32772, 16), 8)), UFXP(BV(50406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31340, 16), 8), SFXP(SBV(14389, 16), 8)), SFXP(SBV(7943, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18524, 16), 8), SFXP(SBV(4012, 16), 8)), SFXP(SBV(14512, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62767, 16), 8), UFXP(BV(9702, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20748, 16), 8), SFXP(SBV(-20811, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21953, 16), 8), UFXP(BV(45654, 16), 8)), UFXP(BV(41835, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24082, 16), 8), SFXP(SBV(17370, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37704, 16), 8), UFXP(BV(62743, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18485, 16), 8), UFXP(BV(54162, 16), 8)), UFXP(BV(29859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5928, 16), 8), SFXP(SBV(32335, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65153, 16), 8), UFXP(BV(4596, 16), 8)), UFXP(BV(4213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35336, 16), 8), UFXP(BV(32566, 16), 8)), UFXP(BV(2770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24064, 16), 8), SFXP(SBV(-17426, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4973, 16), 8), UFXP(BV(35711, 16), 8)), UFXP(BV(34798, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30114, 16), 8), SFXP(SBV(-2043, 16), 8)), SFXP(SBV(-32157, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8032, 16), 8), UFXP(BV(33108, 16), 8)), UFXP(BV(41140, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23210, 16), 8), UFXP(BV(52512, 16), 8)), UFXP(BV(10186, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16463, 16), 8), UFXP(BV(47173, 16), 8)), UFXP(BV(63636, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19999, 16), 8), SFXP(SBV(-31202, 16), 8)), SFXP(SBV(11203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(800, 16), 8), UFXP(BV(49823, 16), 8)), UFXP(BV(24625, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62682, 16), 8), UFXP(BV(30656, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55927, 16), 8), UFXP(BV(12895, 16), 8)), UFXP(BV(43032, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40235, 16), 8), UFXP(BV(8024, 16), 8)), UFXP(BV(48259, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12926, 16), 8), SFXP(SBV(-3843, 16), 8)), SFXP(SBV(-16769, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36724, 16), 8), UFXP(BV(37785, 16), 8)), UFXP(BV(8973, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16744, 16), 8), UFXP(BV(10503, 16), 8)), UFXP(BV(27247, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9123, 16), 8), SFXP(SBV(26352, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4726, 16), 8), UFXP(BV(26830, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43790, 16), 8), UFXP(BV(2944, 16), 8)), UFXP(BV(44833, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7153, 16), 8), SFXP(SBV(22737, 16), 8)), SFXP(SBV(29890, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32247, 16), 8), UFXP(BV(34512, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46149, 16), 8), UFXP(BV(27473, 16), 8)), UFXP(BV(18676, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5683, 16), 8), UFXP(BV(24309, 16), 8)), UFXP(BV(46910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38598, 16), 8), UFXP(BV(15470, 16), 8)), UFXP(BV(38705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54331, 16), 8), UFXP(BV(65018, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30673, 16), 8), UFXP(BV(50399, 16), 8)), UFXP(BV(9316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28495, 16), 8), SFXP(SBV(24459, 16), 8)), SFXP(SBV(30016, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4893, 16), 8), SFXP(SBV(6637, 16), 8)), SFXP(SBV(-1744, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27515, 16), 8), SFXP(SBV(20543, 16), 8)), SFXP(SBV(-6972, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12616, 16), 8), UFXP(BV(4396, 16), 8)), UFXP(BV(8220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4958, 16), 8), SFXP(SBV(-21369, 16), 8)), SFXP(SBV(-26327, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1219, 16), 8), SFXP(SBV(28768, 16), 8)), SFXP(SBV(-29987, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47065, 16), 8), UFXP(BV(64491, 16), 8)), UFXP(BV(48110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10428, 16), 8), UFXP(BV(39367, 16), 8)), UFXP(BV(30727, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2239, 16), 8), SFXP(SBV(8114, 16), 8)), SFXP(SBV(5875, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57585, 16), 8), UFXP(BV(46446, 16), 8)), UFXP(BV(38495, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19301, 16), 8), UFXP(BV(58428, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15440, 16), 8), UFXP(BV(63846, 16), 8)), UFXP(BV(13750, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56488, 16), 8), UFXP(BV(30606, 16), 8)), UFXP(BV(3197, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44894, 16), 8), UFXP(BV(22873, 16), 8)), UFXP(BV(13478, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15824, 16), 8), UFXP(BV(62762, 16), 8)), UFXP(BV(12852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53015, 16), 8), UFXP(BV(45300, 16), 8)), UFXP(BV(9522, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19224, 16), 8), SFXP(SBV(805, 16), 8)), SFXP(SBV(-20029, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22927, 16), 8), SFXP(SBV(-22780, 16), 8)), SFXP(SBV(-147, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2432, 16), 8), SFXP(SBV(-5504, 16), 8)), SFXP(SBV(3072, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8727, 16), 8), UFXP(BV(32705, 16), 8)), UFXP(BV(796, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52094, 16), 8), UFXP(BV(1552, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17201, 16), 8), UFXP(BV(22049, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25155, 16), 8), SFXP(SBV(-8463, 16), 8)), SFXP(SBV(-31918, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3057, 16), 8), SFXP(SBV(-4901, 16), 8)), SFXP(SBV(-7958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20224, 16), 8), SFXP(SBV(-16376, 16), 8)), SFXP(SBV(-3848, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2479, 16), 8), SFXP(SBV(-31626, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17007, 16), 8), SFXP(SBV(-13163, 16), 8)), SFXP(SBV(30170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15019, 16), 8), SFXP(SBV(28918, 16), 8)), SFXP(SBV(-13899, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25343, 16), 8), UFXP(BV(62503, 16), 8)), UFXP(BV(22310, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10943, 16), 8), SFXP(SBV(12640, 16), 8)), SFXP(SBV(-23583, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65464, 16), 8), UFXP(BV(55606, 16), 8)), UFXP(BV(9858, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33065, 16), 8), UFXP(BV(42467, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64147, 16), 8), UFXP(BV(14225, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57200, 16), 8), UFXP(BV(13390, 16), 8)), UFXP(BV(43810, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(16557, 16), 8), SFXP(SBV(29670, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20010, 16), 8), UFXP(BV(6680, 16), 8)), UFXP(BV(13330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7564, 16), 8), UFXP(BV(6342, 16), 8)), UFXP(BV(56315, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14882, 16), 8), UFXP(BV(4694, 16), 8)), UFXP(BV(10188, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6048, 16), 8), SFXP(SBV(-2335, 16), 8)), SFXP(SBV(-8383, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23190, 16), 8), SFXP(SBV(-31953, 16), 8)), SFXP(SBV(8763, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7450, 16), 8), SFXP(SBV(-9477, 16), 8)), SFXP(SBV(-16927, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40882, 16), 8), UFXP(BV(65010, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30715, 16), 8), SFXP(SBV(-7858, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40207, 16), 8), UFXP(BV(64390, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28473, 16), 8), SFXP(SBV(28321, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13732, 16), 8), SFXP(SBV(30184, 16), 8)), SFXP(SBV(-16452, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25145, 16), 8), SFXP(SBV(7821, 16), 8)), SFXP(SBV(-18233, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15172, 16), 8), SFXP(SBV(-32051, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58476, 16), 8), UFXP(BV(9535, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57279, 16), 8), UFXP(BV(26332, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8405, 16), 8), SFXP(SBV(28854, 16), 8)), SFXP(SBV(-20449, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63850, 16), 8), UFXP(BV(44076, 16), 8)), UFXP(BV(19774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10206, 16), 8), UFXP(BV(63473, 16), 8)), UFXP(BV(40121, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43444, 16), 8), UFXP(BV(17030, 16), 8)), UFXP(BV(60474, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26267, 16), 8), SFXP(SBV(7259, 16), 8)), SFXP(SBV(23917, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19593, 16), 8), SFXP(SBV(25971, 16), 8)), SFXP(SBV(21615, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1583, 16), 8), UFXP(BV(27899, 16), 8)), UFXP(BV(41444, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2545, 16), 8), SFXP(SBV(-31872, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23482, 16), 8), UFXP(BV(65343, 16), 8)), UFXP(BV(23289, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9656, 16), 8), UFXP(BV(50180, 16), 8)), UFXP(BV(59836, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9383, 16), 8), SFXP(SBV(17516, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11832, 16), 8), SFXP(SBV(15872, 16), 8)), SFXP(SBV(4040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29208, 16), 8), UFXP(BV(20095, 16), 8)), UFXP(BV(64490, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13849, 16), 8), UFXP(BV(17430, 16), 8)), UFXP(BV(31279, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19556, 16), 8), UFXP(BV(45872, 16), 8)), UFXP(BV(39220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28425, 16), 8), UFXP(BV(27417, 16), 8)), UFXP(BV(1008, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29365, 16), 8), SFXP(SBV(-6658, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5592, 16), 8), UFXP(BV(49620, 16), 8)), UFXP(BV(21508, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2038, 16), 8), SFXP(SBV(2315, 16), 8)), SFXP(SBV(-4353, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1142, 16), 8), SFXP(SBV(-4621, 16), 8)), SFXP(SBV(-5763, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32739, 16), 8), SFXP(SBV(-19303, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5737, 16), 8), UFXP(BV(9507, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21938, 16), 8), SFXP(SBV(-17444, 16), 8)), SFXP(SBV(-12459, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13793, 16), 8), UFXP(BV(65181, 16), 8)), UFXP(BV(14148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23961, 16), 8), UFXP(BV(49643, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52964, 16), 8), UFXP(BV(61258, 16), 8)), UFXP(BV(57242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12304, 16), 8), UFXP(BV(20329, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21978, 16), 8), UFXP(BV(55683, 16), 8)), UFXP(BV(61881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14787, 16), 8), SFXP(SBV(-2455, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27300, 16), 8), SFXP(SBV(-17659, 16), 8)), SFXP(SBV(-20577, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2640, 16), 8), UFXP(BV(13767, 16), 8)), UFXP(BV(16407, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16779, 16), 8), SFXP(SBV(-23092, 16), 8)), SFXP(SBV(-6313, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23671, 16), 8), UFXP(BV(48796, 16), 8)), UFXP(BV(55467, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45801, 16), 8), UFXP(BV(52473, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(8384, 16), 8), SFXP(SBV(25115, 16), 8)), SFXP(SBV(-29452, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56416, 16), 8), UFXP(BV(24031, 16), 8)), UFXP(BV(14911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28658, 16), 8), SFXP(SBV(-32058, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2341, 16), 8), UFXP(BV(64388, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14289, 16), 8), UFXP(BV(52572, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17778, 16), 8), SFXP(SBV(15453, 16), 8)), SFXP(SBV(2325, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45753, 16), 8), UFXP(BV(15592, 16), 8)), UFXP(BV(61345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28576, 16), 8), UFXP(BV(27441, 16), 8)), UFXP(BV(56017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29003, 16), 8), SFXP(SBV(-4190, 16), 8)), SFXP(SBV(-32343, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3025, 16), 8), SFXP(SBV(-9972, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65053, 16), 8), UFXP(BV(35031, 16), 8)), UFXP(BV(30022, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61849, 16), 8), UFXP(BV(13519, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14250, 16), 8), SFXP(SBV(-21169, 16), 8)), SFXP(SBV(-6919, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57171, 16), 8), UFXP(BV(59552, 16), 8)), UFXP(BV(51187, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17406, 16), 8), UFXP(BV(10658, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22797, 16), 8), SFXP(SBV(7216, 16), 8)), SFXP(SBV(-15581, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42126, 16), 8), UFXP(BV(12080, 16), 8)), UFXP(BV(54206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17563, 16), 8), SFXP(SBV(-20298, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(468, 16), 8), UFXP(BV(14837, 16), 8)), UFXP(BV(27123, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17291, 16), 8), UFXP(BV(21391, 16), 8)), UFXP(BV(3020, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19767, 16), 8), UFXP(BV(9422, 16), 8)), UFXP(BV(29189, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35189, 16), 8), UFXP(BV(6130, 16), 8)), UFXP(BV(56180, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30889, 16), 8), SFXP(SBV(27948, 16), 8)), SFXP(SBV(-29874, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16445, 16), 8), SFXP(SBV(9365, 16), 8)), SFXP(SBV(7080, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9355, 16), 8), SFXP(SBV(-15838, 16), 8)), SFXP(SBV(-25193, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16047, 16), 8), SFXP(SBV(-1011, 16), 8)), SFXP(SBV(-15036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42742, 16), 8), UFXP(BV(57876, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22536, 16), 8), SFXP(SBV(-28661, 16), 8)), SFXP(SBV(-32696, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9044, 16), 8), UFXP(BV(52025, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6014, 16), 8), SFXP(SBV(-5413, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57478, 16), 8), UFXP(BV(42456, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29892, 16), 8), SFXP(SBV(-21962, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44445, 16), 8), UFXP(BV(9437, 16), 8)), UFXP(BV(53882, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5708, 16), 8), UFXP(BV(21630, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(26550, 16), 8), UFXP(BV(54723, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50116, 16), 8), UFXP(BV(13643, 16), 8)), UFXP(BV(49391, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24463, 16), 8), UFXP(BV(21364, 16), 8)), UFXP(BV(45827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56916, 16), 8), UFXP(BV(12533, 16), 8)), UFXP(BV(33927, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20592, 16), 8), SFXP(SBV(-3521, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23576, 16), 8), UFXP(BV(30558, 16), 8)), UFXP(BV(54134, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11867, 16), 8), UFXP(BV(15433, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7731, 16), 8), UFXP(BV(62641, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20268, 16), 8), SFXP(SBV(-30647, 16), 8)), SFXP(SBV(10379, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13336, 16), 8), UFXP(BV(64800, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6315, 16), 8), SFXP(SBV(-15545, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19167, 16), 8), SFXP(SBV(-27813, 16), 8)), SFXP(SBV(8646, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20503, 16), 8), SFXP(SBV(22715, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32092, 16), 8), UFXP(BV(50819, 16), 8)), UFXP(BV(46809, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15039, 16), 8), SFXP(SBV(21427, 16), 8)), SFXP(SBV(6388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18179, 16), 8), SFXP(SBV(9567, 16), 8)), SFXP(SBV(-27746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20344, 16), 8), UFXP(BV(32926, 16), 8)), UFXP(BV(52954, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40463, 16), 8), UFXP(BV(29387, 16), 8)), UFXP(BV(57347, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14174, 16), 8), SFXP(SBV(12931, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13959, 16), 8), SFXP(SBV(7621, 16), 8)), SFXP(SBV(22336, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6976, 16), 8), SFXP(SBV(-7190, 16), 8)), SFXP(SBV(214, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50687, 16), 8), UFXP(BV(23417, 16), 8)), UFXP(BV(48955, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63094, 16), 8), UFXP(BV(45874, 16), 8)), UFXP(BV(17220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(55012, 16), 8), UFXP(BV(21273, 16), 8)), UFXP(BV(49385, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44019, 16), 8), UFXP(BV(62578, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3640, 16), 8), UFXP(BV(18077, 16), 8)), UFXP(BV(21717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36459, 16), 8), UFXP(BV(51482, 16), 8)), UFXP(BV(57466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30610, 16), 8), UFXP(BV(24276, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12369, 16), 8), UFXP(BV(2503, 16), 8)), UFXP(BV(9866, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19934, 16), 8), SFXP(SBV(-3714, 16), 8)), SFXP(SBV(-16220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-17637, 16), 8), SFXP(SBV(13410, 16), 8)), SFXP(SBV(-6371, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14043, 16), 8), UFXP(BV(12713, 16), 8)), UFXP(BV(1330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30046, 16), 8), UFXP(BV(50169, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17153, 16), 8), SFXP(SBV(-21887, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(763, 16), 8), UFXP(BV(3246, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22644, 16), 8), SFXP(SBV(-32645, 16), 8)), SFXP(SBV(3969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23803, 16), 8), UFXP(BV(23053, 16), 8)), UFXP(BV(46327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33564, 16), 8), UFXP(BV(9218, 16), 8)), UFXP(BV(24346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49482, 16), 8), UFXP(BV(48496, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26954, 16), 8), UFXP(BV(9753, 16), 8)), UFXP(BV(17201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26190, 16), 8), SFXP(SBV(-11147, 16), 8)), SFXP(SBV(-26279, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30684, 16), 8), UFXP(BV(20938, 16), 8)), UFXP(BV(19248, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28834, 16), 8), UFXP(BV(28024, 16), 8)), UFXP(BV(56858, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34880, 16), 8), UFXP(BV(62833, 16), 8)), UFXP(BV(41317, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3592, 16), 8), SFXP(SBV(14083, 16), 8)), SFXP(SBV(17675, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16146, 16), 8), UFXP(BV(24502, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4719, 16), 8), SFXP(SBV(-27742, 16), 8)), SFXP(SBV(23023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(46218, 16), 8), UFXP(BV(14297, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7717, 16), 8), UFXP(BV(48460, 16), 8)), UFXP(BV(56177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5687, 16), 8), SFXP(SBV(-24444, 16), 8)), SFXP(SBV(18757, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28193, 16), 8), SFXP(SBV(8537, 16), 8)), SFXP(SBV(-22666, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64985, 16), 8), UFXP(BV(24322, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64368, 16), 8), UFXP(BV(22373, 16), 8)), UFXP(BV(41995, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-638, 16), 8), SFXP(SBV(3497, 16), 8)), SFXP(SBV(-4135, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16420, 16), 8), SFXP(SBV(-4851, 16), 8)), SFXP(SBV(21271, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18160, 16), 8), SFXP(SBV(12305, 16), 8)), SFXP(SBV(-5855, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19050, 16), 8), SFXP(SBV(-20872, 16), 8)), SFXP(SBV(25614, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31562, 16), 8), UFXP(BV(19505, 16), 8)), UFXP(BV(51067, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7355, 16), 8), UFXP(BV(64247, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55332, 16), 8), UFXP(BV(32016, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52207, 16), 8), UFXP(BV(14847, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2448, 16), 8), UFXP(BV(26271, 16), 8)), UFXP(BV(28719, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31772, 16), 8), SFXP(SBV(13449, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18475, 16), 8), SFXP(SBV(-29153, 16), 8)), SFXP(SBV(-17908, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23575, 16), 8), SFXP(SBV(-28326, 16), 8)), SFXP(SBV(4751, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49691, 16), 8), UFXP(BV(17821, 16), 8)), UFXP(BV(31870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10351, 16), 8), SFXP(SBV(-17018, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30838, 16), 8), SFXP(SBV(22750, 16), 8)), SFXP(SBV(-8088, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28117, 16), 8), SFXP(SBV(18224, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39206, 16), 8), UFXP(BV(11004, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2559, 16), 8), UFXP(BV(15160, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31862, 16), 8), SFXP(SBV(-14096, 16), 8)), SFXP(SBV(-17766, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4194, 16), 8), SFXP(SBV(22651, 16), 8)), SFXP(SBV(22128, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20899, 16), 8), SFXP(SBV(7784, 16), 8)), SFXP(SBV(-28683, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10230, 16), 8), UFXP(BV(32831, 16), 8)), UFXP(BV(1237, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24634, 16), 8), UFXP(BV(17344, 16), 8)), UFXP(BV(7290, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27740, 16), 8), SFXP(SBV(16393, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32256, 16), 8), UFXP(BV(33462, 16), 8)), UFXP(BV(21908, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2564, 16), 8), SFXP(SBV(6441, 16), 8)), SFXP(SBV(-9005, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21526, 16), 8), SFXP(SBV(25143, 16), 8)), SFXP(SBV(18867, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6229, 16), 8), SFXP(SBV(18669, 16), 8)), SFXP(SBV(-4497, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35159, 16), 8), UFXP(BV(36399, 16), 8)), UFXP(BV(6022, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30217, 16), 8), SFXP(SBV(15277, 16), 8)), SFXP(SBV(-31784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55930, 16), 8), UFXP(BV(33383, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15691, 16), 8), UFXP(BV(121, 16), 8)), UFXP(BV(15570, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2087, 16), 8), UFXP(BV(41997, 16), 8)), UFXP(BV(44084, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23091, 16), 8), SFXP(SBV(10483, 16), 8)), SFXP(SBV(28055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20410, 16), 8), SFXP(SBV(-25976, 16), 8)), SFXP(SBV(-5566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34506, 16), 8), UFXP(BV(27076, 16), 8)), UFXP(BV(45068, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23474, 16), 8), SFXP(SBV(14829, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18168, 16), 8), SFXP(SBV(-11711, 16), 8)), SFXP(SBV(29879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21554, 16), 8), SFXP(SBV(31911, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59597, 16), 8), UFXP(BV(31288, 16), 8)), UFXP(BV(28309, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39765, 16), 8), UFXP(BV(26366, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50367, 16), 8), UFXP(BV(25359, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(71, 16), 8), SFXP(SBV(12026, 16), 8)), SFXP(SBV(-11955, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(46092, 16), 8), UFXP(BV(63647, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11076, 16), 8), SFXP(SBV(21521, 16), 8)), SFXP(SBV(-13616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46528, 16), 8), UFXP(BV(13583, 16), 8)), UFXP(BV(43878, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47809, 16), 8), UFXP(BV(58267, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36923, 16), 8), UFXP(BV(57499, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60358, 16), 8), UFXP(BV(13032, 16), 8)), UFXP(BV(47326, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22609, 16), 8), UFXP(BV(61099, 16), 8)), UFXP(BV(18172, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10541, 16), 8), SFXP(SBV(-25487, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23663, 16), 8), SFXP(SBV(18338, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7314, 16), 8), SFXP(SBV(-32283, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19287, 16), 8), SFXP(SBV(-463, 16), 8)), SFXP(SBV(-19750, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60994, 16), 8), UFXP(BV(19813, 16), 8)), UFXP(BV(15271, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60112, 16), 8), UFXP(BV(45381, 16), 8)), UFXP(BV(39195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13546, 16), 8), SFXP(SBV(4645, 16), 8)), SFXP(SBV(-8901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(140, 16), 8), SFXP(SBV(-24136, 16), 8)), SFXP(SBV(-13200, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32051, 16), 8), UFXP(BV(35379, 16), 8)), UFXP(BV(1894, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30558, 16), 8), UFXP(BV(1580, 16), 8)), UFXP(BV(28978, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2870, 16), 8), UFXP(BV(20505, 16), 8)), UFXP(BV(23375, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22241, 16), 8), SFXP(SBV(10328, 16), 8)), SFXP(SBV(-32569, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1257, 16), 8), SFXP(SBV(1305, 16), 8)), SFXP(SBV(-2562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13580, 16), 8), SFXP(SBV(-14462, 16), 8)), SFXP(SBV(-882, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26872, 16), 8), SFXP(SBV(-24176, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(25404, 16), 8), SFXP(SBV(-18963, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20684, 16), 8), UFXP(BV(18428, 16), 8)), UFXP(BV(39112, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(54, 16), 8), SFXP(SBV(-305, 16), 8)), SFXP(SBV(-251, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(9107, 16), 8), SFXP(SBV(-7623, 16), 8)), SFXP(SBV(-9039, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18456, 16), 8), SFXP(SBV(-1422, 16), 8)), SFXP(SBV(-17034, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36048, 16), 8), UFXP(BV(30914, 16), 8)), UFXP(BV(5134, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20982, 16), 8), SFXP(SBV(-29452, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23444, 16), 8), SFXP(SBV(-7310, 16), 8)), SFXP(SBV(16134, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21761, 16), 8), SFXP(SBV(-31238, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59142, 16), 8), UFXP(BV(23803, 16), 8)), UFXP(BV(35339, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26142, 16), 8), SFXP(SBV(7374, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6309, 16), 8), SFXP(SBV(6791, 16), 8)), SFXP(SBV(13100, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28031, 16), 8), UFXP(BV(37245, 16), 8)), UFXP(BV(14951, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50803, 16), 8), UFXP(BV(54425, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63301, 16), 8), UFXP(BV(7297, 16), 8)), UFXP(BV(34853, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15126, 16), 8), SFXP(SBV(24521, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3733, 16), 8), UFXP(BV(13398, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25451, 16), 8), UFXP(BV(43321, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3639, 16), 8), SFXP(SBV(27972, 16), 8)), SFXP(SBV(-31611, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15836, 16), 8), SFXP(SBV(-25531, 16), 8)), SFXP(SBV(24169, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5600, 16), 8), SFXP(SBV(11253, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3656, 16), 8), SFXP(SBV(-20913, 16), 8)), SFXP(SBV(-17257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31003, 16), 8), SFXP(SBV(15948, 16), 8)), SFXP(SBV(-15055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18800, 16), 8), SFXP(SBV(205, 16), 8)), SFXP(SBV(-15054, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-475, 16), 8), SFXP(SBV(16048, 16), 8)), SFXP(SBV(-16523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28767, 16), 8), SFXP(SBV(19623, 16), 8)), SFXP(SBV(9144, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31039, 16), 8), SFXP(SBV(12254, 16), 8)), SFXP(SBV(-21579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7882, 16), 8), SFXP(SBV(17560, 16), 8)), SFXP(SBV(-16367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32575, 16), 8), SFXP(SBV(25717, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19179, 16), 8), SFXP(SBV(-24263, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12225, 16), 8), SFXP(SBV(10976, 16), 8)), SFXP(SBV(23201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29034, 16), 8), SFXP(SBV(-18570, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48495, 16), 8), UFXP(BV(28191, 16), 8)), UFXP(BV(20304, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23177, 16), 8), UFXP(BV(10229, 16), 8)), UFXP(BV(8580, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14680, 16), 8), SFXP(SBV(24144, 16), 8)), SFXP(SBV(9464, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18197, 16), 8), SFXP(SBV(19982, 16), 8)), SFXP(SBV(27357, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59769, 16), 8), UFXP(BV(2661, 16), 8)), UFXP(BV(57108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14039, 16), 8), SFXP(SBV(-16883, 16), 8)), SFXP(SBV(-30922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28145, 16), 8), SFXP(SBV(6125, 16), 8)), SFXP(SBV(18031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5900, 16), 8), SFXP(SBV(2659, 16), 8)), SFXP(SBV(3241, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49302, 16), 8), UFXP(BV(38191, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29158, 16), 8), UFXP(BV(53761, 16), 8)), UFXP(BV(40933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10477, 16), 8), SFXP(SBV(-20540, 16), 8)), SFXP(SBV(-10063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6887, 16), 8), SFXP(SBV(16871, 16), 8)), SFXP(SBV(-23758, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60438, 16), 8), UFXP(BV(55543, 16), 8)), UFXP(BV(50445, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24066, 16), 8), SFXP(SBV(14711, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27941, 16), 8), SFXP(SBV(18959, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8320, 16), 8), SFXP(SBV(-16493, 16), 8)), SFXP(SBV(-24813, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19226, 16), 8), UFXP(BV(37553, 16), 8)), UFXP(BV(56779, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9606, 16), 8), SFXP(SBV(17453, 16), 8)), SFXP(SBV(-463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51036, 16), 8), UFXP(BV(49404, 16), 8)), UFXP(BV(1632, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57762, 16), 8), UFXP(BV(40110, 16), 8)), UFXP(BV(17652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16886, 16), 8), SFXP(SBV(-19095, 16), 8)), SFXP(SBV(-2209, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19320, 16), 8), SFXP(SBV(-751, 16), 8)), SFXP(SBV(-18569, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42021, 16), 8), UFXP(BV(24131, 16), 8)), UFXP(BV(28812, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62196, 16), 8), UFXP(BV(20102, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18750, 16), 8), UFXP(BV(9411, 16), 8)), UFXP(BV(28161, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(6002, 16), 8), SFXP(SBV(21000, 16), 8)), SFXP(SBV(-31937, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36567, 16), 8), UFXP(BV(11150, 16), 8)), UFXP(BV(25417, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17984, 16), 8), SFXP(SBV(3035, 16), 8)), SFXP(SBV(14949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8631, 16), 8), UFXP(BV(24534, 16), 8)), UFXP(BV(40728, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20070, 16), 8), UFXP(BV(30915, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60470, 16), 8), UFXP(BV(36538, 16), 8)), UFXP(BV(45459, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45224, 16), 8), UFXP(BV(64530, 16), 8)), UFXP(BV(44218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18600, 16), 8), SFXP(SBV(-3634, 16), 8)), SFXP(SBV(-14966, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33256, 16), 8), UFXP(BV(1996, 16), 8)), UFXP(BV(35252, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25146, 16), 8), UFXP(BV(55630, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21040, 16), 8), SFXP(SBV(10640, 16), 8)), SFXP(SBV(-31680, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1668, 16), 8), SFXP(SBV(-21324, 16), 8)), SFXP(SBV(22992, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9317, 16), 8), UFXP(BV(5824, 16), 8)), UFXP(BV(3493, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8092, 16), 8), UFXP(BV(1150, 16), 8)), UFXP(BV(36351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18693, 16), 8), UFXP(BV(41456, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3833, 16), 8), SFXP(SBV(-18082, 16), 8)), SFXP(SBV(14249, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24438, 16), 8), UFXP(BV(52568, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21583, 16), 8), SFXP(SBV(-15441, 16), 8)), SFXP(SBV(-28512, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31651, 16), 8), SFXP(SBV(26949, 16), 8)), SFXP(SBV(10451, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45331, 16), 8), UFXP(BV(35430, 16), 8)), UFXP(BV(9901, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2374, 16), 8), UFXP(BV(32417, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11849, 16), 8), SFXP(SBV(21376, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12107, 16), 8), SFXP(SBV(-24777, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15813, 16), 8), SFXP(SBV(5168, 16), 8)), SFXP(SBV(8455, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31723, 16), 8), SFXP(SBV(21949, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11700, 16), 8), UFXP(BV(42443, 16), 8)), UFXP(BV(39233, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20230, 16), 8), SFXP(SBV(25266, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28966, 16), 8), SFXP(SBV(-7339, 16), 8)), SFXP(SBV(21572, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5349, 16), 8), SFXP(SBV(15894, 16), 8)), SFXP(SBV(10545, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10276, 16), 8), UFXP(BV(64271, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28189, 16), 8), UFXP(BV(43265, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17351, 16), 8), UFXP(BV(10649, 16), 8)), UFXP(BV(6702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21586, 16), 8), UFXP(BV(17385, 16), 8)), UFXP(BV(38971, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28564, 16), 8), UFXP(BV(33890, 16), 8)), UFXP(BV(45831, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2343, 16), 8), SFXP(SBV(17010, 16), 8)), SFXP(SBV(-19353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23573, 16), 8), UFXP(BV(60150, 16), 8)), UFXP(BV(33710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4493, 16), 8), UFXP(BV(35670, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21374, 16), 8), UFXP(BV(14007, 16), 8)), UFXP(BV(35381, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29056, 16), 8), SFXP(SBV(30327, 16), 8)), SFXP(SBV(-1271, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2584, 16), 8), SFXP(SBV(3696, 16), 8)), SFXP(SBV(-6280, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20089, 16), 8), UFXP(BV(54433, 16), 8)), UFXP(BV(31192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25499, 16), 8), SFXP(SBV(-11422, 16), 8)), SFXP(SBV(-23582, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28092, 16), 8), SFXP(SBV(15073, 16), 8)), SFXP(SBV(13019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3244, 16), 8), SFXP(SBV(-14400, 16), 8)), SFXP(SBV(11156, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19751, 16), 8), SFXP(SBV(11781, 16), 8)), SFXP(SBV(-7970, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26284, 16), 8), SFXP(SBV(17665, 16), 8)), SFXP(SBV(-21587, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12065, 16), 8), SFXP(SBV(7117, 16), 8)), SFXP(SBV(19182, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8611, 16), 8), SFXP(SBV(15722, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4993, 16), 8), SFXP(SBV(-2804, 16), 8)), SFXP(SBV(-2189, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25318, 16), 8), SFXP(SBV(5657, 16), 8)), SFXP(SBV(-30356, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11796, 16), 8), SFXP(SBV(-10997, 16), 8)), SFXP(SBV(-17566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47535, 16), 8), UFXP(BV(60097, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31168, 16), 8), UFXP(BV(16114, 16), 8)), UFXP(BV(47282, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22030, 16), 8), SFXP(SBV(12284, 16), 8)), SFXP(SBV(-9746, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3870, 16), 8), SFXP(SBV(29666, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18248, 16), 8), SFXP(SBV(28237, 16), 8)), SFXP(SBV(-18848, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26556, 16), 8), UFXP(BV(64226, 16), 8)), UFXP(BV(43307, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11412, 16), 8), UFXP(BV(7364, 16), 8)), UFXP(BV(18776, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5962, 16), 8), UFXP(BV(9753, 16), 8)), UFXP(BV(61745, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34135, 16), 8), UFXP(BV(18382, 16), 8)), UFXP(BV(52517, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35780, 16), 8), UFXP(BV(35370, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9567, 16), 8), UFXP(BV(56241, 16), 8)), UFXP(BV(272, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11831, 16), 8), UFXP(BV(15625, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59418, 16), 8), UFXP(BV(20074, 16), 8)), UFXP(BV(13956, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37920, 16), 8), UFXP(BV(65350, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14552, 16), 8), SFXP(SBV(16723, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37038, 16), 8), UFXP(BV(53154, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24391, 16), 8), UFXP(BV(24775, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25507, 16), 8), SFXP(SBV(13047, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22568, 16), 8), SFXP(SBV(-2414, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18171, 16), 8), UFXP(BV(11652, 16), 8)), UFXP(BV(29823, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21604, 16), 8), UFXP(BV(50846, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(24617, 16), 8), UFXP(BV(26078, 16), 8)), UFXP(BV(17296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2052, 16), 8), SFXP(SBV(5255, 16), 8)), SFXP(SBV(-3203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50484, 16), 8), UFXP(BV(65387, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23146, 16), 8), SFXP(SBV(-10686, 16), 8)), SFXP(SBV(12460, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32167, 16), 8), UFXP(BV(59840, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19645, 16), 8), SFXP(SBV(-6780, 16), 8)), SFXP(SBV(12865, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37628, 16), 8), UFXP(BV(4976, 16), 8)), UFXP(BV(42604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14444, 16), 8), SFXP(SBV(-4222, 16), 8)), SFXP(SBV(-18666, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23376, 16), 8), SFXP(SBV(-27361, 16), 8)), SFXP(SBV(-8034, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45162, 16), 8), UFXP(BV(35066, 16), 8)), UFXP(BV(14692, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30308, 16), 8), UFXP(BV(60541, 16), 8)), UFXP(BV(24063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26061, 16), 8), SFXP(SBV(10366, 16), 8)), SFXP(SBV(29109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27355, 16), 8), SFXP(SBV(-23220, 16), 8)), SFXP(SBV(-14961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1820, 16), 8), UFXP(BV(42282, 16), 8)), UFXP(BV(38454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8723, 16), 8), SFXP(SBV(27002, 16), 8)), SFXP(SBV(18279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6183, 16), 8), SFXP(SBV(10375, 16), 8)), SFXP(SBV(4192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18811, 16), 8), SFXP(SBV(27073, 16), 8)), SFXP(SBV(23257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16069, 16), 8), SFXP(SBV(1883, 16), 8)), SFXP(SBV(-12876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30360, 16), 8), SFXP(SBV(-14251, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57344, 16), 8), UFXP(BV(30091, 16), 8)), UFXP(BV(27253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52608, 16), 8), UFXP(BV(34221, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46459, 16), 8), UFXP(BV(38749, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20348, 16), 8), SFXP(SBV(18939, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15143, 16), 8), UFXP(BV(43978, 16), 8)), UFXP(BV(59121, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65345, 16), 8), UFXP(BV(6290, 16), 8)), UFXP(BV(59055, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30237, 16), 8), UFXP(BV(60126, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43865, 16), 8), UFXP(BV(25888, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61456, 16), 8), UFXP(BV(44962, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60717, 16), 8), UFXP(BV(56017, 16), 8)), UFXP(BV(4700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6820, 16), 8), SFXP(SBV(30853, 16), 8)), SFXP(SBV(-27863, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14551, 16), 8), SFXP(SBV(24381, 16), 8)), SFXP(SBV(9830, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22885, 16), 8), UFXP(BV(62223, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1975, 16), 8), UFXP(BV(46944, 16), 8)), UFXP(BV(48919, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38019, 16), 8), UFXP(BV(36881, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8027, 16), 8), UFXP(BV(30555, 16), 8)), UFXP(BV(43008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29884, 16), 8), UFXP(BV(46297, 16), 8)), UFXP(BV(49123, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27503, 16), 8), UFXP(BV(3213, 16), 8)), UFXP(BV(30716, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2340, 16), 8), UFXP(BV(13006, 16), 8)), UFXP(BV(15346, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6805, 16), 8), SFXP(SBV(-23275, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41861, 16), 8), UFXP(BV(39919, 16), 8)), UFXP(BV(39472, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60035, 16), 8), UFXP(BV(33571, 16), 8)), UFXP(BV(28070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12493, 16), 8), UFXP(BV(57288, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40477, 16), 8), UFXP(BV(56372, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50001, 16), 8), UFXP(BV(28566, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43022, 16), 8), UFXP(BV(50852, 16), 8)), UFXP(BV(28338, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26802, 16), 8), SFXP(SBV(21994, 16), 8)), SFXP(SBV(8909, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59366, 16), 8), UFXP(BV(39305, 16), 8)), UFXP(BV(33135, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40026, 16), 8), UFXP(BV(33770, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30898, 16), 8), SFXP(SBV(29530, 16), 8)), SFXP(SBV(-1368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61322, 16), 8), UFXP(BV(16434, 16), 8)), UFXP(BV(44888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34870, 16), 8), UFXP(BV(33507, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11300, 16), 8), UFXP(BV(12209, 16), 8)), UFXP(BV(64627, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3287, 16), 8), UFXP(BV(8426, 16), 8)), UFXP(BV(11713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57869, 16), 8), UFXP(BV(38560, 16), 8)), UFXP(BV(30893, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2523, 16), 8), SFXP(SBV(4146, 16), 8)), SFXP(SBV(-24676, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13187, 16), 8), SFXP(SBV(-23307, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8450, 16), 8), SFXP(SBV(-15637, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35457, 16), 8), UFXP(BV(6373, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10599, 16), 8), SFXP(SBV(28069, 16), 8)), SFXP(SBV(17470, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44024, 16), 8), UFXP(BV(47804, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27744, 16), 8), SFXP(SBV(30623, 16), 8)), SFXP(SBV(2879, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25616, 16), 8), UFXP(BV(25016, 16), 8)), UFXP(BV(600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6306, 16), 8), UFXP(BV(61954, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16317, 16), 8), SFXP(SBV(12924, 16), 8)), SFXP(SBV(-3393, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9693, 16), 8), SFXP(SBV(13064, 16), 8)), SFXP(SBV(-22757, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17564, 16), 8), SFXP(SBV(11617, 16), 8)), SFXP(SBV(29181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30755, 16), 8), SFXP(SBV(-19919, 16), 8)), SFXP(SBV(-31829, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49667, 16), 8), UFXP(BV(22473, 16), 8)), UFXP(BV(27194, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5781, 16), 8), SFXP(SBV(-23613, 16), 8)), SFXP(SBV(29394, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4115, 16), 8), SFXP(SBV(24567, 16), 8)), SFXP(SBV(-1680, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29407, 16), 8), SFXP(SBV(-8900, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3694, 16), 8), UFXP(BV(57675, 16), 8)), UFXP(BV(11555, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10304, 16), 8), SFXP(SBV(28195, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1253, 16), 8), UFXP(BV(24155, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1194, 16), 8), SFXP(SBV(-25587, 16), 8)), SFXP(SBV(26781, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5466, 16), 8), SFXP(SBV(6216, 16), 8)), SFXP(SBV(-750, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-12578, 16), 8), SFXP(SBV(25905, 16), 8)), SFXP(SBV(-27601, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31393, 16), 8), SFXP(SBV(-1133, 16), 8)), SFXP(SBV(-7866, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24051, 16), 8), SFXP(SBV(29479, 16), 8)), SFXP(SBV(5428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24630, 16), 8), SFXP(SBV(-26415, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17617, 16), 8), SFXP(SBV(-19161, 16), 8)), SFXP(SBV(7871, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23877, 16), 8), SFXP(SBV(24154, 16), 8)), SFXP(SBV(-17505, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30397, 16), 8), SFXP(SBV(-29493, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2065, 16), 8), SFXP(SBV(-11421, 16), 8)), SFXP(SBV(-13486, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41037, 16), 8), UFXP(BV(32146, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8868, 16), 8), UFXP(BV(6968, 16), 8)), UFXP(BV(15836, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25646, 16), 8), SFXP(SBV(27963, 16), 8)), SFXP(SBV(2317, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12250, 16), 8), SFXP(SBV(4578, 16), 8)), SFXP(SBV(7672, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28719, 16), 8), SFXP(SBV(1439, 16), 8)), SFXP(SBV(-27280, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23196, 16), 8), SFXP(SBV(-12170, 16), 8)), SFXP(SBV(11026, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8043, 16), 8), SFXP(SBV(-17260, 16), 8)), SFXP(SBV(9217, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31465, 16), 8), SFXP(SBV(-14433, 16), 8)), SFXP(SBV(19638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39166, 16), 8), UFXP(BV(31507, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47986, 16), 8), UFXP(BV(20902, 16), 8)), UFXP(BV(27084, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54823, 16), 8), UFXP(BV(13749, 16), 8)), UFXP(BV(41074, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62943, 16), 8), UFXP(BV(39078, 16), 8)), UFXP(BV(23865, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24481, 16), 8), UFXP(BV(49733, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22587, 16), 8), UFXP(BV(49647, 16), 8)), UFXP(BV(38476, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52913, 16), 8), UFXP(BV(24753, 16), 8)), UFXP(BV(28160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28427, 16), 8), SFXP(SBV(-23061, 16), 8)), SFXP(SBV(-4857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19357, 16), 8), SFXP(SBV(-32671, 16), 8)), SFXP(SBV(-20006, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17794, 16), 8), SFXP(SBV(-32522, 16), 8)), SFXP(SBV(14728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5064, 16), 8), SFXP(SBV(4740, 16), 8)), SFXP(SBV(28228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32075, 16), 8), SFXP(SBV(-30563, 16), 8)), SFXP(SBV(-2898, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22342, 16), 8), SFXP(SBV(6775, 16), 8)), SFXP(SBV(-29117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48176, 16), 8), UFXP(BV(23293, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9561, 16), 8), UFXP(BV(18299, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7297, 16), 8), SFXP(SBV(12798, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2644, 16), 8), SFXP(SBV(22877, 16), 8)), SFXP(SBV(25868, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5050, 16), 8), UFXP(BV(7500, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19208, 16), 8), SFXP(SBV(22519, 16), 8)), SFXP(SBV(-14307, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33858, 16), 8), UFXP(BV(61770, 16), 8)), UFXP(BV(43102, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13743, 16), 8), SFXP(SBV(-17214, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9656, 16), 8), SFXP(SBV(32224, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16633, 16), 8), SFXP(SBV(29211, 16), 8)), SFXP(SBV(2627, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33603, 16), 8), UFXP(BV(9778, 16), 8)), UFXP(BV(43381, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3860, 16), 8), SFXP(SBV(24496, 16), 8)), SFXP(SBV(28356, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27582, 16), 8), SFXP(SBV(10586, 16), 8)), SFXP(SBV(-27368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7732, 16), 8), UFXP(BV(12557, 16), 8)), UFXP(BV(20289, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10248, 16), 8), UFXP(BV(48256, 16), 8)), UFXP(BV(58504, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54482, 16), 8), UFXP(BV(53443, 16), 8)), UFXP(BV(42389, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24481, 16), 8), SFXP(SBV(-21557, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52762, 16), 8), UFXP(BV(11374, 16), 8)), UFXP(BV(41388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13013, 16), 8), SFXP(SBV(23883, 16), 8)), SFXP(SBV(10870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9421, 16), 8), SFXP(SBV(-1136, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2304, 16), 8), UFXP(BV(27820, 16), 8)), UFXP(BV(40020, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25185, 16), 8), UFXP(BV(16537, 16), 8)), UFXP(BV(8648, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41158, 16), 8), UFXP(BV(3546, 16), 8)), UFXP(BV(44704, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54429, 16), 8), UFXP(BV(44973, 16), 8)), UFXP(BV(9456, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14992, 16), 8), SFXP(SBV(-11823, 16), 8)), SFXP(SBV(26815, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48617, 16), 8), UFXP(BV(44767, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11223, 16), 8), UFXP(BV(25904, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29989, 16), 8), SFXP(SBV(16489, 16), 8)), SFXP(SBV(-19058, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14959, 16), 8), SFXP(SBV(14984, 16), 8)), SFXP(SBV(23600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28154, 16), 8), UFXP(BV(15006, 16), 8)), UFXP(BV(11908, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10419, 16), 8), SFXP(SBV(22323, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50591, 16), 8), UFXP(BV(30734, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52186, 16), 8), UFXP(BV(38876, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11733, 16), 8), SFXP(SBV(-12122, 16), 8)), SFXP(SBV(-389, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39143, 16), 8), UFXP(BV(27333, 16), 8)), UFXP(BV(940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24161, 16), 8), UFXP(BV(47547, 16), 8)), UFXP(BV(30986, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27502, 16), 8), SFXP(SBV(9897, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8511, 16), 8), SFXP(SBV(8099, 16), 8)), SFXP(SBV(-7116, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-9671, 16), 8), SFXP(SBV(10135, 16), 8)), SFXP(SBV(10343, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6212, 16), 8), SFXP(SBV(-2385, 16), 8)), SFXP(SBV(-3827, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24029, 16), 8), SFXP(SBV(747, 16), 8)), SFXP(SBV(-23282, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14025, 16), 8), UFXP(BV(40307, 16), 8)), UFXP(BV(45538, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22195, 16), 8), SFXP(SBV(534, 16), 8)), SFXP(SBV(-21661, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22164, 16), 8), UFXP(BV(57081, 16), 8)), UFXP(BV(13709, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7939, 16), 8), SFXP(SBV(-10912, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16536, 16), 8), SFXP(SBV(-394, 16), 8)), SFXP(SBV(-16142, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11162, 16), 8), SFXP(SBV(21613, 16), 8)), SFXP(SBV(32761, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33518, 16), 8), UFXP(BV(42653, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(452, 16), 8), SFXP(SBV(17334, 16), 8)), SFXP(SBV(17786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23425, 16), 8), UFXP(BV(22156, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46987, 16), 8), UFXP(BV(10125, 16), 8)), UFXP(BV(23364, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16683, 16), 8), UFXP(BV(43548, 16), 8)), UFXP(BV(38671, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36181, 16), 8), UFXP(BV(45256, 16), 8)), UFXP(BV(39130, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13021, 16), 8), SFXP(SBV(27107, 16), 8)), SFXP(SBV(25408, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15945, 16), 8), SFXP(SBV(6152, 16), 8)), SFXP(SBV(-22097, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28051, 16), 8), UFXP(BV(39656, 16), 8)), UFXP(BV(19899, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26331, 16), 8), SFXP(SBV(29012, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5925, 16), 8), SFXP(SBV(16605, 16), 8)), SFXP(SBV(22530, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29566, 16), 8), UFXP(BV(8772, 16), 8)), UFXP(BV(20794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32590, 16), 8), UFXP(BV(58760, 16), 8)), UFXP(BV(9319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10114, 16), 8), SFXP(SBV(-8645, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14224, 16), 8), UFXP(BV(28067, 16), 8)), UFXP(BV(42291, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21608, 16), 8), SFXP(SBV(-5244, 16), 8)), SFXP(SBV(-26852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(34983, 16), 8), UFXP(BV(32363, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18479, 16), 8), UFXP(BV(42112, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58016, 16), 8), UFXP(BV(552, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55538, 16), 8), UFXP(BV(26355, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11499, 16), 8), UFXP(BV(27137, 16), 8)), UFXP(BV(38636, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14591, 16), 8), UFXP(BV(37120, 16), 8)), UFXP(BV(51711, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8215, 16), 8), SFXP(SBV(13333, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2105, 16), 8), SFXP(SBV(-21895, 16), 8)), SFXP(SBV(24000, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11400, 16), 8), SFXP(SBV(-25501, 16), 8)), SFXP(SBV(-14101, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15107, 16), 8), SFXP(SBV(-20292, 16), 8)), SFXP(SBV(-5185, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11712, 16), 8), SFXP(SBV(-935, 16), 8)), SFXP(SBV(-12647, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37351, 16), 8), UFXP(BV(59447, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1243, 16), 8), SFXP(SBV(2157, 16), 8)), SFXP(SBV(-3400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44215, 16), 8), UFXP(BV(64534, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4158, 16), 8), UFXP(BV(37310, 16), 8)), UFXP(BV(41468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31915, 16), 8), UFXP(BV(533, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13796, 16), 8), UFXP(BV(44465, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1557, 16), 8), UFXP(BV(46966, 16), 8)), UFXP(BV(23504, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51028, 16), 8), UFXP(BV(20498, 16), 8)), UFXP(BV(30530, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20202, 16), 8), SFXP(SBV(17448, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53967, 16), 8), UFXP(BV(20891, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22899, 16), 8), SFXP(SBV(16529, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20074, 16), 8), UFXP(BV(4977, 16), 8)), UFXP(BV(15097, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61804, 16), 8), UFXP(BV(48405, 16), 8)), UFXP(BV(20617, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48900, 16), 8), UFXP(BV(51097, 16), 8)), UFXP(BV(34461, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20969, 16), 8), SFXP(SBV(-24044, 16), 8)), SFXP(SBV(-3368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12775, 16), 8), UFXP(BV(52715, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4078, 16), 8), SFXP(SBV(13470, 16), 8)), SFXP(SBV(-9392, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22320, 16), 8), SFXP(SBV(18668, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-631, 16), 8), SFXP(SBV(3132, 16), 8)), SFXP(SBV(2501, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6400, 16), 8), UFXP(BV(39254, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22876, 16), 8), SFXP(SBV(-22159, 16), 8)), SFXP(SBV(-14035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22442, 16), 8), SFXP(SBV(-22669, 16), 8)), SFXP(SBV(-227, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18778, 16), 8), SFXP(SBV(13982, 16), 8)), SFXP(SBV(4796, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65463, 16), 8), UFXP(BV(64865, 16), 8)), UFXP(BV(598, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9377, 16), 8), SFXP(SBV(28141, 16), 8)), SFXP(SBV(-18764, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18325, 16), 8), SFXP(SBV(28538, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12769, 16), 8), SFXP(SBV(27142, 16), 8)), SFXP(SBV(-25625, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47966, 16), 8), UFXP(BV(27467, 16), 8)), UFXP(BV(20499, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-3378, 16), 8), SFXP(SBV(5469, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10696, 16), 8), SFXP(SBV(-7297, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31894, 16), 8), UFXP(BV(50260, 16), 8)), UFXP(BV(47170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2593, 16), 8), SFXP(SBV(-5688, 16), 8)), SFXP(SBV(8281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13761, 16), 8), SFXP(SBV(-21390, 16), 8)), SFXP(SBV(30385, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43960, 16), 8), UFXP(BV(43198, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17944, 16), 8), SFXP(SBV(-30712, 16), 8)), SFXP(SBV(12768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21929, 16), 8), SFXP(SBV(-21935, 16), 8)), SFXP(SBV(21672, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8235, 16), 8), SFXP(SBV(-24482, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21450, 16), 8), UFXP(BV(41775, 16), 8)), UFXP(BV(26881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21985, 16), 8), SFXP(SBV(23105, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40252, 16), 8), UFXP(BV(36084, 16), 8)), UFXP(BV(10800, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29033, 16), 8), UFXP(BV(2862, 16), 8)), UFXP(BV(26171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29454, 16), 8), SFXP(SBV(24284, 16), 8)), SFXP(SBV(-24060, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59503, 16), 8), UFXP(BV(53765, 16), 8)), UFXP(BV(5738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1545, 16), 8), SFXP(SBV(32602, 16), 8)), SFXP(SBV(31389, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48367, 16), 8), UFXP(BV(41603, 16), 8)), UFXP(BV(6764, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(8255, 16), 8), UFXP(BV(50824, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62039, 16), 8), UFXP(BV(895, 16), 8)), UFXP(BV(20286, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43571, 16), 8), UFXP(BV(30478, 16), 8)), UFXP(BV(13093, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44650, 16), 8), UFXP(BV(63630, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22076, 16), 8), SFXP(SBV(8933, 16), 8)), SFXP(SBV(31009, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29514, 16), 8), SFXP(SBV(5161, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32512, 16), 8), SFXP(SBV(21889, 16), 8)), SFXP(SBV(-10623, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10977, 16), 8), SFXP(SBV(-23723, 16), 8)), SFXP(SBV(12746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36049, 16), 8), UFXP(BV(27618, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10931, 16), 8), SFXP(SBV(18429, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11533, 16), 8), SFXP(SBV(5041, 16), 8)), SFXP(SBV(-16574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63781, 16), 8), UFXP(BV(817, 16), 8)), UFXP(BV(62964, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15512, 16), 8), UFXP(BV(44233, 16), 8)), UFXP(BV(58803, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29857, 16), 8), UFXP(BV(53251, 16), 8)), UFXP(BV(42142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17188, 16), 8), UFXP(BV(32849, 16), 8)), UFXP(BV(50037, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7262, 16), 8), SFXP(SBV(17906, 16), 8)), SFXP(SBV(10644, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16511, 16), 8), UFXP(BV(61183, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32181, 16), 8), UFXP(BV(23737, 16), 8)), UFXP(BV(8444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13532, 16), 8), UFXP(BV(18314, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30492, 16), 8), SFXP(SBV(-28938, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4157, 16), 8), SFXP(SBV(1922, 16), 8)), SFXP(SBV(31210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61446, 16), 8), UFXP(BV(42338, 16), 8)), UFXP(BV(38248, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22986, 16), 8), SFXP(SBV(5365, 16), 8)), SFXP(SBV(28351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7545, 16), 8), UFXP(BV(52070, 16), 8)), UFXP(BV(59615, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11036, 16), 8), UFXP(BV(6114, 16), 8)), UFXP(BV(4922, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9545, 16), 8), UFXP(BV(17325, 16), 8)), UFXP(BV(26870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12710, 16), 8), SFXP(SBV(-19302, 16), 8)), SFXP(SBV(-6592, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13895, 16), 8), SFXP(SBV(-9291, 16), 8)), SFXP(SBV(4604, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11146, 16), 8), UFXP(BV(6061, 16), 8)), UFXP(BV(17207, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34500, 16), 8), UFXP(BV(44926, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29381, 16), 8), UFXP(BV(42197, 16), 8)), UFXP(BV(52720, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10544, 16), 8), SFXP(SBV(-20046, 16), 8)), SFXP(SBV(9502, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9640, 16), 8), SFXP(SBV(101, 16), 8)), SFXP(SBV(9539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40828, 16), 8), UFXP(BV(52524, 16), 8)), UFXP(BV(53686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38673, 16), 8), UFXP(BV(31415, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9181, 16), 8), UFXP(BV(52200, 16), 8)), UFXP(BV(22517, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20818, 16), 8), SFXP(SBV(-25200, 16), 8)), SFXP(SBV(-4382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30526, 16), 8), UFXP(BV(13291, 16), 8)), UFXP(BV(11983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58684, 16), 8), UFXP(BV(15241, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22504, 16), 8), SFXP(SBV(-11261, 16), 8)), SFXP(SBV(31771, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2844, 16), 8), UFXP(BV(13084, 16), 8)), UFXP(BV(14283, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10008, 16), 8), UFXP(BV(8120, 16), 8)), UFXP(BV(18128, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16179, 16), 8), SFXP(SBV(-13880, 16), 8)), SFXP(SBV(-30059, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36327, 16), 8), UFXP(BV(43907, 16), 8)), UFXP(BV(14698, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25290, 16), 8), SFXP(SBV(16153, 16), 8)), SFXP(SBV(-9137, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11123, 16), 8), UFXP(BV(45796, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44645, 16), 8), UFXP(BV(45301, 16), 8)), UFXP(BV(35926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63111, 16), 8), UFXP(BV(49163, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1437, 16), 8), UFXP(BV(9310, 16), 8)), UFXP(BV(57663, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7176, 16), 8), SFXP(SBV(-28575, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48290, 16), 8), UFXP(BV(65325, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(146, 16), 8), UFXP(BV(46561, 16), 8)), UFXP(BV(19121, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29082, 16), 8), UFXP(BV(22005, 16), 8)), UFXP(BV(7077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14085, 16), 8), SFXP(SBV(-24431, 16), 8)), SFXP(SBV(27020, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23839, 16), 8), UFXP(BV(11696, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5473, 16), 8), UFXP(BV(12102, 16), 8)), UFXP(BV(17575, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16550, 16), 8), UFXP(BV(41489, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32114, 16), 8), SFXP(SBV(-8777, 16), 8)), SFXP(SBV(-13079, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21988, 16), 8), UFXP(BV(38088, 16), 8)), UFXP(BV(60076, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42839, 16), 8), UFXP(BV(26866, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14290, 16), 8), SFXP(SBV(-1531, 16), 8)), SFXP(SBV(15821, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23807, 16), 8), SFXP(SBV(32497, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24301, 16), 8), UFXP(BV(57912, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24070, 16), 8), UFXP(BV(61917, 16), 8)), UFXP(BV(54482, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19121, 16), 8), SFXP(SBV(-16880, 16), 8)), SFXP(SBV(-15606, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47805, 16), 8), UFXP(BV(50118, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3493, 16), 8), UFXP(BV(15285, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(254, 16), 8), SFXP(SBV(-23720, 16), 8)), SFXP(SBV(23974, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28206, 16), 8), SFXP(SBV(13605, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17435, 16), 8), UFXP(BV(24694, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11778, 16), 8), SFXP(SBV(11804, 16), 8)), SFXP(SBV(26, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6897, 16), 8), SFXP(SBV(26689, 16), 8)), SFXP(SBV(1857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28928, 16), 8), SFXP(SBV(8309, 16), 8)), SFXP(SBV(20619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41294, 16), 8), UFXP(BV(12458, 16), 8)), UFXP(BV(53752, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48042, 16), 8), UFXP(BV(47533, 16), 8)), UFXP(BV(509, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10385, 16), 8), SFXP(SBV(-9698, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1291, 16), 8), UFXP(BV(47435, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19660, 16), 8), SFXP(SBV(3273, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21255, 16), 8), UFXP(BV(2244, 16), 8)), UFXP(BV(23499, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5955, 16), 8), SFXP(SBV(17535, 16), 8)), SFXP(SBV(-11580, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11775, 16), 8), SFXP(SBV(-26946, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30824, 16), 8), UFXP(BV(45597, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23440, 16), 8), SFXP(SBV(21273, 16), 8)), SFXP(SBV(-20823, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60609, 16), 8), UFXP(BV(31299, 16), 8)), UFXP(BV(29310, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26413, 16), 8), SFXP(SBV(26354, 16), 8)), SFXP(SBV(-32118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2788, 16), 8), SFXP(SBV(12624, 16), 8)), SFXP(SBV(-15412, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22093, 16), 8), SFXP(SBV(22298, 16), 8)), SFXP(SBV(205, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5661, 16), 8), SFXP(SBV(14990, 16), 8)), SFXP(SBV(9329, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50194, 16), 8), UFXP(BV(51519, 16), 8)), UFXP(BV(8802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22014, 16), 8), SFXP(SBV(-4873, 16), 8)), SFXP(SBV(-26887, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2441, 16), 8), UFXP(BV(62081, 16), 8)), UFXP(BV(5896, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49471, 16), 8), UFXP(BV(32511, 16), 8)), UFXP(BV(16960, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14337, 16), 8), UFXP(BV(8925, 16), 8)), UFXP(BV(41083, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36364, 16), 8), UFXP(BV(10013, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5577, 16), 8), SFXP(SBV(1179, 16), 8)), SFXP(SBV(-25685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3331, 16), 8), UFXP(BV(25887, 16), 8)), UFXP(BV(9154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4638, 16), 8), UFXP(BV(61590, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26781, 16), 8), SFXP(SBV(6450, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8965, 16), 8), UFXP(BV(23334, 16), 8)), UFXP(BV(32299, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42714, 16), 8), UFXP(BV(22331, 16), 8)), UFXP(BV(20383, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62404, 16), 8), UFXP(BV(31057, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18965, 16), 8), UFXP(BV(40753, 16), 8)), UFXP(BV(43748, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12373, 16), 8), UFXP(BV(37778, 16), 8)), UFXP(BV(50151, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16787, 16), 8), SFXP(SBV(25155, 16), 8)), SFXP(SBV(-11120, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42788, 16), 8), UFXP(BV(43673, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39808, 16), 8), UFXP(BV(20486, 16), 8)), UFXP(BV(60294, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15290, 16), 8), UFXP(BV(24291, 16), 8)), UFXP(BV(56535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27260, 16), 8), SFXP(SBV(25918, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18007, 16), 8), SFXP(SBV(3525, 16), 8)), SFXP(SBV(14196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50453, 16), 8), UFXP(BV(52045, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42938, 16), 8), UFXP(BV(59016, 16), 8)), UFXP(BV(49458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30282, 16), 8), UFXP(BV(14108, 16), 8)), UFXP(BV(44390, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19519, 16), 8), SFXP(SBV(-12580, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2235, 16), 8), UFXP(BV(14222, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11702, 16), 8), SFXP(SBV(3320, 16), 8)), SFXP(SBV(-15022, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12652, 16), 8), SFXP(SBV(19224, 16), 8)), SFXP(SBV(6572, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32261, 16), 8), SFXP(SBV(-4514, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26167, 16), 8), SFXP(SBV(-3921, 16), 8)), SFXP(SBV(30088, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30007, 16), 8), SFXP(SBV(30358, 16), 8)), SFXP(SBV(19465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31009, 16), 8), SFXP(SBV(-749, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33575, 16), 8), UFXP(BV(4713, 16), 8)), UFXP(BV(28862, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19888, 16), 8), UFXP(BV(33024, 16), 8)), UFXP(BV(9648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28584, 16), 8), SFXP(SBV(26666, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12088, 16), 8), SFXP(SBV(-31440, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8308, 16), 8), SFXP(SBV(10589, 16), 8)), SFXP(SBV(-15967, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14177, 16), 8), UFXP(BV(35856, 16), 8)), UFXP(BV(50033, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21396, 16), 8), UFXP(BV(8031, 16), 8)), UFXP(BV(13365, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13351, 16), 8), UFXP(BV(13055, 16), 8)), UFXP(BV(26406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34971, 16), 8), UFXP(BV(17649, 16), 8)), UFXP(BV(52620, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(45958, 16), 8), UFXP(BV(58447, 16), 8)), UFXP(BV(6847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9233, 16), 8), UFXP(BV(19141, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26205, 16), 8), UFXP(BV(52566, 16), 8)), UFXP(BV(13235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33803, 16), 8), UFXP(BV(63938, 16), 8)), UFXP(BV(35401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16532, 16), 8), SFXP(SBV(-26460, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27409, 16), 8), UFXP(BV(50182, 16), 8)), UFXP(BV(64390, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24553, 16), 8), SFXP(SBV(9490, 16), 8)), SFXP(SBV(7316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26087, 16), 8), SFXP(SBV(5827, 16), 8)), SFXP(SBV(-31914, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13111, 16), 8), SFXP(SBV(-15988, 16), 8)), SFXP(SBV(-29099, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12454, 16), 8), SFXP(SBV(23454, 16), 8)), SFXP(SBV(-11000, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24071, 16), 8), SFXP(SBV(7153, 16), 8)), SFXP(SBV(-17218, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48701, 16), 8), UFXP(BV(32476, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9957, 16), 8), SFXP(SBV(-4992, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29437, 16), 8), SFXP(SBV(13981, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19841, 16), 8), SFXP(SBV(9492, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41839, 16), 8), UFXP(BV(57888, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6800, 16), 8), UFXP(BV(59773, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52616, 16), 8), UFXP(BV(53939, 16), 8)), UFXP(BV(10567, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-3838, 16), 8), SFXP(SBV(28812, 16), 8)), SFXP(SBV(26797, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5906, 16), 8), SFXP(SBV(28440, 16), 8)), SFXP(SBV(22534, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1109, 16), 8), SFXP(SBV(32596, 16), 8)), SFXP(SBV(31487, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28684, 16), 8), SFXP(SBV(13546, 16), 8)), SFXP(SBV(-15138, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26592, 16), 8), SFXP(SBV(12694, 16), 8)), SFXP(SBV(-7869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14358, 16), 8), SFXP(SBV(17186, 16), 8)), SFXP(SBV(2828, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16050, 16), 8), UFXP(BV(63537, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65125, 16), 8), UFXP(BV(23103, 16), 8)), UFXP(BV(22692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-18395, 16), 8), SFXP(SBV(-6002, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23977, 16), 8), SFXP(SBV(14548, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24342, 16), 8), SFXP(SBV(21976, 16), 8)), SFXP(SBV(-2366, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5060, 16), 8), UFXP(BV(52732, 16), 8)), UFXP(BV(57792, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25878, 16), 8), SFXP(SBV(19131, 16), 8)), SFXP(SBV(20527, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14915, 16), 8), SFXP(SBV(-1436, 16), 8)), SFXP(SBV(13479, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35518, 16), 8), UFXP(BV(7316, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15246, 16), 8), UFXP(BV(4869, 16), 8)), UFXP(BV(10377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(889, 16), 8), SFXP(SBV(31374, 16), 8)), SFXP(SBV(-22121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30901, 16), 8), SFXP(SBV(1918, 16), 8)), SFXP(SBV(28983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54449, 16), 8), UFXP(BV(12160, 16), 8)), UFXP(BV(42289, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6127, 16), 8), SFXP(SBV(15762, 16), 8)), SFXP(SBV(-9635, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42427, 16), 8), UFXP(BV(52214, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31483, 16), 8), UFXP(BV(32268, 16), 8)), UFXP(BV(63751, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7736, 16), 8), SFXP(SBV(15082, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43443, 16), 8), UFXP(BV(20575, 16), 8)), UFXP(BV(64018, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15670, 16), 8), SFXP(SBV(-11757, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13484, 16), 8), SFXP(SBV(-17658, 16), 8)), SFXP(SBV(-12575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10732, 16), 8), SFXP(SBV(5963, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15371, 16), 8), UFXP(BV(58115, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7822, 16), 8), UFXP(BV(30848, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60478, 16), 8), UFXP(BV(55388, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22072, 16), 8), SFXP(SBV(-20617, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1064, 16), 8), SFXP(SBV(25859, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32690, 16), 8), SFXP(SBV(4712, 16), 8)), SFXP(SBV(-27978, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51291, 16), 8), UFXP(BV(12169, 16), 8)), UFXP(BV(63460, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35983, 16), 8), UFXP(BV(46602, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31240, 16), 8), SFXP(SBV(-28043, 16), 8)), SFXP(SBV(14250, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20459, 16), 8), SFXP(SBV(-16544, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3368, 16), 8), SFXP(SBV(30026, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54721, 16), 8), UFXP(BV(50990, 16), 8)), UFXP(BV(20336, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38275, 16), 8), UFXP(BV(20877, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5695, 16), 8), SFXP(SBV(8866, 16), 8)), SFXP(SBV(626, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17139, 16), 8), SFXP(SBV(6567, 16), 8)), SFXP(SBV(10572, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1638, 16), 8), UFXP(BV(4291, 16), 8)), UFXP(BV(27456, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20112, 16), 8), SFXP(SBV(-16178, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41759, 16), 8), UFXP(BV(52549, 16), 8)), UFXP(BV(28772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24521, 16), 8), SFXP(SBV(24649, 16), 8)), SFXP(SBV(-16366, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1580, 16), 8), UFXP(BV(8311, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25960, 16), 8), UFXP(BV(12545, 16), 8)), UFXP(BV(13415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5435, 16), 8), SFXP(SBV(26024, 16), 8)), SFXP(SBV(28213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11221, 16), 8), UFXP(BV(12163, 16), 8)), UFXP(BV(23384, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31368, 16), 8), UFXP(BV(40781, 16), 8)), UFXP(BV(16211, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19777, 16), 8), SFXP(SBV(6518, 16), 8)), SFXP(SBV(-13259, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8540, 16), 8), SFXP(SBV(31119, 16), 8)), SFXP(SBV(-10465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23358, 16), 8), SFXP(SBV(8937, 16), 8)), SFXP(SBV(-14421, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26289, 16), 8), UFXP(BV(8017, 16), 8)), UFXP(BV(18272, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19537, 16), 8), SFXP(SBV(18360, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38654, 16), 8), UFXP(BV(40983, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4647, 16), 8), UFXP(BV(50489, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6444, 16), 8), SFXP(SBV(18384, 16), 8)), SFXP(SBV(11940, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13593, 16), 8), SFXP(SBV(31839, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26252, 16), 8), SFXP(SBV(26666, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13186, 16), 8), SFXP(SBV(27309, 16), 8)), SFXP(SBV(25041, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17849, 16), 8), SFXP(SBV(20169, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23872, 16), 8), UFXP(BV(41944, 16), 8)), UFXP(BV(44654, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(58, 16), 8), SFXP(SBV(-21857, 16), 8)), SFXP(SBV(-21799, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34740, 16), 8), UFXP(BV(14715, 16), 8)), UFXP(BV(30791, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1069, 16), 8), UFXP(BV(5540, 16), 8)), UFXP(BV(6609, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8402, 16), 8), UFXP(BV(35587, 16), 8)), UFXP(BV(38351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48298, 16), 8), UFXP(BV(8349, 16), 8)), UFXP(BV(39949, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13093, 16), 8), SFXP(SBV(15136, 16), 8)), SFXP(SBV(28229, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17808, 16), 8), SFXP(SBV(31344, 16), 8)), SFXP(SBV(-17679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13146, 16), 8), UFXP(BV(55767, 16), 8)), UFXP(BV(22915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25436, 16), 8), UFXP(BV(11228, 16), 8)), UFXP(BV(1495, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47226, 16), 8), UFXP(BV(36312, 16), 8)), UFXP(BV(10914, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5378, 16), 8), SFXP(SBV(19731, 16), 8)), SFXP(SBV(14353, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31266, 16), 8), SFXP(SBV(30238, 16), 8)), SFXP(SBV(-23035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21393, 16), 8), SFXP(SBV(-7817, 16), 8)), SFXP(SBV(-29210, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30100, 16), 8), SFXP(SBV(-12860, 16), 8)), SFXP(SBV(-17240, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29312, 16), 8), SFXP(SBV(9790, 16), 8)), SFXP(SBV(-26434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14764, 16), 8), SFXP(SBV(24927, 16), 8)), SFXP(SBV(-4206, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5097, 16), 8), UFXP(BV(35872, 16), 8)), UFXP(BV(40969, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9036, 16), 8), SFXP(SBV(-26635, 16), 8)), SFXP(SBV(-17599, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16996, 16), 8), SFXP(SBV(-24368, 16), 8)), SFXP(SBV(7372, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17210, 16), 8), UFXP(BV(41011, 16), 8)), UFXP(BV(41735, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29676, 16), 8), SFXP(SBV(22416, 16), 8)), SFXP(SBV(-7260, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21122, 16), 8), SFXP(SBV(-18306, 16), 8)), SFXP(SBV(-26108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22491, 16), 8), UFXP(BV(6238, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22186, 16), 8), UFXP(BV(21233, 16), 8)), UFXP(BV(5130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2796, 16), 8), UFXP(BV(28681, 16), 8)), UFXP(BV(39651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10051, 16), 8), SFXP(SBV(-18667, 16), 8)), SFXP(SBV(-8616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9931, 16), 8), UFXP(BV(63250, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1669, 16), 8), UFXP(BV(26994, 16), 8)), UFXP(BV(40211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53949, 16), 8), UFXP(BV(46806, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-706, 16), 8), SFXP(SBV(6116, 16), 8)), SFXP(SBV(-6822, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7974, 16), 8), SFXP(SBV(17482, 16), 8)), SFXP(SBV(-25456, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20939, 16), 8), SFXP(SBV(-14706, 16), 8)), SFXP(SBV(-6233, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26937, 16), 8), SFXP(SBV(25404, 16), 8)), SFXP(SBV(13195, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11825, 16), 8), UFXP(BV(37794, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17461, 16), 8), SFXP(SBV(3022, 16), 8)), SFXP(SBV(-14439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1360, 16), 8), UFXP(BV(57519, 16), 8)), UFXP(BV(9377, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57129, 16), 8), UFXP(BV(7066, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11399, 16), 8), SFXP(SBV(31747, 16), 8)), SFXP(SBV(28182, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8522, 16), 8), SFXP(SBV(-4551, 16), 8)), SFXP(SBV(13073, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17435, 16), 8), SFXP(SBV(-15533, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40017, 16), 8), UFXP(BV(45870, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22365, 16), 8), SFXP(SBV(-16526, 16), 8)), SFXP(SBV(-5839, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14265, 16), 8), SFXP(SBV(-1684, 16), 8)), SFXP(SBV(-28300, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(16573, 16), 8), SFXP(SBV(-13617, 16), 8)), SFXP(SBV(-29574, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20150, 16), 8), SFXP(SBV(-1671, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41714, 16), 8), UFXP(BV(22617, 16), 8)), UFXP(BV(64331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62103, 16), 8), UFXP(BV(6546, 16), 8)), UFXP(BV(55557, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32417, 16), 8), SFXP(SBV(2888, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13462, 16), 8), SFXP(SBV(-20758, 16), 8)), SFXP(SBV(7296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6553, 16), 8), SFXP(SBV(21448, 16), 8)), SFXP(SBV(-14895, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-554, 16), 8), SFXP(SBV(4801, 16), 8)), SFXP(SBV(-10390, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16864, 16), 8), UFXP(BV(61616, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9053, 16), 8), SFXP(SBV(-12288, 16), 8)), SFXP(SBV(3235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(749, 16), 8), UFXP(BV(42495, 16), 8)), UFXP(BV(43244, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30195, 16), 8), UFXP(BV(27627, 16), 8)), UFXP(BV(2568, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17063, 16), 8), SFXP(SBV(17124, 16), 8)), SFXP(SBV(-61, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26854, 16), 8), SFXP(SBV(31644, 16), 8)), SFXP(SBV(-22930, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(286, 16), 8), SFXP(SBV(-30816, 16), 8)), SFXP(SBV(-30530, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11183, 16), 8), SFXP(SBV(30749, 16), 8)), SFXP(SBV(19566, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13971, 16), 8), SFXP(SBV(14955, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30014, 16), 8), SFXP(SBV(-1093, 16), 8)), SFXP(SBV(-2926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(64386, 16), 8), UFXP(BV(40008, 16), 8)), UFXP(BV(35317, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11280, 16), 8), UFXP(BV(55934, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12483, 16), 8), SFXP(SBV(-16233, 16), 8)), SFXP(SBV(-28716, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7960, 16), 8), SFXP(SBV(-9499, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19738, 16), 8), SFXP(SBV(-28916, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(397, 16), 8), SFXP(SBV(-25895, 16), 8)), SFXP(SBV(-25498, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57370, 16), 8), UFXP(BV(24476, 16), 8)), UFXP(BV(16310, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31508, 16), 8), SFXP(SBV(26453, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30308, 16), 8), SFXP(SBV(4376, 16), 8)), SFXP(SBV(25932, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25107, 16), 8), UFXP(BV(20590, 16), 8)), UFXP(BV(45697, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15937, 16), 8), UFXP(BV(56229, 16), 8)), UFXP(BV(27066, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23227, 16), 8), SFXP(SBV(-28674, 16), 8)), SFXP(SBV(5447, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59810, 16), 8), UFXP(BV(62949, 16), 8)), UFXP(BV(57223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5908, 16), 8), UFXP(BV(39369, 16), 8)), UFXP(BV(32075, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15076, 16), 8), UFXP(BV(20626, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-515, 16), 8), SFXP(SBV(16244, 16), 8)), SFXP(SBV(-32678, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54921, 16), 8), UFXP(BV(54427, 16), 8)), UFXP(BV(43812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27018, 16), 8), SFXP(SBV(2245, 16), 8)), SFXP(SBV(29263, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24994, 16), 8), SFXP(SBV(14704, 16), 8)), SFXP(SBV(-10290, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23809, 16), 8), SFXP(SBV(-25461, 16), 8)), SFXP(SBV(-1652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3665, 16), 8), SFXP(SBV(-19007, 16), 8)), SFXP(SBV(15342, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64521, 16), 8), UFXP(BV(19136, 16), 8)), UFXP(BV(45385, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1157, 16), 8), UFXP(BV(26102, 16), 8)), UFXP(BV(27259, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28476, 16), 8), UFXP(BV(5031, 16), 8)), UFXP(BV(35332, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3984, 16), 8), SFXP(SBV(-27831, 16), 8)), SFXP(SBV(-23847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11553, 16), 8), SFXP(SBV(-21293, 16), 8)), SFXP(SBV(9740, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52796, 16), 8), UFXP(BV(27439, 16), 8)), UFXP(BV(14699, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20815, 16), 8), SFXP(SBV(-18936, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50128, 16), 8), UFXP(BV(45980, 16), 8)), UFXP(BV(4148, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17845, 16), 8), SFXP(SBV(-10149, 16), 8)), SFXP(SBV(7696, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20270, 16), 8), UFXP(BV(25930, 16), 8)), UFXP(BV(59876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10815, 16), 8), SFXP(SBV(25398, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24388, 16), 8), SFXP(SBV(7772, 16), 8)), SFXP(SBV(-32160, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60166, 16), 8), UFXP(BV(43538, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13112, 16), 8), SFXP(SBV(27355, 16), 8)), SFXP(SBV(25069, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19448, 16), 8), SFXP(SBV(-19942, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53724, 16), 8), UFXP(BV(37336, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17437, 16), 8), SFXP(SBV(-1612, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30957, 16), 8), SFXP(SBV(27720, 16), 8)), SFXP(SBV(-3237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-3772, 16), 8), SFXP(SBV(17752, 16), 8)), SFXP(SBV(580, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29389, 16), 8), SFXP(SBV(19542, 16), 8)), SFXP(SBV(9847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21430, 16), 8), SFXP(SBV(29827, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4785, 16), 8), SFXP(SBV(1956, 16), 8)), SFXP(SBV(-28976, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21083, 16), 8), UFXP(BV(17229, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3381, 16), 8), SFXP(SBV(8454, 16), 8)), SFXP(SBV(-19420, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9336, 16), 8), UFXP(BV(13905, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61293, 16), 8), UFXP(BV(38110, 16), 8)), UFXP(BV(23183, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8598, 16), 8), SFXP(SBV(-28693, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23352, 16), 8), SFXP(SBV(-19638, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16279, 16), 8), SFXP(SBV(27156, 16), 8)), SFXP(SBV(-22909, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12601, 16), 8), SFXP(SBV(-4253, 16), 8)), SFXP(SBV(8348, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50669, 16), 8), UFXP(BV(6428, 16), 8)), UFXP(BV(44241, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6241, 16), 8), SFXP(SBV(-4671, 16), 8)), SFXP(SBV(1570, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16182, 16), 8), UFXP(BV(21241, 16), 8)), UFXP(BV(37423, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39826, 16), 8), UFXP(BV(59337, 16), 8)), UFXP(BV(46025, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18447, 16), 8), SFXP(SBV(28609, 16), 8)), SFXP(SBV(10162, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60907, 16), 8), UFXP(BV(9821, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39002, 16), 8), UFXP(BV(8095, 16), 8)), UFXP(BV(47097, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32670, 16), 8), UFXP(BV(23482, 16), 8)), UFXP(BV(56152, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9208, 16), 8), SFXP(SBV(-8382, 16), 8)), SFXP(SBV(-26190, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19554, 16), 8), UFXP(BV(10533, 16), 8)), UFXP(BV(18109, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33899, 16), 8), UFXP(BV(39702, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54184, 16), 8), UFXP(BV(54086, 16), 8)), UFXP(BV(98, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1185, 16), 8), SFXP(SBV(30738, 16), 8)), SFXP(SBV(-11211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10139, 16), 8), UFXP(BV(54941, 16), 8)), UFXP(BV(65080, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2679, 16), 8), SFXP(SBV(-17111, 16), 8)), SFXP(SBV(19790, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26506, 16), 8), SFXP(SBV(-29269, 16), 8)), SFXP(SBV(2763, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3826, 16), 8), SFXP(SBV(-2016, 16), 8)), SFXP(SBV(5842, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29867, 16), 8), SFXP(SBV(-30934, 16), 8)), SFXP(SBV(-4527, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22382, 16), 8), UFXP(BV(5435, 16), 8)), UFXP(BV(16947, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42204, 16), 8), UFXP(BV(11044, 16), 8)), UFXP(BV(53248, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43356, 16), 8), UFXP(BV(42186, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47393, 16), 8), UFXP(BV(16662, 16), 8)), UFXP(BV(64055, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38148, 16), 8), UFXP(BV(61441, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10520, 16), 8), UFXP(BV(648, 16), 8)), UFXP(BV(26628, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27782, 16), 8), SFXP(SBV(9319, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4447, 16), 8), SFXP(SBV(-12208, 16), 8)), SFXP(SBV(16655, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31386, 16), 8), SFXP(SBV(-14188, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20633, 16), 8), SFXP(SBV(-8787, 16), 8)), SFXP(SBV(-11846, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16626, 16), 8), SFXP(SBV(-23502, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5139, 16), 8), UFXP(BV(30525, 16), 8)), UFXP(BV(35664, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8267, 16), 8), UFXP(BV(35636, 16), 8)), UFXP(BV(43903, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16377, 16), 8), SFXP(SBV(-11262, 16), 8)), SFXP(SBV(27639, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8854, 16), 8), SFXP(SBV(11318, 16), 8)), SFXP(SBV(2464, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23833, 16), 8), UFXP(BV(34683, 16), 8)), UFXP(BV(58516, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61814, 16), 8), UFXP(BV(15510, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18779, 16), 8), SFXP(SBV(5539, 16), 8)), SFXP(SBV(-24318, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12802, 16), 8), UFXP(BV(54910, 16), 8)), UFXP(BV(2176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13910, 16), 8), SFXP(SBV(4132, 16), 8)), SFXP(SBV(-18042, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28418, 16), 8), SFXP(SBV(12858, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6575, 16), 8), UFXP(BV(43877, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5562, 16), 8), SFXP(SBV(-25895, 16), 8)), SFXP(SBV(20333, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24995, 16), 8), SFXP(SBV(-18610, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32493, 16), 8), SFXP(SBV(-30487, 16), 8)), SFXP(SBV(-2556, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48161, 16), 8), UFXP(BV(45273, 16), 8)), UFXP(BV(2888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12889, 16), 8), SFXP(SBV(10862, 16), 8)), SFXP(SBV(-2027, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63778, 16), 8), UFXP(BV(33033, 16), 8)), UFXP(BV(30745, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10094, 16), 8), SFXP(SBV(-22889, 16), 8)), SFXP(SBV(-12795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8797, 16), 8), UFXP(BV(53752, 16), 8)), UFXP(BV(62549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18442, 16), 8), SFXP(SBV(32066, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35205, 16), 8), UFXP(BV(17069, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47747, 16), 8), UFXP(BV(8662, 16), 8)), UFXP(BV(56409, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34456, 16), 8), UFXP(BV(19807, 16), 8)), UFXP(BV(54263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10288, 16), 8), UFXP(BV(29642, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30681, 16), 8), UFXP(BV(27309, 16), 8)), UFXP(BV(3372, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6582, 16), 8), UFXP(BV(63902, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31923, 16), 8), UFXP(BV(2134, 16), 8)), UFXP(BV(3965, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16201, 16), 8), UFXP(BV(43202, 16), 8)), UFXP(BV(59403, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23604, 16), 8), SFXP(SBV(-30920, 16), 8)), SFXP(SBV(-32663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38382, 16), 8), UFXP(BV(25042, 16), 8)), UFXP(BV(13340, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11351, 16), 8), SFXP(SBV(12879, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32311, 16), 8), UFXP(BV(42036, 16), 8)), UFXP(BV(62688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12519, 16), 8), SFXP(SBV(-24769, 16), 8)), SFXP(SBV(28248, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22039, 16), 8), SFXP(SBV(21888, 16), 8)), SFXP(SBV(-16209, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9954, 16), 8), SFXP(SBV(17811, 16), 8)), SFXP(SBV(-27765, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23868, 16), 8), SFXP(SBV(19532, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26968, 16), 8), SFXP(SBV(-19925, 16), 8)), SFXP(SBV(-7043, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20928, 16), 8), SFXP(SBV(-12014, 16), 8)), SFXP(SBV(8914, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60413, 16), 8), UFXP(BV(5259, 16), 8)), UFXP(BV(55154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12221, 16), 8), SFXP(SBV(14864, 16), 8)), SFXP(SBV(2643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8450, 16), 8), SFXP(SBV(-14024, 16), 8)), SFXP(SBV(-4149, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14307, 16), 8), UFXP(BV(2709, 16), 8)), UFXP(BV(11598, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14245, 16), 8), SFXP(SBV(-475, 16), 8)), SFXP(SBV(-13770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15214, 16), 8), SFXP(SBV(9306, 16), 8)), SFXP(SBV(28764, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61183, 16), 8), UFXP(BV(64351, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56245, 16), 8), UFXP(BV(47013, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26109, 16), 8), UFXP(BV(62713, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63627, 16), 8), UFXP(BV(50418, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36224, 16), 8), UFXP(BV(37691, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3371, 16), 8), SFXP(SBV(12589, 16), 8)), SFXP(SBV(-9218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12281, 16), 8), SFXP(SBV(-27282, 16), 8)), SFXP(SBV(-15001, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33614, 16), 8), UFXP(BV(42867, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25497, 16), 8), SFXP(SBV(3048, 16), 8)), SFXP(SBV(22449, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3302, 16), 8), SFXP(SBV(23032, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28994, 16), 8), SFXP(SBV(26639, 16), 8)), SFXP(SBV(-2419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5269, 16), 8), UFXP(BV(5201, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29392, 16), 8), UFXP(BV(17217, 16), 8)), UFXP(BV(12175, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28353, 16), 8), UFXP(BV(42655, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3421, 16), 8), UFXP(BV(33946, 16), 8)), UFXP(BV(35011, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45271, 16), 8), UFXP(BV(26478, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2243, 16), 8), SFXP(SBV(-764, 16), 8)), SFXP(SBV(-3007, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2042, 16), 8), UFXP(BV(38967, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31899, 16), 8), UFXP(BV(9600, 16), 8)), UFXP(BV(22299, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10307, 16), 8), UFXP(BV(41281, 16), 8)), UFXP(BV(23645, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37260, 16), 8), UFXP(BV(59756, 16), 8)), UFXP(BV(31480, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15949, 16), 8), SFXP(SBV(-18749, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21028, 16), 8), SFXP(SBV(22555, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(32217, 16), 8), SFXP(SBV(2038, 16), 8)), SFXP(SBV(-5666, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42703, 16), 8), UFXP(BV(52844, 16), 8)), UFXP(BV(55395, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27147, 16), 8), SFXP(SBV(-4947, 16), 8)), SFXP(SBV(-32094, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22479, 16), 8), SFXP(SBV(-8284, 16), 8)), SFXP(SBV(30763, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24177, 16), 8), SFXP(SBV(-4592, 16), 8)), SFXP(SBV(25078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22186, 16), 8), SFXP(SBV(-32318, 16), 8)), SFXP(SBV(-10132, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60756, 16), 8), UFXP(BV(11159, 16), 8)), UFXP(BV(49597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56799, 16), 8), UFXP(BV(10083, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9533, 16), 8), SFXP(SBV(11593, 16), 8)), SFXP(SBV(-2060, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(930, 16), 8), UFXP(BV(47224, 16), 8)), UFXP(BV(19242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32058, 16), 8), UFXP(BV(16024, 16), 8)), UFXP(BV(16034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21308, 16), 8), SFXP(SBV(-12851, 16), 8)), SFXP(SBV(8457, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2475, 16), 8), SFXP(SBV(-24690, 16), 8)), SFXP(SBV(22215, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24331, 16), 8), SFXP(SBV(27824, 16), 8)), SFXP(SBV(-3493, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37646, 16), 8), UFXP(BV(26264, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51259, 16), 8), UFXP(BV(65463, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44255, 16), 8), UFXP(BV(43794, 16), 8)), UFXP(BV(461, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23524, 16), 8), SFXP(SBV(7343, 16), 8)), SFXP(SBV(30867, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17558, 16), 8), UFXP(BV(53280, 16), 8)), UFXP(BV(49778, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15075, 16), 8), UFXP(BV(57966, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23842, 16), 8), SFXP(SBV(23165, 16), 8)), SFXP(SBV(-677, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27208, 16), 8), UFXP(BV(43377, 16), 8)), UFXP(BV(5049, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9273, 16), 8), SFXP(SBV(-8476, 16), 8)), SFXP(SBV(797, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3309, 16), 8), UFXP(BV(43735, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15254, 16), 8), UFXP(BV(44646, 16), 8)), UFXP(BV(38833, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(26442, 16), 8), UFXP(BV(50107, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11338, 16), 8), UFXP(BV(60814, 16), 8)), UFXP(BV(6420, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61235, 16), 8), UFXP(BV(20781, 16), 8)), UFXP(BV(40454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16899, 16), 8), SFXP(SBV(-8065, 16), 8)), SFXP(SBV(-8096, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36766, 16), 8), UFXP(BV(38171, 16), 8)), UFXP(BV(9401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21311, 16), 8), SFXP(SBV(-21295, 16), 8)), SFXP(SBV(-16, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(9370, 16), 8), SFXP(SBV(16695, 16), 8)), SFXP(SBV(21239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16864, 16), 8), SFXP(SBV(13050, 16), 8)), SFXP(SBV(3814, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32653, 16), 8), UFXP(BV(33483, 16), 8)), UFXP(BV(600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22648, 16), 8), UFXP(BV(52316, 16), 8)), UFXP(BV(9428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11078, 16), 8), SFXP(SBV(21344, 16), 8)), SFXP(SBV(-32422, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11579, 16), 8), SFXP(SBV(807, 16), 8)), SFXP(SBV(29035, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40388, 16), 8), UFXP(BV(57421, 16), 8)), UFXP(BV(15092, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64593, 16), 8), UFXP(BV(42637, 16), 8)), UFXP(BV(21956, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24747, 16), 8), UFXP(BV(37678, 16), 8)), UFXP(BV(62425, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9058, 16), 8), SFXP(SBV(-20477, 16), 8)), SFXP(SBV(-29535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4902, 16), 8), SFXP(SBV(15492, 16), 8)), SFXP(SBV(10590, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16370, 16), 8), SFXP(SBV(-6466, 16), 8)), SFXP(SBV(-9904, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9655, 16), 8), UFXP(BV(43318, 16), 8)), UFXP(BV(31873, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24752, 16), 8), UFXP(BV(31673, 16), 8)), UFXP(BV(56425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7786, 16), 8), UFXP(BV(17132, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44256, 16), 8), UFXP(BV(58377, 16), 8)), UFXP(BV(37097, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19446, 16), 8), SFXP(SBV(-24460, 16), 8)), SFXP(SBV(-22996, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23784, 16), 8), UFXP(BV(24476, 16), 8)), UFXP(BV(64844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16012, 16), 8), SFXP(SBV(-2120, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22663, 16), 8), SFXP(SBV(4928, 16), 8)), SFXP(SBV(-17735, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47089, 16), 8), UFXP(BV(25920, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59913, 16), 8), UFXP(BV(5800, 16), 8)), UFXP(BV(177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(221, 16), 8), SFXP(SBV(-24532, 16), 8)), SFXP(SBV(-21179, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1228, 16), 8), SFXP(SBV(-8, 16), 8)), SFXP(SBV(-1220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21117, 16), 8), UFXP(BV(24961, 16), 8)), UFXP(BV(27374, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7358, 16), 8), SFXP(SBV(-21325, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16972, 16), 8), SFXP(SBV(16929, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25969, 16), 8), SFXP(SBV(13156, 16), 8)), SFXP(SBV(23843, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21219, 16), 8), UFXP(BV(36387, 16), 8)), UFXP(BV(57606, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-739, 16), 8), SFXP(SBV(-25249, 16), 8)), SFXP(SBV(-25988, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40861, 16), 8), UFXP(BV(4903, 16), 8)), UFXP(BV(35958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30173, 16), 8), SFXP(SBV(7121, 16), 8)), SFXP(SBV(23052, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14194, 16), 8), SFXP(SBV(13069, 16), 8)), SFXP(SBV(-27263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2465, 16), 8), UFXP(BV(42399, 16), 8)), UFXP(BV(44864, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23798, 16), 8), SFXP(SBV(-22344, 16), 8)), SFXP(SBV(-19394, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43465, 16), 8), UFXP(BV(8497, 16), 8)), UFXP(BV(34968, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2131, 16), 8), SFXP(SBV(18729, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14843, 16), 8), SFXP(SBV(31177, 16), 8)), SFXP(SBV(-16334, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28684, 16), 8), SFXP(SBV(16981, 16), 8)), SFXP(SBV(-19871, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31878, 16), 8), SFXP(SBV(7058, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2129, 16), 8), SFXP(SBV(-4711, 16), 8)), SFXP(SBV(-2582, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17641, 16), 8), SFXP(SBV(-22913, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3405, 16), 8), SFXP(SBV(32759, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57019, 16), 8), UFXP(BV(33060, 16), 8)), UFXP(BV(23959, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27747, 16), 8), SFXP(SBV(8045, 16), 8)), SFXP(SBV(29744, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30987, 16), 8), SFXP(SBV(8929, 16), 8)), SFXP(SBV(25620, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49956, 16), 8), UFXP(BV(10040, 16), 8)), UFXP(BV(59996, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16335, 16), 8), SFXP(SBV(22983, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60167, 16), 8), UFXP(BV(58801, 16), 8)), UFXP(BV(1366, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4160, 16), 8), UFXP(BV(2284, 16), 8)), UFXP(BV(6444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16570, 16), 8), UFXP(BV(47658, 16), 8)), UFXP(BV(64228, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51991, 16), 8), UFXP(BV(30081, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21789, 16), 8), SFXP(SBV(24668, 16), 8)), SFXP(SBV(2423, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63787, 16), 8), UFXP(BV(16900, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30354, 16), 8), UFXP(BV(9224, 16), 8)), UFXP(BV(45116, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(49, 16), 8), SFXP(SBV(-3756, 16), 8)), SFXP(SBV(-3707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29692, 16), 8), SFXP(SBV(13743, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24357, 16), 8), SFXP(SBV(-15641, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48658, 16), 8), UFXP(BV(18681, 16), 8)), UFXP(BV(11759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14165, 16), 8), SFXP(SBV(26439, 16), 8)), SFXP(SBV(24932, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(414, 16), 8), UFXP(BV(31920, 16), 8)), UFXP(BV(32334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55735, 16), 8), UFXP(BV(3340, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63798, 16), 8), UFXP(BV(56356, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43399, 16), 8), UFXP(BV(12987, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7750, 16), 8), UFXP(BV(62221, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48496, 16), 8), UFXP(BV(36641, 16), 8)), UFXP(BV(11855, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51855, 16), 8), UFXP(BV(57568, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22632, 16), 8), UFXP(BV(31205, 16), 8)), UFXP(BV(53837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36271, 16), 8), UFXP(BV(41233, 16), 8)), UFXP(BV(11968, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52080, 16), 8), UFXP(BV(40148, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28076, 16), 8), UFXP(BV(38696, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11637, 16), 8), SFXP(SBV(-18583, 16), 8)), SFXP(SBV(6946, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26447, 16), 8), SFXP(SBV(-16970, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30263, 16), 8), SFXP(SBV(27705, 16), 8)), SFXP(SBV(7568, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35877, 16), 8), UFXP(BV(38503, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51396, 16), 8), UFXP(BV(48748, 16), 8)), UFXP(BV(34608, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7227, 16), 8), UFXP(BV(9987, 16), 8)), UFXP(BV(19794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51053, 16), 8), UFXP(BV(50559, 16), 8)), UFXP(BV(36076, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28957, 16), 8), SFXP(SBV(-2114, 16), 8)), SFXP(SBV(23022, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59615, 16), 8), UFXP(BV(14951, 16), 8)), UFXP(BV(8247, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54790, 16), 8), UFXP(BV(6981, 16), 8)), UFXP(BV(61771, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23413, 16), 8), SFXP(SBV(8860, 16), 8)), SFXP(SBV(32273, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54228, 16), 8), UFXP(BV(56009, 16), 8)), UFXP(BV(44701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23000, 16), 8), SFXP(SBV(-30855, 16), 8)), SFXP(SBV(7855, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19510, 16), 8), UFXP(BV(56293, 16), 8)), UFXP(BV(30302, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18573, 16), 8), UFXP(BV(22634, 16), 8)), UFXP(BV(61475, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3717, 16), 8), SFXP(SBV(5071, 16), 8)), SFXP(SBV(-8788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18656, 16), 8), UFXP(BV(46975, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63110, 16), 8), UFXP(BV(48231, 16), 8)), UFXP(BV(28055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17754, 16), 8), SFXP(SBV(30163, 16), 8)), SFXP(SBV(-12409, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51102, 16), 8), UFXP(BV(55825, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23432, 16), 8), SFXP(SBV(-16200, 16), 8)), SFXP(SBV(7232, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2340, 16), 8), SFXP(SBV(3965, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60311, 16), 8), UFXP(BV(5487, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62843, 16), 8), UFXP(BV(32949, 16), 8)), UFXP(BV(29894, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49587, 16), 8), UFXP(BV(48020, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6319, 16), 8), SFXP(SBV(1950, 16), 8)), SFXP(SBV(-8269, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32495, 16), 8), SFXP(SBV(-4046, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48400, 16), 8), UFXP(BV(20118, 16), 8)), UFXP(BV(28282, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15490, 16), 8), SFXP(SBV(25836, 16), 8)), SFXP(SBV(-10346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44915, 16), 8), UFXP(BV(59601, 16), 8)), UFXP(BV(38980, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39754, 16), 8), UFXP(BV(19379, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7271, 16), 8), SFXP(SBV(31692, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6065, 16), 8), UFXP(BV(34059, 16), 8)), UFXP(BV(20473, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4161, 16), 8), SFXP(SBV(12301, 16), 8)), SFXP(SBV(16462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12556, 16), 8), UFXP(BV(28702, 16), 8)), UFXP(BV(41258, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33846, 16), 8), UFXP(BV(29412, 16), 8)), UFXP(BV(63258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22478, 16), 8), SFXP(SBV(-18134, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27484, 16), 8), SFXP(SBV(-9350, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30108, 16), 8), SFXP(SBV(-20238, 16), 8)), SFXP(SBV(-9870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15472, 16), 8), SFXP(SBV(4774, 16), 8)), SFXP(SBV(-20246, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28987, 16), 8), UFXP(BV(47350, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17046, 16), 8), UFXP(BV(50440, 16), 8)), UFXP(BV(16258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12727, 16), 8), SFXP(SBV(31230, 16), 8)), SFXP(SBV(-18503, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24381, 16), 8), SFXP(SBV(5142, 16), 8)), SFXP(SBV(-29523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18969, 16), 8), SFXP(SBV(-14007, 16), 8)), SFXP(SBV(4962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8376, 16), 8), SFXP(SBV(-10047, 16), 8)), SFXP(SBV(-18423, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57323, 16), 8), UFXP(BV(13045, 16), 8)), UFXP(BV(37426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61297, 16), 8), UFXP(BV(27764, 16), 8)), UFXP(BV(23525, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19898, 16), 8), SFXP(SBV(-8253, 16), 8)), SFXP(SBV(-28151, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28693, 16), 8), UFXP(BV(28337, 16), 8)), UFXP(BV(57030, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27126, 16), 8), SFXP(SBV(11471, 16), 8)), SFXP(SBV(-26939, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23564, 16), 8), SFXP(SBV(-9729, 16), 8)), SFXP(SBV(-13835, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23300, 16), 8), UFXP(BV(46000, 16), 8)), UFXP(BV(42836, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16295, 16), 8), SFXP(SBV(27024, 16), 8)), SFXP(SBV(10729, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46855, 16), 8), UFXP(BV(20046, 16), 8)), UFXP(BV(64486, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14483, 16), 8), SFXP(SBV(13704, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8590, 16), 8), SFXP(SBV(23358, 16), 8)), SFXP(SBV(2662, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2098, 16), 8), SFXP(SBV(-24771, 16), 8)), SFXP(SBV(-22673, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17171, 16), 8), SFXP(SBV(-3055, 16), 8)), SFXP(SBV(-8303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6889, 16), 8), SFXP(SBV(5121, 16), 8)), SFXP(SBV(1768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21427, 16), 8), SFXP(SBV(-9157, 16), 8)), SFXP(SBV(12270, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29243, 16), 8), SFXP(SBV(24466, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10395, 16), 8), SFXP(SBV(-683, 16), 8)), SFXP(SBV(11078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4958, 16), 8), SFXP(SBV(5506, 16), 8)), SFXP(SBV(-548, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19974, 16), 8), UFXP(BV(23691, 16), 8)), UFXP(BV(13446, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51534, 16), 8), UFXP(BV(32185, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31288, 16), 8), SFXP(SBV(-5120, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26471, 16), 8), SFXP(SBV(4086, 16), 8)), SFXP(SBV(-29286, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46051, 16), 8), UFXP(BV(3619, 16), 8)), UFXP(BV(42432, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41792, 16), 8), UFXP(BV(22270, 16), 8)), UFXP(BV(64062, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3048, 16), 8), SFXP(SBV(22685, 16), 8)), SFXP(SBV(-19637, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(46544, 16), 8), UFXP(BV(33265, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22290, 16), 8), SFXP(SBV(-9934, 16), 8)), SFXP(SBV(-12356, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28259, 16), 8), UFXP(BV(41139, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30872, 16), 8), UFXP(BV(53537, 16), 8)), UFXP(BV(18873, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33827, 16), 8), UFXP(BV(5463, 16), 8)), UFXP(BV(28364, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11584, 16), 8), SFXP(SBV(-8360, 16), 8)), SFXP(SBV(19944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11600, 16), 8), UFXP(BV(47947, 16), 8)), UFXP(BV(29189, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30616, 16), 8), UFXP(BV(61855, 16), 8)), UFXP(BV(57440, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23554, 16), 8), UFXP(BV(33161, 16), 8)), UFXP(BV(36415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23668, 16), 8), SFXP(SBV(7399, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6136, 16), 8), UFXP(BV(21706, 16), 8)), UFXP(BV(49966, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63375, 16), 8), UFXP(BV(43577, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9011, 16), 8), UFXP(BV(38827, 16), 8)), UFXP(BV(47838, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5205, 16), 8), SFXP(SBV(-29388, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41054, 16), 8), UFXP(BV(17607, 16), 8)), UFXP(BV(23447, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2420, 16), 8), UFXP(BV(34684, 16), 8)), UFXP(BV(33272, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8906, 16), 8), UFXP(BV(1820, 16), 8)), UFXP(BV(63316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26100, 16), 8), SFXP(SBV(-13178, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31538, 16), 8), SFXP(SBV(-26519, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34349, 16), 8), UFXP(BV(9827, 16), 8)), UFXP(BV(44176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5363, 16), 8), SFXP(SBV(-25171, 16), 8)), SFXP(SBV(19808, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30769, 16), 8), SFXP(SBV(26294, 16), 8)), SFXP(SBV(-8473, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40613, 16), 8), UFXP(BV(49504, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25476, 16), 8), UFXP(BV(19026, 16), 8)), UFXP(BV(58377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29992, 16), 8), SFXP(SBV(-7374, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43866, 16), 8), UFXP(BV(30628, 16), 8)), UFXP(BV(13238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42269, 16), 8), UFXP(BV(34333, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42175, 16), 8), UFXP(BV(41220, 16), 8)), UFXP(BV(955, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32580, 16), 8), SFXP(SBV(-17692, 16), 8)), SFXP(SBV(-14888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1457, 16), 8), SFXP(SBV(12298, 16), 8)), SFXP(SBV(-13755, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41105, 16), 8), UFXP(BV(30312, 16), 8)), UFXP(BV(10793, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32763, 16), 8), SFXP(SBV(-30392, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62769, 16), 8), UFXP(BV(29962, 16), 8)), UFXP(BV(6392, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26266, 16), 8), UFXP(BV(50029, 16), 8)), UFXP(BV(10759, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3583, 16), 8), UFXP(BV(7913, 16), 8)), UFXP(BV(61206, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(69, 16), 8), UFXP(BV(52446, 16), 8)), UFXP(BV(14136, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7611, 16), 8), SFXP(SBV(-8871, 16), 8)), SFXP(SBV(-1594, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6329, 16), 8), SFXP(SBV(21587, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25938, 16), 8), UFXP(BV(21695, 16), 8)), UFXP(BV(47633, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30626, 16), 8), SFXP(SBV(11658, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6401, 16), 8), SFXP(SBV(-11412, 16), 8)), SFXP(SBV(5011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32733, 16), 8), SFXP(SBV(-19533, 16), 8)), SFXP(SBV(-13200, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52967, 16), 8), UFXP(BV(28277, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54678, 16), 8), UFXP(BV(36619, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51460, 16), 8), UFXP(BV(13440, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39953, 16), 8), UFXP(BV(31715, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3269, 16), 8), UFXP(BV(23329, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-32766, 16), 8), SFXP(SBV(14572, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25888, 16), 8), UFXP(BV(20327, 16), 8)), UFXP(BV(23951, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12786, 16), 8), SFXP(SBV(-19302, 16), 8)), SFXP(SBV(32088, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9408, 16), 8), UFXP(BV(50442, 16), 8)), UFXP(BV(18735, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32016, 16), 8), SFXP(SBV(-1314, 16), 8)), SFXP(SBV(30702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6417, 16), 8), SFXP(SBV(29557, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42, 16), 8), UFXP(BV(14926, 16), 8)), UFXP(BV(2448, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13390, 16), 8), SFXP(SBV(-15661, 16), 8)), SFXP(SBV(-2271, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21651, 16), 8), UFXP(BV(27790, 16), 8)), UFXP(BV(59397, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27976, 16), 8), SFXP(SBV(-30530, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25210, 16), 8), SFXP(SBV(32344, 16), 8)), SFXP(SBV(-26138, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37538, 16), 8), UFXP(BV(48053, 16), 8)), UFXP(BV(20055, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65305, 16), 8), UFXP(BV(32401, 16), 8)), UFXP(BV(32904, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49866, 16), 8), UFXP(BV(61122, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31487, 16), 8), SFXP(SBV(254, 16), 8)), SFXP(SBV(-31741, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2819, 16), 8), UFXP(BV(36328, 16), 8)), UFXP(BV(32027, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9842, 16), 8), SFXP(SBV(13329, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47442, 16), 8), UFXP(BV(9050, 16), 8)), UFXP(BV(38392, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47824, 16), 8), UFXP(BV(17055, 16), 8)), UFXP(BV(64879, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59443, 16), 8), UFXP(BV(49890, 16), 8)), UFXP(BV(43797, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21223, 16), 8), SFXP(SBV(5999, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1874, 16), 8), SFXP(SBV(-8219, 16), 8)), SFXP(SBV(6345, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23108, 16), 8), SFXP(SBV(27943, 16), 8)), SFXP(SBV(-4835, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25834, 16), 8), SFXP(SBV(-21760, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9968, 16), 8), UFXP(BV(29884, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31490, 16), 8), SFXP(SBV(-21890, 16), 8)), SFXP(SBV(5665, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4629, 16), 8), SFXP(SBV(22317, 16), 8)), SFXP(SBV(-10320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37491, 16), 8), UFXP(BV(59187, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13302, 16), 8), SFXP(SBV(-20974, 16), 8)), SFXP(SBV(-7672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60968, 16), 8), UFXP(BV(24506, 16), 8)), UFXP(BV(3553, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44232, 16), 8), UFXP(BV(25827, 16), 8)), UFXP(BV(18405, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17739, 16), 8), SFXP(SBV(-3387, 16), 8)), SFXP(SBV(-14352, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27814, 16), 8), SFXP(SBV(31748, 16), 8)), SFXP(SBV(-3934, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18110, 16), 8), SFXP(SBV(16006, 16), 8)), SFXP(SBV(-31420, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12156, 16), 8), SFXP(SBV(-10347, 16), 8)), SFXP(SBV(-22503, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53432, 16), 8), UFXP(BV(32557, 16), 8)), UFXP(BV(20453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29519, 16), 8), SFXP(SBV(16280, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59212, 16), 8), UFXP(BV(6605, 16), 8)), UFXP(BV(52607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8527, 16), 8), SFXP(SBV(-3327, 16), 8)), SFXP(SBV(-5200, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(47730, 16), 8), UFXP(BV(23705, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4645, 16), 8), SFXP(SBV(-31505, 16), 8)), SFXP(SBV(18180, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6565, 16), 8), SFXP(SBV(11888, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(65443, 16), 8), UFXP(BV(34086, 16), 8)), UFXP(BV(62881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6853, 16), 8), SFXP(SBV(27998, 16), 8)), SFXP(SBV(-21145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31198, 16), 8), UFXP(BV(22446, 16), 8)), UFXP(BV(53644, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6198, 16), 8), SFXP(SBV(-9417, 16), 8)), SFXP(SBV(15615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24201, 16), 8), SFXP(SBV(-26436, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10752, 16), 8), UFXP(BV(45384, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19692, 16), 8), SFXP(SBV(-30817, 16), 8)), SFXP(SBV(-11125, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23957, 16), 8), SFXP(SBV(-23584, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31159, 16), 8), UFXP(BV(29322, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19646, 16), 8), SFXP(SBV(-21460, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56537, 16), 8), UFXP(BV(54113, 16), 8)), UFXP(BV(2424, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12574, 16), 8), SFXP(SBV(13774, 16), 8)), SFXP(SBV(1200, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16536, 16), 8), UFXP(BV(37145, 16), 8)), UFXP(BV(53681, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26217, 16), 8), SFXP(SBV(-10233, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15947, 16), 8), UFXP(BV(49967, 16), 8)), UFXP(BV(31516, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32715, 16), 8), SFXP(SBV(-16057, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61897, 16), 8), UFXP(BV(26132, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59806, 16), 8), UFXP(BV(45345, 16), 8)), UFXP(BV(14461, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-526, 16), 8), SFXP(SBV(-24885, 16), 8)), SFXP(SBV(-25411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26996, 16), 8), SFXP(SBV(11679, 16), 8)), SFXP(SBV(-15317, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22590, 16), 8), SFXP(SBV(12575, 16), 8)), SFXP(SBV(-10015, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4777, 16), 8), UFXP(BV(49576, 16), 8)), UFXP(BV(20737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15677, 16), 8), SFXP(SBV(31802, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54775, 16), 8), UFXP(BV(56175, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54872, 16), 8), UFXP(BV(8550, 16), 8)), UFXP(BV(63167, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48716, 16), 8), UFXP(BV(23951, 16), 8)), UFXP(BV(35816, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19960, 16), 8), UFXP(BV(36531, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-9259, 16), 8), SFXP(SBV(19680, 16), 8)), SFXP(SBV(9111, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61607, 16), 8), UFXP(BV(49661, 16), 8)), UFXP(BV(23485, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(32109, 16), 8), SFXP(SBV(-26199, 16), 8)), SFXP(SBV(-9230, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7640, 16), 8), UFXP(BV(27709, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23160, 16), 8), UFXP(BV(28859, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31824, 16), 8), UFXP(BV(20148, 16), 8)), UFXP(BV(11676, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16509, 16), 8), SFXP(SBV(31150, 16), 8)), SFXP(SBV(-14641, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21442, 16), 8), SFXP(SBV(15944, 16), 8)), SFXP(SBV(28150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13605, 16), 8), UFXP(BV(49544, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49028, 16), 8), UFXP(BV(36652, 16), 8)), UFXP(BV(12376, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63593, 16), 8), UFXP(BV(2654, 16), 8)), UFXP(BV(60939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29717, 16), 8), UFXP(BV(13435, 16), 8)), UFXP(BV(52234, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46726, 16), 8), UFXP(BV(4862, 16), 8)), UFXP(BV(35460, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1677, 16), 8), SFXP(SBV(-12692, 16), 8)), SFXP(SBV(-14369, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63965, 16), 8), UFXP(BV(3834, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28477, 16), 8), UFXP(BV(54962, 16), 8)), UFXP(BV(17903, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37184, 16), 8), UFXP(BV(17695, 16), 8)), UFXP(BV(19489, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25553, 16), 8), UFXP(BV(47666, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34890, 16), 8), UFXP(BV(9756, 16), 8)), UFXP(BV(25134, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18906, 16), 8), UFXP(BV(4690, 16), 8)), UFXP(BV(14216, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29517, 16), 8), SFXP(SBV(28655, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29050, 16), 8), SFXP(SBV(-18068, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27437, 16), 8), SFXP(SBV(-5068, 16), 8)), SFXP(SBV(22369, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18694, 16), 8), UFXP(BV(25429, 16), 8)), UFXP(BV(44123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29343, 16), 8), SFXP(SBV(28650, 16), 8)), SFXP(SBV(693, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29018, 16), 8), SFXP(SBV(-26469, 16), 8)), SFXP(SBV(14353, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17141, 16), 8), SFXP(SBV(2625, 16), 8)), SFXP(SBV(-14516, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3656, 16), 8), SFXP(SBV(2353, 16), 8)), SFXP(SBV(-1303, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26769, 16), 8), UFXP(BV(5791, 16), 8)), UFXP(BV(20978, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47693, 16), 8), UFXP(BV(8478, 16), 8)), UFXP(BV(56171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32422, 16), 8), SFXP(SBV(-2664, 16), 8)), SFXP(SBV(-30450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22023, 16), 8), SFXP(SBV(-22703, 16), 8)), SFXP(SBV(680, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31535, 16), 8), SFXP(SBV(25237, 16), 8)), SFXP(SBV(8764, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39009, 16), 8), UFXP(BV(59242, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27329, 16), 8), SFXP(SBV(26233, 16), 8)), SFXP(SBV(1096, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59250, 16), 8), UFXP(BV(45719, 16), 8)), UFXP(BV(30153, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14696, 16), 8), SFXP(SBV(-27674, 16), 8)), SFXP(SBV(23166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23570, 16), 8), SFXP(SBV(11964, 16), 8)), SFXP(SBV(-30002, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42370, 16), 8), UFXP(BV(5858, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19444, 16), 8), UFXP(BV(15102, 16), 8)), UFXP(BV(4342, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9813, 16), 8), SFXP(SBV(17555, 16), 8)), SFXP(SBV(27368, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17710, 16), 8), SFXP(SBV(9412, 16), 8)), SFXP(SBV(-4240, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57873, 16), 8), UFXP(BV(39856, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5710, 16), 8), UFXP(BV(65509, 16), 8)), UFXP(BV(5737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6261, 16), 8), SFXP(SBV(-18530, 16), 8)), SFXP(SBV(-24791, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12201, 16), 8), UFXP(BV(24180, 16), 8)), UFXP(BV(38311, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24080, 16), 8), SFXP(SBV(-12534, 16), 8)), SFXP(SBV(11546, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15518, 16), 8), SFXP(SBV(-6863, 16), 8)), SFXP(SBV(22381, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19163, 16), 8), UFXP(BV(33302, 16), 8)), UFXP(BV(2469, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15229, 16), 8), SFXP(SBV(-14819, 16), 8)), SFXP(SBV(410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-660, 16), 8), SFXP(SBV(10129, 16), 8)), SFXP(SBV(-10789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5540, 16), 8), SFXP(SBV(14434, 16), 8)), SFXP(SBV(8894, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19418, 16), 8), UFXP(BV(3119, 16), 8)), UFXP(BV(16299, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20516, 16), 8), SFXP(SBV(-28005, 16), 8)), SFXP(SBV(16115, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27014, 16), 8), SFXP(SBV(22351, 16), 8)), SFXP(SBV(4663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36859, 16), 8), UFXP(BV(11851, 16), 8)), UFXP(BV(48710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(39196, 16), 8), UFXP(BV(61539, 16), 8)), UFXP(BV(50549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24768, 16), 8), SFXP(SBV(-16657, 16), 8)), SFXP(SBV(-8111, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26418, 16), 8), UFXP(BV(44978, 16), 8)), UFXP(BV(53999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4274, 16), 8), SFXP(SBV(-32556, 16), 8)), SFXP(SBV(28706, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18982, 16), 8), SFXP(SBV(7835, 16), 8)), SFXP(SBV(8871, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32801, 16), 8), UFXP(BV(23857, 16), 8)), UFXP(BV(56658, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4484, 16), 8), UFXP(BV(51694, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54836, 16), 8), UFXP(BV(14734, 16), 8)), UFXP(BV(40102, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55138, 16), 8), UFXP(BV(34224, 16), 8)), UFXP(BV(23826, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(978, 16), 8), UFXP(BV(23722, 16), 8)), UFXP(BV(24700, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60441, 16), 8), UFXP(BV(60865, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15390, 16), 8), SFXP(SBV(-6918, 16), 8)), SFXP(SBV(22308, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10469, 16), 8), SFXP(SBV(-24979, 16), 8)), SFXP(SBV(-14510, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26539, 16), 8), SFXP(SBV(26127, 16), 8)), SFXP(SBV(-412, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(65060, 16), 8), UFXP(BV(12433, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7801, 16), 8), SFXP(SBV(-29347, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15581, 16), 8), SFXP(SBV(-17040, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1075, 16), 8), UFXP(BV(53257, 16), 8)), UFXP(BV(54332, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23605, 16), 8), SFXP(SBV(31, 16), 8)), SFXP(SBV(23636, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51731, 16), 8), UFXP(BV(31190, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46970, 16), 8), UFXP(BV(53935, 16), 8)), UFXP(BV(65409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30930, 16), 8), SFXP(SBV(-32485, 16), 8)), SFXP(SBV(1555, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8128, 16), 8), UFXP(BV(34507, 16), 8)), UFXP(BV(39157, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55457, 16), 8), UFXP(BV(44413, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21975, 16), 8), UFXP(BV(41661, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21983, 16), 8), SFXP(SBV(5304, 16), 8)), SFXP(SBV(16679, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23946, 16), 8), SFXP(SBV(-28378, 16), 8)), SFXP(SBV(4432, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22390, 16), 8), SFXP(SBV(21093, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12458, 16), 8), UFXP(BV(15959, 16), 8)), UFXP(BV(55733, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31746, 16), 8), UFXP(BV(20985, 16), 8)), UFXP(BV(10761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23951, 16), 8), SFXP(SBV(-21012, 16), 8)), SFXP(SBV(2939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63551, 16), 8), UFXP(BV(49544, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31457, 16), 8), SFXP(SBV(24772, 16), 8)), SFXP(SBV(-9307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4920, 16), 8), SFXP(SBV(28015, 16), 8)), SFXP(SBV(32601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37517, 16), 8), UFXP(BV(13632, 16), 8)), UFXP(BV(51149, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31910, 16), 8), UFXP(BV(18796, 16), 8)), UFXP(BV(49133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10808, 16), 8), SFXP(SBV(-3287, 16), 8)), SFXP(SBV(14095, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24344, 16), 8), SFXP(SBV(-27397, 16), 8)), SFXP(SBV(-3053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35599, 16), 8), UFXP(BV(62754, 16), 8)), UFXP(BV(32817, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21826, 16), 8), SFXP(SBV(-31513, 16), 8)), SFXP(SBV(-9687, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29045, 16), 8), SFXP(SBV(-27546, 16), 8)), SFXP(SBV(-1499, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18397, 16), 8), SFXP(SBV(7816, 16), 8)), SFXP(SBV(10581, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63748, 16), 8), UFXP(BV(20306, 16), 8)), UFXP(BV(18518, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2469, 16), 8), UFXP(BV(49697, 16), 8)), UFXP(BV(20553, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50870, 16), 8), UFXP(BV(8643, 16), 8)), UFXP(BV(59513, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17286, 16), 8), SFXP(SBV(8746, 16), 8)), SFXP(SBV(26032, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22797, 16), 8), SFXP(SBV(-862, 16), 8)), SFXP(SBV(-23659, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23524, 16), 8), SFXP(SBV(-29010, 16), 8)), SFXP(SBV(-13002, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3802, 16), 8), UFXP(BV(13235, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27916, 16), 8), SFXP(SBV(16142, 16), 8)), SFXP(SBV(21478, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2661, 16), 8), SFXP(SBV(-31364, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57577, 16), 8), UFXP(BV(38657, 16), 8)), UFXP(BV(43600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15456, 16), 8), UFXP(BV(61385, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17972, 16), 8), SFXP(SBV(32183, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29676, 16), 8), UFXP(BV(6385, 16), 8)), UFXP(BV(19265, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51487, 16), 8), UFXP(BV(2447, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7968, 16), 8), SFXP(SBV(19232, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33356, 16), 8), UFXP(BV(706, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28494, 16), 8), UFXP(BV(22790, 16), 8)), UFXP(BV(46266, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22766, 16), 8), SFXP(SBV(25781, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54010, 16), 8), UFXP(BV(17063, 16), 8)), UFXP(BV(36947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24261, 16), 8), SFXP(SBV(-5296, 16), 8)), SFXP(SBV(-22388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29887, 16), 8), SFXP(SBV(31644, 16), 8)), SFXP(SBV(-1757, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28322, 16), 8), SFXP(SBV(-10124, 16), 8)), SFXP(SBV(-18198, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14770, 16), 8), UFXP(BV(1195, 16), 8)), UFXP(BV(13575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21503, 16), 8), SFXP(SBV(24379, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7117, 16), 8), SFXP(SBV(207, 16), 8)), SFXP(SBV(7324, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13519, 16), 8), SFXP(SBV(2205, 16), 8)), SFXP(SBV(-15724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-267, 16), 8), SFXP(SBV(-18952, 16), 8)), SFXP(SBV(-19219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27445, 16), 8), UFXP(BV(23685, 16), 8)), UFXP(BV(3760, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17990, 16), 8), UFXP(BV(50326, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11083, 16), 8), SFXP(SBV(-26556, 16), 8)), SFXP(SBV(27897, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34601, 16), 8), UFXP(BV(51967, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26687, 16), 8), SFXP(SBV(27939, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6598, 16), 8), SFXP(SBV(11858, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14257, 16), 8), SFXP(SBV(-10655, 16), 8)), SFXP(SBV(3602, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26027, 16), 8), SFXP(SBV(25788, 16), 8)), SFXP(SBV(-373, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16767, 16), 8), SFXP(SBV(-15802, 16), 8)), SFXP(SBV(-965, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31012, 16), 8), SFXP(SBV(21763, 16), 8)), SFXP(SBV(-12761, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21909, 16), 8), UFXP(BV(63891, 16), 8)), UFXP(BV(20264, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47992, 16), 8), UFXP(BV(16593, 16), 8)), UFXP(BV(31399, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59234, 16), 8), UFXP(BV(3617, 16), 8)), UFXP(BV(62851, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39407, 16), 8), UFXP(BV(17236, 16), 8)), UFXP(BV(56643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4764, 16), 8), SFXP(SBV(4480, 16), 8)), SFXP(SBV(-17834, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13747, 16), 8), UFXP(BV(40578, 16), 8)), UFXP(BV(38705, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30830, 16), 8), SFXP(SBV(14990, 16), 8)), SFXP(SBV(15840, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11584, 16), 8), UFXP(BV(14598, 16), 8)), UFXP(BV(62522, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13240, 16), 8), SFXP(SBV(26811, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10134, 16), 8), SFXP(SBV(11267, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13061, 16), 8), SFXP(SBV(3423, 16), 8)), SFXP(SBV(9638, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20964, 16), 8), SFXP(SBV(13913, 16), 8)), SFXP(SBV(7051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18628, 16), 8), SFXP(SBV(21440, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63088, 16), 8), UFXP(BV(10265, 16), 8)), UFXP(BV(52823, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32995, 16), 8), UFXP(BV(44148, 16), 8)), UFXP(BV(11607, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54546, 16), 8), UFXP(BV(47059, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30612, 16), 8), SFXP(SBV(32551, 16), 8)), SFXP(SBV(25763, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12129, 16), 8), SFXP(SBV(-6286, 16), 8)), SFXP(SBV(-18415, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15571, 16), 8), UFXP(BV(59521, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7103, 16), 8), UFXP(BV(44078, 16), 8)), UFXP(BV(43345, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10847, 16), 8), SFXP(SBV(7777, 16), 8)), SFXP(SBV(18624, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9682, 16), 8), UFXP(BV(33876, 16), 8)), UFXP(BV(43558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3502, 16), 8), SFXP(SBV(29612, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29795, 16), 8), SFXP(SBV(-27804, 16), 8)), SFXP(SBV(-1991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(43332, 16), 8), UFXP(BV(60502, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4085, 16), 8), SFXP(SBV(3478, 16), 8)), SFXP(SBV(-607, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48105, 16), 8), UFXP(BV(44316, 16), 8)), UFXP(BV(3789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24321, 16), 8), SFXP(SBV(4807, 16), 8)), SFXP(SBV(-29128, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14368, 16), 8), SFXP(SBV(32403, 16), 8)), SFXP(SBV(16389, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7321, 16), 8), SFXP(SBV(-31360, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29573, 16), 8), UFXP(BV(24076, 16), 8)), UFXP(BV(53649, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30834, 16), 8), SFXP(SBV(-23359, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9732, 16), 8), SFXP(SBV(13790, 16), 8)), SFXP(SBV(-23522, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14520, 16), 8), UFXP(BV(62135, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31873, 16), 8), UFXP(BV(5110, 16), 8)), UFXP(BV(36983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46430, 16), 8), UFXP(BV(39743, 16), 8)), UFXP(BV(6687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18288, 16), 8), UFXP(BV(32320, 16), 8)), UFXP(BV(51504, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3127, 16), 8), SFXP(SBV(-20507, 16), 8)), SFXP(SBV(17380, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17204, 16), 8), UFXP(BV(64557, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44501, 16), 8), UFXP(BV(6425, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27656, 16), 8), SFXP(SBV(12906, 16), 8)), SFXP(SBV(14750, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19992, 16), 8), SFXP(SBV(23847, 16), 8)), SFXP(SBV(3855, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14211, 16), 8), SFXP(SBV(24570, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23249, 16), 8), SFXP(SBV(16752, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25810, 16), 8), SFXP(SBV(16621, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34908, 16), 8), UFXP(BV(36042, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15190, 16), 8), UFXP(BV(865, 16), 8)), UFXP(BV(51325, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16732, 16), 8), SFXP(SBV(-22958, 16), 8)), SFXP(SBV(-6226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49567, 16), 8), UFXP(BV(21467, 16), 8)), UFXP(BV(28100, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9236, 16), 8), SFXP(SBV(13636, 16), 8)), SFXP(SBV(-4400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36959, 16), 8), UFXP(BV(29768, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21958, 16), 8), SFXP(SBV(4448, 16), 8)), SFXP(SBV(26406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28332, 16), 8), UFXP(BV(31586, 16), 8)), UFXP(BV(22274, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1777, 16), 8), UFXP(BV(48915, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-987, 16), 8), SFXP(SBV(-24635, 16), 8)), SFXP(SBV(23648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13511, 16), 8), SFXP(SBV(16076, 16), 8)), SFXP(SBV(2565, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29158, 16), 8), UFXP(BV(9136, 16), 8)), UFXP(BV(38294, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8308, 16), 8), SFXP(SBV(26500, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14702, 16), 8), UFXP(BV(5834, 16), 8)), UFXP(BV(8868, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25621, 16), 8), UFXP(BV(4116, 16), 8)), UFXP(BV(21505, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11259, 16), 8), SFXP(SBV(-14368, 16), 8)), SFXP(SBV(3109, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30843, 16), 8), UFXP(BV(50988, 16), 8)), UFXP(BV(16295, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7530, 16), 8), UFXP(BV(21285, 16), 8)), UFXP(BV(36255, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24605, 16), 8), UFXP(BV(53943, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24481, 16), 8), SFXP(SBV(28520, 16), 8)), SFXP(SBV(-25176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21197, 16), 8), SFXP(SBV(4552, 16), 8)), SFXP(SBV(-16645, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41855, 16), 8), UFXP(BV(50302, 16), 8)), UFXP(BV(26621, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53939, 16), 8), UFXP(BV(63037, 16), 8)), UFXP(BV(56438, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5934, 16), 8), SFXP(SBV(20660, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59046, 16), 8), UFXP(BV(39359, 16), 8)), UFXP(BV(32869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3295, 16), 8), SFXP(SBV(9788, 16), 8)), SFXP(SBV(-13083, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54817, 16), 8), UFXP(BV(37531, 16), 8)), UFXP(BV(17286, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18304, 16), 8), SFXP(SBV(22528, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5998, 16), 8), SFXP(SBV(-19001, 16), 8)), SFXP(SBV(13003, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15705, 16), 8), SFXP(SBV(-16317, 16), 8)), SFXP(SBV(32022, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(7555, 16), 8), UFXP(BV(9722, 16), 8)), UFXP(BV(24768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62403, 16), 8), UFXP(BV(25009, 16), 8)), UFXP(BV(37394, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36969, 16), 8), UFXP(BV(53588, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26725, 16), 8), SFXP(SBV(-13045, 16), 8)), SFXP(SBV(-25766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36444, 16), 8), UFXP(BV(62876, 16), 8)), UFXP(BV(33784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7454, 16), 8), UFXP(BV(49778, 16), 8)), UFXP(BV(57232, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58665, 16), 8), UFXP(BV(15455, 16), 8)), UFXP(BV(43210, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6104, 16), 8), SFXP(SBV(-7247, 16), 8)), SFXP(SBV(-1143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65151, 16), 8), UFXP(BV(6955, 16), 8)), UFXP(BV(58196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25275, 16), 8), UFXP(BV(31844, 16), 8)), UFXP(BV(63782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28225, 16), 8), UFXP(BV(25089, 16), 8)), UFXP(BV(3136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25149, 16), 8), UFXP(BV(55763, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54171, 16), 8), UFXP(BV(39825, 16), 8)), UFXP(BV(28460, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16307, 16), 8), SFXP(SBV(22570, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15888, 16), 8), SFXP(SBV(-20557, 16), 8)), SFXP(SBV(-29091, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23612, 16), 8), SFXP(SBV(21745, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4048, 16), 8), SFXP(SBV(-6913, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33329, 16), 8), UFXP(BV(40305, 16), 8)), UFXP(BV(8098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5623, 16), 8), SFXP(SBV(-26499, 16), 8)), SFXP(SBV(7777, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34153, 16), 8), UFXP(BV(36662, 16), 8)), UFXP(BV(63027, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33126, 16), 8), UFXP(BV(35641, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40672, 16), 8), UFXP(BV(37390, 16), 8)), UFXP(BV(3282, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24183, 16), 8), SFXP(SBV(-12492, 16), 8)), SFXP(SBV(406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24605, 16), 8), SFXP(SBV(26853, 16), 8)), SFXP(SBV(-14078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22788, 16), 8), SFXP(SBV(-23893, 16), 8)), SFXP(SBV(-29699, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64892, 16), 8), UFXP(BV(61365, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22278, 16), 8), SFXP(SBV(-17084, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20834, 16), 8), SFXP(SBV(12918, 16), 8)), SFXP(SBV(7916, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8749, 16), 8), SFXP(SBV(28265, 16), 8)), SFXP(SBV(-19516, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12964, 16), 8), SFXP(SBV(-15187, 16), 8)), SFXP(SBV(-17353, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20938, 16), 8), SFXP(SBV(29260, 16), 8)), SFXP(SBV(8322, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9608, 16), 8), SFXP(SBV(24641, 16), 8)), SFXP(SBV(-15033, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6885, 16), 8), SFXP(SBV(-15481, 16), 8)), SFXP(SBV(22366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29592, 16), 8), SFXP(SBV(-5404, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12960, 16), 8), UFXP(BV(37927, 16), 8)), UFXP(BV(50887, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2340, 16), 8), UFXP(BV(228, 16), 8)), UFXP(BV(2112, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24220, 16), 8), SFXP(SBV(25245, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13686, 16), 8), SFXP(SBV(-16248, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28565, 16), 8), SFXP(SBV(-19507, 16), 8)), SFXP(SBV(9058, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-839, 16), 8), SFXP(SBV(-21105, 16), 8)), SFXP(SBV(3633, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53368, 16), 8), UFXP(BV(36264, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16508, 16), 8), SFXP(SBV(-24247, 16), 8)), SFXP(SBV(24781, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13351, 16), 8), SFXP(SBV(-37, 16), 8)), SFXP(SBV(-1930, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19617, 16), 8), SFXP(SBV(29977, 16), 8)), SFXP(SBV(10360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42164, 16), 8), UFXP(BV(59798, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55489, 16), 8), UFXP(BV(16971, 16), 8)), UFXP(BV(6924, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5088, 16), 8), UFXP(BV(20417, 16), 8)), UFXP(BV(50207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16911, 16), 8), SFXP(SBV(-17259, 16), 8)), SFXP(SBV(-348, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20125, 16), 8), UFXP(BV(58151, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26113, 16), 8), UFXP(BV(27501, 16), 8)), UFXP(BV(64148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12559, 16), 8), UFXP(BV(28415, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18921, 16), 8), UFXP(BV(31167, 16), 8)), UFXP(BV(50088, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9001, 16), 8), SFXP(SBV(19462, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5447, 16), 8), SFXP(SBV(28183, 16), 8)), SFXP(SBV(-31906, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1875, 16), 8), SFXP(SBV(-18853, 16), 8)), SFXP(SBV(-20728, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58716, 16), 8), UFXP(BV(2078, 16), 8)), UFXP(BV(56638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39667, 16), 8), UFXP(BV(44623, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57404, 16), 8), UFXP(BV(395, 16), 8)), UFXP(BV(23036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9707, 16), 8), UFXP(BV(44668, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31455, 16), 8), UFXP(BV(60741, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6874, 16), 8), SFXP(SBV(-30648, 16), 8)), SFXP(SBV(28014, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20732, 16), 8), UFXP(BV(45164, 16), 8)), UFXP(BV(360, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(4307, 16), 8), SFXP(SBV(-13241, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1963, 16), 8), SFXP(SBV(442, 16), 8)), SFXP(SBV(-1521, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6455, 16), 8), UFXP(BV(52671, 16), 8)), UFXP(BV(19320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3735, 16), 8), UFXP(BV(42211, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28821, 16), 8), SFXP(SBV(15974, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30736, 16), 8), SFXP(SBV(1214, 16), 8)), SFXP(SBV(14683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4831, 16), 8), SFXP(SBV(-16860, 16), 8)), SFXP(SBV(12029, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16768, 16), 8), SFXP(SBV(-13503, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4718, 16), 8), SFXP(SBV(19603, 16), 8)), SFXP(SBV(-14885, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31471, 16), 8), SFXP(SBV(26629, 16), 8)), SFXP(SBV(-3201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10922, 16), 8), SFXP(SBV(-18903, 16), 8)), SFXP(SBV(29825, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6662, 16), 8), SFXP(SBV(27556, 16), 8)), SFXP(SBV(20894, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22926, 16), 8), UFXP(BV(7057, 16), 8)), UFXP(BV(15869, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17919, 16), 8), UFXP(BV(4274, 16), 8)), UFXP(BV(13645, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11885, 16), 8), UFXP(BV(52182, 16), 8)), UFXP(BV(63295, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47105, 16), 8), UFXP(BV(46923, 16), 8)), UFXP(BV(48799, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40189, 16), 8), UFXP(BV(13845, 16), 8)), UFXP(BV(54034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28333, 16), 8), SFXP(SBV(20509, 16), 8)), SFXP(SBV(7824, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50354, 16), 8), UFXP(BV(62298, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57930, 16), 8), UFXP(BV(42297, 16), 8)), UFXP(BV(34691, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9905, 16), 8), UFXP(BV(35945, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7415, 16), 8), SFXP(SBV(-18235, 16), 8)), SFXP(SBV(25650, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24724, 16), 8), SFXP(SBV(1739, 16), 8)), SFXP(SBV(-28658, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31498, 16), 8), UFXP(BV(54545, 16), 8)), UFXP(BV(42489, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23274, 16), 8), SFXP(SBV(7686, 16), 8)), SFXP(SBV(-22130, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29883, 16), 8), SFXP(SBV(12911, 16), 8)), SFXP(SBV(-221, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20991, 16), 8), SFXP(SBV(-22150, 16), 8)), SFXP(SBV(1159, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(20576, 16), 8), UFXP(BV(54453, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2545, 16), 8), UFXP(BV(64776, 16), 8)), UFXP(BV(1785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19257, 16), 8), SFXP(SBV(7791, 16), 8)), SFXP(SBV(-11466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62124, 16), 8), UFXP(BV(15081, 16), 8)), UFXP(BV(11669, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29808, 16), 8), SFXP(SBV(-28477, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9424, 16), 8), SFXP(SBV(-11146, 16), 8)), SFXP(SBV(1722, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38745, 16), 8), UFXP(BV(8603, 16), 8)), UFXP(BV(30142, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31952, 16), 8), SFXP(SBV(-31333, 16), 8)), SFXP(SBV(619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18750, 16), 8), SFXP(SBV(11077, 16), 8)), SFXP(SBV(29827, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(26679, 16), 8), SFXP(SBV(2815, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2529, 16), 8), SFXP(SBV(28444, 16), 8)), SFXP(SBV(25915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19573, 16), 8), UFXP(BV(56907, 16), 8)), UFXP(BV(10944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17600, 16), 8), SFXP(SBV(-30409, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-89, 16), 8), SFXP(SBV(16776, 16), 8)), SFXP(SBV(-5833, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22626, 16), 8), SFXP(SBV(-11750, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5848, 16), 8), UFXP(BV(12531, 16), 8)), UFXP(BV(18379, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1049, 16), 8), UFXP(BV(783, 16), 8)), UFXP(BV(1832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(39161, 16), 8), UFXP(BV(22489, 16), 8)), UFXP(BV(32330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56345, 16), 8), UFXP(BV(45940, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1137, 16), 8), UFXP(BV(48624, 16), 8)), UFXP(BV(49761, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9346, 16), 8), UFXP(BV(42945, 16), 8)), UFXP(BV(60501, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17779, 16), 8), SFXP(SBV(-17393, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23191, 16), 8), SFXP(SBV(-24718, 16), 8)), SFXP(SBV(-10976, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16941, 16), 8), SFXP(SBV(-4062, 16), 8)), SFXP(SBV(-21003, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18283, 16), 8), SFXP(SBV(31869, 16), 8)), SFXP(SBV(13586, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28839, 16), 8), SFXP(SBV(-13402, 16), 8)), SFXP(SBV(-15437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42371, 16), 8), UFXP(BV(30343, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22238, 16), 8), UFXP(BV(42631, 16), 8)), UFXP(BV(45143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28174, 16), 8), SFXP(SBV(-24716, 16), 8)), SFXP(SBV(-3458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17567, 16), 8), UFXP(BV(26055, 16), 8)), UFXP(BV(18451, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17999, 16), 8), SFXP(SBV(-19681, 16), 8)), SFXP(SBV(1682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(275, 16), 8), SFXP(SBV(14094, 16), 8)), SFXP(SBV(15140, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29829, 16), 8), UFXP(BV(43374, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62678, 16), 8), UFXP(BV(29692, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7507, 16), 8), SFXP(SBV(-14763, 16), 8)), SFXP(SBV(7256, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14035, 16), 8), SFXP(SBV(17963, 16), 8)), SFXP(SBV(31998, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22915, 16), 8), SFXP(SBV(17370, 16), 8)), SFXP(SBV(-5545, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52662, 16), 8), UFXP(BV(4922, 16), 8)), UFXP(BV(47740, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5287, 16), 8), SFXP(SBV(-16853, 16), 8)), SFXP(SBV(20373, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-370, 16), 8), SFXP(SBV(24651, 16), 8)), SFXP(SBV(-25021, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29934, 16), 8), SFXP(SBV(-28924, 16), 8)), SFXP(SBV(1010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2979, 16), 8), SFXP(SBV(-27538, 16), 8)), SFXP(SBV(24559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(7743, 16), 8), UFXP(BV(35628, 16), 8)), UFXP(BV(29031, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18718, 16), 8), UFXP(BV(30376, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13977, 16), 8), UFXP(BV(18319, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4275, 16), 8), SFXP(SBV(3457, 16), 8)), SFXP(SBV(7732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15905, 16), 8), UFXP(BV(35745, 16), 8)), UFXP(BV(58109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17529, 16), 8), SFXP(SBV(6932, 16), 8)), SFXP(SBV(24461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42144, 16), 8), UFXP(BV(11715, 16), 8)), UFXP(BV(53859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16216, 16), 8), SFXP(SBV(-26122, 16), 8)), SFXP(SBV(-23198, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1769, 16), 8), SFXP(SBV(-4773, 16), 8)), SFXP(SBV(-32553, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31960, 16), 8), UFXP(BV(19099, 16), 8)), UFXP(BV(51059, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50721, 16), 8), UFXP(BV(17188, 16), 8)), UFXP(BV(2373, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3922, 16), 8), SFXP(SBV(30056, 16), 8)), SFXP(SBV(26134, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30226, 16), 8), SFXP(SBV(-4239, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30427, 16), 8), UFXP(BV(45091, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16678, 16), 8), SFXP(SBV(6191, 16), 8)), SFXP(SBV(-10118, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43821, 16), 8), UFXP(BV(59508, 16), 8)), UFXP(BV(28248, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2119, 16), 8), SFXP(SBV(15545, 16), 8)), SFXP(SBV(17664, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44284, 16), 8), UFXP(BV(11719, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46628, 16), 8), UFXP(BV(62285, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43747, 16), 8), UFXP(BV(55283, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37572, 16), 8), UFXP(BV(9191, 16), 8)), UFXP(BV(28381, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23489, 16), 8), UFXP(BV(1537, 16), 8)), UFXP(BV(21952, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47942, 16), 8), UFXP(BV(37574, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21522, 16), 8), UFXP(BV(20502, 16), 8)), UFXP(BV(1020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6521, 16), 8), SFXP(SBV(11851, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14534, 16), 8), UFXP(BV(24080, 16), 8)), UFXP(BV(56384, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30014, 16), 8), SFXP(SBV(-16988, 16), 8)), SFXP(SBV(13026, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34054, 16), 8), UFXP(BV(58000, 16), 8)), UFXP(BV(41590, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8255, 16), 8), SFXP(SBV(4507, 16), 8)), SFXP(SBV(-3748, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31385, 16), 8), SFXP(SBV(-2600, 16), 8)), SFXP(SBV(-28785, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14287, 16), 8), UFXP(BV(2212, 16), 8)), UFXP(BV(12075, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23801, 16), 8), SFXP(SBV(16434, 16), 8)), SFXP(SBV(7367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7032, 16), 8), SFXP(SBV(31501, 16), 8)), SFXP(SBV(24469, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28448, 16), 8), UFXP(BV(14152, 16), 8)), UFXP(BV(42600, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1271, 16), 8), SFXP(SBV(-11890, 16), 8)), SFXP(SBV(-10619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13860, 16), 8), UFXP(BV(64213, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31198, 16), 8), SFXP(SBV(9407, 16), 8)), SFXP(SBV(21791, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39888, 16), 8), UFXP(BV(12663, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63361, 16), 8), UFXP(BV(46180, 16), 8)), UFXP(BV(17181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20550, 16), 8), SFXP(SBV(2529, 16), 8)), SFXP(SBV(-18021, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60241, 16), 8), UFXP(BV(40296, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18684, 16), 8), UFXP(BV(15545, 16), 8)), UFXP(BV(20430, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2686, 16), 8), UFXP(BV(60592, 16), 8)), UFXP(BV(45918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33499, 16), 8), UFXP(BV(34502, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5219, 16), 8), UFXP(BV(34224, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37710, 16), 8), UFXP(BV(42415, 16), 8)), UFXP(BV(14589, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16126, 16), 8), SFXP(SBV(-22573, 16), 8)), SFXP(SBV(-26837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4293, 16), 8), UFXP(BV(9769, 16), 8)), UFXP(BV(60060, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52049, 16), 8), UFXP(BV(21277, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25017, 16), 8), SFXP(SBV(-9683, 16), 8)), SFXP(SBV(-15334, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20717, 16), 8), SFXP(SBV(-5471, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9501, 16), 8), SFXP(SBV(-7675, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4342, 16), 8), SFXP(SBV(-15413, 16), 8)), SFXP(SBV(-19755, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58952, 16), 8), UFXP(BV(46544, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11092, 16), 8), SFXP(SBV(-12108, 16), 8)), SFXP(SBV(329, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13651, 16), 8), SFXP(SBV(-28918, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57555, 16), 8), UFXP(BV(6985, 16), 8)), UFXP(BV(64540, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(7114, 16), 8), UFXP(BV(25582, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26167, 16), 8), UFXP(BV(43592, 16), 8)), UFXP(BV(4223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50174, 16), 8), UFXP(BV(62728, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24088, 16), 8), SFXP(SBV(28787, 16), 8)), SFXP(SBV(-4699, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53940, 16), 8), UFXP(BV(51932, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22500, 16), 8), SFXP(SBV(-23066, 16), 8)), SFXP(SBV(4331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24003, 16), 8), SFXP(SBV(25773, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48902, 16), 8), UFXP(BV(36740, 16), 8)), UFXP(BV(12162, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2784, 16), 8), SFXP(SBV(-27765, 16), 8)), SFXP(SBV(30549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4252, 16), 8), SFXP(SBV(-17821, 16), 8)), SFXP(SBV(-22073, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37849, 16), 8), UFXP(BV(30664, 16), 8)), UFXP(BV(7185, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36790, 16), 8), UFXP(BV(28920, 16), 8)), UFXP(BV(27353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26431, 16), 8), UFXP(BV(58899, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18650, 16), 8), SFXP(SBV(18004, 16), 8)), SFXP(SBV(646, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10680, 16), 8), SFXP(SBV(-7865, 16), 8)), SFXP(SBV(-2815, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9041, 16), 8), UFXP(BV(44087, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9892, 16), 8), SFXP(SBV(-26218, 16), 8)), SFXP(SBV(29426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53400, 16), 8), UFXP(BV(57149, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10546, 16), 8), SFXP(SBV(12897, 16), 8)), SFXP(SBV(23443, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10673, 16), 8), UFXP(BV(54734, 16), 8)), UFXP(BV(65407, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26445, 16), 8), SFXP(SBV(24772, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37857, 16), 8), UFXP(BV(19373, 16), 8)), UFXP(BV(18484, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9599, 16), 8), SFXP(SBV(21656, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62260, 16), 8), UFXP(BV(9798, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28413, 16), 8), SFXP(SBV(17466, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21034, 16), 8), SFXP(SBV(-8636, 16), 8)), SFXP(SBV(-29670, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46321, 16), 8), UFXP(BV(30458, 16), 8)), UFXP(BV(15863, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33019, 16), 8), UFXP(BV(27057, 16), 8)), UFXP(BV(5962, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11691, 16), 8), UFXP(BV(14816, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6231, 16), 8), UFXP(BV(26521, 16), 8)), UFXP(BV(45246, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45606, 16), 8), UFXP(BV(48618, 16), 8)), UFXP(BV(28688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2658, 16), 8), SFXP(SBV(16117, 16), 8)), SFXP(SBV(-29269, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27870, 16), 8), SFXP(SBV(-13192, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15963, 16), 8), UFXP(BV(995, 16), 8)), UFXP(BV(14968, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29478, 16), 8), UFXP(BV(57852, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5773, 16), 8), SFXP(SBV(5271, 16), 8)), SFXP(SBV(12206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(9388, 16), 8), SFXP(SBV(-24853, 16), 8)), SFXP(SBV(6097, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37433, 16), 8), UFXP(BV(40345, 16), 8)), UFXP(BV(1113, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18695, 16), 8), SFXP(SBV(9299, 16), 8)), SFXP(SBV(-9396, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21193, 16), 8), SFXP(SBV(7067, 16), 8)), SFXP(SBV(28260, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29544, 16), 8), UFXP(BV(2342, 16), 8)), UFXP(BV(31886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17465, 16), 8), SFXP(SBV(-3762, 16), 8)), SFXP(SBV(13703, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64812, 16), 8), UFXP(BV(49217, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6021, 16), 8), UFXP(BV(53088, 16), 8)), UFXP(BV(59109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17312, 16), 8), SFXP(SBV(19141, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53443, 16), 8), UFXP(BV(17132, 16), 8)), UFXP(BV(36311, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57039, 16), 8), UFXP(BV(61210, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1209, 16), 8), UFXP(BV(17252, 16), 8)), UFXP(BV(18461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35097, 16), 8), UFXP(BV(33740, 16), 8)), UFXP(BV(38155, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-3949, 16), 8), SFXP(SBV(6880, 16), 8)), SFXP(SBV(24943, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6844, 16), 8), SFXP(SBV(-17793, 16), 8)), SFXP(SBV(16933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6827, 16), 8), SFXP(SBV(-12232, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17702, 16), 8), UFXP(BV(15185, 16), 8)), UFXP(BV(1443, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7293, 16), 8), UFXP(BV(45933, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12193, 16), 8), SFXP(SBV(-30752, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31063, 16), 8), SFXP(SBV(24187, 16), 8)), SFXP(SBV(-10286, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16251, 16), 8), UFXP(BV(29962, 16), 8)), UFXP(BV(46213, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13561, 16), 8), SFXP(SBV(-2796, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13989, 16), 8), UFXP(BV(64849, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9583, 16), 8), UFXP(BV(1125, 16), 8)), UFXP(BV(8458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29785, 16), 8), UFXP(BV(61085, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36166, 16), 8), UFXP(BV(49321, 16), 8)), UFXP(BV(20932, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(681, 16), 8), UFXP(BV(40519, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4980, 16), 8), SFXP(SBV(3588, 16), 8)), SFXP(SBV(-8568, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33057, 16), 8), UFXP(BV(19787, 16), 8)), UFXP(BV(13270, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30766, 16), 8), UFXP(BV(65189, 16), 8)), UFXP(BV(30419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8398, 16), 8), UFXP(BV(26985, 16), 8)), UFXP(BV(35383, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2920, 16), 8), UFXP(BV(10506, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33991, 16), 8), UFXP(BV(38528, 16), 8)), UFXP(BV(3837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15739, 16), 8), UFXP(BV(33981, 16), 8)), UFXP(BV(49720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15836, 16), 8), UFXP(BV(32694, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8569, 16), 8), UFXP(BV(35513, 16), 8)), UFXP(BV(38592, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24266, 16), 8), SFXP(SBV(-7670, 16), 8)), SFXP(SBV(31936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41024, 16), 8), UFXP(BV(34157, 16), 8)), UFXP(BV(9645, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8961, 16), 8), SFXP(SBV(4070, 16), 8)), SFXP(SBV(4891, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21733, 16), 8), SFXP(SBV(-4561, 16), 8)), SFXP(SBV(-26294, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14707, 16), 8), SFXP(SBV(-9170, 16), 8)), SFXP(SBV(5537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62713, 16), 8), UFXP(BV(51798, 16), 8)), UFXP(BV(10915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49599, 16), 8), UFXP(BV(53509, 16), 8)), UFXP(BV(61626, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37131, 16), 8), UFXP(BV(5807, 16), 8)), UFXP(BV(42938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40780, 16), 8), UFXP(BV(3562, 16), 8)), UFXP(BV(37218, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14619, 16), 8), UFXP(BV(22352, 16), 8)), UFXP(BV(36971, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22438, 16), 8), SFXP(SBV(-16639, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1269, 16), 8), SFXP(SBV(-13898, 16), 8)), SFXP(SBV(15167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26282, 16), 8), SFXP(SBV(-19837, 16), 8)), SFXP(SBV(-4932, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16021, 16), 8), UFXP(BV(29703, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29472, 16), 8), SFXP(SBV(-31258, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-4108, 16), 8), SFXP(SBV(6157, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25398, 16), 8), SFXP(SBV(-31699, 16), 8)), SFXP(SBV(6301, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-4554, 16), 8), SFXP(SBV(-4036, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22790, 16), 8), SFXP(SBV(12004, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42209, 16), 8), UFXP(BV(93, 16), 8)), UFXP(BV(15333, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9585, 16), 8), UFXP(BV(45440, 16), 8)), UFXP(BV(62937, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30764, 16), 8), UFXP(BV(59885, 16), 8)), UFXP(BV(36415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10589, 16), 8), SFXP(SBV(29562, 16), 8)), SFXP(SBV(-25385, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15754, 16), 8), SFXP(SBV(-28080, 16), 8)), SFXP(SBV(-12326, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29792, 16), 8), UFXP(BV(25936, 16), 8)), UFXP(BV(3856, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52660, 16), 8), UFXP(BV(1214, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8617, 16), 8), UFXP(BV(24167, 16), 8)), UFXP(BV(32784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55743, 16), 8), UFXP(BV(47963, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4778, 16), 8), SFXP(SBV(-15154, 16), 8)), SFXP(SBV(-10376, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36894, 16), 8), UFXP(BV(14085, 16), 8)), UFXP(BV(22809, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9901, 16), 8), SFXP(SBV(-11139, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51296, 16), 8), UFXP(BV(44283, 16), 8)), UFXP(BV(7013, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20628, 16), 8), UFXP(BV(49298, 16), 8)), UFXP(BV(40181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24071, 16), 8), UFXP(BV(17970, 16), 8)), UFXP(BV(42041, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9384, 16), 8), UFXP(BV(28974, 16), 8)), UFXP(BV(38358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28115, 16), 8), SFXP(SBV(29149, 16), 8)), SFXP(SBV(1034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6100, 16), 8), SFXP(SBV(5507, 16), 8)), SFXP(SBV(-11607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3847, 16), 8), SFXP(SBV(-29787, 16), 8)), SFXP(SBV(-31902, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21231, 16), 8), SFXP(SBV(-20969, 16), 8)), SFXP(SBV(262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28223, 16), 8), SFXP(SBV(-29227, 16), 8)), SFXP(SBV(1004, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29868, 16), 8), SFXP(SBV(30529, 16), 8)), SFXP(SBV(-22932, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19548, 16), 8), SFXP(SBV(4510, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18094, 16), 8), SFXP(SBV(-28134, 16), 8)), SFXP(SBV(22423, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20712, 16), 8), UFXP(BV(24508, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2377, 16), 8), UFXP(BV(40770, 16), 8)), UFXP(BV(27143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4886, 16), 8), UFXP(BV(39335, 16), 8)), UFXP(BV(44221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58547, 16), 8), UFXP(BV(41973, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2283, 16), 8), UFXP(BV(41841, 16), 8)), UFXP(BV(25978, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34031, 16), 8), UFXP(BV(9429, 16), 8)), UFXP(BV(8247, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20551, 16), 8), SFXP(SBV(20592, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52852, 16), 8), UFXP(BV(40312, 16), 8)), UFXP(BV(12540, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29202, 16), 8), UFXP(BV(55826, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43596, 16), 8), UFXP(BV(45186, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31236, 16), 8), SFXP(SBV(-31234, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22128, 16), 8), UFXP(BV(48162, 16), 8)), UFXP(BV(34235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16119, 16), 8), UFXP(BV(30599, 16), 8)), UFXP(BV(46718, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45651, 16), 8), UFXP(BV(62085, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17060, 16), 8), UFXP(BV(63910, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28774, 16), 8), SFXP(SBV(26835, 16), 8)), SFXP(SBV(-9927, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18827, 16), 8), SFXP(SBV(20999, 16), 8)), SFXP(SBV(-25710, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4921, 16), 8), SFXP(SBV(-8469, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57042, 16), 8), UFXP(BV(11146, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21911, 16), 8), UFXP(BV(27384, 16), 8)), UFXP(BV(60063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19508, 16), 8), SFXP(SBV(-10989, 16), 8)), SFXP(SBV(-30497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17737, 16), 8), SFXP(SBV(20850, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41314, 16), 8), UFXP(BV(13275, 16), 8)), UFXP(BV(54589, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45620, 16), 8), UFXP(BV(44940, 16), 8)), UFXP(BV(25024, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51168, 16), 8), UFXP(BV(3086, 16), 8)), UFXP(BV(48082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55867, 16), 8), UFXP(BV(18242, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5667, 16), 8), SFXP(SBV(-9591, 16), 8)), SFXP(SBV(15705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25254, 16), 8), UFXP(BV(46594, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(356, 16), 8), SFXP(SBV(-30521, 16), 8)), SFXP(SBV(-30165, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11320, 16), 8), UFXP(BV(29502, 16), 8)), UFXP(BV(59358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26165, 16), 8), SFXP(SBV(22441, 16), 8)), SFXP(SBV(-16930, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3432, 16), 8), SFXP(SBV(-23210, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13168, 16), 8), SFXP(SBV(6116, 16), 8)), SFXP(SBV(-19284, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20833, 16), 8), SFXP(SBV(-9413, 16), 8)), SFXP(SBV(-30246, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21767, 16), 8), SFXP(SBV(-4311, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30683, 16), 8), SFXP(SBV(6901, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7962, 16), 8), SFXP(SBV(-11509, 16), 8)), SFXP(SBV(-3547, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14567, 16), 8), SFXP(SBV(107, 16), 8)), SFXP(SBV(-14674, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9561, 16), 8), SFXP(SBV(-21689, 16), 8)), SFXP(SBV(-31250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22490, 16), 8), UFXP(BV(47938, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14280, 16), 8), SFXP(SBV(4942, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20736, 16), 8), SFXP(SBV(-1386, 16), 8)), SFXP(SBV(-19350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20876, 16), 8), SFXP(SBV(9960, 16), 8)), SFXP(SBV(25774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55469, 16), 8), UFXP(BV(32797, 16), 8)), UFXP(BV(22730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7301, 16), 8), SFXP(SBV(24886, 16), 8)), SFXP(SBV(-17585, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48284, 16), 8), UFXP(BV(1443, 16), 8)), UFXP(BV(46841, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-831, 16), 8), SFXP(SBV(-18951, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31465, 16), 8), UFXP(BV(63645, 16), 8)), UFXP(BV(23832, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2604, 16), 8), SFXP(SBV(-24116, 16), 8)), SFXP(SBV(21512, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-13239, 16), 8), SFXP(SBV(25343, 16), 8)), SFXP(SBV(110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(43576, 16), 8), UFXP(BV(53239, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62350, 16), 8), UFXP(BV(53708, 16), 8)), UFXP(BV(50522, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10769, 16), 8), SFXP(SBV(-16796, 16), 8)), SFXP(SBV(-27565, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21637, 16), 8), UFXP(BV(62292, 16), 8)), UFXP(BV(22010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13149, 16), 8), SFXP(SBV(288, 16), 8)), SFXP(SBV(-12861, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38946, 16), 8), UFXP(BV(48625, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19652, 16), 8), SFXP(SBV(-2597, 16), 8)), SFXP(SBV(-17055, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49290, 16), 8), UFXP(BV(5147, 16), 8)), UFXP(BV(44143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13101, 16), 8), UFXP(BV(43228, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25989, 16), 8), SFXP(SBV(21755, 16), 8)), SFXP(SBV(4234, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17136, 16), 8), SFXP(SBV(3046, 16), 8)), SFXP(SBV(20182, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10726, 16), 8), SFXP(SBV(-96, 16), 8)), SFXP(SBV(10630, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9727, 16), 8), SFXP(SBV(17492, 16), 8)), SFXP(SBV(9268, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22460, 16), 8), SFXP(SBV(18087, 16), 8)), SFXP(SBV(13988, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51894, 16), 8), UFXP(BV(35012, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15187, 16), 8), SFXP(SBV(-7993, 16), 8)), SFXP(SBV(15426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8820, 16), 8), UFXP(BV(48535, 16), 8)), UFXP(BV(57355, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21550, 16), 8), SFXP(SBV(1727, 16), 8)), SFXP(SBV(19823, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28317, 16), 8), SFXP(SBV(1454, 16), 8)), SFXP(SBV(29771, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14776, 16), 8), SFXP(SBV(31559, 16), 8)), SFXP(SBV(-13461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25768, 16), 8), UFXP(BV(10152, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25841, 16), 8), SFXP(SBV(-19485, 16), 8)), SFXP(SBV(6356, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57097, 16), 8), UFXP(BV(22038, 16), 8)), UFXP(BV(13599, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2080, 16), 8), SFXP(SBV(-28757, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-18025, 16), 8), SFXP(SBV(12923, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19980, 16), 8), UFXP(BV(16588, 16), 8)), UFXP(BV(49458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45227, 16), 8), UFXP(BV(6056, 16), 8)), UFXP(BV(39171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14001, 16), 8), SFXP(SBV(-3408, 16), 8)), SFXP(SBV(-10593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16808, 16), 8), UFXP(BV(18420, 16), 8)), UFXP(BV(35228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30041, 16), 8), SFXP(SBV(1024, 16), 8)), SFXP(SBV(-29017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3574, 16), 8), SFXP(SBV(14770, 16), 8)), SFXP(SBV(18344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8545, 16), 8), SFXP(SBV(-7844, 16), 8)), SFXP(SBV(-701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51920, 16), 8), UFXP(BV(63856, 16), 8)), UFXP(BV(50240, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35111, 16), 8), UFXP(BV(8993, 16), 8)), UFXP(BV(26118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28624, 16), 8), SFXP(SBV(1366, 16), 8)), SFXP(SBV(-21664, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21398, 16), 8), SFXP(SBV(-699, 16), 8)), SFXP(SBV(22097, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29700, 16), 8), UFXP(BV(27209, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18368, 16), 8), UFXP(BV(32343, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43494, 16), 8), UFXP(BV(22657, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2767, 16), 8), SFXP(SBV(24896, 16), 8)), SFXP(SBV(22129, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9432, 16), 8), UFXP(BV(3502, 16), 8)), UFXP(BV(12934, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16228, 16), 8), SFXP(SBV(4347, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18411, 16), 8), SFXP(SBV(-27947, 16), 8)), SFXP(SBV(19178, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46789, 16), 8), UFXP(BV(22404, 16), 8)), UFXP(BV(24385, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50843, 16), 8), UFXP(BV(60831, 16), 8)), UFXP(BV(55548, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11196, 16), 8), UFXP(BV(57427, 16), 8)), UFXP(BV(19305, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27737, 16), 8), SFXP(SBV(-17062, 16), 8)), SFXP(SBV(-10675, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48236, 16), 8), UFXP(BV(31555, 16), 8)), UFXP(BV(47413, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3359, 16), 8), UFXP(BV(56125, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41511, 16), 8), UFXP(BV(23481, 16), 8)), UFXP(BV(18030, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11556, 16), 8), SFXP(SBV(2192, 16), 8)), SFXP(SBV(-9364, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1537, 16), 8), SFXP(SBV(-17738, 16), 8)), SFXP(SBV(-16201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1323, 16), 8), UFXP(BV(44616, 16), 8)), UFXP(BV(45939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7670, 16), 8), UFXP(BV(2133, 16), 8)), UFXP(BV(63907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47967, 16), 8), UFXP(BV(2255, 16), 8)), UFXP(BV(45712, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2494, 16), 8), SFXP(SBV(-19344, 16), 8)), SFXP(SBV(16850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25189, 16), 8), SFXP(SBV(-3990, 16), 8)), SFXP(SBV(29179, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13772, 16), 8), SFXP(SBV(32354, 16), 8)), SFXP(SBV(-18582, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12761, 16), 8), SFXP(SBV(-30519, 16), 8)), SFXP(SBV(-22256, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56987, 16), 8), UFXP(BV(19609, 16), 8)), UFXP(BV(39695, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23766, 16), 8), SFXP(SBV(4063, 16), 8)), SFXP(SBV(-19703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23936, 16), 8), SFXP(SBV(21444, 16), 8)), SFXP(SBV(-2492, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1399, 16), 8), SFXP(SBV(11709, 16), 8)), SFXP(SBV(-13108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16005, 16), 8), UFXP(BV(15279, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8496, 16), 8), UFXP(BV(17680, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5480, 16), 8), SFXP(SBV(11879, 16), 8)), SFXP(SBV(17359, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28266, 16), 8), UFXP(BV(61796, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26988, 16), 8), UFXP(BV(33520, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37000, 16), 8), UFXP(BV(60156, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34199, 16), 8), UFXP(BV(28053, 16), 8)), UFXP(BV(62252, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16643, 16), 8), SFXP(SBV(-21044, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30447, 16), 8), SFXP(SBV(1989, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21881, 16), 8), SFXP(SBV(-9333, 16), 8)), SFXP(SBV(-31214, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6740, 16), 8), SFXP(SBV(-22410, 16), 8)), SFXP(SBV(29150, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18803, 16), 8), SFXP(SBV(-1629, 16), 8)), SFXP(SBV(-17174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64796, 16), 8), UFXP(BV(37708, 16), 8)), UFXP(BV(36968, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3960, 16), 8), SFXP(SBV(-20351, 16), 8)), SFXP(SBV(16391, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28685, 16), 8), SFXP(SBV(-23944, 16), 8)), SFXP(SBV(4741, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24363, 16), 8), SFXP(SBV(-27814, 16), 8)), SFXP(SBV(-3451, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47252, 16), 8), UFXP(BV(59917, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52210, 16), 8), UFXP(BV(6447, 16), 8)), UFXP(BV(45763, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8790, 16), 8), SFXP(SBV(-17074, 16), 8)), SFXP(SBV(25864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10397, 16), 8), UFXP(BV(61673, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15570, 16), 8), UFXP(BV(10132, 16), 8)), UFXP(BV(25702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11649, 16), 8), SFXP(SBV(-4420, 16), 8)), SFXP(SBV(16069, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63613, 16), 8), UFXP(BV(19931, 16), 8)), UFXP(BV(37420, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26512, 16), 8), UFXP(BV(48649, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29287, 16), 8), SFXP(SBV(-26925, 16), 8)), SFXP(SBV(-9324, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10384, 16), 8), UFXP(BV(16885, 16), 8)), UFXP(BV(59035, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29944, 16), 8), UFXP(BV(51693, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12628, 16), 8), UFXP(BV(42220, 16), 8)), UFXP(BV(51017, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38822, 16), 8), UFXP(BV(56125, 16), 8)), UFXP(BV(29411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17653, 16), 8), SFXP(SBV(14309, 16), 8)), SFXP(SBV(-3344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28765, 16), 8), SFXP(SBV(-19305, 16), 8)), SFXP(SBV(9460, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40205, 16), 8), UFXP(BV(49713, 16), 8)), UFXP(BV(24382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16826, 16), 8), SFXP(SBV(18636, 16), 8)), SFXP(SBV(30074, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53260, 16), 8), UFXP(BV(53964, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31723, 16), 8), SFXP(SBV(-8915, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4930, 16), 8), SFXP(SBV(-12962, 16), 8)), SFXP(SBV(-17892, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11385, 16), 8), SFXP(SBV(6224, 16), 8)), SFXP(SBV(5161, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2544, 16), 8), UFXP(BV(62032, 16), 8)), UFXP(BV(26619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20059, 16), 8), SFXP(SBV(-17259, 16), 8)), SFXP(SBV(-2800, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10302, 16), 8), SFXP(SBV(-21475, 16), 8)), SFXP(SBV(-11173, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4093, 16), 8), UFXP(BV(44570, 16), 8)), UFXP(BV(48663, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12138, 16), 8), SFXP(SBV(-23955, 16), 8)), SFXP(SBV(29443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2767, 16), 8), SFXP(SBV(32380, 16), 8)), SFXP(SBV(29613, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44405, 16), 8), UFXP(BV(49802, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27044, 16), 8), UFXP(BV(20305, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2856, 16), 8), UFXP(BV(48501, 16), 8)), UFXP(BV(51357, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8967, 16), 8), UFXP(BV(47879, 16), 8)), UFXP(BV(38674, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42335, 16), 8), UFXP(BV(21728, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34829, 16), 8), UFXP(BV(43537, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40211, 16), 8), UFXP(BV(33445, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32465, 16), 8), UFXP(BV(26419, 16), 8)), UFXP(BV(6046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47564, 16), 8), UFXP(BV(3307, 16), 8)), UFXP(BV(44257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(889, 16), 8), SFXP(SBV(13339, 16), 8)), SFXP(SBV(-12450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27401, 16), 8), SFXP(SBV(28350, 16), 8)), SFXP(SBV(-19790, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28329, 16), 8), SFXP(SBV(-30872, 16), 8)), SFXP(SBV(-8428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31128, 16), 8), SFXP(SBV(-19151, 16), 8)), SFXP(SBV(-15257, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1307, 16), 8), UFXP(BV(38383, 16), 8)), UFXP(BV(28460, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3318, 16), 8), UFXP(BV(3539, 16), 8)), UFXP(BV(6857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23191, 16), 8), SFXP(SBV(20989, 16), 8)), SFXP(SBV(-846, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17552, 16), 8), UFXP(BV(27979, 16), 8)), UFXP(BV(55109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8295, 16), 8), SFXP(SBV(31900, 16), 8)), SFXP(SBV(14942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4236, 16), 8), UFXP(BV(51776, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7692, 16), 8), SFXP(SBV(-16957, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6722, 16), 8), SFXP(SBV(8484, 16), 8)), SFXP(SBV(15206, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30008, 16), 8), UFXP(BV(11296, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1404, 16), 8), SFXP(SBV(-2249, 16), 8)), SFXP(SBV(3653, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25242, 16), 8), SFXP(SBV(-15073, 16), 8)), SFXP(SBV(-10169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12740, 16), 8), UFXP(BV(22182, 16), 8)), UFXP(BV(55326, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16987, 16), 8), SFXP(SBV(-23421, 16), 8)), SFXP(SBV(-25128, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37265, 16), 8), UFXP(BV(17513, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(553, 16), 8), UFXP(BV(31871, 16), 8)), UFXP(BV(3311, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(685, 16), 8), UFXP(BV(20918, 16), 8)), UFXP(BV(45303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1251, 16), 8), SFXP(SBV(-15303, 16), 8)), SFXP(SBV(9245, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23109, 16), 8), SFXP(SBV(-19583, 16), 8)), SFXP(SBV(-22844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26127, 16), 8), SFXP(SBV(19710, 16), 8)), SFXP(SBV(-6417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29786, 16), 8), UFXP(BV(63417, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63628, 16), 8), UFXP(BV(60438, 16), 8)), UFXP(BV(58530, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10304, 16), 8), SFXP(SBV(11519, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2333, 16), 8), SFXP(SBV(-6234, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27283, 16), 8), UFXP(BV(2794, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64800, 16), 8), UFXP(BV(29704, 16), 8)), UFXP(BV(35096, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2417, 16), 8), UFXP(BV(2545, 16), 8)), UFXP(BV(24028, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25878, 16), 8), SFXP(SBV(30446, 16), 8)), SFXP(SBV(-4568, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-4415, 16), 8), SFXP(SBV(14909, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16013, 16), 8), UFXP(BV(29179, 16), 8)), UFXP(BV(45192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-396, 16), 8), SFXP(SBV(-30207, 16), 8)), SFXP(SBV(29811, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23237, 16), 8), SFXP(SBV(-27008, 16), 8)), SFXP(SBV(15291, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15401, 16), 8), SFXP(SBV(30371, 16), 8)), SFXP(SBV(14970, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9068, 16), 8), UFXP(BV(17502, 16), 8)), UFXP(BV(26570, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4987, 16), 8), SFXP(SBV(-264, 16), 8)), SFXP(SBV(-4723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8255, 16), 8), SFXP(SBV(8415, 16), 8)), SFXP(SBV(-16670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25397, 16), 8), SFXP(SBV(31558, 16), 8)), SFXP(SBV(6161, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24740, 16), 8), SFXP(SBV(-1538, 16), 8)), SFXP(SBV(-26278, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2238, 16), 8), UFXP(BV(36953, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20774, 16), 8), SFXP(SBV(-4269, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24047, 16), 8), UFXP(BV(4706, 16), 8)), UFXP(BV(28753, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26961, 16), 8), SFXP(SBV(9685, 16), 8)), SFXP(SBV(17276, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17175, 16), 8), SFXP(SBV(19269, 16), 8)), SFXP(SBV(2094, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29764, 16), 8), SFXP(SBV(-13785, 16), 8)), SFXP(SBV(29857, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44597, 16), 8), UFXP(BV(20413, 16), 8)), UFXP(BV(24184, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(87, 16), 8), UFXP(BV(62630, 16), 8)), UFXP(BV(62717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(55891, 16), 8), UFXP(BV(9134, 16), 8)), UFXP(BV(28093, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27463, 16), 8), SFXP(SBV(23550, 16), 8)), SFXP(SBV(3913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17690, 16), 8), SFXP(SBV(-18722, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22158, 16), 8), UFXP(BV(35084, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26880, 16), 8), UFXP(BV(9027, 16), 8)), UFXP(BV(17853, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8976, 16), 8), UFXP(BV(38364, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7754, 16), 8), SFXP(SBV(-21649, 16), 8)), SFXP(SBV(29403, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32270, 16), 8), SFXP(SBV(2235, 16), 8)), SFXP(SBV(-30035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3062, 16), 8), SFXP(SBV(-13992, 16), 8)), SFXP(SBV(-17054, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1776, 16), 8), SFXP(SBV(-26608, 16), 8)), SFXP(SBV(-24832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18661, 16), 8), UFXP(BV(40216, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62946, 16), 8), UFXP(BV(65050, 16), 8)), UFXP(BV(3892, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14802, 16), 8), UFXP(BV(32149, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33855, 16), 8), UFXP(BV(56954, 16), 8)), UFXP(BV(60841, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55051, 16), 8), UFXP(BV(42727, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15461, 16), 8), SFXP(SBV(18597, 16), 8)), SFXP(SBV(3136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27265, 16), 8), UFXP(BV(4236, 16), 8)), UFXP(BV(23029, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44139, 16), 8), UFXP(BV(63180, 16), 8)), UFXP(BV(46495, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1185, 16), 8), UFXP(BV(62094, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5689, 16), 8), SFXP(SBV(-19080, 16), 8)), SFXP(SBV(-30792, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27887, 16), 8), SFXP(SBV(-19002, 16), 8)), SFXP(SBV(-8885, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25877, 16), 8), SFXP(SBV(-9724, 16), 8)), SFXP(SBV(-29935, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9634, 16), 8), SFXP(SBV(-28782, 16), 8)), SFXP(SBV(-19148, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15899, 16), 8), SFXP(SBV(8000, 16), 8)), SFXP(SBV(-7899, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19791, 16), 8), UFXP(BV(52476, 16), 8)), UFXP(BV(32851, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14509, 16), 8), SFXP(SBV(-24096, 16), 8)), SFXP(SBV(9587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12550, 16), 8), UFXP(BV(54962, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31040, 16), 8), UFXP(BV(58231, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9481, 16), 8), SFXP(SBV(-12639, 16), 8)), SFXP(SBV(-22120, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8669, 16), 8), SFXP(SBV(-24558, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16740, 16), 8), SFXP(SBV(-19306, 16), 8)), SFXP(SBV(2566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44683, 16), 8), UFXP(BV(13253, 16), 8)), UFXP(BV(57936, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3261, 16), 8), SFXP(SBV(15537, 16), 8)), SFXP(SBV(12276, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4398, 16), 8), SFXP(SBV(-21759, 16), 8)), SFXP(SBV(26157, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2402, 16), 8), UFXP(BV(7911, 16), 8)), UFXP(BV(10313, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15996, 16), 8), SFXP(SBV(-30412, 16), 8)), SFXP(SBV(-14416, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4744, 16), 8), UFXP(BV(23039, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12725, 16), 8), UFXP(BV(26702, 16), 8)), UFXP(BV(51559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56945, 16), 8), UFXP(BV(4233, 16), 8)), UFXP(BV(24090, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32131, 16), 8), SFXP(SBV(-20257, 16), 8)), SFXP(SBV(-11874, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13650, 16), 8), UFXP(BV(5142, 16), 8)), UFXP(BV(8508, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28148, 16), 8), SFXP(SBV(21605, 16), 8)), SFXP(SBV(-16241, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12256, 16), 8), SFXP(SBV(-18854, 16), 8)), SFXP(SBV(6598, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12108, 16), 8), SFXP(SBV(23207, 16), 8)), SFXP(SBV(-16493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18474, 16), 8), SFXP(SBV(-32589, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12324, 16), 8), SFXP(SBV(-4382, 16), 8)), SFXP(SBV(7942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44902, 16), 8), UFXP(BV(39848, 16), 8)), UFXP(BV(19214, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20806, 16), 8), SFXP(SBV(1312, 16), 8)), SFXP(SBV(-22118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15804, 16), 8), SFXP(SBV(20109, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27202, 16), 8), UFXP(BV(30486, 16), 8)), UFXP(BV(62252, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21733, 16), 8), UFXP(BV(1684, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6544, 16), 8), SFXP(SBV(-29848, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7022, 16), 8), SFXP(SBV(-32471, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48533, 16), 8), UFXP(BV(27185, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22060, 16), 8), UFXP(BV(5908, 16), 8)), UFXP(BV(27968, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36061, 16), 8), UFXP(BV(27025, 16), 8)), UFXP(BV(63086, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4596, 16), 8), SFXP(SBV(-26513, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34842, 16), 8), UFXP(BV(24148, 16), 8)), UFXP(BV(9781, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21830, 16), 8), SFXP(SBV(17124, 16), 8)), SFXP(SBV(4706, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21916, 16), 8), SFXP(SBV(8974, 16), 8)), SFXP(SBV(12942, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4987, 16), 8), SFXP(SBV(23475, 16), 8)), SFXP(SBV(18488, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21967, 16), 8), UFXP(BV(47112, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1285, 16), 8), UFXP(BV(60313, 16), 8)), UFXP(BV(6508, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23783, 16), 8), SFXP(SBV(-28749, 16), 8)), SFXP(SBV(4966, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50371, 16), 8), UFXP(BV(49199, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5817, 16), 8), UFXP(BV(15744, 16), 8)), UFXP(BV(21561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36451, 16), 8), UFXP(BV(20026, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61876, 16), 8), UFXP(BV(35571, 16), 8)), UFXP(BV(12406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28373, 16), 8), SFXP(SBV(26792, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59973, 16), 8), UFXP(BV(1255, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42372, 16), 8), UFXP(BV(35176, 16), 8)), UFXP(BV(55009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11059, 16), 8), UFXP(BV(2235, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18755, 16), 8), SFXP(SBV(-10845, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26735, 16), 8), UFXP(BV(41572, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5760, 16), 8), SFXP(SBV(5892, 16), 8)), SFXP(SBV(11652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29400, 16), 8), SFXP(SBV(-6574, 16), 8)), SFXP(SBV(-22826, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14161, 16), 8), SFXP(SBV(-27791, 16), 8)), SFXP(SBV(-13630, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7260, 16), 8), SFXP(SBV(-6603, 16), 8)), SFXP(SBV(-657, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28084, 16), 8), SFXP(SBV(18995, 16), 8)), SFXP(SBV(-18457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4559, 16), 8), UFXP(BV(19437, 16), 8)), UFXP(BV(23996, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32600, 16), 8), UFXP(BV(35140, 16), 8)), UFXP(BV(18411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19960, 16), 8), SFXP(SBV(9158, 16), 8)), SFXP(SBV(10802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8336, 16), 8), SFXP(SBV(21941, 16), 8)), SFXP(SBV(13605, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28388, 16), 8), SFXP(SBV(-24603, 16), 8)), SFXP(SBV(-3785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18514, 16), 8), SFXP(SBV(-16022, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1196, 16), 8), UFXP(BV(33970, 16), 8)), UFXP(BV(32762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2528, 16), 8), SFXP(SBV(-601, 16), 8)), SFXP(SBV(5935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45224, 16), 8), UFXP(BV(29941, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10841, 16), 8), UFXP(BV(21100, 16), 8)), UFXP(BV(31941, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37777, 16), 8), UFXP(BV(29633, 16), 8)), UFXP(BV(8144, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25434, 16), 8), SFXP(SBV(2571, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(20441, 16), 8), UFXP(BV(64648, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23777, 16), 8), SFXP(SBV(-15591, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23103, 16), 8), UFXP(BV(30763, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25229, 16), 8), SFXP(SBV(-16206, 16), 8)), SFXP(SBV(9023, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18477, 16), 8), SFXP(SBV(-19533, 16), 8)), SFXP(SBV(27526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21575, 16), 8), SFXP(SBV(-16924, 16), 8)), SFXP(SBV(-15482, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2435, 16), 8), SFXP(SBV(23905, 16), 8)), SFXP(SBV(26340, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30553, 16), 8), SFXP(SBV(-16045, 16), 8)), SFXP(SBV(14508, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50737, 16), 8), UFXP(BV(19141, 16), 8)), UFXP(BV(4342, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11292, 16), 8), SFXP(SBV(32459, 16), 8)), SFXP(SBV(21167, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28537, 16), 8), UFXP(BV(32911, 16), 8)), UFXP(BV(64197, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49247, 16), 8), UFXP(BV(36931, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30580, 16), 8), UFXP(BV(45171, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28606, 16), 8), SFXP(SBV(-10087, 16), 8)), SFXP(SBV(13032, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(7576, 16), 8), UFXP(BV(12186, 16), 8)), UFXP(BV(32949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19225, 16), 8), UFXP(BV(39402, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13434, 16), 8), UFXP(BV(18361, 16), 8)), UFXP(BV(60609, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13978, 16), 8), SFXP(SBV(3937, 16), 8)), SFXP(SBV(-17915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23568, 16), 8), UFXP(BV(38400, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2885, 16), 8), UFXP(BV(37714, 16), 8)), UFXP(BV(40599, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13870, 16), 8), SFXP(SBV(-19682, 16), 8)), SFXP(SBV(5812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21402, 16), 8), SFXP(SBV(-5386, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60556, 16), 8), UFXP(BV(18914, 16), 8)), UFXP(BV(13934, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18744, 16), 8), UFXP(BV(32021, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28180, 16), 8), SFXP(SBV(-7920, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26192, 16), 8), SFXP(SBV(28564, 16), 8)), SFXP(SBV(2372, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22101, 16), 8), SFXP(SBV(2925, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1193, 16), 8), SFXP(SBV(-19358, 16), 8)), SFXP(SBV(18165, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12030, 16), 8), UFXP(BV(45451, 16), 8)), UFXP(BV(57481, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8996, 16), 8), SFXP(SBV(-1745, 16), 8)), SFXP(SBV(10741, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23287, 16), 8), SFXP(SBV(-25158, 16), 8)), SFXP(SBV(1871, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25705, 16), 8), UFXP(BV(16084, 16), 8)), UFXP(BV(41789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4081, 16), 8), SFXP(SBV(18912, 16), 8)), SFXP(SBV(-26197, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23191, 16), 8), SFXP(SBV(9286, 16), 8)), SFXP(SBV(32477, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21693, 16), 8), UFXP(BV(43305, 16), 8)), UFXP(BV(65112, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27106, 16), 8), UFXP(BV(16740, 16), 8)), UFXP(BV(3007, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22164, 16), 8), UFXP(BV(30815, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(16763, 16), 8), SFXP(SBV(-29765, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37678, 16), 8), UFXP(BV(54987, 16), 8)), UFXP(BV(48227, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40009, 16), 8), UFXP(BV(57087, 16), 8)), UFXP(BV(48458, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23682, 16), 8), SFXP(SBV(20268, 16), 8)), SFXP(SBV(3414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65397, 16), 8), UFXP(BV(26707, 16), 8)), UFXP(BV(38690, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17327, 16), 8), SFXP(SBV(-29565, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28583, 16), 8), SFXP(SBV(12708, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21995, 16), 8), UFXP(BV(51583, 16), 8)), UFXP(BV(8042, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11419, 16), 8), SFXP(SBV(4939, 16), 8)), SFXP(SBV(16358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30620, 16), 8), SFXP(SBV(19805, 16), 8)), SFXP(SBV(10815, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26633, 16), 8), SFXP(SBV(17805, 16), 8)), SFXP(SBV(-21098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10126, 16), 8), SFXP(SBV(-9533, 16), 8)), SFXP(SBV(16142, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27269, 16), 8), SFXP(SBV(-1514, 16), 8)), SFXP(SBV(-28783, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33922, 16), 8), UFXP(BV(15986, 16), 8)), UFXP(BV(49908, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11855, 16), 8), SFXP(SBV(27175, 16), 8)), SFXP(SBV(-13253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48101, 16), 8), UFXP(BV(50860, 16), 8)), UFXP(BV(53595, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48653, 16), 8), UFXP(BV(2528, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54901, 16), 8), UFXP(BV(47183, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32327, 16), 8), UFXP(BV(53333, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30536, 16), 8), UFXP(BV(23754, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33490, 16), 8), UFXP(BV(21086, 16), 8)), UFXP(BV(12404, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25111, 16), 8), UFXP(BV(22805, 16), 8)), UFXP(BV(47916, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44963, 16), 8), UFXP(BV(47606, 16), 8)), UFXP(BV(38290, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18130, 16), 8), SFXP(SBV(5796, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17409, 16), 8), SFXP(SBV(11234, 16), 8)), SFXP(SBV(6175, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51944, 16), 8), UFXP(BV(31687, 16), 8)), UFXP(BV(20257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16000, 16), 8), SFXP(SBV(-3248, 16), 8)), SFXP(SBV(-12752, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4079, 16), 8), UFXP(BV(2592, 16), 8)), UFXP(BV(41299, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22779, 16), 8), SFXP(SBV(-9350, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17593, 16), 8), SFXP(SBV(-24752, 16), 8)), SFXP(SBV(-7159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22708, 16), 8), SFXP(SBV(686, 16), 8)), SFXP(SBV(-4685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9163, 16), 8), UFXP(BV(7147, 16), 8)), UFXP(BV(2016, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28072, 16), 8), SFXP(SBV(8805, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21899, 16), 8), SFXP(SBV(16539, 16), 8)), SFXP(SBV(-27098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23579, 16), 8), SFXP(SBV(-1453, 16), 8)), SFXP(SBV(22126, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29183, 16), 8), SFXP(SBV(-23815, 16), 8)), SFXP(SBV(-12538, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21854, 16), 8), UFXP(BV(3474, 16), 8)), UFXP(BV(18380, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5571, 16), 8), SFXP(SBV(1844, 16), 8)), SFXP(SBV(3727, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30441, 16), 8), UFXP(BV(1491, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3148, 16), 8), SFXP(SBV(28626, 16), 8)), SFXP(SBV(-25478, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19160, 16), 8), SFXP(SBV(15160, 16), 8)), SFXP(SBV(31216, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23616, 16), 8), SFXP(SBV(-29960, 16), 8)), SFXP(SBV(11298, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24436, 16), 8), UFXP(BV(19731, 16), 8)), UFXP(BV(44167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16682, 16), 8), SFXP(SBV(-3332, 16), 8)), SFXP(SBV(20014, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28042, 16), 8), UFXP(BV(35377, 16), 8)), UFXP(BV(8539, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9254, 16), 8), SFXP(SBV(29123, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45510, 16), 8), UFXP(BV(28710, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28380, 16), 8), SFXP(SBV(19197, 16), 8)), SFXP(SBV(-9183, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38738, 16), 8), UFXP(BV(26792, 16), 8)), UFXP(BV(65530, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58090, 16), 8), UFXP(BV(62094, 16), 8)), UFXP(BV(54648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9810, 16), 8), SFXP(SBV(22237, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7618, 16), 8), SFXP(SBV(-17911, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25715, 16), 8), SFXP(SBV(23836, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55782, 16), 8), UFXP(BV(19411, 16), 8)), UFXP(BV(9657, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6367, 16), 8), SFXP(SBV(30180, 16), 8)), SFXP(SBV(-23813, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6965, 16), 8), SFXP(SBV(17957, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7060, 16), 8), SFXP(SBV(-11149, 16), 8)), SFXP(SBV(-20211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1127, 16), 8), UFXP(BV(32702, 16), 8)), UFXP(BV(33829, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12411, 16), 8), SFXP(SBV(-9790, 16), 8)), SFXP(SBV(2621, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(565, 16), 8), SFXP(SBV(-5368, 16), 8)), SFXP(SBV(-11847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3157, 16), 8), SFXP(SBV(-27292, 16), 8)), SFXP(SBV(24135, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-17797, 16), 8), SFXP(SBV(10470, 16), 8)), SFXP(SBV(-6973, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28609, 16), 8), UFXP(BV(65048, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26997, 16), 8), UFXP(BV(40321, 16), 8)), UFXP(BV(57828, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57295, 16), 8), UFXP(BV(44326, 16), 8)), UFXP(BV(12969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29802, 16), 8), UFXP(BV(46675, 16), 8)), UFXP(BV(59674, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32121, 16), 8), UFXP(BV(9928, 16), 8)), UFXP(BV(22193, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9769, 16), 8), UFXP(BV(53742, 16), 8)), UFXP(BV(21563, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13944, 16), 8), UFXP(BV(62644, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11702, 16), 8), SFXP(SBV(-31867, 16), 8)), SFXP(SBV(-20165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17887, 16), 8), SFXP(SBV(21868, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9088, 16), 8), SFXP(SBV(-28641, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60321, 16), 8), UFXP(BV(48340, 16), 8)), UFXP(BV(43125, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3272, 16), 8), SFXP(SBV(-3710, 16), 8)), SFXP(SBV(6982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37647, 16), 8), UFXP(BV(16617, 16), 8)), UFXP(BV(21030, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26617, 16), 8), UFXP(BV(64853, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10371, 16), 8), SFXP(SBV(22004, 16), 8)), SFXP(SBV(-32375, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18165, 16), 8), UFXP(BV(1570, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48203, 16), 8), UFXP(BV(60754, 16), 8)), UFXP(BV(36288, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21428, 16), 8), SFXP(SBV(194, 16), 8)), SFXP(SBV(-21234, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53507, 16), 8), UFXP(BV(19130, 16), 8)), UFXP(BV(34377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16489, 16), 8), SFXP(SBV(22118, 16), 8)), SFXP(SBV(-5629, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18451, 16), 8), SFXP(SBV(21688, 16), 8)), SFXP(SBV(-25397, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21697, 16), 8), SFXP(SBV(-21228, 16), 8)), SFXP(SBV(-469, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37112, 16), 8), UFXP(BV(4845, 16), 8)), UFXP(BV(32267, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9848, 16), 8), UFXP(BV(43033, 16), 8)), UFXP(BV(52881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(16170, 16), 8), SFXP(SBV(-18389, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30877, 16), 8), UFXP(BV(57550, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54033, 16), 8), UFXP(BV(49817, 16), 8)), UFXP(BV(38314, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24195, 16), 8), UFXP(BV(60506, 16), 8)), UFXP(BV(19165, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4370, 16), 8), UFXP(BV(37924, 16), 8)), UFXP(BV(31982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53545, 16), 8), UFXP(BV(58418, 16), 8)), UFXP(BV(60663, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16563, 16), 8), SFXP(SBV(24212, 16), 8)), SFXP(SBV(7649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42327, 16), 8), UFXP(BV(61943, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30094, 16), 8), SFXP(SBV(23707, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12702, 16), 8), SFXP(SBV(1724, 16), 8)), SFXP(SBV(14426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28584, 16), 8), UFXP(BV(3216, 16), 8)), UFXP(BV(25368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23809, 16), 8), UFXP(BV(49309, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7151, 16), 8), SFXP(SBV(-19143, 16), 8)), SFXP(SBV(26294, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30945, 16), 8), SFXP(SBV(30770, 16), 8)), SFXP(SBV(16108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9569, 16), 8), SFXP(SBV(3202, 16), 8)), SFXP(SBV(-6367, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12708, 16), 8), UFXP(BV(26095, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37226, 16), 8), UFXP(BV(28346, 16), 8)), UFXP(BV(58675, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4994, 16), 8), SFXP(SBV(-13821, 16), 8)), SFXP(SBV(-8827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4620, 16), 8), UFXP(BV(15043, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26113, 16), 8), UFXP(BV(20439, 16), 8)), UFXP(BV(46552, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63679, 16), 8), UFXP(BV(53620, 16), 8)), UFXP(BV(51763, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23856, 16), 8), UFXP(BV(49833, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42118, 16), 8), UFXP(BV(26892, 16), 8)), UFXP(BV(33453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31579, 16), 8), SFXP(SBV(11091, 16), 8)), SFXP(SBV(-20488, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22179, 16), 8), SFXP(SBV(5729, 16), 8)), SFXP(SBV(-16450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16284, 16), 8), UFXP(BV(57634, 16), 8)), UFXP(BV(8382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25511, 16), 8), UFXP(BV(28545, 16), 8)), UFXP(BV(26528, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36371, 16), 8), UFXP(BV(38364, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42330, 16), 8), UFXP(BV(60776, 16), 8)), UFXP(BV(47090, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(16600, 16), 8), SFXP(SBV(8131, 16), 8)), SFXP(SBV(2956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21229, 16), 8), SFXP(SBV(-22907, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2396, 16), 8), UFXP(BV(57141, 16), 8)), UFXP(BV(10517, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22600, 16), 8), SFXP(SBV(-18929, 16), 8)), SFXP(SBV(24007, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24086, 16), 8), SFXP(SBV(-29822, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48230, 16), 8), UFXP(BV(55246, 16), 8)), UFXP(BV(37940, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25999, 16), 8), SFXP(SBV(11121, 16), 8)), SFXP(SBV(14878, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34174, 16), 8), UFXP(BV(18032, 16), 8)), UFXP(BV(47836, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47878, 16), 8), UFXP(BV(29591, 16), 8)), UFXP(BV(18287, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2464, 16), 8), UFXP(BV(39732, 16), 8)), UFXP(BV(42196, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9184, 16), 8), SFXP(SBV(3785, 16), 8)), SFXP(SBV(5399, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13283, 16), 8), SFXP(SBV(8623, 16), 8)), SFXP(SBV(21906, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12503, 16), 8), SFXP(SBV(-31698, 16), 8)), SFXP(SBV(19195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11934, 16), 8), SFXP(SBV(-23372, 16), 8)), SFXP(SBV(-24575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24724, 16), 8), SFXP(SBV(1549, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22132, 16), 8), SFXP(SBV(12800, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50271, 16), 8), UFXP(BV(3420, 16), 8)), UFXP(BV(53691, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9891, 16), 8), SFXP(SBV(19198, 16), 8)), SFXP(SBV(20852, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4419, 16), 8), SFXP(SBV(29738, 16), 8)), SFXP(SBV(-10959, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29910, 16), 8), SFXP(SBV(17076, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60059, 16), 8), UFXP(BV(54526, 16), 8)), UFXP(BV(5533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25344, 16), 8), SFXP(SBV(-2374, 16), 8)), SFXP(SBV(27718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11912, 16), 8), SFXP(SBV(-16225, 16), 8)), SFXP(SBV(-4313, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26489, 16), 8), SFXP(SBV(-20606, 16), 8)), SFXP(SBV(5883, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63928, 16), 8), UFXP(BV(2026, 16), 8)), UFXP(BV(418, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19258, 16), 8), SFXP(SBV(-27385, 16), 8)), SFXP(SBV(18893, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(494, 16), 8), UFXP(BV(33873, 16), 8)), UFXP(BV(65364, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41428, 16), 8), UFXP(BV(14973, 16), 8)), UFXP(BV(56401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17081, 16), 8), SFXP(SBV(5068, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14379, 16), 8), SFXP(SBV(24319, 16), 8)), SFXP(SBV(26838, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37915, 16), 8), UFXP(BV(25237, 16), 8)), UFXP(BV(63152, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1693, 16), 8), SFXP(SBV(-8388, 16), 8)), SFXP(SBV(-10081, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-85, 16), 8), SFXP(SBV(-28059, 16), 8)), SFXP(SBV(27974, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29306, 16), 8), SFXP(SBV(23906, 16), 8)), SFXP(SBV(-15835, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4838, 16), 8), SFXP(SBV(-24580, 16), 8)), SFXP(SBV(5772, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25323, 16), 8), UFXP(BV(29800, 16), 8)), UFXP(BV(61059, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7906, 16), 8), SFXP(SBV(27720, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(41129, 16), 8), UFXP(BV(50732, 16), 8)), UFXP(BV(24148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15758, 16), 8), UFXP(BV(53669, 16), 8)), UFXP(BV(27625, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(167, 16), 8), SFXP(SBV(-8095, 16), 8)), SFXP(SBV(8262, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1791, 16), 8), UFXP(BV(20136, 16), 8)), UFXP(BV(21927, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39493, 16), 8), UFXP(BV(30110, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24922, 16), 8), UFXP(BV(55107, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37466, 16), 8), UFXP(BV(27931, 16), 8)), UFXP(BV(9535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28955, 16), 8), SFXP(SBV(32094, 16), 8)), SFXP(SBV(4487, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46700, 16), 8), UFXP(BV(31112, 16), 8)), UFXP(BV(39414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42609, 16), 8), UFXP(BV(56818, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5703, 16), 8), SFXP(SBV(25613, 16), 8)), SFXP(SBV(-31316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10283, 16), 8), SFXP(SBV(15943, 16), 8)), SFXP(SBV(-26226, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25794, 16), 8), SFXP(SBV(11537, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11649, 16), 8), SFXP(SBV(19711, 16), 8)), SFXP(SBV(31360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(64386, 16), 8), UFXP(BV(53508, 16), 8)), UFXP(BV(22801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24833, 16), 8), SFXP(SBV(-23360, 16), 8)), SFXP(SBV(-17343, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60463, 16), 8), UFXP(BV(45332, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(62935, 16), 8), UFXP(BV(15139, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13659, 16), 8), UFXP(BV(23078, 16), 8)), UFXP(BV(56117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47428, 16), 8), UFXP(BV(736, 16), 8)), UFXP(BV(46692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22105, 16), 8), SFXP(SBV(-17757, 16), 8)), SFXP(SBV(-25674, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21, 16), 8), UFXP(BV(64619, 16), 8)), UFXP(BV(64640, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53364, 16), 8), UFXP(BV(6725, 16), 8)), UFXP(BV(60089, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26284, 16), 8), SFXP(SBV(5286, 16), 8)), SFXP(SBV(31570, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58029, 16), 8), UFXP(BV(49033, 16), 8)), UFXP(BV(41526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9079, 16), 8), SFXP(SBV(27250, 16), 8)), SFXP(SBV(29207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30911, 16), 8), SFXP(SBV(-8411, 16), 8)), SFXP(SBV(22500, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39468, 16), 8), UFXP(BV(31384, 16), 8)), UFXP(BV(5316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22696, 16), 8), UFXP(BV(9166, 16), 8)), UFXP(BV(31862, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19387, 16), 8), UFXP(BV(58872, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52098, 16), 8), UFXP(BV(48971, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23677, 16), 8), UFXP(BV(63166, 16), 8)), UFXP(BV(9411, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39755, 16), 8), UFXP(BV(42554, 16), 8)), UFXP(BV(62737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31633, 16), 8), SFXP(SBV(15704, 16), 8)), SFXP(SBV(-18199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10585, 16), 8), SFXP(SBV(2359, 16), 8)), SFXP(SBV(-12944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19376, 16), 8), SFXP(SBV(-17130, 16), 8)), SFXP(SBV(14193, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28482, 16), 8), UFXP(BV(9065, 16), 8)), UFXP(BV(37547, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52971, 16), 8), UFXP(BV(54196, 16), 8)), UFXP(BV(41631, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20623, 16), 8), SFXP(SBV(19378, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32151, 16), 8), SFXP(SBV(13411, 16), 8)), SFXP(SBV(18740, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15051, 16), 8), SFXP(SBV(-4416, 16), 8)), SFXP(SBV(2514, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4780, 16), 8), SFXP(SBV(-8056, 16), 8)), SFXP(SBV(3276, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23484, 16), 8), SFXP(SBV(30371, 16), 8)), SFXP(SBV(6887, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8149, 16), 8), UFXP(BV(60832, 16), 8)), UFXP(BV(3445, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9898, 16), 8), SFXP(SBV(-657, 16), 8)), SFXP(SBV(-9241, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53772, 16), 8), UFXP(BV(17009, 16), 8)), UFXP(BV(36763, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40826, 16), 8), UFXP(BV(9086, 16), 8)), UFXP(BV(7212, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32878, 16), 8), UFXP(BV(38867, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28098, 16), 8), SFXP(SBV(27322, 16), 8)), SFXP(SBV(-776, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11358, 16), 8), SFXP(SBV(14980, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11455, 16), 8), SFXP(SBV(-1926, 16), 8)), SFXP(SBV(-9529, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37392, 16), 8), UFXP(BV(44409, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11242, 16), 8), SFXP(SBV(16375, 16), 8)), SFXP(SBV(-1804, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29191, 16), 8), SFXP(SBV(-30101, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49321, 16), 8), UFXP(BV(12725, 16), 8)), UFXP(BV(36596, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19551, 16), 8), SFXP(SBV(-12950, 16), 8)), SFXP(SBV(32501, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11908, 16), 8), SFXP(SBV(17983, 16), 8)), SFXP(SBV(15477, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58362, 16), 8), UFXP(BV(51976, 16), 8)), UFXP(BV(44802, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(15174, 16), 8), UFXP(BV(58417, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21891, 16), 8), UFXP(BV(42990, 16), 8)), UFXP(BV(44437, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30123, 16), 8), SFXP(SBV(3619, 16), 8)), SFXP(SBV(32625, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27660, 16), 8), SFXP(SBV(31279, 16), 8)), SFXP(SBV(-6597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44054, 16), 8), UFXP(BV(2848, 16), 8)), UFXP(BV(46902, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6724, 16), 8), SFXP(SBV(-6899, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-229, 16), 8), SFXP(SBV(-31156, 16), 8)), SFXP(SBV(30927, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12421, 16), 8), SFXP(SBV(-2510, 16), 8)), SFXP(SBV(14931, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-5521, 16), 8), SFXP(SBV(25449, 16), 8)), SFXP(SBV(-24555, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16645, 16), 8), SFXP(SBV(-583, 16), 8)), SFXP(SBV(-16062, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27865, 16), 8), SFXP(SBV(-28338, 16), 8)), SFXP(SBV(-9333, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15257, 16), 8), UFXP(BV(34345, 16), 8)), UFXP(BV(49602, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22329, 16), 8), UFXP(BV(20085, 16), 8)), UFXP(BV(42414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5550, 16), 8), SFXP(SBV(-32327, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9451, 16), 8), SFXP(SBV(-5589, 16), 8)), SFXP(SBV(-9726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29962, 16), 8), SFXP(SBV(19687, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4055, 16), 8), UFXP(BV(59556, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11278, 16), 8), SFXP(SBV(32472, 16), 8)), SFXP(SBV(11249, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33661, 16), 8), UFXP(BV(8145, 16), 8)), UFXP(BV(25516, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20111, 16), 8), UFXP(BV(34761, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5112, 16), 8), SFXP(SBV(-31507, 16), 8)), SFXP(SBV(26395, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10167, 16), 8), SFXP(SBV(3033, 16), 8)), SFXP(SBV(10616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25300, 16), 8), SFXP(SBV(-2787, 16), 8)), SFXP(SBV(-28087, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30927, 16), 8), SFXP(SBV(-24146, 16), 8)), SFXP(SBV(-32075, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30497, 16), 8), SFXP(SBV(-10353, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63614, 16), 8), UFXP(BV(24604, 16), 8)), UFXP(BV(22682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10723, 16), 8), SFXP(SBV(23779, 16), 8)), SFXP(SBV(-12984, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(132, 16), 8), UFXP(BV(7881, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19547, 16), 8), SFXP(SBV(5318, 16), 8)), SFXP(SBV(-24865, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-529, 16), 8), SFXP(SBV(-30190, 16), 8)), SFXP(SBV(-30719, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5825, 16), 8), SFXP(SBV(4053, 16), 8)), SFXP(SBV(26685, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18909, 16), 8), SFXP(SBV(10940, 16), 8)), SFXP(SBV(-7969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55718, 16), 8), UFXP(BV(8555, 16), 8)), UFXP(BV(64273, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9658, 16), 8), SFXP(SBV(7994, 16), 8)), SFXP(SBV(-1664, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21387, 16), 8), SFXP(SBV(-19296, 16), 8)), SFXP(SBV(26355, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30213, 16), 8), UFXP(BV(50200, 16), 8)), UFXP(BV(45549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8913, 16), 8), SFXP(SBV(-20604, 16), 8)), SFXP(SBV(-11691, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-582, 16), 8), SFXP(SBV(-2370, 16), 8)), SFXP(SBV(5389, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(9373, 16), 8), SFXP(SBV(12279, 16), 8)), SFXP(SBV(-9178, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14404, 16), 8), UFXP(BV(12018, 16), 8)), UFXP(BV(2386, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1553, 16), 8), SFXP(SBV(28077, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19312, 16), 8), UFXP(BV(15846, 16), 8)), UFXP(BV(3466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4358, 16), 8), SFXP(SBV(20475, 16), 8)), SFXP(SBV(-20874, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9120, 16), 8), UFXP(BV(2157, 16), 8)), UFXP(BV(6963, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34751, 16), 8), UFXP(BV(39065, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30468, 16), 8), SFXP(SBV(7454, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15387, 16), 8), SFXP(SBV(23186, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25491, 16), 8), UFXP(BV(64344, 16), 8)), UFXP(BV(50012, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18995, 16), 8), SFXP(SBV(-126, 16), 8)), SFXP(SBV(9349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64061, 16), 8), UFXP(BV(34313, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33469, 16), 8), UFXP(BV(7511, 16), 8)), UFXP(BV(40980, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30527, 16), 8), SFXP(SBV(3398, 16), 8)), SFXP(SBV(27129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17403, 16), 8), SFXP(SBV(13137, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19434, 16), 8), SFXP(SBV(32092, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25526, 16), 8), SFXP(SBV(-14421, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28122, 16), 8), UFXP(BV(47299, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21416, 16), 8), SFXP(SBV(-6819, 16), 8)), SFXP(SBV(-19372, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51662, 16), 8), UFXP(BV(2292, 16), 8)), UFXP(BV(3784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61579, 16), 8), UFXP(BV(25615, 16), 8)), UFXP(BV(1125, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23568, 16), 8), UFXP(BV(21179, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51584, 16), 8), UFXP(BV(44497, 16), 8)), UFXP(BV(7087, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13864, 16), 8), SFXP(SBV(26569, 16), 8)), SFXP(SBV(12705, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22195, 16), 8), SFXP(SBV(18430, 16), 8)), SFXP(SBV(-24911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10264, 16), 8), SFXP(SBV(30678, 16), 8)), SFXP(SBV(-24594, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30845, 16), 8), UFXP(BV(4604, 16), 8)), UFXP(BV(30440, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36587, 16), 8), UFXP(BV(53770, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21700, 16), 8), SFXP(SBV(32481, 16), 8)), SFXP(SBV(-11355, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36284, 16), 8), UFXP(BV(64151, 16), 8)), UFXP(BV(48434, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4164, 16), 8), UFXP(BV(811, 16), 8)), UFXP(BV(4975, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6131, 16), 8), SFXP(SBV(17194, 16), 8)), SFXP(SBV(-18566, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31764, 16), 8), SFXP(SBV(-8297, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32505, 16), 8), UFXP(BV(36376, 16), 8)), UFXP(BV(3345, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9586, 16), 8), SFXP(SBV(6815, 16), 8)), SFXP(SBV(16401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25560, 16), 8), SFXP(SBV(-5407, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12615, 16), 8), SFXP(SBV(-7439, 16), 8)), SFXP(SBV(26641, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5430, 16), 8), UFXP(BV(3590, 16), 8)), UFXP(BV(1840, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39273, 16), 8), UFXP(BV(5222, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19423, 16), 8), SFXP(SBV(7431, 16), 8)), SFXP(SBV(26854, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47501, 16), 8), UFXP(BV(51019, 16), 8)), UFXP(BV(29431, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-24987, 16), 8), SFXP(SBV(27993, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20265, 16), 8), SFXP(SBV(-22519, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37898, 16), 8), UFXP(BV(9681, 16), 8)), UFXP(BV(28217, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18224, 16), 8), SFXP(SBV(30352, 16), 8)), SFXP(SBV(-12128, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11289, 16), 8), UFXP(BV(24860, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27022, 16), 8), SFXP(SBV(-3297, 16), 8)), SFXP(SBV(30319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(986, 16), 8), SFXP(SBV(-12406, 16), 8)), SFXP(SBV(13392, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34968, 16), 8), UFXP(BV(44583, 16), 8)), UFXP(BV(55921, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2524, 16), 8), SFXP(SBV(9440, 16), 8)), SFXP(SBV(-11964, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23074, 16), 8), SFXP(SBV(3012, 16), 8)), SFXP(SBV(9337, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3919, 16), 8), UFXP(BV(61809, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29091, 16), 8), SFXP(SBV(-26522, 16), 8)), SFXP(SBV(9923, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11003, 16), 8), UFXP(BV(52607, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24050, 16), 8), UFXP(BV(38426, 16), 8)), UFXP(BV(51160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23292, 16), 8), SFXP(SBV(-29534, 16), 8)), SFXP(SBV(12710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10648, 16), 8), UFXP(BV(61164, 16), 8)), UFXP(BV(15020, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58980, 16), 8), UFXP(BV(62620, 16), 8)), UFXP(BV(9140, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1655, 16), 8), SFXP(SBV(-22183, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19853, 16), 8), UFXP(BV(51174, 16), 8)), UFXP(BV(36424, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28641, 16), 8), SFXP(SBV(-11303, 16), 8)), SFXP(SBV(17338, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(64327, 16), 8), UFXP(BV(54799, 16), 8)), UFXP(BV(7187, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31400, 16), 8), SFXP(SBV(-4470, 16), 8)), SFXP(SBV(-29666, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12810, 16), 8), UFXP(BV(18690, 16), 8)), UFXP(BV(17727, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10197, 16), 8), SFXP(SBV(-31994, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22151, 16), 8), SFXP(SBV(-23427, 16), 8)), SFXP(SBV(-1276, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1202, 16), 8), SFXP(SBV(-21333, 16), 8)), SFXP(SBV(-20131, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42302, 16), 8), UFXP(BV(35160, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4937, 16), 8), SFXP(SBV(8196, 16), 8)), SFXP(SBV(3259, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29226, 16), 8), SFXP(SBV(29933, 16), 8)), SFXP(SBV(-9400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23573, 16), 8), UFXP(BV(13819, 16), 8)), UFXP(BV(27297, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44573, 16), 8), UFXP(BV(30294, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30098, 16), 8), SFXP(SBV(-4577, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6790, 16), 8), SFXP(SBV(-29695, 16), 8)), SFXP(SBV(22905, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26279, 16), 8), SFXP(SBV(-12034, 16), 8)), SFXP(SBV(14245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2446, 16), 8), UFXP(BV(55457, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10391, 16), 8), SFXP(SBV(-10099, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9506, 16), 8), SFXP(SBV(-30686, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36527, 16), 8), UFXP(BV(13712, 16), 8)), UFXP(BV(22815, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11998, 16), 8), SFXP(SBV(-9239, 16), 8)), SFXP(SBV(2759, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31654, 16), 8), UFXP(BV(51593, 16), 8)), UFXP(BV(22401, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46462, 16), 8), UFXP(BV(44911, 16), 8)), UFXP(BV(1551, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32246, 16), 8), SFXP(SBV(12413, 16), 8)), SFXP(SBV(19833, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12609, 16), 8), UFXP(BV(40133, 16), 8)), UFXP(BV(52742, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-898, 16), 8), SFXP(SBV(-22165, 16), 8)), SFXP(SBV(21267, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13674, 16), 8), SFXP(SBV(12269, 16), 8)), SFXP(SBV(-25943, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5240, 16), 8), SFXP(SBV(-11011, 16), 8)), SFXP(SBV(-16251, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11868, 16), 8), SFXP(SBV(-31364, 16), 8)), SFXP(SBV(19496, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3528, 16), 8), SFXP(SBV(-18285, 16), 8)), SFXP(SBV(-21813, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3066, 16), 8), SFXP(SBV(-24044, 16), 8)), SFXP(SBV(-27110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17426, 16), 8), UFXP(BV(38982, 16), 8)), UFXP(BV(32076, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30820, 16), 8), UFXP(BV(63660, 16), 8)), UFXP(BV(28944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15949, 16), 8), SFXP(SBV(-7544, 16), 8)), SFXP(SBV(-23493, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4329, 16), 8), UFXP(BV(7572, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1847, 16), 8), SFXP(SBV(-11257, 16), 8)), SFXP(SBV(9410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31208, 16), 8), SFXP(SBV(-6628, 16), 8)), SFXP(SBV(-24580, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24853, 16), 8), SFXP(SBV(-15851, 16), 8)), SFXP(SBV(-24832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10919, 16), 8), UFXP(BV(9395, 16), 8)), UFXP(BV(20314, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6354, 16), 8), UFXP(BV(7768, 16), 8)), UFXP(BV(61733, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38370, 16), 8), UFXP(BV(54136, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25745, 16), 8), SFXP(SBV(-20122, 16), 8)), SFXP(SBV(-5623, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35604, 16), 8), UFXP(BV(34607, 16), 8)), UFXP(BV(997, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32618, 16), 8), UFXP(BV(43346, 16), 8)), UFXP(BV(10428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5759, 16), 8), SFXP(SBV(19380, 16), 8)), SFXP(SBV(-25139, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13756, 16), 8), UFXP(BV(11757, 16), 8)), UFXP(BV(1999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19759, 16), 8), SFXP(SBV(30523, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11458, 16), 8), SFXP(SBV(-10941, 16), 8)), SFXP(SBV(-30943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16327, 16), 8), UFXP(BV(43001, 16), 8)), UFXP(BV(38862, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34979, 16), 8), UFXP(BV(49729, 16), 8)), UFXP(BV(19172, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15650, 16), 8), UFXP(BV(20378, 16), 8)), UFXP(BV(60808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16455, 16), 8), UFXP(BV(10798, 16), 8)), UFXP(BV(38707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18778, 16), 8), SFXP(SBV(29776, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53257, 16), 8), UFXP(BV(64586, 16), 8)), UFXP(BV(54207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1085, 16), 8), SFXP(SBV(31658, 16), 8)), SFXP(SBV(-32743, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23460, 16), 8), SFXP(SBV(15514, 16), 8)), SFXP(SBV(20080, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10723, 16), 8), SFXP(SBV(22174, 16), 8)), SFXP(SBV(32639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9084, 16), 8), UFXP(BV(42922, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-18964, 16), 8), SFXP(SBV(-6675, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3519, 16), 8), SFXP(SBV(19212, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26817, 16), 8), SFXP(SBV(1348, 16), 8)), SFXP(SBV(28165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30290, 16), 8), SFXP(SBV(28482, 16), 8)), SFXP(SBV(-1808, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15729, 16), 8), SFXP(SBV(25653, 16), 8)), SFXP(SBV(9924, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3792, 16), 8), UFXP(BV(49395, 16), 8)), UFXP(BV(19933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3083, 16), 8), SFXP(SBV(25639, 16), 8)), SFXP(SBV(-18911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14118, 16), 8), SFXP(SBV(-32750, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24869, 16), 8), UFXP(BV(64597, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29244, 16), 8), SFXP(SBV(14049, 16), 8)), SFXP(SBV(22243, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47744, 16), 8), UFXP(BV(55904, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41747, 16), 8), UFXP(BV(34572, 16), 8)), UFXP(BV(10783, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11765, 16), 8), SFXP(SBV(-25933, 16), 8)), SFXP(SBV(27838, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31375, 16), 8), SFXP(SBV(8783, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6631, 16), 8), SFXP(SBV(-16260, 16), 8)), SFXP(SBV(9629, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6449, 16), 8), SFXP(SBV(28636, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32724, 16), 8), SFXP(SBV(-2440, 16), 8)), SFXP(SBV(30284, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13908, 16), 8), SFXP(SBV(-17735, 16), 8)), SFXP(SBV(31643, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31725, 16), 8), UFXP(BV(8607, 16), 8)), UFXP(BV(40332, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22291, 16), 8), UFXP(BV(49973, 16), 8)), UFXP(BV(6728, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29323, 16), 8), UFXP(BV(41901, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18983, 16), 8), SFXP(SBV(31069, 16), 8)), SFXP(SBV(10079, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12699, 16), 8), UFXP(BV(33627, 16), 8)), UFXP(BV(46326, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15307, 16), 8), SFXP(SBV(-10055, 16), 8)), SFXP(SBV(-5252, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2033, 16), 8), SFXP(SBV(-27264, 16), 8)), SFXP(SBV(-19906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48026, 16), 8), UFXP(BV(34104, 16), 8)), UFXP(BV(13922, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41089, 16), 8), UFXP(BV(59128, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22111, 16), 8), SFXP(SBV(24322, 16), 8)), SFXP(SBV(-3565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12081, 16), 8), SFXP(SBV(20028, 16), 8)), SFXP(SBV(-7947, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55813, 16), 8), UFXP(BV(26127, 16), 8)), UFXP(BV(16404, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29497, 16), 8), UFXP(BV(39028, 16), 8)), UFXP(BV(40462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27858, 16), 8), UFXP(BV(57779, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6916, 16), 8), SFXP(SBV(-10973, 16), 8)), SFXP(SBV(-4057, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40531, 16), 8), UFXP(BV(61779, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20661, 16), 8), UFXP(BV(17234, 16), 8)), UFXP(BV(3427, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23396, 16), 8), SFXP(SBV(-21937, 16), 8)), SFXP(SBV(26779, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27874, 16), 8), SFXP(SBV(9468, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25874, 16), 8), SFXP(SBV(-13911, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61180, 16), 8), UFXP(BV(56243, 16), 8)), UFXP(BV(51887, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28735, 16), 8), SFXP(SBV(9264, 16), 8)), SFXP(SBV(-19471, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59968, 16), 8), UFXP(BV(46883, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11067, 16), 8), SFXP(SBV(16601, 16), 8)), SFXP(SBV(-5534, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25240, 16), 8), UFXP(BV(27901, 16), 8)), UFXP(BV(53141, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48757, 16), 8), UFXP(BV(4914, 16), 8)), UFXP(BV(53671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5478, 16), 8), SFXP(SBV(-6245, 16), 8)), SFXP(SBV(2561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52507, 16), 8), UFXP(BV(57309, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1470, 16), 8), UFXP(BV(49101, 16), 8)), UFXP(BV(17905, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7497, 16), 8), UFXP(BV(29993, 16), 8)), UFXP(BV(37490, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29515, 16), 8), SFXP(SBV(-15378, 16), 8)), SFXP(SBV(-14137, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9983, 16), 8), UFXP(BV(51608, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12635, 16), 8), SFXP(SBV(8823, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12611, 16), 8), SFXP(SBV(5010, 16), 8)), SFXP(SBV(17621, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22474, 16), 8), UFXP(BV(47094, 16), 8)), UFXP(BV(40916, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37083, 16), 8), UFXP(BV(34510, 16), 8)), UFXP(BV(6057, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48293, 16), 8), UFXP(BV(8359, 16), 8)), UFXP(BV(39934, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31870, 16), 8), SFXP(SBV(-26031, 16), 8)), SFXP(SBV(-29393, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10021, 16), 8), SFXP(SBV(-12766, 16), 8)), SFXP(SBV(-22787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13358, 16), 8), UFXP(BV(54307, 16), 8)), UFXP(BV(15674, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16779, 16), 8), SFXP(SBV(-1627, 16), 8)), SFXP(SBV(-18406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27925, 16), 8), UFXP(BV(51520, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21958, 16), 8), SFXP(SBV(27166, 16), 8)), SFXP(SBV(5208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-25100, 16), 8), SFXP(SBV(-4176, 16), 8)), SFXP(SBV(16228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18599, 16), 8), SFXP(SBV(24975, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8835, 16), 8), UFXP(BV(9995, 16), 8)), UFXP(BV(64376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14963, 16), 8), SFXP(SBV(12859, 16), 8)), SFXP(SBV(2104, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45725, 16), 8), UFXP(BV(60948, 16), 8)), UFXP(BV(50313, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24627, 16), 8), SFXP(SBV(9634, 16), 8)), SFXP(SBV(-14993, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30629, 16), 8), SFXP(SBV(-5168, 16), 8)), SFXP(SBV(-25461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39795, 16), 8), UFXP(BV(48487, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56572, 16), 8), UFXP(BV(11109, 16), 8)), UFXP(BV(45463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15398, 16), 8), UFXP(BV(65096, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9177, 16), 8), SFXP(SBV(-19110, 16), 8)), SFXP(SBV(9933, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12410, 16), 8), UFXP(BV(65406, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7300, 16), 8), UFXP(BV(38854, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3143, 16), 8), SFXP(SBV(4067, 16), 8)), SFXP(SBV(-7210, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-13693, 16), 8), SFXP(SBV(802, 16), 8)), SFXP(SBV(22638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40294, 16), 8), UFXP(BV(21699, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24603, 16), 8), SFXP(SBV(20257, 16), 8)), SFXP(SBV(-4346, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15165, 16), 8), SFXP(SBV(-14844, 16), 8)), SFXP(SBV(27365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18090, 16), 8), SFXP(SBV(2509, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9902, 16), 8), UFXP(BV(19652, 16), 8)), UFXP(BV(29554, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13533, 16), 8), SFXP(SBV(-1079, 16), 8)), SFXP(SBV(8497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30397, 16), 8), SFXP(SBV(11461, 16), 8)), SFXP(SBV(18936, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23918, 16), 8), SFXP(SBV(7122, 16), 8)), SFXP(SBV(-31040, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27897, 16), 8), SFXP(SBV(13191, 16), 8)), SFXP(SBV(-24448, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60193, 16), 8), UFXP(BV(63001, 16), 8)), UFXP(BV(2220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13499, 16), 8), UFXP(BV(8131, 16), 8)), UFXP(BV(5368, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12591, 16), 8), SFXP(SBV(-2709, 16), 8)), SFXP(SBV(-2166, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28657, 16), 8), UFXP(BV(56148, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7521, 16), 8), SFXP(SBV(-27363, 16), 8)), SFXP(SBV(-19842, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49677, 16), 8), UFXP(BV(9445, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25050, 16), 8), UFXP(BV(47478, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25476, 16), 8), UFXP(BV(35770, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5638, 16), 8), UFXP(BV(21194, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3471, 16), 8), UFXP(BV(64025, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1324, 16), 8), SFXP(SBV(-15949, 16), 8)), SFXP(SBV(-16951, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14664, 16), 8), UFXP(BV(34179, 16), 8)), UFXP(BV(48843, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13802, 16), 8), UFXP(BV(34517, 16), 8)), UFXP(BV(25943, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10396, 16), 8), SFXP(SBV(1624, 16), 8)), SFXP(SBV(-12020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3828, 16), 8), SFXP(SBV(-20919, 16), 8)), SFXP(SBV(17091, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9620, 16), 8), UFXP(BV(62127, 16), 8)), UFXP(BV(13029, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54142, 16), 8), UFXP(BV(60519, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43818, 16), 8), UFXP(BV(35081, 16), 8)), UFXP(BV(8737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28424, 16), 8), SFXP(SBV(-31087, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7902, 16), 8), SFXP(SBV(-344, 16), 8)), SFXP(SBV(10619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29500, 16), 8), SFXP(SBV(-21356, 16), 8)), SFXP(SBV(29423, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6490, 16), 8), UFXP(BV(34972, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15943, 16), 8), UFXP(BV(64751, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13794, 16), 8), SFXP(SBV(-1642, 16), 8)), SFXP(SBV(22940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19636, 16), 8), UFXP(BV(57810, 16), 8)), UFXP(BV(11910, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25898, 16), 8), SFXP(SBV(-15800, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2109, 16), 8), SFXP(SBV(-30140, 16), 8)), SFXP(SBV(-28031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32747, 16), 8), SFXP(SBV(12942, 16), 8)), SFXP(SBV(19847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3598, 16), 8), SFXP(SBV(13979, 16), 8)), SFXP(SBV(-138, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21186, 16), 8), UFXP(BV(64479, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-13431, 16), 8), SFXP(SBV(11137, 16), 8)), SFXP(SBV(5523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23134, 16), 8), SFXP(SBV(-15651, 16), 8)), SFXP(SBV(26751, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12869, 16), 8), SFXP(SBV(7683, 16), 8)), SFXP(SBV(20552, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12975, 16), 8), SFXP(SBV(8584, 16), 8)), SFXP(SBV(21559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54805, 16), 8), UFXP(BV(46363, 16), 8)), UFXP(BV(29549, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11128, 16), 8), UFXP(BV(43536, 16), 8)), UFXP(BV(54664, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56369, 16), 8), UFXP(BV(59724, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39244, 16), 8), UFXP(BV(58979, 16), 8)), UFXP(BV(32687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21724, 16), 8), UFXP(BV(26460, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1139, 16), 8), SFXP(SBV(23321, 16), 8)), SFXP(SBV(24460, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56836, 16), 8), UFXP(BV(27835, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6145, 16), 8), SFXP(SBV(-31466, 16), 8)), SFXP(SBV(31126, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3215, 16), 8), SFXP(SBV(-16963, 16), 8)), SFXP(SBV(-20178, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20377, 16), 8), SFXP(SBV(-2539, 16), 8)), SFXP(SBV(-22916, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23609, 16), 8), SFXP(SBV(-18800, 16), 8)), SFXP(SBV(-23127, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33905, 16), 8), UFXP(BV(12816, 16), 8)), UFXP(BV(21089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23041, 16), 8), UFXP(BV(29970, 16), 8)), UFXP(BV(53011, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27325, 16), 8), UFXP(BV(62084, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10430, 16), 8), UFXP(BV(62888, 16), 8)), UFXP(BV(7782, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24401, 16), 8), SFXP(SBV(23821, 16), 8)), SFXP(SBV(-23227, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21035, 16), 8), UFXP(BV(41079, 16), 8)), UFXP(BV(33042, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(105, 16), 8), UFXP(BV(3612, 16), 8)), UFXP(BV(3717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40201, 16), 8), UFXP(BV(4918, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9442, 16), 8), UFXP(BV(31492, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53466, 16), 8), UFXP(BV(6084, 16), 8)), UFXP(BV(25469, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44257, 16), 8), UFXP(BV(21928, 16), 8)), UFXP(BV(649, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19440, 16), 8), SFXP(SBV(15726, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(4236, 16), 8), UFXP(BV(41131, 16), 8)), UFXP(BV(25230, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57383, 16), 8), UFXP(BV(56768, 16), 8)), UFXP(BV(615, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18887, 16), 8), UFXP(BV(56637, 16), 8)), UFXP(BV(49760, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9697, 16), 8), UFXP(BV(37387, 16), 8)), UFXP(BV(47084, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13484, 16), 8), UFXP(BV(18561, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62675, 16), 8), UFXP(BV(50567, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2164, 16), 8), UFXP(BV(35523, 16), 8)), UFXP(BV(32177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23983, 16), 8), SFXP(SBV(-22955, 16), 8)), SFXP(SBV(1028, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23383, 16), 8), UFXP(BV(30560, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4594, 16), 8), SFXP(SBV(6566, 16), 8)), SFXP(SBV(1972, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47253, 16), 8), UFXP(BV(35771, 16), 8)), UFXP(BV(11482, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7945, 16), 8), UFXP(BV(40874, 16), 8)), UFXP(BV(48819, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30036, 16), 8), SFXP(SBV(-6311, 16), 8)), SFXP(SBV(23725, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52584, 16), 8), UFXP(BV(11072, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10658, 16), 8), SFXP(SBV(28307, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26577, 16), 8), SFXP(SBV(360, 16), 8)), SFXP(SBV(26217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22307, 16), 8), UFXP(BV(35755, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34230, 16), 8), UFXP(BV(64093, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45943, 16), 8), UFXP(BV(64320, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(552, 16), 8), SFXP(SBV(-31967, 16), 8)), SFXP(SBV(-3393, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14621, 16), 8), SFXP(SBV(-21500, 16), 8)), SFXP(SBV(-6879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10212, 16), 8), SFXP(SBV(-1001, 16), 8)), SFXP(SBV(-11213, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22410, 16), 8), SFXP(SBV(19965, 16), 8)), SFXP(SBV(21754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37513, 16), 8), UFXP(BV(29259, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29286, 16), 8), SFXP(SBV(-6425, 16), 8)), SFXP(SBV(29825, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59221, 16), 8), UFXP(BV(54897, 16), 8)), UFXP(BV(48582, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25323, 16), 8), SFXP(SBV(4862, 16), 8)), SFXP(SBV(-30185, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39803, 16), 8), UFXP(BV(33973, 16), 8)), UFXP(BV(5830, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-26550, 16), 8), SFXP(SBV(-13744, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2024, 16), 8), SFXP(SBV(-27100, 16), 8)), SFXP(SBV(-25076, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3916, 16), 8), SFXP(SBV(-3048, 16), 8)), SFXP(SBV(18912, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22332, 16), 8), UFXP(BV(57966, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61921, 16), 8), UFXP(BV(11303, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25410, 16), 8), SFXP(SBV(-23149, 16), 8)), SFXP(SBV(2261, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19105, 16), 8), UFXP(BV(31504, 16), 8)), UFXP(BV(53137, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43973, 16), 8), UFXP(BV(11973, 16), 8)), UFXP(BV(55946, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(7013, 16), 8), UFXP(BV(26107, 16), 8)), UFXP(BV(59829, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(11651, 16), 8), SFXP(SBV(-21878, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51076, 16), 8), UFXP(BV(21217, 16), 8)), UFXP(BV(29859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27604, 16), 8), UFXP(BV(48923, 16), 8)), UFXP(BV(44217, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3509, 16), 8), SFXP(SBV(-20101, 16), 8)), SFXP(SBV(-16592, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13817, 16), 8), UFXP(BV(38089, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19072, 16), 8), SFXP(SBV(30318, 16), 8)), SFXP(SBV(16146, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3216, 16), 8), UFXP(BV(6016, 16), 8)), UFXP(BV(10040, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11295, 16), 8), SFXP(SBV(22179, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6294, 16), 8), SFXP(SBV(20063, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31319, 16), 8), UFXP(BV(37393, 16), 8)), UFXP(BV(3176, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45006, 16), 8), UFXP(BV(23434, 16), 8)), UFXP(BV(56575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29456, 16), 8), SFXP(SBV(-536, 16), 8)), SFXP(SBV(-29992, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21957, 16), 8), UFXP(BV(21225, 16), 8)), UFXP(BV(43182, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28748, 16), 8), SFXP(SBV(30574, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13038, 16), 8), UFXP(BV(16058, 16), 8)), UFXP(BV(29096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22245, 16), 8), SFXP(SBV(-2097, 16), 8)), SFXP(SBV(-14391, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17810, 16), 8), UFXP(BV(16059, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55072, 16), 8), UFXP(BV(44598, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48128, 16), 8), UFXP(BV(41593, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48572, 16), 8), UFXP(BV(15780, 16), 8)), UFXP(BV(64352, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54601, 16), 8), UFXP(BV(25759, 16), 8)), UFXP(BV(28842, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31415, 16), 8), SFXP(SBV(24623, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47493, 16), 8), UFXP(BV(59555, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24339, 16), 8), SFXP(SBV(-11337, 16), 8)), SFXP(SBV(13002, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22241, 16), 8), UFXP(BV(9833, 16), 8)), UFXP(BV(2312, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50927, 16), 8), UFXP(BV(10281, 16), 8)), UFXP(BV(13620, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14611, 16), 8), SFXP(SBV(16346, 16), 8)), SFXP(SBV(-15432, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2493, 16), 8), SFXP(SBV(-22950, 16), 8)), SFXP(SBV(-26885, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29749, 16), 8), SFXP(SBV(24643, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54519, 16), 8), UFXP(BV(6087, 16), 8)), UFXP(BV(60606, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2070, 16), 8), SFXP(SBV(-4635, 16), 8)), SFXP(SBV(2565, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4576, 16), 8), UFXP(BV(35656, 16), 8)), UFXP(BV(40232, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58478, 16), 8), UFXP(BV(24175, 16), 8)), UFXP(BV(34303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13451, 16), 8), SFXP(SBV(7467, 16), 8)), SFXP(SBV(-878, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42383, 16), 8), UFXP(BV(63552, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4820, 16), 8), UFXP(BV(32574, 16), 8)), UFXP(BV(37782, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32066, 16), 8), SFXP(SBV(20893, 16), 8)), SFXP(SBV(-11173, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-3529, 16), 8), SFXP(SBV(-4271, 16), 8)), SFXP(SBV(-6659, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30496, 16), 8), SFXP(SBV(19649, 16), 8)), SFXP(SBV(10847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(471, 16), 8), SFXP(SBV(-3897, 16), 8)), SFXP(SBV(-7169, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(11686, 16), 8), SFXP(SBV(-3226, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30081, 16), 8), SFXP(SBV(16364, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4722, 16), 8), SFXP(SBV(2221, 16), 8)), SFXP(SBV(6943, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2709, 16), 8), SFXP(SBV(19937, 16), 8)), SFXP(SBV(-17228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1650, 16), 8), SFXP(SBV(25745, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36369, 16), 8), UFXP(BV(22341, 16), 8)), UFXP(BV(14028, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(965, 16), 8), UFXP(BV(17563, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4555, 16), 8), SFXP(SBV(20369, 16), 8)), SFXP(SBV(15814, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20843, 16), 8), UFXP(BV(19210, 16), 8)), UFXP(BV(40053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10252, 16), 8), UFXP(BV(57363, 16), 8)), UFXP(BV(2079, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23323, 16), 8), SFXP(SBV(-5975, 16), 8)), SFXP(SBV(17348, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58405, 16), 8), UFXP(BV(62652, 16), 8)), UFXP(BV(61289, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21674, 16), 8), UFXP(BV(33491, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1966, 16), 8), UFXP(BV(25255, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7848, 16), 8), SFXP(SBV(25408, 16), 8)), SFXP(SBV(17560, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19366, 16), 8), SFXP(SBV(31888, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19579, 16), 8), SFXP(SBV(-31199, 16), 8)), SFXP(SBV(11620, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23691, 16), 8), SFXP(SBV(-26104, 16), 8)), SFXP(SBV(-2413, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25406, 16), 8), SFXP(SBV(-10188, 16), 8)), SFXP(SBV(-15218, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13251, 16), 8), UFXP(BV(61481, 16), 8)), UFXP(BV(36635, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1774, 16), 8), UFXP(BV(33236, 16), 8)), UFXP(BV(33707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9916, 16), 8), SFXP(SBV(-12552, 16), 8)), SFXP(SBV(-22468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56731, 16), 8), UFXP(BV(17991, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(20363, 16), 8), SFXP(SBV(2559, 16), 8)), SFXP(SBV(6943, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13772, 16), 8), SFXP(SBV(-31579, 16), 8)), SFXP(SBV(20185, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29371, 16), 8), SFXP(SBV(-6010, 16), 8)), SFXP(SBV(-30155, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30500, 16), 8), UFXP(BV(33200, 16), 8)), UFXP(BV(23308, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31243, 16), 8), UFXP(BV(48842, 16), 8)), UFXP(BV(62582, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(7974, 16), 8), UFXP(BV(51783, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10869, 16), 8), SFXP(SBV(-9013, 16), 8)), SFXP(SBV(-19882, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20282, 16), 8), SFXP(SBV(3180, 16), 8)), SFXP(SBV(23462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(65362, 16), 8), UFXP(BV(51049, 16), 8)), UFXP(BV(57719, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28821, 16), 8), SFXP(SBV(29713, 16), 8)), SFXP(SBV(2814, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38609, 16), 8), UFXP(BV(4684, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(2105, 16), 8), SFXP(SBV(15799, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18444, 16), 8), SFXP(SBV(17857, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10273, 16), 8), UFXP(BV(35051, 16), 8)), UFXP(BV(40758, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61550, 16), 8), UFXP(BV(53956, 16), 8)), UFXP(BV(62032, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28034, 16), 8), SFXP(SBV(-19247, 16), 8)), SFXP(SBV(-18255, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22464, 16), 8), SFXP(SBV(14176, 16), 8)), SFXP(SBV(-28896, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11908, 16), 8), SFXP(SBV(-27503, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32613, 16), 8), SFXP(SBV(-9384, 16), 8)), SFXP(SBV(-23229, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22069, 16), 8), UFXP(BV(21042, 16), 8)), UFXP(BV(44497, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53601, 16), 8), UFXP(BV(25060, 16), 8)), UFXP(BV(4156, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13366, 16), 8), SFXP(SBV(-3147, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20283, 16), 8), SFXP(SBV(12974, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59047, 16), 8), UFXP(BV(15970, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25836, 16), 8), SFXP(SBV(14465, 16), 8)), SFXP(SBV(-11371, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56556, 16), 8), UFXP(BV(50584, 16), 8)), UFXP(BV(33992, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37558, 16), 8), UFXP(BV(5478, 16), 8)), UFXP(BV(17250, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7864, 16), 8), SFXP(SBV(17111, 16), 8)), SFXP(SBV(24975, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28325, 16), 8), SFXP(SBV(-30131, 16), 8)), SFXP(SBV(7080, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2712, 16), 8), SFXP(SBV(15938, 16), 8)), SFXP(SBV(13226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38861, 16), 8), UFXP(BV(28088, 16), 8)), UFXP(BV(1413, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18720, 16), 8), UFXP(BV(11116, 16), 8)), UFXP(BV(7604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21893, 16), 8), SFXP(SBV(-32296, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57681, 16), 8), UFXP(BV(30782, 16), 8)), UFXP(BV(26899, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25691, 16), 8), UFXP(BV(57872, 16), 8)), UFXP(BV(33355, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15476, 16), 8), SFXP(SBV(-7037, 16), 8)), SFXP(SBV(32192, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58353, 16), 8), UFXP(BV(63127, 16), 8)), UFXP(BV(60762, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29281, 16), 8), UFXP(BV(61795, 16), 8)), UFXP(BV(55693, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30359, 16), 8), SFXP(SBV(-12163, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(60122, 16), 8), UFXP(BV(2568, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36037, 16), 8), UFXP(BV(8672, 16), 8)), UFXP(BV(41106, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9409, 16), 8), SFXP(SBV(-16437, 16), 8)), SFXP(SBV(-7028, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1886, 16), 8), UFXP(BV(935, 16), 8)), UFXP(BV(951, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21634, 16), 8), UFXP(BV(55994, 16), 8)), UFXP(BV(12092, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3648, 16), 8), SFXP(SBV(-15226, 16), 8)), SFXP(SBV(11578, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14883, 16), 8), UFXP(BV(50614, 16), 8)), UFXP(BV(65497, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(47395, 16), 8), UFXP(BV(4112, 16), 8)), UFXP(BV(40387, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30061, 16), 8), SFXP(SBV(22410, 16), 8)), SFXP(SBV(13065, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1986, 16), 8), SFXP(SBV(-28860, 16), 8)), SFXP(SBV(-30846, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53908, 16), 8), UFXP(BV(15540, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31850, 16), 8), UFXP(BV(16772, 16), 8)), UFXP(BV(15078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2812, 16), 8), SFXP(SBV(-3126, 16), 8)), SFXP(SBV(-5938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5362, 16), 8), SFXP(SBV(-771, 16), 8)), SFXP(SBV(4591, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25358, 16), 8), SFXP(SBV(15727, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26331, 16), 8), SFXP(SBV(14974, 16), 8)), SFXP(SBV(-32707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1276, 16), 8), SFXP(SBV(-5882, 16), 8)), SFXP(SBV(-29319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21701, 16), 8), SFXP(SBV(-25092, 16), 8)), SFXP(SBV(-18743, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26483, 16), 8), UFXP(BV(51251, 16), 8)), UFXP(BV(12198, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63892, 16), 8), UFXP(BV(35616, 16), 8)), UFXP(BV(41614, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21912, 16), 8), SFXP(SBV(-20054, 16), 8)), SFXP(SBV(-1858, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8344, 16), 8), SFXP(SBV(13125, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3095, 16), 8), SFXP(SBV(31104, 16), 8)), SFXP(SBV(28009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42254, 16), 8), UFXP(BV(58650, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7671, 16), 8), UFXP(BV(10508, 16), 8)), UFXP(BV(62699, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24486, 16), 8), SFXP(SBV(-11382, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10371, 16), 8), SFXP(SBV(17614, 16), 8)), SFXP(SBV(-27985, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10679, 16), 8), SFXP(SBV(-8012, 16), 8)), SFXP(SBV(-18691, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(324, 16), 8), SFXP(SBV(5837, 16), 8)), SFXP(SBV(-5513, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17816, 16), 8), SFXP(SBV(31883, 16), 8)), SFXP(SBV(-9366, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14389, 16), 8), UFXP(BV(60595, 16), 8)), UFXP(BV(9448, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33927, 16), 8), UFXP(BV(133, 16), 8)), UFXP(BV(33794, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12431, 16), 8), SFXP(SBV(-23927, 16), 8)), SFXP(SBV(-11496, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21362, 16), 8), SFXP(SBV(-30090, 16), 8)), SFXP(SBV(-8728, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29411, 16), 8), UFXP(BV(21335, 16), 8)), UFXP(BV(50746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(67, 16), 8), UFXP(BV(4656, 16), 8)), UFXP(BV(4723, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33561, 16), 8), UFXP(BV(27829, 16), 8)), UFXP(BV(5732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9944, 16), 8), UFXP(BV(46622, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49466, 16), 8), UFXP(BV(26613, 16), 8)), UFXP(BV(30531, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60772, 16), 8), UFXP(BV(39221, 16), 8)), UFXP(BV(34457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31542, 16), 8), UFXP(BV(49730, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5240, 16), 8), SFXP(SBV(-543, 16), 8)), SFXP(SBV(-5783, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55669, 16), 8), UFXP(BV(34693, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20024, 16), 8), SFXP(SBV(-8177, 16), 8)), SFXP(SBV(11847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29171, 16), 8), UFXP(BV(45145, 16), 8)), UFXP(BV(32429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18703, 16), 8), UFXP(BV(6283, 16), 8)), UFXP(BV(12420, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22610, 16), 8), SFXP(SBV(32400, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7365, 16), 8), UFXP(BV(49434, 16), 8)), UFXP(BV(56799, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8362, 16), 8), UFXP(BV(54223, 16), 8)), UFXP(BV(62585, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37932, 16), 8), UFXP(BV(62208, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39702, 16), 8), UFXP(BV(21063, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26971, 16), 8), SFXP(SBV(-24335, 16), 8)), SFXP(SBV(14230, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31622, 16), 8), SFXP(SBV(-26254, 16), 8)), SFXP(SBV(31720, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22762, 16), 8), SFXP(SBV(-30213, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5705, 16), 8), SFXP(SBV(-16320, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9807, 16), 8), UFXP(BV(30028, 16), 8)), UFXP(BV(36219, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8248, 16), 8), SFXP(SBV(-28776, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21588, 16), 8), SFXP(SBV(14314, 16), 8)), SFXP(SBV(-7274, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35670, 16), 8), UFXP(BV(4076, 16), 8)), UFXP(BV(39746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40217, 16), 8), UFXP(BV(12791, 16), 8)), UFXP(BV(43357, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9578, 16), 8), UFXP(BV(11162, 16), 8)), UFXP(BV(20740, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17767, 16), 8), SFXP(SBV(-12146, 16), 8)), SFXP(SBV(29913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28111, 16), 8), SFXP(SBV(-25866, 16), 8)), SFXP(SBV(-2245, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28599, 16), 8), SFXP(SBV(-6299, 16), 8)), SFXP(SBV(30638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23350, 16), 8), UFXP(BV(16092, 16), 8)), UFXP(BV(7258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25302, 16), 8), SFXP(SBV(8869, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30785, 16), 8), SFXP(SBV(16865, 16), 8)), SFXP(SBV(3533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10604, 16), 8), SFXP(SBV(4775, 16), 8)), SFXP(SBV(-15379, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38644, 16), 8), UFXP(BV(24594, 16), 8)), UFXP(BV(63238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52379, 16), 8), UFXP(BV(53606, 16), 8)), UFXP(BV(64309, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6433, 16), 8), UFXP(BV(63009, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30171, 16), 8), SFXP(SBV(-32491, 16), 8)), SFXP(SBV(2320, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8119, 16), 8), SFXP(SBV(4789, 16), 8)), SFXP(SBV(12908, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57646, 16), 8), UFXP(BV(37819, 16), 8)), UFXP(BV(19827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8013, 16), 8), UFXP(BV(53764, 16), 8)), UFXP(BV(44455, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18383, 16), 8), UFXP(BV(58933, 16), 8)), UFXP(BV(24986, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63846, 16), 8), UFXP(BV(61821, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31256, 16), 8), SFXP(SBV(-30516, 16), 8)), SFXP(SBV(9739, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9659, 16), 8), UFXP(BV(32592, 16), 8)), UFXP(BV(42603, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63800, 16), 8), UFXP(BV(65343, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3926, 16), 8), UFXP(BV(21973, 16), 8)), UFXP(BV(9296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13611, 16), 8), SFXP(SBV(-14056, 16), 8)), SFXP(SBV(-445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59064, 16), 8), UFXP(BV(23808, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14802, 16), 8), UFXP(BV(49005, 16), 8)), UFXP(BV(31333, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43546, 16), 8), UFXP(BV(41369, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6215, 16), 8), UFXP(BV(33726, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3566, 16), 8), SFXP(SBV(-12543, 16), 8)), SFXP(SBV(21888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21385, 16), 8), UFXP(BV(32011, 16), 8)), UFXP(BV(52603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6102, 16), 8), SFXP(SBV(22868, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19027, 16), 8), SFXP(SBV(19955, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(11286, 16), 8), SFXP(SBV(-26479, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8334, 16), 8), UFXP(BV(22850, 16), 8)), UFXP(BV(51020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29970, 16), 8), SFXP(SBV(10072, 16), 8)), SFXP(SBV(-19898, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8688, 16), 8), SFXP(SBV(13986, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42061, 16), 8), UFXP(BV(46625, 16), 8)), UFXP(BV(23150, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12962, 16), 8), SFXP(SBV(17527, 16), 8)), SFXP(SBV(-30063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11321, 16), 8), SFXP(SBV(16785, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12907, 16), 8), SFXP(SBV(-2164, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(818, 16), 8), UFXP(BV(18215, 16), 8)), UFXP(BV(19033, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28418, 16), 8), SFXP(SBV(8133, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25500, 16), 8), SFXP(SBV(5388, 16), 8)), SFXP(SBV(30888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2019, 16), 8), SFXP(SBV(-4232, 16), 8)), SFXP(SBV(2213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59265, 16), 8), UFXP(BV(10212, 16), 8)), UFXP(BV(49053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15482, 16), 8), UFXP(BV(17431, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14760, 16), 8), SFXP(SBV(-15385, 16), 8)), SFXP(SBV(30145, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4846, 16), 8), SFXP(SBV(28826, 16), 8)), SFXP(SBV(-31864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61305, 16), 8), UFXP(BV(44482, 16), 8)), UFXP(BV(16823, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22672, 16), 8), SFXP(SBV(31032, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19129, 16), 8), UFXP(BV(48565, 16), 8)), UFXP(BV(36100, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30215, 16), 8), UFXP(BV(17544, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18708, 16), 8), SFXP(SBV(18636, 16), 8)), SFXP(SBV(-72, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50495, 16), 8), UFXP(BV(19356, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15995, 16), 8), SFXP(SBV(-19152, 16), 8)), SFXP(SBV(-16978, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8206, 16), 8), SFXP(SBV(-16764, 16), 8)), SFXP(SBV(-24970, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33913, 16), 8), UFXP(BV(42836, 16), 8)), UFXP(BV(56613, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-964, 16), 8), SFXP(SBV(11305, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40336, 16), 8), UFXP(BV(30144, 16), 8)), UFXP(BV(10192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7778, 16), 8), SFXP(SBV(28905, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16137, 16), 8), UFXP(BV(23925, 16), 8)), UFXP(BV(789, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55269, 16), 8), UFXP(BV(45533, 16), 8)), UFXP(BV(9736, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54137, 16), 8), UFXP(BV(8825, 16), 8)), UFXP(BV(45312, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22503, 16), 8), UFXP(BV(53217, 16), 8)), UFXP(BV(34822, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7557, 16), 8), SFXP(SBV(-28195, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19900, 16), 8), SFXP(SBV(-21788, 16), 8)), SFXP(SBV(1888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24722, 16), 8), UFXP(BV(27951, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17920, 16), 8), SFXP(SBV(-22510, 16), 8)), SFXP(SBV(25106, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22915, 16), 8), SFXP(SBV(10075, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49208, 16), 8), UFXP(BV(22015, 16), 8)), UFXP(BV(37391, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49638, 16), 8), UFXP(BV(39561, 16), 8)), UFXP(BV(10077, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3582, 16), 8), UFXP(BV(64482, 16), 8)), UFXP(BV(4636, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13805, 16), 8), SFXP(SBV(30853, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50674, 16), 8), UFXP(BV(64587, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9928, 16), 8), UFXP(BV(12372, 16), 8)), UFXP(BV(21050, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21466, 16), 8), SFXP(SBV(-14442, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(55972, 16), 8), UFXP(BV(30356, 16), 8)), UFXP(BV(17918, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14498, 16), 8), SFXP(SBV(-32471, 16), 8)), SFXP(SBV(-17973, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26189, 16), 8), SFXP(SBV(-26124, 16), 8)), SFXP(SBV(-65, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35688, 16), 8), UFXP(BV(20182, 16), 8)), UFXP(BV(55870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8585, 16), 8), UFXP(BV(24509, 16), 8)), UFXP(BV(33094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56123, 16), 8), UFXP(BV(23286, 16), 8)), UFXP(BV(58728, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21033, 16), 8), UFXP(BV(49578, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18018, 16), 8), UFXP(BV(30993, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52953, 16), 8), UFXP(BV(50028, 16), 8)), UFXP(BV(2925, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56151, 16), 8), UFXP(BV(24393, 16), 8)), UFXP(BV(41940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12796, 16), 8), UFXP(BV(54777, 16), 8)), UFXP(BV(51019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26532, 16), 8), SFXP(SBV(-23875, 16), 8)), SFXP(SBV(15948, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51412, 16), 8), UFXP(BV(15831, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25671, 16), 8), UFXP(BV(55645, 16), 8)), UFXP(BV(15780, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3, 16), 8), SFXP(SBV(13161, 16), 8)), SFXP(SBV(-13164, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31567, 16), 8), UFXP(BV(35572, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13998, 16), 8), UFXP(BV(44374, 16), 8)), UFXP(BV(35160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3591, 16), 8), SFXP(SBV(-22090, 16), 8)), SFXP(SBV(17815, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4513, 16), 8), UFXP(BV(47803, 16), 8)), UFXP(BV(52316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13538, 16), 8), UFXP(BV(1832, 16), 8)), UFXP(BV(31345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18663, 16), 8), UFXP(BV(19466, 16), 8)), UFXP(BV(38129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18800, 16), 8), SFXP(SBV(23991, 16), 8)), SFXP(SBV(5191, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-5500, 16), 8), SFXP(SBV(-17809, 16), 8)), SFXP(SBV(-10600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53282, 16), 8), UFXP(BV(44155, 16), 8)), UFXP(BV(31901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28312, 16), 8), SFXP(SBV(3635, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2139, 16), 8), SFXP(SBV(-4689, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28529, 16), 8), UFXP(BV(2297, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18052, 16), 8), SFXP(SBV(-10270, 16), 8)), SFXP(SBV(3300, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30867, 16), 8), SFXP(SBV(-9178, 16), 8)), SFXP(SBV(21689, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35052, 16), 8), UFXP(BV(13912, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5645, 16), 8), SFXP(SBV(-27975, 16), 8)), SFXP(SBV(22330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25106, 16), 8), UFXP(BV(23314, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28938, 16), 8), SFXP(SBV(22534, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21815, 16), 8), UFXP(BV(1967, 16), 8)), UFXP(BV(36545, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8828, 16), 8), SFXP(SBV(-10752, 16), 8)), SFXP(SBV(19580, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14240, 16), 8), UFXP(BV(4746, 16), 8)), UFXP(BV(1852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32504, 16), 8), UFXP(BV(33910, 16), 8)), UFXP(BV(878, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28286, 16), 8), UFXP(BV(13404, 16), 8)), UFXP(BV(41690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32446, 16), 8), UFXP(BV(6265, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13337, 16), 8), SFXP(SBV(-27978, 16), 8)), SFXP(SBV(-15797, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42099, 16), 8), UFXP(BV(7489, 16), 8)), UFXP(BV(51913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6013, 16), 8), SFXP(SBV(-23335, 16), 8)), SFXP(SBV(29348, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13787, 16), 8), SFXP(SBV(-32748, 16), 8)), SFXP(SBV(-19001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20048, 16), 8), SFXP(SBV(-422, 16), 8)), SFXP(SBV(20470, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5045, 16), 8), UFXP(BV(4387, 16), 8)), UFXP(BV(658, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26277, 16), 8), UFXP(BV(3913, 16), 8)), UFXP(BV(8433, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33647, 16), 8), UFXP(BV(41105, 16), 8)), UFXP(BV(28626, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10363, 16), 8), UFXP(BV(9289, 16), 8)), UFXP(BV(19652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(6967, 16), 8), SFXP(SBV(-28854, 16), 8)), SFXP(SBV(1174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30449, 16), 8), SFXP(SBV(17521, 16), 8)), SFXP(SBV(12928, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4136, 16), 8), SFXP(SBV(20438, 16), 8)), SFXP(SBV(24574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12740, 16), 8), UFXP(BV(28401, 16), 8)), UFXP(BV(37137, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8995, 16), 8), UFXP(BV(64308, 16), 8)), UFXP(BV(7767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1342, 16), 8), SFXP(SBV(28338, 16), 8)), SFXP(SBV(-29680, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21215, 16), 8), UFXP(BV(61520, 16), 8)), UFXP(BV(25231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15605, 16), 8), SFXP(SBV(-26253, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41001, 16), 8), UFXP(BV(4291, 16), 8)), UFXP(BV(45292, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2899, 16), 8), SFXP(SBV(18731, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33492, 16), 8), UFXP(BV(17113, 16), 8)), UFXP(BV(50605, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2683, 16), 8), SFXP(SBV(21031, 16), 8)), SFXP(SBV(-18348, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51302, 16), 8), UFXP(BV(15740, 16), 8)), UFXP(BV(35562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5151, 16), 8), SFXP(SBV(-1695, 16), 8)), SFXP(SBV(-3456, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27912, 16), 8), SFXP(SBV(-8894, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21424, 16), 8), SFXP(SBV(1996, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30700, 16), 8), SFXP(SBV(10914, 16), 8)), SFXP(SBV(-19786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31094, 16), 8), UFXP(BV(42060, 16), 8)), UFXP(BV(7618, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20926, 16), 8), SFXP(SBV(-23169, 16), 8)), SFXP(SBV(-2243, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22559, 16), 8), UFXP(BV(34579, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15726, 16), 8), SFXP(SBV(30148, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39752, 16), 8), UFXP(BV(51987, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23949, 16), 8), SFXP(SBV(11279, 16), 8)), SFXP(SBV(-6583, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31736, 16), 8), UFXP(BV(21739, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16518, 16), 8), UFXP(BV(55536, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15288, 16), 8), SFXP(SBV(-679, 16), 8)), SFXP(SBV(-15967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31603, 16), 8), SFXP(SBV(14705, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2484, 16), 8), UFXP(BV(31667, 16), 8)), UFXP(BV(36353, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22041, 16), 8), SFXP(SBV(32270, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20381, 16), 8), UFXP(BV(3821, 16), 8)), UFXP(BV(24202, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18651, 16), 8), UFXP(BV(59979, 16), 8)), UFXP(BV(13094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55094, 16), 8), UFXP(BV(64940, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52063, 16), 8), UFXP(BV(44794, 16), 8)), UFXP(BV(300, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(4468, 16), 8), UFXP(BV(41906, 16), 8)), UFXP(BV(10495, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12952, 16), 8), UFXP(BV(32515, 16), 8)), UFXP(BV(45467, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17075, 16), 8), SFXP(SBV(-13484, 16), 8)), SFXP(SBV(-3591, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6585, 16), 8), SFXP(SBV(7022, 16), 8)), SFXP(SBV(-13607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18485, 16), 8), SFXP(SBV(7519, 16), 8)), SFXP(SBV(26004, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11684, 16), 8), SFXP(SBV(-12406, 16), 8)), SFXP(SBV(722, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18006, 16), 8), UFXP(BV(4636, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7928, 16), 8), SFXP(SBV(-9596, 16), 8)), SFXP(SBV(17524, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31911, 16), 8), UFXP(BV(60521, 16), 8)), UFXP(BV(26896, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21464, 16), 8), SFXP(SBV(-30355, 16), 8)), SFXP(SBV(8891, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3711, 16), 8), UFXP(BV(50983, 16), 8)), UFXP(BV(54694, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25292, 16), 8), SFXP(SBV(19418, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26805, 16), 8), SFXP(SBV(-22305, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15196, 16), 8), SFXP(SBV(-15969, 16), 8)), SFXP(SBV(-773, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48277, 16), 8), UFXP(BV(49886, 16), 8)), UFXP(BV(32627, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19350, 16), 8), SFXP(SBV(11092, 16), 8)), SFXP(SBV(13569, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4795, 16), 8), SFXP(SBV(20299, 16), 8)), SFXP(SBV(25094, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7483, 16), 8), SFXP(SBV(2408, 16), 8)), SFXP(SBV(-4850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9582, 16), 8), SFXP(SBV(2702, 16), 8)), SFXP(SBV(-12284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12831, 16), 8), UFXP(BV(65050, 16), 8)), UFXP(BV(49114, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8939, 16), 8), UFXP(BV(50211, 16), 8)), UFXP(BV(59150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27955, 16), 8), UFXP(BV(45245, 16), 8)), UFXP(BV(7664, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15347, 16), 8), SFXP(SBV(-18573, 16), 8)), SFXP(SBV(-31616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46512, 16), 8), UFXP(BV(28855, 16), 8)), UFXP(BV(65249, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-32200, 16), 8), SFXP(SBV(20505, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22873, 16), 8), SFXP(SBV(30040, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46473, 16), 8), UFXP(BV(50170, 16), 8)), UFXP(BV(63651, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31022, 16), 8), UFXP(BV(13902, 16), 8)), UFXP(BV(17120, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15589, 16), 8), SFXP(SBV(14997, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22598, 16), 8), UFXP(BV(3989, 16), 8)), UFXP(BV(24442, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7437, 16), 8), SFXP(SBV(9523, 16), 8)), SFXP(SBV(-16960, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15470, 16), 8), UFXP(BV(26675, 16), 8)), UFXP(BV(39098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6279, 16), 8), SFXP(SBV(-3269, 16), 8)), SFXP(SBV(-14643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17807, 16), 8), SFXP(SBV(15944, 16), 8)), SFXP(SBV(-31785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4286, 16), 8), SFXP(SBV(13703, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48639, 16), 8), UFXP(BV(16685, 16), 8)), UFXP(BV(65324, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26461, 16), 8), SFXP(SBV(-13691, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14854, 16), 8), UFXP(BV(34794, 16), 8)), UFXP(BV(49648, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10370, 16), 8), UFXP(BV(60559, 16), 8)), UFXP(BV(15347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47045, 16), 8), UFXP(BV(43324, 16), 8)), UFXP(BV(3721, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25832, 16), 8), SFXP(SBV(-10069, 16), 8)), SFXP(SBV(-15763, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4580, 16), 8), SFXP(SBV(330, 16), 8)), SFXP(SBV(-4910, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6884, 16), 8), SFXP(SBV(7853, 16), 8)), SFXP(SBV(-14737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1436, 16), 8), SFXP(SBV(28622, 16), 8)), SFXP(SBV(30058, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14002, 16), 8), UFXP(BV(52674, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31415, 16), 8), UFXP(BV(59909, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4097, 16), 8), SFXP(SBV(4843, 16), 8)), SFXP(SBV(-11970, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20437, 16), 8), SFXP(SBV(10643, 16), 8)), SFXP(SBV(9794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29375, 16), 8), UFXP(BV(64401, 16), 8)), UFXP(BV(30510, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6770, 16), 8), UFXP(BV(55357, 16), 8)), UFXP(BV(22142, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28914, 16), 8), SFXP(SBV(-15088, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3101, 16), 8), UFXP(BV(10188, 16), 8)), UFXP(BV(58449, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16037, 16), 8), SFXP(SBV(1664, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61542, 16), 8), UFXP(BV(59939, 16), 8)), UFXP(BV(1603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7952, 16), 8), SFXP(SBV(-7125, 16), 8)), SFXP(SBV(-15077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26753, 16), 8), SFXP(SBV(-6697, 16), 8)), SFXP(SBV(20056, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4312, 16), 8), SFXP(SBV(8937, 16), 8)), SFXP(SBV(19461, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9214, 16), 8), SFXP(SBV(-7156, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41431, 16), 8), UFXP(BV(65513, 16), 8)), UFXP(BV(41454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11660, 16), 8), SFXP(SBV(-30187, 16), 8)), SFXP(SBV(-18527, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25710, 16), 8), SFXP(SBV(-21020, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21577, 16), 8), SFXP(SBV(-26054, 16), 8)), SFXP(SBV(4477, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9081, 16), 8), UFXP(BV(26277, 16), 8)), UFXP(BV(14611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13213, 16), 8), UFXP(BV(3136, 16), 8)), UFXP(BV(30788, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11632, 16), 8), SFXP(SBV(-12433, 16), 8)), SFXP(SBV(801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2145, 16), 8), SFXP(SBV(-7683, 16), 8)), SFXP(SBV(1160, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1677, 16), 8), UFXP(BV(57511, 16), 8)), UFXP(BV(59188, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(65054, 16), 8), UFXP(BV(2616, 16), 8)), UFXP(BV(9410, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19371, 16), 8), UFXP(BV(64538, 16), 8)), UFXP(BV(33796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31618, 16), 8), SFXP(SBV(30746, 16), 8)), SFXP(SBV(-872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15686, 16), 8), UFXP(BV(588, 16), 8)), UFXP(BV(36028, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2715, 16), 8), SFXP(SBV(-10565, 16), 8)), SFXP(SBV(13280, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41507, 16), 8), UFXP(BV(65081, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3441, 16), 8), UFXP(BV(30406, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3261, 16), 8), SFXP(SBV(-12887, 16), 8)), SFXP(SBV(-16148, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2293, 16), 8), SFXP(SBV(6237, 16), 8)), SFXP(SBV(3944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4696, 16), 8), SFXP(SBV(-31369, 16), 8)), SFXP(SBV(-29471, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61241, 16), 8), UFXP(BV(56857, 16), 8)), UFXP(BV(4384, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25276, 16), 8), SFXP(SBV(-765, 16), 8)), SFXP(SBV(-26041, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24896, 16), 8), SFXP(SBV(8523, 16), 8)), SFXP(SBV(16373, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50048, 16), 8), UFXP(BV(15646, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18808, 16), 8), UFXP(BV(32319, 16), 8)), UFXP(BV(15140, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21208, 16), 8), SFXP(SBV(-22857, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35690, 16), 8), UFXP(BV(57509, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30742, 16), 8), UFXP(BV(55330, 16), 8)), UFXP(BV(20536, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48822, 16), 8), UFXP(BV(11170, 16), 8)), UFXP(BV(37652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19359, 16), 8), SFXP(SBV(20119, 16), 8)), SFXP(SBV(-26058, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11195, 16), 8), SFXP(SBV(1066, 16), 8)), SFXP(SBV(12261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11694, 16), 8), SFXP(SBV(11169, 16), 8)), SFXP(SBV(-22863, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28846, 16), 8), SFXP(SBV(-19007, 16), 8)), SFXP(SBV(20986, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-722, 16), 8), SFXP(SBV(26169, 16), 8)), SFXP(SBV(-26891, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20118, 16), 8), UFXP(BV(36441, 16), 8)), UFXP(BV(56559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15814, 16), 8), SFXP(SBV(11558, 16), 8)), SFXP(SBV(27372, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60158, 16), 8), UFXP(BV(60858, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26293, 16), 8), UFXP(BV(49309, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2561, 16), 8), SFXP(SBV(-20194, 16), 8)), SFXP(SBV(-22755, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28643, 16), 8), SFXP(SBV(-6546, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20600, 16), 8), SFXP(SBV(16131, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29971, 16), 8), SFXP(SBV(-6756, 16), 8)), SFXP(SBV(-4522, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2880, 16), 8), UFXP(BV(65068, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54417, 16), 8), UFXP(BV(48700, 16), 8)), UFXP(BV(37581, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10147, 16), 8), SFXP(SBV(14510, 16), 8)), SFXP(SBV(-24657, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48068, 16), 8), UFXP(BV(49584, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47958, 16), 8), UFXP(BV(12185, 16), 8)), UFXP(BV(35773, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9912, 16), 8), SFXP(SBV(5166, 16), 8)), SFXP(SBV(4746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9347, 16), 8), UFXP(BV(64237, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29411, 16), 8), SFXP(SBV(-13303, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1072, 16), 8), UFXP(BV(39604, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22020, 16), 8), UFXP(BV(58747, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15799, 16), 8), UFXP(BV(18873, 16), 8)), UFXP(BV(62462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38582, 16), 8), UFXP(BV(62822, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30174, 16), 8), SFXP(SBV(25137, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29089, 16), 8), SFXP(SBV(24052, 16), 8)), SFXP(SBV(19510, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13599, 16), 8), UFXP(BV(1421, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(55531, 16), 8), UFXP(BV(18308, 16), 8)), UFXP(BV(39175, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17200, 16), 8), SFXP(SBV(-17819, 16), 8)), SFXP(SBV(30517, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3510, 16), 8), SFXP(SBV(-18389, 16), 8)), SFXP(SBV(-14879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18845, 16), 8), SFXP(SBV(17263, 16), 8)), SFXP(SBV(-29428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10938, 16), 8), SFXP(SBV(11287, 16), 8)), SFXP(SBV(23502, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31189, 16), 8), SFXP(SBV(-13066, 16), 8)), SFXP(SBV(21281, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63184, 16), 8), UFXP(BV(12191, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17153, 16), 8), UFXP(BV(19963, 16), 8)), UFXP(BV(62726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11246, 16), 8), SFXP(SBV(-15040, 16), 8)), SFXP(SBV(-3794, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(267, 16), 8), SFXP(SBV(-19591, 16), 8)), SFXP(SBV(-19324, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14415, 16), 8), SFXP(SBV(4584, 16), 8)), SFXP(SBV(18999, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(47132, 16), 8), UFXP(BV(50140, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1542, 16), 8), UFXP(BV(56038, 16), 8)), UFXP(BV(57580, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7989, 16), 8), UFXP(BV(58737, 16), 8)), UFXP(BV(14788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53292, 16), 8), UFXP(BV(53867, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26613, 16), 8), UFXP(BV(46726, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52237, 16), 8), UFXP(BV(55184, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22612, 16), 8), SFXP(SBV(-8798, 16), 8)), SFXP(SBV(13814, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19202, 16), 8), UFXP(BV(24423, 16), 8)), UFXP(BV(60315, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60024, 16), 8), UFXP(BV(46538, 16), 8)), UFXP(BV(32730, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46496, 16), 8), UFXP(BV(34255, 16), 8)), UFXP(BV(15215, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5366, 16), 8), SFXP(SBV(-24923, 16), 8)), SFXP(SBV(-19557, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29617, 16), 8), SFXP(SBV(17255, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49416, 16), 8), UFXP(BV(15862, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14969, 16), 8), UFXP(BV(61456, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5378, 16), 8), SFXP(SBV(16154, 16), 8)), SFXP(SBV(-10776, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5897, 16), 8), SFXP(SBV(32155, 16), 8)), SFXP(SBV(19799, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4550, 16), 8), SFXP(SBV(-1634, 16), 8)), SFXP(SBV(-29041, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4828, 16), 8), SFXP(SBV(32397, 16), 8)), SFXP(SBV(21163, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26934, 16), 8), UFXP(BV(50317, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(65324, 16), 8), UFXP(BV(49223, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7384, 16), 8), SFXP(SBV(-13001, 16), 8)), SFXP(SBV(20385, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38321, 16), 8), UFXP(BV(24832, 16), 8)), UFXP(BV(13489, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7502, 16), 8), SFXP(SBV(-29174, 16), 8)), SFXP(SBV(21672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19695, 16), 8), UFXP(BV(2641, 16), 8)), UFXP(BV(22336, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8534, 16), 8), UFXP(BV(14507, 16), 8)), UFXP(BV(23041, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3402, 16), 8), SFXP(SBV(-2541, 16), 8)), SFXP(SBV(31768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-9279, 16), 8), SFXP(SBV(-1716, 16), 8)), SFXP(SBV(-3337, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27819, 16), 8), UFXP(BV(37894, 16), 8)), UFXP(BV(55461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14360, 16), 8), UFXP(BV(26274, 16), 8)), UFXP(BV(32015, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24211, 16), 8), SFXP(SBV(16185, 16), 8)), SFXP(SBV(8026, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42008, 16), 8), UFXP(BV(14206, 16), 8)), UFXP(BV(37355, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4246, 16), 8), SFXP(SBV(-1697, 16), 8)), SFXP(SBV(28147, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21742, 16), 8), SFXP(SBV(-1394, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7167, 16), 8), SFXP(SBV(24218, 16), 8)), SFXP(SBV(31385, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57184, 16), 8), UFXP(BV(35599, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44221, 16), 8), UFXP(BV(56580, 16), 8)), UFXP(BV(35265, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8993, 16), 8), SFXP(SBV(25261, 16), 8)), SFXP(SBV(30112, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35091, 16), 8), UFXP(BV(42501, 16), 8)), UFXP(BV(58623, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63547, 16), 8), UFXP(BV(24947, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14210, 16), 8), SFXP(SBV(-7259, 16), 8)), SFXP(SBV(-6951, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12779, 16), 8), UFXP(BV(28690, 16), 8)), UFXP(BV(55891, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19188, 16), 8), UFXP(BV(4656, 16), 8)), UFXP(BV(21302, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10521, 16), 8), SFXP(SBV(22996, 16), 8)), SFXP(SBV(32019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13863, 16), 8), SFXP(SBV(-23264, 16), 8)), SFXP(SBV(28409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26577, 16), 8), SFXP(SBV(28089, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60006, 16), 8), UFXP(BV(10699, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8512, 16), 8), UFXP(BV(25460, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55964, 16), 8), UFXP(BV(4020, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1205, 16), 8), SFXP(SBV(15604, 16), 8)), SFXP(SBV(14399, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47979, 16), 8), UFXP(BV(17002, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5397, 16), 8), UFXP(BV(63609, 16), 8)), UFXP(BV(7324, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12330, 16), 8), SFXP(SBV(19050, 16), 8)), SFXP(SBV(31380, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(65053, 16), 8), UFXP(BV(38095, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10718, 16), 8), UFXP(BV(42493, 16), 8)), UFXP(BV(53211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62336, 16), 8), UFXP(BV(1888, 16), 8)), UFXP(BV(64224, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13033, 16), 8), SFXP(SBV(-21764, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24331, 16), 8), UFXP(BV(45025, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22902, 16), 8), SFXP(SBV(-12124, 16), 8)), SFXP(SBV(-30510, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13775, 16), 8), SFXP(SBV(-20651, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28688, 16), 8), UFXP(BV(56658, 16), 8)), UFXP(BV(19810, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12590, 16), 8), SFXP(SBV(-13823, 16), 8)), SFXP(SBV(24450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19246, 16), 8), SFXP(SBV(28885, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52319, 16), 8), UFXP(BV(65218, 16), 8)), UFXP(BV(52001, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13753, 16), 8), UFXP(BV(42902, 16), 8)), UFXP(BV(56655, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10185, 16), 8), UFXP(BV(10585, 16), 8)), UFXP(BV(65136, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25773, 16), 8), SFXP(SBV(-31759, 16), 8)), SFXP(SBV(-5986, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58862, 16), 8), UFXP(BV(41970, 16), 8)), UFXP(BV(16892, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16793, 16), 8), UFXP(BV(35144, 16), 8)), UFXP(BV(47185, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14853, 16), 8), UFXP(BV(11592, 16), 8)), UFXP(BV(26445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5143, 16), 8), UFXP(BV(56590, 16), 8)), UFXP(BV(61733, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20691, 16), 8), SFXP(SBV(10711, 16), 8)), SFXP(SBV(-9980, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59437, 16), 8), UFXP(BV(59555, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14037, 16), 8), UFXP(BV(54980, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10834, 16), 8), SFXP(SBV(-9517, 16), 8)), SFXP(SBV(20351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54154, 16), 8), UFXP(BV(15608, 16), 8)), UFXP(BV(38546, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-8561, 16), 8), SFXP(SBV(-14295, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39473, 16), 8), UFXP(BV(19732, 16), 8)), UFXP(BV(59205, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17818, 16), 8), SFXP(SBV(-7267, 16), 8)), SFXP(SBV(25085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27035, 16), 8), SFXP(SBV(-13884, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13112, 16), 8), UFXP(BV(5409, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26794, 16), 8), UFXP(BV(44955, 16), 8)), UFXP(BV(47375, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24533, 16), 8), SFXP(SBV(1591, 16), 8)), SFXP(SBV(22942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33057, 16), 8), UFXP(BV(34503, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16614, 16), 8), SFXP(SBV(-15380, 16), 8)), SFXP(SBV(-1234, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17417, 16), 8), SFXP(SBV(5474, 16), 8)), SFXP(SBV(22891, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-984, 16), 8), SFXP(SBV(-6462, 16), 8)), SFXP(SBV(5478, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19131, 16), 8), SFXP(SBV(-15030, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15837, 16), 8), SFXP(SBV(29135, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6884, 16), 8), UFXP(BV(59682, 16), 8)), UFXP(BV(12738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8692, 16), 8), SFXP(SBV(28576, 16), 8)), SFXP(SBV(-19884, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28210, 16), 8), UFXP(BV(31175, 16), 8)), UFXP(BV(62571, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57822, 16), 8), UFXP(BV(36108, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27519, 16), 8), SFXP(SBV(6456, 16), 8)), SFXP(SBV(-31561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(60554, 16), 8), UFXP(BV(22580, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30526, 16), 8), UFXP(BV(3716, 16), 8)), UFXP(BV(26810, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8167, 16), 8), SFXP(SBV(-8145, 16), 8)), SFXP(SBV(-16312, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31275, 16), 8), SFXP(SBV(-2420, 16), 8)), SFXP(SBV(28855, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2574, 16), 8), SFXP(SBV(31356, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22887, 16), 8), UFXP(BV(43933, 16), 8)), UFXP(BV(1284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45874, 16), 8), UFXP(BV(50079, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27420, 16), 8), SFXP(SBV(-10066, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18496, 16), 8), SFXP(SBV(6861, 16), 8)), SFXP(SBV(-25357, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42520, 16), 8), UFXP(BV(61515, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29161, 16), 8), SFXP(SBV(-12500, 16), 8)), SFXP(SBV(-17916, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30277, 16), 8), SFXP(SBV(-13118, 16), 8)), SFXP(SBV(-17159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29969, 16), 8), SFXP(SBV(-21365, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36299, 16), 8), UFXP(BV(6789, 16), 8)), UFXP(BV(45129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4087, 16), 8), SFXP(SBV(6523, 16), 8)), SFXP(SBV(-26933, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51999, 16), 8), UFXP(BV(34876, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10296, 16), 8), SFXP(SBV(-17614, 16), 8)), SFXP(SBV(-7318, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61780, 16), 8), UFXP(BV(27570, 16), 8)), UFXP(BV(34210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43026, 16), 8), UFXP(BV(10752, 16), 8)), UFXP(BV(53778, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63039, 16), 8), UFXP(BV(41347, 16), 8)), UFXP(BV(21692, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26505, 16), 8), UFXP(BV(42598, 16), 8)), UFXP(BV(3567, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33416, 16), 8), UFXP(BV(46382, 16), 8)), UFXP(BV(52570, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6505, 16), 8), SFXP(SBV(5603, 16), 8)), SFXP(SBV(12108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(743, 16), 8), SFXP(SBV(-32162, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10020, 16), 8), SFXP(SBV(-29324, 16), 8)), SFXP(SBV(31889, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-5544, 16), 8), SFXP(SBV(12139, 16), 8)), SFXP(SBV(-741, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64259, 16), 8), UFXP(BV(28954, 16), 8)), UFXP(BV(35305, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15956, 16), 8), SFXP(SBV(3059, 16), 8)), SFXP(SBV(-19015, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49152, 16), 8), UFXP(BV(19858, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3400, 16), 8), SFXP(SBV(13953, 16), 8)), SFXP(SBV(17353, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26936, 16), 8), SFXP(SBV(-3960, 16), 8)), SFXP(SBV(-22976, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25103, 16), 8), SFXP(SBV(-2478, 16), 8)), SFXP(SBV(-22625, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15741, 16), 8), UFXP(BV(27725, 16), 8)), UFXP(BV(826, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52334, 16), 8), UFXP(BV(55276, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37969, 16), 8), UFXP(BV(38348, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28217, 16), 8), SFXP(SBV(-9215, 16), 8)), SFXP(SBV(19002, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61512, 16), 8), UFXP(BV(11797, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52779, 16), 8), UFXP(BV(33397, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35238, 16), 8), UFXP(BV(61647, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-7791, 16), 8), SFXP(SBV(1685, 16), 8)), SFXP(SBV(14255, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28162, 16), 8), SFXP(SBV(370, 16), 8)), SFXP(SBV(24834, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(16943, 16), 8), SFXP(SBV(22800, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12481, 16), 8), SFXP(SBV(15031, 16), 8)), SFXP(SBV(27512, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47059, 16), 8), UFXP(BV(30424, 16), 8)), UFXP(BV(22108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44298, 16), 8), UFXP(BV(51733, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6083, 16), 8), SFXP(SBV(867, 16), 8)), SFXP(SBV(20601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19050, 16), 8), UFXP(BV(27172, 16), 8)), UFXP(BV(46222, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5521, 16), 8), UFXP(BV(8796, 16), 8)), UFXP(BV(62261, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6786, 16), 8), UFXP(BV(61241, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30018, 16), 8), SFXP(SBV(-12732, 16), 8)), SFXP(SBV(17286, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15730, 16), 8), UFXP(BV(15372, 16), 8)), UFXP(BV(27034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25346, 16), 8), SFXP(SBV(1438, 16), 8)), SFXP(SBV(11302, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45385, 16), 8), UFXP(BV(21331, 16), 8)), UFXP(BV(24054, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35365, 16), 8), UFXP(BV(49770, 16), 8)), UFXP(BV(59710, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7748, 16), 8), SFXP(SBV(-9304, 16), 8)), SFXP(SBV(17052, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13015, 16), 8), SFXP(SBV(10462, 16), 8)), SFXP(SBV(23477, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8204, 16), 8), UFXP(BV(58465, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2519, 16), 8), SFXP(SBV(-17236, 16), 8)), SFXP(SBV(-14717, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2353, 16), 8), SFXP(SBV(24945, 16), 8)), SFXP(SBV(-22592, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28521, 16), 8), SFXP(SBV(3267, 16), 8)), SFXP(SBV(31788, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3761, 16), 8), SFXP(SBV(-11401, 16), 8)), SFXP(SBV(-7640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-26937, 16), 8), SFXP(SBV(-16555, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22157, 16), 8), UFXP(BV(2598, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-5411, 16), 8), SFXP(SBV(16724, 16), 8)), SFXP(SBV(-25810, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45074, 16), 8), UFXP(BV(56860, 16), 8)), UFXP(BV(36398, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15751, 16), 8), UFXP(BV(15534, 16), 8)), UFXP(BV(217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36560, 16), 8), UFXP(BV(37460, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2387, 16), 8), UFXP(BV(10144, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6586, 16), 8), SFXP(SBV(28279, 16), 8)), SFXP(SBV(21693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4125, 16), 8), UFXP(BV(49209, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29425, 16), 8), SFXP(SBV(-19050, 16), 8)), SFXP(SBV(17061, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48356, 16), 8), UFXP(BV(37809, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17043, 16), 8), SFXP(SBV(8161, 16), 8)), SFXP(SBV(25204, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60294, 16), 8), UFXP(BV(32650, 16), 8)), UFXP(BV(22128, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21013, 16), 8), SFXP(SBV(-23550, 16), 8)), SFXP(SBV(-2537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39773, 16), 8), UFXP(BV(63046, 16), 8)), UFXP(BV(42263, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1, 16), 8), SFXP(SBV(-27082, 16), 8)), SFXP(SBV(106, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44239, 16), 8), UFXP(BV(61890, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16233, 16), 8), SFXP(SBV(18963, 16), 8)), SFXP(SBV(-2730, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63165, 16), 8), UFXP(BV(43507, 16), 8)), UFXP(BV(52474, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1032, 16), 8), SFXP(SBV(-19023, 16), 8)), SFXP(SBV(17991, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27824, 16), 8), SFXP(SBV(-3914, 16), 8)), SFXP(SBV(31738, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45416, 16), 8), UFXP(BV(16978, 16), 8)), UFXP(BV(62883, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15263, 16), 8), SFXP(SBV(-21390, 16), 8)), SFXP(SBV(30111, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12157, 16), 8), UFXP(BV(32244, 16), 8)), UFXP(BV(44401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6380, 16), 8), SFXP(SBV(-10440, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42941, 16), 8), UFXP(BV(63590, 16), 8)), UFXP(BV(44887, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(271, 16), 8), UFXP(BV(64060, 16), 8)), UFXP(BV(1747, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20487, 16), 8), SFXP(SBV(-9040, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36718, 16), 8), UFXP(BV(64596, 16), 8)), UFXP(BV(24408, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19363, 16), 8), SFXP(SBV(5136, 16), 8)), SFXP(SBV(14227, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10511, 16), 8), UFXP(BV(14352, 16), 8)), UFXP(BV(24863, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6654, 16), 8), UFXP(BV(43539, 16), 8)), UFXP(BV(17561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19934, 16), 8), UFXP(BV(62524, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42345, 16), 8), UFXP(BV(16028, 16), 8)), UFXP(BV(58373, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1400, 16), 8), SFXP(SBV(13611, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19064, 16), 8), SFXP(SBV(24019, 16), 8)), SFXP(SBV(22453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9177, 16), 8), SFXP(SBV(-3317, 16), 8)), SFXP(SBV(12494, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26577, 16), 8), SFXP(SBV(1220, 16), 8)), SFXP(SBV(25357, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19864, 16), 8), SFXP(SBV(16082, 16), 8)), SFXP(SBV(-2678, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25081, 16), 8), SFXP(SBV(29888, 16), 8)), SFXP(SBV(-10567, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18903, 16), 8), SFXP(SBV(30062, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19994, 16), 8), SFXP(SBV(421, 16), 8)), SFXP(SBV(-32655, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25981, 16), 8), UFXP(BV(53788, 16), 8)), UFXP(BV(14233, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9309, 16), 8), SFXP(SBV(-2690, 16), 8)), SFXP(SBV(6619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(660, 16), 8), SFXP(SBV(26935, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(9570, 16), 8), SFXP(SBV(32609, 16), 8)), SFXP(SBV(-26168, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29570, 16), 8), SFXP(SBV(14743, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39806, 16), 8), UFXP(BV(18804, 16), 8)), UFXP(BV(21002, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39570, 16), 8), UFXP(BV(44753, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35498, 16), 8), UFXP(BV(41485, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23806, 16), 8), SFXP(SBV(-21744, 16), 8)), SFXP(SBV(2062, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21311, 16), 8), SFXP(SBV(-14336, 16), 8)), SFXP(SBV(6975, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63729, 16), 8), UFXP(BV(12160, 16), 8)), UFXP(BV(10353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41325, 16), 8), UFXP(BV(57518, 16), 8)), UFXP(BV(49343, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38056, 16), 8), UFXP(BV(54535, 16), 8)), UFXP(BV(27055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9043, 16), 8), SFXP(SBV(31834, 16), 8)), SFXP(SBV(22791, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19960, 16), 8), UFXP(BV(53858, 16), 8)), UFXP(BV(8282, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(897, 16), 8), SFXP(SBV(11546, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24076, 16), 8), SFXP(SBV(23513, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23230, 16), 8), SFXP(SBV(-942, 16), 8)), SFXP(SBV(22288, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60497, 16), 8), UFXP(BV(28698, 16), 8)), UFXP(BV(31600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43514, 16), 8), UFXP(BV(24744, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25054, 16), 8), UFXP(BV(5197, 16), 8)), UFXP(BV(30251, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26793, 16), 8), UFXP(BV(48703, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30453, 16), 8), SFXP(SBV(-20333, 16), 8)), SFXP(SBV(6078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(6835, 16), 8), SFXP(SBV(-30017, 16), 8)), SFXP(SBV(-14999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21038, 16), 8), SFXP(SBV(21033, 16), 8)), SFXP(SBV(-5, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28686, 16), 8), SFXP(SBV(10150, 16), 8)), SFXP(SBV(18536, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14322, 16), 8), SFXP(SBV(-1340, 16), 8)), SFXP(SBV(12982, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(4228, 16), 8), SFXP(SBV(-27432, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8053, 16), 8), SFXP(SBV(-22960, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25087, 16), 8), UFXP(BV(31718, 16), 8)), UFXP(BV(56805, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26045, 16), 8), SFXP(SBV(12216, 16), 8)), SFXP(SBV(-27275, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48237, 16), 8), UFXP(BV(63658, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(8477, 16), 8), UFXP(BV(6109, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13056, 16), 8), UFXP(BV(50482, 16), 8)), UFXP(BV(63538, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57731, 16), 8), UFXP(BV(63184, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42776, 16), 8), UFXP(BV(35850, 16), 8)), UFXP(BV(26535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1483, 16), 8), UFXP(BV(28201, 16), 8)), UFXP(BV(29684, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41632, 16), 8), UFXP(BV(27972, 16), 8)), UFXP(BV(13660, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30911, 16), 8), SFXP(SBV(18656, 16), 8)), SFXP(SBV(15969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27918, 16), 8), UFXP(BV(49786, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28423, 16), 8), UFXP(BV(7994, 16), 8)), UFXP(BV(20429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57535, 16), 8), UFXP(BV(37090, 16), 8)), UFXP(BV(20445, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30632, 16), 8), SFXP(SBV(30337, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19595, 16), 8), SFXP(SBV(5189, 16), 8)), SFXP(SBV(24784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23194, 16), 8), UFXP(BV(32115, 16), 8)), UFXP(BV(56615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32127, 16), 8), SFXP(SBV(-23086, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51186, 16), 8), UFXP(BV(50510, 16), 8)), UFXP(BV(6693, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1613, 16), 8), SFXP(SBV(-26367, 16), 8)), SFXP(SBV(24754, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12323, 16), 8), SFXP(SBV(-7332, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13478, 16), 8), SFXP(SBV(-28493, 16), 8)), SFXP(SBV(15015, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28455, 16), 8), UFXP(BV(57274, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1329, 16), 8), UFXP(BV(26981, 16), 8)), UFXP(BV(8998, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7697, 16), 8), UFXP(BV(16624, 16), 8)), UFXP(BV(24321, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10087, 16), 8), UFXP(BV(63876, 16), 8)), UFXP(BV(11747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9626, 16), 8), UFXP(BV(56485, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3591, 16), 8), SFXP(SBV(-13250, 16), 8)), SFXP(SBV(16841, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4313, 16), 8), SFXP(SBV(-31671, 16), 8)), SFXP(SBV(27358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4679, 16), 8), SFXP(SBV(441, 16), 8)), SFXP(SBV(-4238, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21763, 16), 8), SFXP(SBV(18582, 16), 8)), SFXP(SBV(-25191, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3925, 16), 8), SFXP(SBV(-15664, 16), 8)), SFXP(SBV(19589, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64576, 16), 8), UFXP(BV(280, 16), 8)), UFXP(BV(64856, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17937, 16), 8), SFXP(SBV(25630, 16), 8)), SFXP(SBV(26330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60180, 16), 8), UFXP(BV(35226, 16), 8)), UFXP(BV(29870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29943, 16), 8), SFXP(SBV(3495, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38643, 16), 8), UFXP(BV(42975, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22240, 16), 8), UFXP(BV(45185, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46712, 16), 8), UFXP(BV(54529, 16), 8)), UFXP(BV(57719, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11513, 16), 8), SFXP(SBV(5000, 16), 8)), SFXP(SBV(-16513, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16560, 16), 8), SFXP(SBV(-26142, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57313, 16), 8), UFXP(BV(21120, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10829, 16), 8), UFXP(BV(37638, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19822, 16), 8), UFXP(BV(171, 16), 8)), UFXP(BV(19993, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42601, 16), 8), UFXP(BV(62045, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12690, 16), 8), UFXP(BV(56402, 16), 8)), UFXP(BV(21824, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28035, 16), 8), SFXP(SBV(23243, 16), 8)), SFXP(SBV(-14258, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50901, 16), 8), UFXP(BV(40525, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25789, 16), 8), SFXP(SBV(-28670, 16), 8)), SFXP(SBV(2881, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21208, 16), 8), UFXP(BV(46384, 16), 8)), UFXP(BV(41537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42612, 16), 8), UFXP(BV(60106, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31951, 16), 8), SFXP(SBV(-15832, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20823, 16), 8), SFXP(SBV(9320, 16), 8)), SFXP(SBV(-30143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25591, 16), 8), UFXP(BV(19822, 16), 8)), UFXP(BV(45413, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24331, 16), 8), UFXP(BV(22253, 16), 8)), UFXP(BV(2078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5281, 16), 8), SFXP(SBV(16906, 16), 8)), SFXP(SBV(11625, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26357, 16), 8), SFXP(SBV(-718, 16), 8)), SFXP(SBV(-25639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25257, 16), 8), UFXP(BV(69, 16), 8)), UFXP(BV(25188, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14921, 16), 8), SFXP(SBV(23299, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18643, 16), 8), SFXP(SBV(18247, 16), 8)), SFXP(SBV(18104, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17978, 16), 8), SFXP(SBV(-5209, 16), 8)), SFXP(SBV(-23187, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9407, 16), 8), SFXP(SBV(-27731, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54625, 16), 8), UFXP(BV(11002, 16), 8)), UFXP(BV(43623, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22675, 16), 8), SFXP(SBV(19767, 16), 8)), SFXP(SBV(23094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6396, 16), 8), UFXP(BV(28851, 16), 8)), UFXP(BV(35247, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13846, 16), 8), UFXP(BV(62134, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26787, 16), 8), SFXP(SBV(18767, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14547, 16), 8), SFXP(SBV(6760, 16), 8)), SFXP(SBV(21307, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15793, 16), 8), UFXP(BV(28850, 16), 8)), UFXP(BV(10325, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3866, 16), 8), SFXP(SBV(9811, 16), 8)), SFXP(SBV(13677, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22660, 16), 8), SFXP(SBV(-4801, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16910, 16), 8), SFXP(SBV(-14145, 16), 8)), SFXP(SBV(16840, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(99, 16), 8), UFXP(BV(15457, 16), 8)), UFXP(BV(15556, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54364, 16), 8), UFXP(BV(30123, 16), 8)), UFXP(BV(39909, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57062, 16), 8), UFXP(BV(23851, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40800, 16), 8), UFXP(BV(50348, 16), 8)), UFXP(BV(55988, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5339, 16), 8), SFXP(SBV(-4144, 16), 8)), SFXP(SBV(-9483, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29064, 16), 8), SFXP(SBV(-18147, 16), 8)), SFXP(SBV(-28635, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2034, 16), 8), SFXP(SBV(9306, 16), 8)), SFXP(SBV(-8403, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7547, 16), 8), SFXP(SBV(29201, 16), 8)), SFXP(SBV(21654, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3694, 16), 8), SFXP(SBV(19077, 16), 8)), SFXP(SBV(-22771, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5446, 16), 8), UFXP(BV(22308, 16), 8)), UFXP(BV(48674, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8102, 16), 8), UFXP(BV(17400, 16), 8)), UFXP(BV(25502, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(2136, 16), 8), SFXP(SBV(-27266, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45939, 16), 8), UFXP(BV(19269, 16), 8)), UFXP(BV(65208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19408, 16), 8), SFXP(SBV(8870, 16), 8)), SFXP(SBV(10538, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12683, 16), 8), SFXP(SBV(-22171, 16), 8)), SFXP(SBV(9488, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12186, 16), 8), SFXP(SBV(-17767, 16), 8)), SFXP(SBV(29953, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11122, 16), 8), SFXP(SBV(-17531, 16), 8)), SFXP(SBV(-28653, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19563, 16), 8), SFXP(SBV(5552, 16), 8)), SFXP(SBV(-14011, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43962, 16), 8), UFXP(BV(354, 16), 8)), UFXP(BV(44316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12899, 16), 8), SFXP(SBV(-1587, 16), 8)), SFXP(SBV(11312, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(41885, 16), 8), UFXP(BV(10404, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8795, 16), 8), SFXP(SBV(10322, 16), 8)), SFXP(SBV(1527, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30418, 16), 8), UFXP(BV(14496, 16), 8)), UFXP(BV(44914, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21613, 16), 8), SFXP(SBV(-15486, 16), 8)), SFXP(SBV(-3303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25820, 16), 8), SFXP(SBV(30528, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15282, 16), 8), UFXP(BV(49658, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1308, 16), 8), SFXP(SBV(-6215, 16), 8)), SFXP(SBV(-7523, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43520, 16), 8), UFXP(BV(49736, 16), 8)), UFXP(BV(59320, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2231, 16), 8), SFXP(SBV(-16617, 16), 8)), SFXP(SBV(-18848, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-731, 16), 8), SFXP(SBV(-25076, 16), 8)), SFXP(SBV(-25807, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42056, 16), 8), UFXP(BV(4113, 16), 8)), UFXP(BV(46169, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2239, 16), 8), SFXP(SBV(-2507, 16), 8)), SFXP(SBV(-268, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30698, 16), 8), SFXP(SBV(8719, 16), 8)), SFXP(SBV(-3045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43704, 16), 8), UFXP(BV(34511, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58995, 16), 8), UFXP(BV(33852, 16), 8)), UFXP(BV(25143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17331, 16), 8), SFXP(SBV(11791, 16), 8)), SFXP(SBV(29122, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21493, 16), 8), SFXP(SBV(-10125, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26715, 16), 8), SFXP(SBV(434, 16), 8)), SFXP(SBV(-26281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12306, 16), 8), SFXP(SBV(22395, 16), 8)), SFXP(SBV(-10089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(45642, 16), 8), UFXP(BV(29003, 16), 8)), UFXP(BV(59110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20265, 16), 8), UFXP(BV(5377, 16), 8)), UFXP(BV(14888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25930, 16), 8), SFXP(SBV(30757, 16), 8)), SFXP(SBV(-8849, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7815, 16), 8), SFXP(SBV(9955, 16), 8)), SFXP(SBV(17770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29273, 16), 8), UFXP(BV(9658, 16), 8)), UFXP(BV(19615, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62322, 16), 8), UFXP(BV(14338, 16), 8)), UFXP(BV(47984, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32068, 16), 8), SFXP(SBV(15474, 16), 8)), SFXP(SBV(-17994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15326, 16), 8), UFXP(BV(18446, 16), 8)), UFXP(BV(33772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25789, 16), 8), SFXP(SBV(5131, 16), 8)), SFXP(SBV(30920, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46993, 16), 8), UFXP(BV(57570, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56965, 16), 8), UFXP(BV(57730, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12396, 16), 8), SFXP(SBV(29185, 16), 8)), SFXP(SBV(16789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28578, 16), 8), SFXP(SBV(20523, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8248, 16), 8), SFXP(SBV(11046, 16), 8)), SFXP(SBV(2798, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-32095, 16), 8), SFXP(SBV(12318, 16), 8)), SFXP(SBV(28543, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31925, 16), 8), SFXP(SBV(23450, 16), 8)), SFXP(SBV(-8475, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11484, 16), 8), SFXP(SBV(-25504, 16), 8)), SFXP(SBV(29982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30188, 16), 8), UFXP(BV(3692, 16), 8)), UFXP(BV(26496, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54297, 16), 8), UFXP(BV(5321, 16), 8)), UFXP(BV(14459, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27174, 16), 8), SFXP(SBV(7166, 16), 8)), SFXP(SBV(-20008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48117, 16), 8), UFXP(BV(54093, 16), 8)), UFXP(BV(59560, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2813, 16), 8), SFXP(SBV(971, 16), 8)), SFXP(SBV(10669, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38254, 16), 8), UFXP(BV(11294, 16), 8)), UFXP(BV(49258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30706, 16), 8), SFXP(SBV(-22731, 16), 8)), SFXP(SBV(7975, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27693, 16), 8), UFXP(BV(21833, 16), 8)), UFXP(BV(2505, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24490, 16), 8), SFXP(SBV(-10632, 16), 8)), SFXP(SBV(-30414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22402, 16), 8), SFXP(SBV(-2329, 16), 8)), SFXP(SBV(-24731, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37112, 16), 8), UFXP(BV(54862, 16), 8)), UFXP(BV(23420, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30393, 16), 8), SFXP(SBV(7111, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(206, 16), 8), UFXP(BV(45254, 16), 8)), UFXP(BV(36415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17719, 16), 8), SFXP(SBV(-3366, 16), 8)), SFXP(SBV(21085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2562, 16), 8), SFXP(SBV(24864, 16), 8)), SFXP(SBV(-22302, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15403, 16), 8), SFXP(SBV(-797, 16), 8)), SFXP(SBV(-14606, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15816, 16), 8), UFXP(BV(1708, 16), 8)), UFXP(BV(14108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9908, 16), 8), SFXP(SBV(3937, 16), 8)), SFXP(SBV(-5971, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30414, 16), 8), SFXP(SBV(20795, 16), 8)), SFXP(SBV(-14327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15594, 16), 8), UFXP(BV(2975, 16), 8)), UFXP(BV(18569, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52538, 16), 8), UFXP(BV(49551, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5949, 16), 8), SFXP(SBV(-18952, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(911, 16), 8), UFXP(BV(6434, 16), 8)), UFXP(BV(7345, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6881, 16), 8), SFXP(SBV(22576, 16), 8)), SFXP(SBV(29457, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26995, 16), 8), SFXP(SBV(-10294, 16), 8)), SFXP(SBV(28247, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14258, 16), 8), SFXP(SBV(27240, 16), 8)), SFXP(SBV(-9812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20492, 16), 8), SFXP(SBV(5483, 16), 8)), SFXP(SBV(-15009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25198, 16), 8), UFXP(BV(27093, 16), 8)), UFXP(BV(52291, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58704, 16), 8), UFXP(BV(60166, 16), 8)), UFXP(BV(34256, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24548, 16), 8), SFXP(SBV(-26095, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28752, 16), 8), UFXP(BV(48935, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1682, 16), 8), SFXP(SBV(-4020, 16), 8)), SFXP(SBV(-2338, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11677, 16), 8), UFXP(BV(53455, 16), 8)), UFXP(BV(13426, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24285, 16), 8), SFXP(SBV(9351, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27275, 16), 8), SFXP(SBV(1501, 16), 8)), SFXP(SBV(25774, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25780, 16), 8), SFXP(SBV(-12375, 16), 8)), SFXP(SBV(-13405, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28604, 16), 8), UFXP(BV(61519, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-330, 16), 8), SFXP(SBV(22230, 16), 8)), SFXP(SBV(-22560, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9287, 16), 8), SFXP(SBV(6791, 16), 8)), SFXP(SBV(16078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-64, 16), 8), SFXP(SBV(21404, 16), 8)), SFXP(SBV(21340, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40797, 16), 8), UFXP(BV(11643, 16), 8)), UFXP(BV(52440, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7164, 16), 8), SFXP(SBV(-2491, 16), 8)), SFXP(SBV(-9655, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(4729, 16), 8), UFXP(BV(24898, 16), 8)), UFXP(BV(1181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26322, 16), 8), SFXP(SBV(8494, 16), 8)), SFXP(SBV(-21388, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6583, 16), 8), UFXP(BV(44607, 16), 8)), UFXP(BV(32950, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29949, 16), 8), SFXP(SBV(5492, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8702, 16), 8), SFXP(SBV(13205, 16), 8)), SFXP(SBV(21907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2083, 16), 8), SFXP(SBV(-7340, 16), 8)), SFXP(SBV(5257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12906, 16), 8), SFXP(SBV(16733, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41239, 16), 8), UFXP(BV(61602, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27194, 16), 8), SFXP(SBV(28906, 16), 8)), SFXP(SBV(-1712, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1952, 16), 8), SFXP(SBV(14718, 16), 8)), SFXP(SBV(-16670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26885, 16), 8), SFXP(SBV(-2723, 16), 8)), SFXP(SBV(29608, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48147, 16), 8), UFXP(BV(42761, 16), 8)), UFXP(BV(5386, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45916, 16), 8), UFXP(BV(44582, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27699, 16), 8), SFXP(SBV(-26670, 16), 8)), SFXP(SBV(-1029, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21191, 16), 8), SFXP(SBV(22503, 16), 8)), SFXP(SBV(21842, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62293, 16), 8), UFXP(BV(23124, 16), 8)), UFXP(BV(56250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43051, 16), 8), UFXP(BV(28128, 16), 8)), UFXP(BV(5643, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34614, 16), 8), UFXP(BV(4608, 16), 8)), UFXP(BV(39222, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15594, 16), 8), UFXP(BV(32571, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6103, 16), 8), SFXP(SBV(7765, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23821, 16), 8), UFXP(BV(54682, 16), 8)), UFXP(BV(12967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31389, 16), 8), SFXP(SBV(15263, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27654, 16), 8), SFXP(SBV(19257, 16), 8)), SFXP(SBV(8397, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14061, 16), 8), UFXP(BV(7030, 16), 8)), UFXP(BV(7031, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56276, 16), 8), UFXP(BV(5104, 16), 8)), UFXP(BV(61380, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31910, 16), 8), UFXP(BV(35275, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(8718, 16), 8), SFXP(SBV(16780, 16), 8)), SFXP(SBV(-18387, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13126, 16), 8), UFXP(BV(2451, 16), 8)), UFXP(BV(60136, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2775, 16), 8), SFXP(SBV(16340, 16), 8)), SFXP(SBV(-19484, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50320, 16), 8), UFXP(BV(11781, 16), 8)), UFXP(BV(62101, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63129, 16), 8), UFXP(BV(17561, 16), 8)), UFXP(BV(45568, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6391, 16), 8), SFXP(SBV(15591, 16), 8)), SFXP(SBV(-21982, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18481, 16), 8), SFXP(SBV(32139, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8055, 16), 8), SFXP(SBV(-19554, 16), 8)), SFXP(SBV(25439, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15144, 16), 8), SFXP(SBV(21293, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61545, 16), 8), UFXP(BV(33913, 16), 8)), UFXP(BV(29922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-88, 16), 8), SFXP(SBV(-12835, 16), 8)), SFXP(SBV(12747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(134, 16), 8), UFXP(BV(12906, 16), 8)), UFXP(BV(52764, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16447, 16), 8), UFXP(BV(61755, 16), 8)), UFXP(BV(20228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3578, 16), 8), SFXP(SBV(12234, 16), 8)), SFXP(SBV(-8656, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25696, 16), 8), UFXP(BV(8108, 16), 8)), UFXP(BV(17588, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23104, 16), 8), SFXP(SBV(-22232, 16), 8)), SFXP(SBV(-872, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10024, 16), 8), SFXP(SBV(29664, 16), 8)), SFXP(SBV(-25848, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20710, 16), 8), SFXP(SBV(12146, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-12943, 16), 8), SFXP(SBV(8248, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19013, 16), 8), SFXP(SBV(-29701, 16), 8)), SFXP(SBV(10688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30808, 16), 8), SFXP(SBV(20897, 16), 8)), SFXP(SBV(-9911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23051, 16), 8), SFXP(SBV(248, 16), 8)), SFXP(SBV(22803, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59482, 16), 8), UFXP(BV(37954, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58384, 16), 8), UFXP(BV(12668, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64009, 16), 8), UFXP(BV(13705, 16), 8)), UFXP(BV(50304, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1401, 16), 8), SFXP(SBV(-31646, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56185, 16), 8), UFXP(BV(1463, 16), 8)), UFXP(BV(57648, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47569, 16), 8), UFXP(BV(18358, 16), 8)), UFXP(BV(29211, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27490, 16), 8), SFXP(SBV(21811, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18144, 16), 8), SFXP(SBV(-19763, 16), 8)), SFXP(SBV(-1619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29827, 16), 8), SFXP(SBV(15047, 16), 8)), SFXP(SBV(-20662, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60733, 16), 8), UFXP(BV(51406, 16), 8)), UFXP(BV(46603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15816, 16), 8), SFXP(SBV(4435, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18583, 16), 8), UFXP(BV(57189, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24819, 16), 8), UFXP(BV(5334, 16), 8)), UFXP(BV(30153, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23668, 16), 8), UFXP(BV(27485, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60939, 16), 8), UFXP(BV(52721, 16), 8)), UFXP(BV(8218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30135, 16), 8), SFXP(SBV(-26610, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49923, 16), 8), UFXP(BV(50275, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8796, 16), 8), UFXP(BV(40565, 16), 8)), UFXP(BV(17532, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3532, 16), 8), UFXP(BV(33290, 16), 8)), UFXP(BV(35778, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28639, 16), 8), SFXP(SBV(10146, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24113, 16), 8), SFXP(SBV(16139, 16), 8)), SFXP(SBV(-12828, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19705, 16), 8), SFXP(SBV(13347, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55363, 16), 8), UFXP(BV(13373, 16), 8)), UFXP(BV(41990, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20695, 16), 8), UFXP(BV(35162, 16), 8)), UFXP(BV(55857, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58074, 16), 8), UFXP(BV(63894, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14697, 16), 8), SFXP(SBV(27045, 16), 8)), SFXP(SBV(20207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15911, 16), 8), SFXP(SBV(32635, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14487, 16), 8), SFXP(SBV(4656, 16), 8)), SFXP(SBV(1339, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3781, 16), 8), SFXP(SBV(20829, 16), 8)), SFXP(SBV(17048, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-5989, 16), 8), SFXP(SBV(-14986, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23216, 16), 8), SFXP(SBV(10735, 16), 8)), SFXP(SBV(-9509, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3622, 16), 8), SFXP(SBV(17784, 16), 8)), SFXP(SBV(21406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59573, 16), 8), UFXP(BV(57059, 16), 8)), UFXP(BV(39759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6361, 16), 8), SFXP(SBV(-2051, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47746, 16), 8), UFXP(BV(64645, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45309, 16), 8), UFXP(BV(4365, 16), 8)), UFXP(BV(49674, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18834, 16), 8), SFXP(SBV(-2928, 16), 8)), SFXP(SBV(-21762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-308, 16), 8), SFXP(SBV(17334, 16), 8)), SFXP(SBV(-20855, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53345, 16), 8), UFXP(BV(54565, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24579, 16), 8), SFXP(SBV(-25471, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5142, 16), 8), SFXP(SBV(30878, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17184, 16), 8), SFXP(SBV(20682, 16), 8)), SFXP(SBV(-27670, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46799, 16), 8), UFXP(BV(30782, 16), 8)), UFXP(BV(12045, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23744, 16), 8), SFXP(SBV(-8967, 16), 8)), SFXP(SBV(-32711, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14944, 16), 8), SFXP(SBV(-2692, 16), 8)), SFXP(SBV(-17636, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6161, 16), 8), SFXP(SBV(19957, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62422, 16), 8), UFXP(BV(55768, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13604, 16), 8), SFXP(SBV(1037, 16), 8)), SFXP(SBV(12567, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24595, 16), 8), SFXP(SBV(32744, 16), 8)), SFXP(SBV(8149, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19914, 16), 8), SFXP(SBV(-9916, 16), 8)), SFXP(SBV(-9998, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19565, 16), 8), UFXP(BV(24679, 16), 8)), UFXP(BV(51104, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29215, 16), 8), SFXP(SBV(2799, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9239, 16), 8), UFXP(BV(27653, 16), 8)), UFXP(BV(14953, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(65042, 16), 8), UFXP(BV(18305, 16), 8)), UFXP(BV(63238, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18970, 16), 8), SFXP(SBV(-19679, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16606, 16), 8), SFXP(SBV(-29736, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55875, 16), 8), UFXP(BV(19644, 16), 8)), UFXP(BV(36231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22124, 16), 8), SFXP(SBV(25894, 16), 8)), SFXP(SBV(-3770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12574, 16), 8), UFXP(BV(17220, 16), 8)), UFXP(BV(59365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5169, 16), 8), SFXP(SBV(24428, 16), 8)), SFXP(SBV(19259, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38038, 16), 8), UFXP(BV(31840, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14127, 16), 8), SFXP(SBV(32472, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53114, 16), 8), UFXP(BV(15531, 16), 8)), UFXP(BV(3109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5352, 16), 8), SFXP(SBV(9403, 16), 8)), SFXP(SBV(4051, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61354, 16), 8), UFXP(BV(31601, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47281, 16), 8), UFXP(BV(123, 16), 8)), UFXP(BV(22717, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1490, 16), 8), SFXP(SBV(-22299, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27785, 16), 8), UFXP(BV(5094, 16), 8)), UFXP(BV(32879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14342, 16), 8), SFXP(SBV(-11837, 16), 8)), SFXP(SBV(2505, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32136, 16), 8), SFXP(SBV(20138, 16), 8)), SFXP(SBV(11998, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14774, 16), 8), UFXP(BV(16304, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35668, 16), 8), UFXP(BV(59104, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10130, 16), 8), UFXP(BV(34602, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52947, 16), 8), UFXP(BV(24466, 16), 8)), UFXP(BV(28481, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19449, 16), 8), SFXP(SBV(30441, 16), 8)), SFXP(SBV(-10992, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43822, 16), 8), UFXP(BV(32995, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19920, 16), 8), UFXP(BV(45502, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27926, 16), 8), SFXP(SBV(-1888, 16), 8)), SFXP(SBV(-29814, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17855, 16), 8), SFXP(SBV(-17788, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(11181, 16), 8), SFXP(SBV(-23154, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2597, 16), 8), UFXP(BV(44810, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10925, 16), 8), SFXP(SBV(-32690, 16), 8)), SFXP(SBV(21765, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32000, 16), 8), SFXP(SBV(22289, 16), 8)), SFXP(SBV(-9711, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4495, 16), 8), SFXP(SBV(-852, 16), 8)), SFXP(SBV(-5347, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6546, 16), 8), SFXP(SBV(20498, 16), 8)), SFXP(SBV(-13952, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39171, 16), 8), UFXP(BV(57717, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27421, 16), 8), SFXP(SBV(-13954, 16), 8)), SFXP(SBV(-13467, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4792, 16), 8), SFXP(SBV(-30298, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16990, 16), 8), SFXP(SBV(14156, 16), 8)), SFXP(SBV(2834, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9870, 16), 8), UFXP(BV(48746, 16), 8)), UFXP(BV(58616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20407, 16), 8), SFXP(SBV(-18354, 16), 8)), SFXP(SBV(21294, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27405, 16), 8), UFXP(BV(32673, 16), 8)), UFXP(BV(60268, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8942, 16), 8), SFXP(SBV(12117, 16), 8)), SFXP(SBV(-21059, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58020, 16), 8), UFXP(BV(49432, 16), 8)), UFXP(BV(41916, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60318, 16), 8), UFXP(BV(61676, 16), 8)), UFXP(BV(56458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38368, 16), 8), UFXP(BV(40257, 16), 8)), UFXP(BV(4206, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45048, 16), 8), UFXP(BV(19765, 16), 8)), UFXP(BV(25283, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16437, 16), 8), UFXP(BV(47706, 16), 8)), UFXP(BV(48405, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26199, 16), 8), UFXP(BV(32559, 16), 8)), UFXP(BV(59176, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6852, 16), 8), UFXP(BV(46786, 16), 8)), UFXP(BV(25602, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43854, 16), 8), UFXP(BV(28275, 16), 8)), UFXP(BV(15579, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58673, 16), 8), UFXP(BV(48366, 16), 8)), UFXP(BV(10307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11485, 16), 8), SFXP(SBV(9313, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13442, 16), 8), UFXP(BV(8333, 16), 8)), UFXP(BV(5109, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34102, 16), 8), UFXP(BV(22290, 16), 8)), UFXP(BV(20152, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30175, 16), 8), SFXP(SBV(26367, 16), 8)), SFXP(SBV(3808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9099, 16), 8), UFXP(BV(23744, 16), 8)), UFXP(BV(50891, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2023, 16), 8), UFXP(BV(22349, 16), 8)), UFXP(BV(45210, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7111, 16), 8), SFXP(SBV(-3052, 16), 8)), SFXP(SBV(-19241, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59713, 16), 8), UFXP(BV(38072, 16), 8)), UFXP(BV(21641, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31703, 16), 8), UFXP(BV(7473, 16), 8)), UFXP(BV(39176, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57026, 16), 8), UFXP(BV(17747, 16), 8)), UFXP(BV(39279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27404, 16), 8), SFXP(SBV(-1899, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12931, 16), 8), UFXP(BV(10229, 16), 8)), UFXP(BV(23160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3281, 16), 8), SFXP(SBV(-23846, 16), 8)), SFXP(SBV(20565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16987, 16), 8), SFXP(SBV(28489, 16), 8)), SFXP(SBV(20060, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52473, 16), 8), UFXP(BV(20047, 16), 8)), UFXP(BV(32426, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31264, 16), 8), SFXP(SBV(21845, 16), 8)), SFXP(SBV(-9419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53974, 16), 8), UFXP(BV(18841, 16), 8)), UFXP(BV(7279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11888, 16), 8), SFXP(SBV(30351, 16), 8)), SFXP(SBV(-32367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12699, 16), 8), SFXP(SBV(-17283, 16), 8)), SFXP(SBV(4584, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2098, 16), 8), SFXP(SBV(-21001, 16), 8)), SFXP(SBV(24498, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47671, 16), 8), UFXP(BV(2886, 16), 8)), UFXP(BV(44785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21303, 16), 8), SFXP(SBV(17291, 16), 8)), SFXP(SBV(26942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30369, 16), 8), UFXP(BV(64212, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2256, 16), 8), SFXP(SBV(31634, 16), 8)), SFXP(SBV(16631, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20537, 16), 8), SFXP(SBV(-1122, 16), 8)), SFXP(SBV(19415, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50894, 16), 8), UFXP(BV(62681, 16), 8)), UFXP(BV(48039, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13487, 16), 8), SFXP(SBV(-6847, 16), 8)), SFXP(SBV(20334, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18841, 16), 8), SFXP(SBV(-24728, 16), 8)), SFXP(SBV(15085, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59939, 16), 8), UFXP(BV(55870, 16), 8)), UFXP(BV(4069, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46025, 16), 8), UFXP(BV(23076, 16), 8)), UFXP(BV(19954, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30322, 16), 8), UFXP(BV(45530, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3966, 16), 8), UFXP(BV(19744, 16), 8)), UFXP(BV(23710, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22257, 16), 8), SFXP(SBV(-28306, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22439, 16), 8), UFXP(BV(40628, 16), 8)), UFXP(BV(22196, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12735, 16), 8), SFXP(SBV(-20633, 16), 8)), SFXP(SBV(7898, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28898, 16), 8), UFXP(BV(54967, 16), 8)), UFXP(BV(18329, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30861, 16), 8), SFXP(SBV(13327, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64922, 16), 8), UFXP(BV(34482, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10708, 16), 8), SFXP(SBV(-18613, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51939, 16), 8), UFXP(BV(51342, 16), 8)), UFXP(BV(597, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31674, 16), 8), SFXP(SBV(-7544, 16), 8)), SFXP(SBV(-24130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52449, 16), 8), UFXP(BV(18777, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3448, 16), 8), UFXP(BV(5175, 16), 8)), UFXP(BV(63809, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5510, 16), 8), SFXP(SBV(23106, 16), 8)), SFXP(SBV(-17596, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10066, 16), 8), SFXP(SBV(27729, 16), 8)), SFXP(SBV(-17663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61804, 16), 8), UFXP(BV(4735, 16), 8)), UFXP(BV(57069, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15643, 16), 8), UFXP(BV(18837, 16), 8)), UFXP(BV(62342, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53973, 16), 8), UFXP(BV(9583, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7945, 16), 8), SFXP(SBV(-28810, 16), 8)), SFXP(SBV(-28781, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11874, 16), 8), SFXP(SBV(25131, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4434, 16), 8), SFXP(SBV(-353, 16), 8)), SFXP(SBV(4787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24185, 16), 8), UFXP(BV(47776, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1762, 16), 8), SFXP(SBV(-15420, 16), 8)), SFXP(SBV(-17182, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55632, 16), 8), UFXP(BV(35953, 16), 8)), UFXP(BV(19679, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16689, 16), 8), SFXP(SBV(26491, 16), 8)), SFXP(SBV(9802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30621, 16), 8), SFXP(SBV(-26194, 16), 8)), SFXP(SBV(-4427, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45424, 16), 8), UFXP(BV(46914, 16), 8)), UFXP(BV(26802, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31126, 16), 8), UFXP(BV(6039, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4376, 16), 8), UFXP(BV(50571, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9277, 16), 8), SFXP(SBV(-25901, 16), 8)), SFXP(SBV(-30358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(8199, 16), 8), UFXP(BV(31691, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10488, 16), 8), UFXP(BV(52241, 16), 8)), UFXP(BV(23783, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29451, 16), 8), SFXP(SBV(20282, 16), 8)), SFXP(SBV(9169, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6126, 16), 8), SFXP(SBV(-2664, 16), 8)), SFXP(SBV(3462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16646, 16), 8), UFXP(BV(31819, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7654, 16), 8), SFXP(SBV(-9464, 16), 8)), SFXP(SBV(-17118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29408, 16), 8), SFXP(SBV(19436, 16), 8)), SFXP(SBV(-9972, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8483, 16), 8), UFXP(BV(23704, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31756, 16), 8), SFXP(SBV(14816, 16), 8)), SFXP(SBV(2870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13643, 16), 8), SFXP(SBV(9865, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26758, 16), 8), SFXP(SBV(13314, 16), 8)), SFXP(SBV(-13444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(712, 16), 8), UFXP(BV(38295, 16), 8)), UFXP(BV(39007, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46201, 16), 8), UFXP(BV(34202, 16), 8)), UFXP(BV(11999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2646, 16), 8), SFXP(SBV(16016, 16), 8)), SFXP(SBV(-13370, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24834, 16), 8), UFXP(BV(25506, 16), 8)), UFXP(BV(50340, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22504, 16), 8), SFXP(SBV(-19870, 16), 8)), SFXP(SBV(23162, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28574, 16), 8), SFXP(SBV(7268, 16), 8)), SFXP(SBV(-29694, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21608, 16), 8), SFXP(SBV(32583, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6512, 16), 8), SFXP(SBV(-7537, 16), 8)), SFXP(SBV(1025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34079, 16), 8), UFXP(BV(44522, 16), 8)), UFXP(BV(55093, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18907, 16), 8), SFXP(SBV(20522, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5522, 16), 8), SFXP(SBV(21095, 16), 8)), SFXP(SBV(26617, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10823, 16), 8), SFXP(SBV(-26315, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6586, 16), 8), SFXP(SBV(3281, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31488, 16), 8), SFXP(SBV(-10774, 16), 8)), SFXP(SBV(20714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24676, 16), 8), UFXP(BV(39846, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1965, 16), 8), UFXP(BV(33291, 16), 8)), UFXP(BV(35256, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9981, 16), 8), SFXP(SBV(5674, 16), 8)), SFXP(SBV(-15655, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4106, 16), 8), SFXP(SBV(30962, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60425, 16), 8), UFXP(BV(10041, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62724, 16), 8), UFXP(BV(2149, 16), 8)), UFXP(BV(2251, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51213, 16), 8), UFXP(BV(59239, 16), 8)), UFXP(BV(57510, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10569, 16), 8), SFXP(SBV(-16938, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22386, 16), 8), SFXP(SBV(20496, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29440, 16), 8), SFXP(SBV(-28180, 16), 8)), SFXP(SBV(-29436, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10461, 16), 8), SFXP(SBV(10859, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29769, 16), 8), UFXP(BV(37450, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21104, 16), 8), SFXP(SBV(4525, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50551, 16), 8), UFXP(BV(6011, 16), 8)), UFXP(BV(56562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31557, 16), 8), SFXP(SBV(2078, 16), 8)), SFXP(SBV(-31901, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13249, 16), 8), UFXP(BV(37954, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51360, 16), 8), UFXP(BV(60476, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(977, 16), 8), SFXP(SBV(16638, 16), 8)), SFXP(SBV(-15661, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31437, 16), 8), SFXP(SBV(15286, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17815, 16), 8), SFXP(SBV(-30517, 16), 8)), SFXP(SBV(-12702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19202, 16), 8), UFXP(BV(26131, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49994, 16), 8), UFXP(BV(13282, 16), 8)), UFXP(BV(37925, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36147, 16), 8), UFXP(BV(271, 16), 8)), UFXP(BV(35876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7366, 16), 8), UFXP(BV(6486, 16), 8)), UFXP(BV(55553, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4138, 16), 8), SFXP(SBV(-4948, 16), 8)), SFXP(SBV(9086, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32459, 16), 8), UFXP(BV(44212, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29535, 16), 8), SFXP(SBV(10435, 16), 8)), SFXP(SBV(-19100, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52614, 16), 8), UFXP(BV(53212, 16), 8)), UFXP(BV(57337, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12400, 16), 8), UFXP(BV(27924, 16), 8)), UFXP(BV(40324, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(95, 16), 8), SFXP(SBV(5602, 16), 8)), SFXP(SBV(5697, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62398, 16), 8), UFXP(BV(53936, 16), 8)), UFXP(BV(8462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48544, 16), 8), UFXP(BV(46005, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27936, 16), 8), SFXP(SBV(23648, 16), 8)), SFXP(SBV(-4288, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41762, 16), 8), UFXP(BV(35879, 16), 8)), UFXP(BV(20338, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5073, 16), 8), SFXP(SBV(-8188, 16), 8)), SFXP(SBV(13261, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43874, 16), 8), UFXP(BV(51977, 16), 8)), UFXP(BV(60604, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26506, 16), 8), UFXP(BV(13581, 16), 8)), UFXP(BV(40087, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43311, 16), 8), UFXP(BV(55226, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50582, 16), 8), UFXP(BV(50958, 16), 8)), UFXP(BV(36004, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28217, 16), 8), SFXP(SBV(-26841, 16), 8)), SFXP(SBV(-1376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32291, 16), 8), SFXP(SBV(3519, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7773, 16), 8), SFXP(SBV(25676, 16), 8)), SFXP(SBV(-32087, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15908, 16), 8), SFXP(SBV(15622, 16), 8)), SFXP(SBV(-31530, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12094, 16), 8), UFXP(BV(1259, 16), 8)), UFXP(BV(10835, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24132, 16), 8), SFXP(SBV(17433, 16), 8)), SFXP(SBV(6699, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13760, 16), 8), SFXP(SBV(30265, 16), 8)), SFXP(SBV(16505, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20778, 16), 8), SFXP(SBV(-13988, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52578, 16), 8), UFXP(BV(37483, 16), 8)), UFXP(BV(30651, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40998, 16), 8), UFXP(BV(3771, 16), 8)), UFXP(BV(14095, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26626, 16), 8), SFXP(SBV(19272, 16), 8)), SFXP(SBV(7354, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16899, 16), 8), SFXP(SBV(17627, 16), 8)), SFXP(SBV(-16059, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41487, 16), 8), UFXP(BV(8417, 16), 8)), UFXP(BV(53327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17271, 16), 8), UFXP(BV(22892, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22071, 16), 8), SFXP(SBV(-25801, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22612, 16), 8), UFXP(BV(38769, 16), 8)), UFXP(BV(61381, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22710, 16), 8), SFXP(SBV(-4434, 16), 8)), SFXP(SBV(-27144, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31981, 16), 8), SFXP(SBV(31325, 16), 8)), SFXP(SBV(-656, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19076, 16), 8), SFXP(SBV(32392, 16), 8)), SFXP(SBV(11122, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44838, 16), 8), UFXP(BV(31790, 16), 8)), UFXP(BV(11092, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14617, 16), 8), UFXP(BV(56952, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3380, 16), 8), SFXP(SBV(-28212, 16), 8)), SFXP(SBV(-24832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19134, 16), 8), UFXP(BV(13692, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5127, 16), 8), SFXP(SBV(13983, 16), 8)), SFXP(SBV(8856, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6813, 16), 8), SFXP(SBV(-20079, 16), 8)), SFXP(SBV(-26892, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19348, 16), 8), SFXP(SBV(29120, 16), 8)), SFXP(SBV(-17068, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52095, 16), 8), UFXP(BV(24353, 16), 8)), UFXP(BV(10912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12855, 16), 8), SFXP(SBV(-16972, 16), 8)), SFXP(SBV(4117, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20225, 16), 8), SFXP(SBV(-31555, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(45774, 16), 8), UFXP(BV(1758, 16), 8)), UFXP(BV(52195, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53658, 16), 8), UFXP(BV(42787, 16), 8)), UFXP(BV(55327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19093, 16), 8), UFXP(BV(62552, 16), 8)), UFXP(BV(22077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12794, 16), 8), SFXP(SBV(5316, 16), 8)), SFXP(SBV(3531, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28537, 16), 8), SFXP(SBV(-9452, 16), 8)), SFXP(SBV(5063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-4914, 16), 8), SFXP(SBV(-26105, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20536, 16), 8), SFXP(SBV(-1672, 16), 8)), SFXP(SBV(18864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23235, 16), 8), UFXP(BV(53456, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6299, 16), 8), SFXP(SBV(21141, 16), 8)), SFXP(SBV(14842, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33491, 16), 8), UFXP(BV(48288, 16), 8)), UFXP(BV(50739, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5338, 16), 8), SFXP(SBV(-4543, 16), 8)), SFXP(SBV(9881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1930, 16), 8), SFXP(SBV(28574, 16), 8)), SFXP(SBV(-30504, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-6588, 16), 8), SFXP(SBV(29940, 16), 8)), SFXP(SBV(15944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21364, 16), 8), UFXP(BV(22918, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30005, 16), 8), SFXP(SBV(-19220, 16), 8)), SFXP(SBV(10785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31044, 16), 8), SFXP(SBV(-29282, 16), 8)), SFXP(SBV(11956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11420, 16), 8), SFXP(SBV(-16427, 16), 8)), SFXP(SBV(5007, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57979, 16), 8), UFXP(BV(48370, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54672, 16), 8), UFXP(BV(44254, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15629, 16), 8), UFXP(BV(55971, 16), 8)), UFXP(BV(9201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26342, 16), 8), UFXP(BV(46720, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63426, 16), 8), UFXP(BV(61358, 16), 8)), UFXP(BV(2068, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6391, 16), 8), UFXP(BV(22729, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32509, 16), 8), UFXP(BV(30359, 16), 8)), UFXP(BV(2150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22803, 16), 8), UFXP(BV(51481, 16), 8)), UFXP(BV(63645, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28354, 16), 8), UFXP(BV(3754, 16), 8)), UFXP(BV(32108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39544, 16), 8), UFXP(BV(62579, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29671, 16), 8), UFXP(BV(15625, 16), 8)), UFXP(BV(14046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57786, 16), 8), UFXP(BV(62764, 16), 8)), UFXP(BV(55014, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34709, 16), 8), UFXP(BV(33161, 16), 8)), UFXP(BV(39587, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-18549, 16), 8), SFXP(SBV(-13032, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3198, 16), 8), UFXP(BV(34062, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16915, 16), 8), SFXP(SBV(17415, 16), 8)), SFXP(SBV(28966, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15350, 16), 8), SFXP(SBV(-7764, 16), 8)), SFXP(SBV(-7586, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20296, 16), 8), SFXP(SBV(-1857, 16), 8)), SFXP(SBV(-18439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50913, 16), 8), UFXP(BV(60666, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42235, 16), 8), UFXP(BV(41601, 16), 8)), UFXP(BV(634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1926, 16), 8), UFXP(BV(25704, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(47935, 16), 8), UFXP(BV(23459, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37540, 16), 8), UFXP(BV(34419, 16), 8)), UFXP(BV(3121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-17822, 16), 8), SFXP(SBV(13973, 16), 8)), SFXP(SBV(10280, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6695, 16), 8), SFXP(SBV(22807, 16), 8)), SFXP(SBV(29502, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23002, 16), 8), SFXP(SBV(16449, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15659, 16), 8), SFXP(SBV(19418, 16), 8)), SFXP(SBV(3759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(696, 16), 8), SFXP(SBV(-4598, 16), 8)), SFXP(SBV(5294, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9579, 16), 8), SFXP(SBV(-29369, 16), 8)), SFXP(SBV(19790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40235, 16), 8), UFXP(BV(41158, 16), 8)), UFXP(BV(15857, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5133, 16), 8), UFXP(BV(45315, 16), 8)), UFXP(BV(50448, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(613, 16), 8), SFXP(SBV(26393, 16), 8)), SFXP(SBV(-25780, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27946, 16), 8), SFXP(SBV(-9729, 16), 8)), SFXP(SBV(-18217, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16662, 16), 8), SFXP(SBV(-26460, 16), 8)), SFXP(SBV(18238, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8705, 16), 8), SFXP(SBV(-20425, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55147, 16), 8), UFXP(BV(26414, 16), 8)), UFXP(BV(28733, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24992, 16), 8), UFXP(BV(5291, 16), 8)), UFXP(BV(19701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18177, 16), 8), SFXP(SBV(-32691, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20905, 16), 8), UFXP(BV(49504, 16), 8)), UFXP(BV(4873, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29575, 16), 8), UFXP(BV(28689, 16), 8)), UFXP(BV(58264, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55136, 16), 8), UFXP(BV(32821, 16), 8)), UFXP(BV(22421, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26979, 16), 8), SFXP(SBV(-8324, 16), 8)), SFXP(SBV(-18655, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34922, 16), 8), UFXP(BV(46990, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5772, 16), 8), UFXP(BV(23471, 16), 8)), UFXP(BV(47837, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9756, 16), 8), SFXP(SBV(-22553, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27896, 16), 8), SFXP(SBV(19935, 16), 8)), SFXP(SBV(-9605, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36889, 16), 8), UFXP(BV(32502, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12938, 16), 8), UFXP(BV(41554, 16), 8)), UFXP(BV(2949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5343, 16), 8), UFXP(BV(58145, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10148, 16), 8), UFXP(BV(34024, 16), 8)), UFXP(BV(44172, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25671, 16), 8), SFXP(SBV(-22261, 16), 8)), SFXP(SBV(-4050, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35775, 16), 8), UFXP(BV(18177, 16), 8)), UFXP(BV(49796, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64472, 16), 8), UFXP(BV(39533, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47991, 16), 8), UFXP(BV(53816, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46569, 16), 8), UFXP(BV(22105, 16), 8)), UFXP(BV(3138, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20610, 16), 8), SFXP(SBV(17538, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11156, 16), 8), SFXP(SBV(-4784, 16), 8)), SFXP(SBV(-11870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20759, 16), 8), SFXP(SBV(-28155, 16), 8)), SFXP(SBV(7396, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33103, 16), 8), UFXP(BV(45077, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32387, 16), 8), UFXP(BV(64210, 16), 8)), UFXP(BV(33713, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21084, 16), 8), SFXP(SBV(-29540, 16), 8)), SFXP(SBV(-8064, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56962, 16), 8), UFXP(BV(24528, 16), 8)), UFXP(BV(32434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18901, 16), 8), SFXP(SBV(-17838, 16), 8)), SFXP(SBV(1063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29089, 16), 8), SFXP(SBV(3264, 16), 8)), SFXP(SBV(-25825, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2888, 16), 8), SFXP(SBV(-3912, 16), 8)), SFXP(SBV(1024, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32539, 16), 8), UFXP(BV(41800, 16), 8)), UFXP(BV(8803, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7683, 16), 8), UFXP(BV(41384, 16), 8)), UFXP(BV(49067, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33537, 16), 8), UFXP(BV(11196, 16), 8)), UFXP(BV(22341, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20518, 16), 8), UFXP(BV(11996, 16), 8)), UFXP(BV(8522, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22529, 16), 8), UFXP(BV(54303, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1024, 16), 8), UFXP(BV(8178, 16), 8)), UFXP(BV(32712, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28483, 16), 8), SFXP(SBV(21468, 16), 8)), SFXP(SBV(-29270, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33076, 16), 8), UFXP(BV(23223, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1736, 16), 8), SFXP(SBV(-949, 16), 8)), SFXP(SBV(787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50265, 16), 8), UFXP(BV(50758, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18509, 16), 8), UFXP(BV(17928, 16), 8)), UFXP(BV(51024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20853, 16), 8), SFXP(SBV(-15897, 16), 8)), SFXP(SBV(-28786, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4406, 16), 8), SFXP(SBV(-10006, 16), 8)), SFXP(SBV(-5600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51012, 16), 8), UFXP(BV(9105, 16), 8)), UFXP(BV(41907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40230, 16), 8), UFXP(BV(28681, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19137, 16), 8), UFXP(BV(19799, 16), 8)), UFXP(BV(38936, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9492, 16), 8), SFXP(SBV(-32583, 16), 8)), SFXP(SBV(-28468, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22155, 16), 8), SFXP(SBV(14517, 16), 8)), SFXP(SBV(11160, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32976, 16), 8), UFXP(BV(43642, 16), 8)), UFXP(BV(54870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3436, 16), 8), SFXP(SBV(6690, 16), 8)), SFXP(SBV(-3254, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47139, 16), 8), UFXP(BV(33783, 16), 8)), UFXP(BV(15386, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25393, 16), 8), UFXP(BV(56623, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10462, 16), 8), SFXP(SBV(15537, 16), 8)), SFXP(SBV(-20407, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23974, 16), 8), SFXP(SBV(-25030, 16), 8)), SFXP(SBV(-16532, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24658, 16), 8), UFXP(BV(7599, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35508, 16), 8), UFXP(BV(11258, 16), 8)), UFXP(BV(46766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17354, 16), 8), UFXP(BV(39102, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13320, 16), 8), UFXP(BV(39773, 16), 8)), UFXP(BV(37823, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29512, 16), 8), UFXP(BV(6613, 16), 8)), UFXP(BV(41458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21403, 16), 8), UFXP(BV(34137, 16), 8)), UFXP(BV(55540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16049, 16), 8), SFXP(SBV(19104, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21867, 16), 8), UFXP(BV(10873, 16), 8)), UFXP(BV(10994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33199, 16), 8), UFXP(BV(39345, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15835, 16), 8), SFXP(SBV(22465, 16), 8)), SFXP(SBV(13328, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8659, 16), 8), UFXP(BV(9164, 16), 8)), UFXP(BV(65031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22869, 16), 8), SFXP(SBV(18184, 16), 8)), SFXP(SBV(-24483, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44128, 16), 8), UFXP(BV(2794, 16), 8)), UFXP(BV(22864, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25026, 16), 8), SFXP(SBV(7263, 16), 8)), SFXP(SBV(-32289, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3541, 16), 8), SFXP(SBV(18820, 16), 8)), SFXP(SBV(22361, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-177, 16), 8), SFXP(SBV(-12758, 16), 8)), SFXP(SBV(12581, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19560, 16), 8), SFXP(SBV(14529, 16), 8)), SFXP(SBV(5031, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48010, 16), 8), UFXP(BV(2485, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60965, 16), 8), UFXP(BV(24064, 16), 8)), UFXP(BV(29078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10957, 16), 8), SFXP(SBV(-12765, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57460, 16), 8), UFXP(BV(16106, 16), 8)), UFXP(BV(41354, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59595, 16), 8), UFXP(BV(18367, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30829, 16), 8), SFXP(SBV(2506, 16), 8)), SFXP(SBV(-32201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24316, 16), 8), UFXP(BV(65491, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38878, 16), 8), UFXP(BV(1061, 16), 8)), UFXP(BV(39939, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22096, 16), 8), SFXP(SBV(-18375, 16), 8)), SFXP(SBV(-13129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28857, 16), 8), SFXP(SBV(28474, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33334, 16), 8), UFXP(BV(38457, 16), 8)), UFXP(BV(6255, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57881, 16), 8), UFXP(BV(15344, 16), 8)), UFXP(BV(42537, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2095, 16), 8), SFXP(SBV(-31476, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17058, 16), 8), SFXP(SBV(-3015, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10133, 16), 8), SFXP(SBV(6125, 16), 8)), SFXP(SBV(16258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3689, 16), 8), SFXP(SBV(29858, 16), 8)), SFXP(SBV(-28494, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58718, 16), 8), UFXP(BV(52051, 16), 8)), UFXP(BV(6667, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8071, 16), 8), SFXP(SBV(-18603, 16), 8)), SFXP(SBV(10532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4416, 16), 8), SFXP(SBV(26265, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9626, 16), 8), UFXP(BV(58212, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17721, 16), 8), SFXP(SBV(28998, 16), 8)), SFXP(SBV(-24297, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20509, 16), 8), SFXP(SBV(22253, 16), 8)), SFXP(SBV(-1744, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61003, 16), 8), UFXP(BV(44442, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3149, 16), 8), UFXP(BV(56930, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15446, 16), 8), SFXP(SBV(-9756, 16), 8)), SFXP(SBV(25202, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21236, 16), 8), SFXP(SBV(10297, 16), 8)), SFXP(SBV(2200, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18038, 16), 8), SFXP(SBV(5990, 16), 8)), SFXP(SBV(24028, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15351, 16), 8), SFXP(SBV(27479, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25026, 16), 8), SFXP(SBV(-8105, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6409, 16), 8), SFXP(SBV(25790, 16), 8)), SFXP(SBV(9704, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30979, 16), 8), UFXP(BV(38039, 16), 8)), UFXP(BV(58476, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20634, 16), 8), UFXP(BV(11920, 16), 8)), UFXP(BV(8714, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15190, 16), 8), SFXP(SBV(-26401, 16), 8)), SFXP(SBV(23945, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2584, 16), 8), UFXP(BV(56243, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58039, 16), 8), UFXP(BV(49909, 16), 8)), UFXP(BV(8130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53125, 16), 8), UFXP(BV(1036, 16), 8)), UFXP(BV(18382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31244, 16), 8), UFXP(BV(42093, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50222, 16), 8), UFXP(BV(49398, 16), 8)), UFXP(BV(824, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17531, 16), 8), SFXP(SBV(-22647, 16), 8)), SFXP(SBV(25358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51856, 16), 8), UFXP(BV(41606, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34679, 16), 8), UFXP(BV(56747, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28049, 16), 8), UFXP(BV(51851, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25026, 16), 8), UFXP(BV(26195, 16), 8)), UFXP(BV(64367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31469, 16), 8), SFXP(SBV(26545, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14098, 16), 8), UFXP(BV(35224, 16), 8)), UFXP(BV(44410, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15395, 16), 8), UFXP(BV(61758, 16), 8)), UFXP(BV(19173, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45157, 16), 8), UFXP(BV(27301, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23794, 16), 8), UFXP(BV(58567, 16), 8)), UFXP(BV(4041, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1586, 16), 8), SFXP(SBV(2414, 16), 8)), SFXP(SBV(-828, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41472, 16), 8), UFXP(BV(16441, 16), 8)), UFXP(BV(57913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27048, 16), 8), SFXP(SBV(-8712, 16), 8)), SFXP(SBV(-29776, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58820, 16), 8), UFXP(BV(7345, 16), 8)), UFXP(BV(51475, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47185, 16), 8), UFXP(BV(24913, 16), 8)), UFXP(BV(6562, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45089, 16), 8), UFXP(BV(42929, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(607, 16), 8), UFXP(BV(14524, 16), 8)), UFXP(BV(34438, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9823, 16), 8), UFXP(BV(11960, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17855, 16), 8), UFXP(BV(12841, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27601, 16), 8), SFXP(SBV(18487, 16), 8)), SFXP(SBV(-9114, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58413, 16), 8), UFXP(BV(33958, 16), 8)), UFXP(BV(24455, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10429, 16), 8), SFXP(SBV(4298, 16), 8)), SFXP(SBV(-6131, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8300, 16), 8), UFXP(BV(43034, 16), 8)), UFXP(BV(51334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2218, 16), 8), UFXP(BV(57984, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49290, 16), 8), UFXP(BV(53254, 16), 8)), UFXP(BV(29860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10818, 16), 8), UFXP(BV(32158, 16), 8)), UFXP(BV(42976, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55243, 16), 8), UFXP(BV(59978, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31762, 16), 8), SFXP(SBV(-23339, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21359, 16), 8), SFXP(SBV(23122, 16), 8)), SFXP(SBV(28607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26776, 16), 8), SFXP(SBV(-782, 16), 8)), SFXP(SBV(25994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38232, 16), 8), UFXP(BV(43503, 16), 8)), UFXP(BV(16199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5105, 16), 8), SFXP(SBV(-32271, 16), 8)), SFXP(SBV(-27166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14885, 16), 8), SFXP(SBV(-12178, 16), 8)), SFXP(SBV(2707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25419, 16), 8), SFXP(SBV(2891, 16), 8)), SFXP(SBV(-22528, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10195, 16), 8), SFXP(SBV(32461, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5292, 16), 8), SFXP(SBV(-13348, 16), 8)), SFXP(SBV(18640, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60431, 16), 8), UFXP(BV(60222, 16), 8)), UFXP(BV(55117, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17780, 16), 8), SFXP(SBV(14379, 16), 8)), SFXP(SBV(32159, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29889, 16), 8), UFXP(BV(30917, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6755, 16), 8), UFXP(BV(20225, 16), 8)), UFXP(BV(26980, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41050, 16), 8), UFXP(BV(42602, 16), 8)), UFXP(BV(63984, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2357, 16), 8), UFXP(BV(15125, 16), 8)), UFXP(BV(17482, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36715, 16), 8), UFXP(BV(31269, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9187, 16), 8), SFXP(SBV(-7257, 16), 8)), SFXP(SBV(16444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39841, 16), 8), UFXP(BV(8652, 16), 8)), UFXP(BV(31189, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37711, 16), 8), UFXP(BV(63510, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45414, 16), 8), UFXP(BV(59871, 16), 8)), UFXP(BV(4189, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24551, 16), 8), UFXP(BV(61062, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34722, 16), 8), UFXP(BV(65117, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36012, 16), 8), UFXP(BV(24477, 16), 8)), UFXP(BV(60489, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64247, 16), 8), UFXP(BV(46063, 16), 8)), UFXP(BV(18184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10228, 16), 8), SFXP(SBV(20964, 16), 8)), SFXP(SBV(31192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12995, 16), 8), SFXP(SBV(-8396, 16), 8)), SFXP(SBV(4599, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23753, 16), 8), UFXP(BV(48354, 16), 8)), UFXP(BV(30085, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49630, 16), 8), UFXP(BV(28799, 16), 8)), UFXP(BV(20831, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13827, 16), 8), SFXP(SBV(28884, 16), 8)), SFXP(SBV(-22825, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32994, 16), 8), UFXP(BV(50382, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1746, 16), 8), UFXP(BV(9764, 16), 8)), UFXP(BV(11510, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8236, 16), 8), UFXP(BV(1754, 16), 8)), UFXP(BV(9990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5566, 16), 8), SFXP(SBV(3394, 16), 8)), SFXP(SBV(-8257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25579, 16), 8), SFXP(SBV(-31464, 16), 8)), SFXP(SBV(-1910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38636, 16), 8), UFXP(BV(28019, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28348, 16), 8), SFXP(SBV(-19669, 16), 8)), SFXP(SBV(-8679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48990, 16), 8), UFXP(BV(57692, 16), 8)), UFXP(BV(30308, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28094, 16), 8), UFXP(BV(39033, 16), 8)), UFXP(BV(54597, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28767, 16), 8), SFXP(SBV(18330, 16), 8)), SFXP(SBV(-10437, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(644, 16), 8), SFXP(SBV(7178, 16), 8)), SFXP(SBV(18058, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20796, 16), 8), SFXP(SBV(-22476, 16), 8)), SFXP(SBV(22264, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40934, 16), 8), UFXP(BV(36491, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27323, 16), 8), SFXP(SBV(-22326, 16), 8)), SFXP(SBV(4997, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16331, 16), 8), UFXP(BV(2782, 16), 8)), UFXP(BV(19113, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14590, 16), 8), SFXP(SBV(-20586, 16), 8)), SFXP(SBV(-30360, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10240, 16), 8), SFXP(SBV(6190, 16), 8)), SFXP(SBV(-16430, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26216, 16), 8), UFXP(BV(2576, 16), 8)), UFXP(BV(1655, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56778, 16), 8), UFXP(BV(11247, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5046, 16), 8), UFXP(BV(46191, 16), 8)), UFXP(BV(51237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9968, 16), 8), SFXP(SBV(6557, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12652, 16), 8), SFXP(SBV(-1292, 16), 8)), SFXP(SBV(-13944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17986, 16), 8), SFXP(SBV(25709, 16), 8)), SFXP(SBV(-7723, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45388, 16), 8), UFXP(BV(13501, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17162, 16), 8), UFXP(BV(9947, 16), 8)), UFXP(BV(27109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14262, 16), 8), SFXP(SBV(-1909, 16), 8)), SFXP(SBV(16171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5297, 16), 8), SFXP(SBV(-8644, 16), 8)), SFXP(SBV(13941, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12549, 16), 8), UFXP(BV(27294, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6331, 16), 8), UFXP(BV(61339, 16), 8)), UFXP(BV(9615, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64522, 16), 8), UFXP(BV(10008, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16062, 16), 8), SFXP(SBV(-19412, 16), 8)), SFXP(SBV(3350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16119, 16), 8), SFXP(SBV(-28659, 16), 8)), SFXP(SBV(-12540, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34283, 16), 8), UFXP(BV(50691, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42253, 16), 8), UFXP(BV(4347, 16), 8)), UFXP(BV(46600, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22782, 16), 8), SFXP(SBV(2622, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24717, 16), 8), SFXP(SBV(16537, 16), 8)), SFXP(SBV(-8180, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22320, 16), 8), UFXP(BV(5823, 16), 8)), UFXP(BV(28143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25299, 16), 8), UFXP(BV(42527, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49322, 16), 8), UFXP(BV(61088, 16), 8)), UFXP(BV(38519, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30930, 16), 8), SFXP(SBV(-10862, 16), 8)), SFXP(SBV(-20068, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30615, 16), 8), SFXP(SBV(21262, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32579, 16), 8), UFXP(BV(32411, 16), 8)), UFXP(BV(168, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43368, 16), 8), UFXP(BV(48792, 16), 8)), UFXP(BV(60112, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15461, 16), 8), SFXP(SBV(-7792, 16), 8)), SFXP(SBV(-11842, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30206, 16), 8), UFXP(BV(48272, 16), 8)), UFXP(BV(12942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50208, 16), 8), UFXP(BV(26870, 16), 8)), UFXP(BV(26998, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8295, 16), 8), SFXP(SBV(-11927, 16), 8)), SFXP(SBV(20222, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12234, 16), 8), SFXP(SBV(-21985, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48426, 16), 8), UFXP(BV(26282, 16), 8)), UFXP(BV(22144, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22425, 16), 8), SFXP(SBV(-6515, 16), 8)), SFXP(SBV(-15910, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31641, 16), 8), SFXP(SBV(13415, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3715, 16), 8), SFXP(SBV(-16140, 16), 8)), SFXP(SBV(27924, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10757, 16), 8), SFXP(SBV(22414, 16), 8)), SFXP(SBV(24321, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9803, 16), 8), SFXP(SBV(-19844, 16), 8)), SFXP(SBV(29647, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8304, 16), 8), UFXP(BV(17783, 16), 8)), UFXP(BV(56057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4555, 16), 8), SFXP(SBV(-897, 16), 8)), SFXP(SBV(3658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8344, 16), 8), SFXP(SBV(-18800, 16), 8)), SFXP(SBV(22938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32180, 16), 8), SFXP(SBV(3031, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14530, 16), 8), SFXP(SBV(24525, 16), 8)), SFXP(SBV(9995, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6382, 16), 8), SFXP(SBV(-23494, 16), 8)), SFXP(SBV(-29876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7378, 16), 8), UFXP(BV(2317, 16), 8)), UFXP(BV(5061, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9772, 16), 8), SFXP(SBV(14128, 16), 8)), SFXP(SBV(-23900, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16352, 16), 8), SFXP(SBV(-17820, 16), 8)), SFXP(SBV(1468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51801, 16), 8), UFXP(BV(56640, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26228, 16), 8), SFXP(SBV(-8957, 16), 8)), SFXP(SBV(17271, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4989, 16), 8), SFXP(SBV(-28628, 16), 8)), SFXP(SBV(-23639, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23186, 16), 8), SFXP(SBV(-24290, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45889, 16), 8), UFXP(BV(33961, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2677, 16), 8), SFXP(SBV(-10422, 16), 8)), SFXP(SBV(-7745, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9862, 16), 8), SFXP(SBV(22204, 16), 8)), SFXP(SBV(-12342, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8472, 16), 8), SFXP(SBV(23797, 16), 8)), SFXP(SBV(-15325, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61199, 16), 8), UFXP(BV(52838, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46768, 16), 8), UFXP(BV(8799, 16), 8)), UFXP(BV(37969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35472, 16), 8), UFXP(BV(60327, 16), 8)), UFXP(BV(30263, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18734, 16), 8), SFXP(SBV(4252, 16), 8)), SFXP(SBV(-22986, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20252, 16), 8), UFXP(BV(44587, 16), 8)), UFXP(BV(41201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36653, 16), 8), UFXP(BV(55288, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31704, 16), 8), SFXP(SBV(10944, 16), 8)), SFXP(SBV(22888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12793, 16), 8), SFXP(SBV(19490, 16), 8)), SFXP(SBV(-9073, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35120, 16), 8), UFXP(BV(35999, 16), 8)), UFXP(BV(23413, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13962, 16), 8), SFXP(SBV(-27458, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(958, 16), 8), UFXP(BV(29737, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49224, 16), 8), UFXP(BV(2630, 16), 8)), UFXP(BV(46948, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23691, 16), 8), UFXP(BV(26851, 16), 8)), UFXP(BV(60040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40712, 16), 8), UFXP(BV(31054, 16), 8)), UFXP(BV(9658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16968, 16), 8), SFXP(SBV(3532, 16), 8)), SFXP(SBV(-20500, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(16100, 16), 8), SFXP(SBV(1208, 16), 8)), SFXP(SBV(10435, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17965, 16), 8), SFXP(SBV(-10108, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31428, 16), 8), UFXP(BV(60570, 16), 8)), UFXP(BV(36394, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4929, 16), 8), SFXP(SBV(-15776, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30859, 16), 8), UFXP(BV(27507, 16), 8)), UFXP(BV(58366, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23221, 16), 8), UFXP(BV(12507, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12294, 16), 8), SFXP(SBV(-7375, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57761, 16), 8), UFXP(BV(25535, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40980, 16), 8), UFXP(BV(37239, 16), 8)), UFXP(BV(62910, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12251, 16), 8), SFXP(SBV(-6206, 16), 8)), SFXP(SBV(-6045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48118, 16), 8), UFXP(BV(28760, 16), 8)), UFXP(BV(19358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25617, 16), 8), SFXP(SBV(-27072, 16), 8)), SFXP(SBV(1455, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11177, 16), 8), SFXP(SBV(-23842, 16), 8)), SFXP(SBV(-30517, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17353, 16), 8), SFXP(SBV(10491, 16), 8)), SFXP(SBV(-27844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5064, 16), 8), SFXP(SBV(27337, 16), 8)), SFXP(SBV(-22273, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1878, 16), 8), SFXP(SBV(18149, 16), 8)), SFXP(SBV(20027, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12822, 16), 8), UFXP(BV(39791, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5877, 16), 8), UFXP(BV(31692, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29341, 16), 8), SFXP(SBV(6694, 16), 8)), SFXP(SBV(29501, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60083, 16), 8), UFXP(BV(51182, 16), 8)), UFXP(BV(45729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-12371, 16), 8), SFXP(SBV(-30437, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(395, 16), 8), UFXP(BV(44253, 16), 8)), UFXP(BV(44648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16044, 16), 8), SFXP(SBV(25162, 16), 8)), SFXP(SBV(-4086, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6691, 16), 8), SFXP(SBV(8634, 16), 8)), SFXP(SBV(-1943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49657, 16), 8), UFXP(BV(63118, 16), 8)), UFXP(BV(47239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31430, 16), 8), SFXP(SBV(-20506, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3874, 16), 8), UFXP(BV(1350, 16), 8)), UFXP(BV(20430, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8645, 16), 8), SFXP(SBV(29275, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9428, 16), 8), UFXP(BV(16964, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37404, 16), 8), UFXP(BV(39159, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43890, 16), 8), UFXP(BV(54718, 16), 8)), UFXP(BV(54708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59620, 16), 8), UFXP(BV(19303, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25840, 16), 8), SFXP(SBV(5265, 16), 8)), SFXP(SBV(31105, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12199, 16), 8), SFXP(SBV(-16485, 16), 8)), SFXP(SBV(-28684, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10650, 16), 8), UFXP(BV(24238, 16), 8)), UFXP(BV(34888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14643, 16), 8), SFXP(SBV(-2358, 16), 8)), SFXP(SBV(-17001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(447, 16), 8), SFXP(SBV(-20041, 16), 8)), SFXP(SBV(20488, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18909, 16), 8), UFXP(BV(48505, 16), 8)), UFXP(BV(43795, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17185, 16), 8), SFXP(SBV(-3646, 16), 8)), SFXP(SBV(13539, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27299, 16), 8), SFXP(SBV(2474, 16), 8)), SFXP(SBV(-29773, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33236, 16), 8), UFXP(BV(9588, 16), 8)), UFXP(BV(42824, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22623, 16), 8), SFXP(SBV(-6264, 16), 8)), SFXP(SBV(28887, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-896, 16), 8), SFXP(SBV(-20978, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37732, 16), 8), UFXP(BV(7892, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24339, 16), 8), UFXP(BV(16389, 16), 8)), UFXP(BV(50844, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57645, 16), 8), UFXP(BV(14307, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(47013, 16), 8), UFXP(BV(22838, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15014, 16), 8), SFXP(SBV(-8593, 16), 8)), SFXP(SBV(-20321, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16450, 16), 8), SFXP(SBV(-13014, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43338, 16), 8), UFXP(BV(49693, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6962, 16), 8), UFXP(BV(44146, 16), 8)), UFXP(BV(28352, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10728, 16), 8), UFXP(BV(13915, 16), 8)), UFXP(BV(24643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29672, 16), 8), SFXP(SBV(-19640, 16), 8)), SFXP(SBV(17362, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32715, 16), 8), SFXP(SBV(-6296, 16), 8)), SFXP(SBV(26419, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7395, 16), 8), SFXP(SBV(9019, 16), 8)), SFXP(SBV(1624, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14167, 16), 8), SFXP(SBV(-19779, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(27051, 16), 8), SFXP(SBV(-16125, 16), 8)), SFXP(SBV(40, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23639, 16), 8), SFXP(SBV(15195, 16), 8)), SFXP(SBV(-26847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44742, 16), 8), UFXP(BV(52674, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52564, 16), 8), UFXP(BV(41502, 16), 8)), UFXP(BV(28530, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26741, 16), 8), SFXP(SBV(29650, 16), 8)), SFXP(SBV(-9145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23440, 16), 8), UFXP(BV(39815, 16), 8)), UFXP(BV(41080, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3325, 16), 8), UFXP(BV(55274, 16), 8)), UFXP(BV(58599, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20040, 16), 8), SFXP(SBV(-8519, 16), 8)), SFXP(SBV(11521, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2183, 16), 8), UFXP(BV(64617, 16), 8)), UFXP(BV(1264, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13454, 16), 8), SFXP(SBV(6326, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29086, 16), 8), UFXP(BV(59592, 16), 8)), UFXP(BV(23142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19042, 16), 8), UFXP(BV(25054, 16), 8)), UFXP(BV(28579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1889, 16), 8), SFXP(SBV(1849, 16), 8)), SFXP(SBV(-13643, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55656, 16), 8), UFXP(BV(30620, 16), 8)), UFXP(BV(25036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45795, 16), 8), UFXP(BV(11213, 16), 8)), UFXP(BV(57008, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26278, 16), 8), SFXP(SBV(19207, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38878, 16), 8), UFXP(BV(1100, 16), 8)), UFXP(BV(39978, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(898, 16), 8), SFXP(SBV(12784, 16), 8)), SFXP(SBV(-20692, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57522, 16), 8), UFXP(BV(33824, 16), 8)), UFXP(BV(23698, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(510, 16), 8), UFXP(BV(13661, 16), 8)), UFXP(BV(27215, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29743, 16), 8), SFXP(SBV(5510, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24577, 16), 8), UFXP(BV(32305, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15934, 16), 8), SFXP(SBV(24101, 16), 8)), SFXP(SBV(-8167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26597, 16), 8), SFXP(SBV(-27736, 16), 8)), SFXP(SBV(-1139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10767, 16), 8), SFXP(SBV(9245, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65146, 16), 8), UFXP(BV(58589, 16), 8)), UFXP(BV(6557, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65422, 16), 8), UFXP(BV(31036, 16), 8)), UFXP(BV(34386, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43547, 16), 8), UFXP(BV(1375, 16), 8)), UFXP(BV(44922, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45835, 16), 8), UFXP(BV(7513, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45819, 16), 8), UFXP(BV(11670, 16), 8)), UFXP(BV(34149, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2271, 16), 8), SFXP(SBV(-8752, 16), 8)), SFXP(SBV(6481, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27275, 16), 8), SFXP(SBV(-12390, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58782, 16), 8), UFXP(BV(9884, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29623, 16), 8), SFXP(SBV(30165, 16), 8)), SFXP(SBV(542, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30412, 16), 8), SFXP(SBV(21577, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22266, 16), 8), SFXP(SBV(-11416, 16), 8)), SFXP(SBV(-10850, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23372, 16), 8), UFXP(BV(11579, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10359, 16), 8), SFXP(SBV(29285, 16), 8)), SFXP(SBV(18926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53892, 16), 8), UFXP(BV(51569, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-13182, 16), 8), SFXP(SBV(22579, 16), 8)), SFXP(SBV(17005, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62674, 16), 8), UFXP(BV(53735, 16), 8)), UFXP(BV(8939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36303, 16), 8), UFXP(BV(3787, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25366, 16), 8), SFXP(SBV(-16313, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10163, 16), 8), SFXP(SBV(-25655, 16), 8)), SFXP(SBV(15492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48583, 16), 8), UFXP(BV(36117, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12347, 16), 8), SFXP(SBV(26293, 16), 8)), SFXP(SBV(13946, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56737, 16), 8), UFXP(BV(64907, 16), 8)), UFXP(BV(57366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26301, 16), 8), SFXP(SBV(5313, 16), 8)), SFXP(SBV(-31614, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14160, 16), 8), SFXP(SBV(-1349, 16), 8)), SFXP(SBV(-9080, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19049, 16), 8), UFXP(BV(58131, 16), 8)), UFXP(BV(160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14222, 16), 8), SFXP(SBV(-25085, 16), 8)), SFXP(SBV(10863, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11471, 16), 8), UFXP(BV(40712, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(26783, 16), 8), SFXP(SBV(-30749, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31647, 16), 8), SFXP(SBV(-31407, 16), 8)), SFXP(SBV(-240, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42368, 16), 8), UFXP(BV(28387, 16), 8)), UFXP(BV(5219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13803, 16), 8), UFXP(BV(23529, 16), 8)), UFXP(BV(37332, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20515, 16), 8), UFXP(BV(12545, 16), 8)), UFXP(BV(33060, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4237, 16), 8), SFXP(SBV(23366, 16), 8)), SFXP(SBV(-27603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16810, 16), 8), SFXP(SBV(9032, 16), 8)), SFXP(SBV(7778, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36799, 16), 8), UFXP(BV(60283, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3030, 16), 8), SFXP(SBV(-32725, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38767, 16), 8), UFXP(BV(14031, 16), 8)), UFXP(BV(24736, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1483, 16), 8), UFXP(BV(15667, 16), 8)), UFXP(BV(51352, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11082, 16), 8), SFXP(SBV(-1573, 16), 8)), SFXP(SBV(-12655, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28220, 16), 8), UFXP(BV(36475, 16), 8)), UFXP(BV(23103, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11416, 16), 8), UFXP(BV(23126, 16), 8)), UFXP(BV(48236, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23563, 16), 8), UFXP(BV(18564, 16), 8)), UFXP(BV(42127, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5977, 16), 8), SFXP(SBV(-3686, 16), 8)), SFXP(SBV(-2291, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27844, 16), 8), UFXP(BV(35141, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48509, 16), 8), UFXP(BV(42938, 16), 8)), UFXP(BV(5571, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57002, 16), 8), UFXP(BV(58593, 16), 8)), UFXP(BV(4892, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15380, 16), 8), SFXP(SBV(-12938, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28037, 16), 8), SFXP(SBV(-12206, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47049, 16), 8), UFXP(BV(4742, 16), 8)), UFXP(BV(42307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25623, 16), 8), SFXP(SBV(-31668, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1961, 16), 8), SFXP(SBV(21485, 16), 8)), SFXP(SBV(-32030, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32077, 16), 8), SFXP(SBV(26898, 16), 8)), SFXP(SBV(5179, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45802, 16), 8), UFXP(BV(9918, 16), 8)), UFXP(BV(55720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12199, 16), 8), UFXP(BV(38507, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17001, 16), 8), UFXP(BV(27755, 16), 8)), UFXP(BV(54782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40810, 16), 8), UFXP(BV(47188, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45640, 16), 8), UFXP(BV(31317, 16), 8)), UFXP(BV(11421, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8223, 16), 8), UFXP(BV(39373, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28526, 16), 8), SFXP(SBV(-4765, 16), 8)), SFXP(SBV(23761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7687, 16), 8), SFXP(SBV(-29583, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21158, 16), 8), UFXP(BV(10743, 16), 8)), UFXP(BV(10415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5210, 16), 8), SFXP(SBV(28245, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1964, 16), 8), SFXP(SBV(-23186, 16), 8)), SFXP(SBV(-18728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30815, 16), 8), SFXP(SBV(10709, 16), 8)), SFXP(SBV(-20106, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11353, 16), 8), SFXP(SBV(5678, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59422, 16), 8), UFXP(BV(40245, 16), 8)), UFXP(BV(19177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6169, 16), 8), SFXP(SBV(-32476, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12979, 16), 8), SFXP(SBV(-8591, 16), 8)), SFXP(SBV(-21570, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15861, 16), 8), SFXP(SBV(2491, 16), 8)), SFXP(SBV(-18352, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30210, 16), 8), SFXP(SBV(-14574, 16), 8)), SFXP(SBV(-20752, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10007, 16), 8), UFXP(BV(55941, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15737, 16), 8), SFXP(SBV(14417, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31386, 16), 8), SFXP(SBV(1378, 16), 8)), SFXP(SBV(-30008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56840, 16), 8), UFXP(BV(9633, 16), 8)), UFXP(BV(937, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59112, 16), 8), UFXP(BV(51345, 16), 8)), UFXP(BV(59401, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30051, 16), 8), UFXP(BV(35395, 16), 8)), UFXP(BV(65446, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2412, 16), 8), SFXP(SBV(4580, 16), 8)), SFXP(SBV(-6992, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7343, 16), 8), SFXP(SBV(-3767, 16), 8)), SFXP(SBV(23020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18522, 16), 8), SFXP(SBV(15482, 16), 8)), SFXP(SBV(-3040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53338, 16), 8), UFXP(BV(49418, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32451, 16), 8), SFXP(SBV(-24526, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15339, 16), 8), SFXP(SBV(-22072, 16), 8)), SFXP(SBV(-6733, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(292, 16), 8), UFXP(BV(53752, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9855, 16), 8), SFXP(SBV(-15562, 16), 8)), SFXP(SBV(5707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13913, 16), 8), SFXP(SBV(22008, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10511, 16), 8), SFXP(SBV(-16301, 16), 8)), SFXP(SBV(13936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46385, 16), 8), UFXP(BV(5568, 16), 8)), UFXP(BV(40817, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6088, 16), 8), UFXP(BV(18412, 16), 8)), UFXP(BV(44645, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21851, 16), 8), SFXP(SBV(-9194, 16), 8)), SFXP(SBV(31045, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30723, 16), 8), SFXP(SBV(-12769, 16), 8)), SFXP(SBV(-22044, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57719, 16), 8), UFXP(BV(18790, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55959, 16), 8), UFXP(BV(32679, 16), 8)), UFXP(BV(23102, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9515, 16), 8), UFXP(BV(49714, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24200, 16), 8), UFXP(BV(13514, 16), 8)), UFXP(BV(37714, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30793, 16), 8), SFXP(SBV(20490, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21106, 16), 8), UFXP(BV(49983, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10840, 16), 8), SFXP(SBV(9498, 16), 8)), SFXP(SBV(1342, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3712, 16), 8), SFXP(SBV(4731, 16), 8)), SFXP(SBV(8443, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32063, 16), 8), UFXP(BV(13612, 16), 8)), UFXP(BV(45675, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36431, 16), 8), UFXP(BV(47195, 16), 8)), UFXP(BV(31582, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(65432, 16), 8), UFXP(BV(44907, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10204, 16), 8), UFXP(BV(16986, 16), 8)), UFXP(BV(58754, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25928, 16), 8), SFXP(SBV(8219, 16), 8)), SFXP(SBV(17709, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(34726, 16), 8), UFXP(BV(7706, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10900, 16), 8), UFXP(BV(10638, 16), 8)), UFXP(BV(262, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13835, 16), 8), UFXP(BV(27169, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34732, 16), 8), UFXP(BV(15890, 16), 8)), UFXP(BV(50622, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27839, 16), 8), UFXP(BV(8862, 16), 8)), UFXP(BV(18977, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26067, 16), 8), UFXP(BV(62108, 16), 8)), UFXP(BV(22639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21015, 16), 8), UFXP(BV(60649, 16), 8)), UFXP(BV(25902, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12079, 16), 8), SFXP(SBV(-19645, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38965, 16), 8), UFXP(BV(64786, 16), 8)), UFXP(BV(30484, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32054, 16), 8), SFXP(SBV(518, 16), 8)), SFXP(SBV(676, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4828, 16), 8), UFXP(BV(1735, 16), 8)), UFXP(BV(3093, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10769, 16), 8), UFXP(BV(20475, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21346, 16), 8), UFXP(BV(63314, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30773, 16), 8), SFXP(SBV(-24578, 16), 8)), SFXP(SBV(10185, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57263, 16), 8), UFXP(BV(49533, 16), 8)), UFXP(BV(7730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22657, 16), 8), SFXP(SBV(-12672, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21447, 16), 8), SFXP(SBV(-2457, 16), 8)), SFXP(SBV(18990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12798, 16), 8), SFXP(SBV(26995, 16), 8)), SFXP(SBV(-26716, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46569, 16), 8), UFXP(BV(35074, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2290, 16), 8), SFXP(SBV(14112, 16), 8)), SFXP(SBV(11822, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40552, 16), 8), UFXP(BV(9822, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49520, 16), 8), UFXP(BV(40263, 16), 8)), UFXP(BV(55126, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41024, 16), 8), UFXP(BV(55333, 16), 8)), UFXP(BV(19753, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1012, 16), 8), SFXP(SBV(11110, 16), 8)), SFXP(SBV(-10098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1613, 16), 8), SFXP(SBV(10822, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20886, 16), 8), UFXP(BV(62398, 16), 8)), UFXP(BV(24024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26388, 16), 8), SFXP(SBV(21600, 16), 8)), SFXP(SBV(-4788, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30014, 16), 8), SFXP(SBV(-1368, 16), 8)), SFXP(SBV(-28646, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15375, 16), 8), SFXP(SBV(29409, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59402, 16), 8), UFXP(BV(19463, 16), 8)), UFXP(BV(39939, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8078, 16), 8), SFXP(SBV(29792, 16), 8)), SFXP(SBV(-27666, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37804, 16), 8), UFXP(BV(42193, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10305, 16), 8), SFXP(SBV(24151, 16), 8)), SFXP(SBV(-10868, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5844, 16), 8), UFXP(BV(17928, 16), 8)), UFXP(BV(23772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32185, 16), 8), SFXP(SBV(-17335, 16), 8)), SFXP(SBV(16016, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34416, 16), 8), UFXP(BV(17168, 16), 8)), UFXP(BV(14263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26764, 16), 8), UFXP(BV(1328, 16), 8)), UFXP(BV(28092, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6704, 16), 8), UFXP(BV(61408, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11787, 16), 8), UFXP(BV(55021, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4330, 16), 8), SFXP(SBV(-24522, 16), 8)), SFXP(SBV(28852, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18998, 16), 8), SFXP(SBV(326, 16), 8)), SFXP(SBV(19324, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9377, 16), 8), SFXP(SBV(23896, 16), 8)), SFXP(SBV(14519, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30876, 16), 8), UFXP(BV(11176, 16), 8)), UFXP(BV(42052, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21576, 16), 8), SFXP(SBV(5247, 16), 8)), SFXP(SBV(-16329, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14963, 16), 8), SFXP(SBV(15680, 16), 8)), SFXP(SBV(1021, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30604, 16), 8), SFXP(SBV(5965, 16), 8)), SFXP(SBV(28967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28260, 16), 8), SFXP(SBV(-14918, 16), 8)), SFXP(SBV(-8408, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26925, 16), 8), SFXP(SBV(25639, 16), 8)), SFXP(SBV(1286, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18277, 16), 8), SFXP(SBV(-27455, 16), 8)), SFXP(SBV(-19804, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21914, 16), 8), UFXP(BV(27014, 16), 8)), UFXP(BV(48928, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27866, 16), 8), SFXP(SBV(27216, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23752, 16), 8), SFXP(SBV(24867, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8471, 16), 8), SFXP(SBV(25986, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28081, 16), 8), UFXP(BV(27629, 16), 8)), UFXP(BV(55710, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18797, 16), 8), SFXP(SBV(-3161, 16), 8)), SFXP(SBV(15636, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31062, 16), 8), UFXP(BV(53930, 16), 8)), UFXP(BV(19456, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35240, 16), 8), UFXP(BV(16544, 16), 8)), UFXP(BV(51784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2155, 16), 8), UFXP(BV(26019, 16), 8)), UFXP(BV(28174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9718, 16), 8), SFXP(SBV(10763, 16), 8)), SFXP(SBV(1045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30788, 16), 8), UFXP(BV(54209, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10502, 16), 8), SFXP(SBV(14348, 16), 8)), SFXP(SBV(-24850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31065, 16), 8), SFXP(SBV(2011, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37560, 16), 8), UFXP(BV(54497, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19402, 16), 8), SFXP(SBV(-20388, 16), 8)), SFXP(SBV(-25746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15817, 16), 8), UFXP(BV(42396, 16), 8)), UFXP(BV(63539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51326, 16), 8), UFXP(BV(10759, 16), 8)), UFXP(BV(59944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29812, 16), 8), SFXP(SBV(5446, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55409, 16), 8), UFXP(BV(45024, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26280, 16), 8), UFXP(BV(64083, 16), 8)), UFXP(BV(24921, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29019, 16), 8), SFXP(SBV(21130, 16), 8)), SFXP(SBV(-29631, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18242, 16), 8), UFXP(BV(56558, 16), 8)), UFXP(BV(9264, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36275, 16), 8), UFXP(BV(22090, 16), 8)), UFXP(BV(14185, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57191, 16), 8), UFXP(BV(28292, 16), 8)), UFXP(BV(28899, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65095, 16), 8), UFXP(BV(53582, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50480, 16), 8), UFXP(BV(19710, 16), 8)), UFXP(BV(4654, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31957, 16), 8), SFXP(SBV(12394, 16), 8)), SFXP(SBV(19563, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50188, 16), 8), UFXP(BV(21712, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19197, 16), 8), UFXP(BV(16169, 16), 8)), UFXP(BV(3028, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31019, 16), 8), SFXP(SBV(1518, 16), 8)), SFXP(SBV(-32537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30342, 16), 8), UFXP(BV(23055, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26825, 16), 8), UFXP(BV(20976, 16), 8)), UFXP(BV(5849, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44572, 16), 8), UFXP(BV(56736, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23468, 16), 8), SFXP(SBV(23768, 16), 8)), SFXP(SBV(16169, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8851, 16), 8), SFXP(SBV(14395, 16), 8)), SFXP(SBV(5544, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52876, 16), 8), UFXP(BV(22755, 16), 8)), UFXP(BV(30121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29878, 16), 8), SFXP(SBV(17481, 16), 8)), SFXP(SBV(-18177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17436, 16), 8), SFXP(SBV(12789, 16), 8)), SFXP(SBV(-30225, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21273, 16), 8), UFXP(BV(27049, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40842, 16), 8), UFXP(BV(13779, 16), 8)), UFXP(BV(27063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20576, 16), 8), SFXP(SBV(-6396, 16), 8)), SFXP(SBV(-14180, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7304, 16), 8), SFXP(SBV(-11114, 16), 8)), SFXP(SBV(3810, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7944, 16), 8), UFXP(BV(54138, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22597, 16), 8), SFXP(SBV(7068, 16), 8)), SFXP(SBV(-29665, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30701, 16), 8), SFXP(SBV(-3628, 16), 8)), SFXP(SBV(-23661, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12576, 16), 8), UFXP(BV(45803, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(541, 16), 8), UFXP(BV(27700, 16), 8)), UFXP(BV(58537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13774, 16), 8), UFXP(BV(2041, 16), 8)), UFXP(BV(15815, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3097, 16), 8), SFXP(SBV(-1556, 16), 8)), SFXP(SBV(4653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57470, 16), 8), UFXP(BV(11068, 16), 8)), UFXP(BV(3002, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50106, 16), 8), UFXP(BV(7787, 16), 8)), UFXP(BV(42319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10461, 16), 8), SFXP(SBV(-16496, 16), 8)), SFXP(SBV(-26957, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30412, 16), 8), SFXP(SBV(-1505, 16), 8)), SFXP(SBV(-28907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21956, 16), 8), SFXP(SBV(-15783, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42962, 16), 8), UFXP(BV(37071, 16), 8)), UFXP(BV(14497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2497, 16), 8), SFXP(SBV(32753, 16), 8)), SFXP(SBV(30256, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57684, 16), 8), UFXP(BV(40240, 16), 8)), UFXP(BV(17444, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8648, 16), 8), SFXP(SBV(-19003, 16), 8)), SFXP(SBV(-10355, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28680, 16), 8), UFXP(BV(10192, 16), 8)), UFXP(BV(38872, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1859, 16), 8), SFXP(SBV(16377, 16), 8)), SFXP(SBV(14518, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31250, 16), 8), UFXP(BV(32409, 16), 8)), UFXP(BV(63659, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(485, 16), 8), SFXP(SBV(12535, 16), 8)), SFXP(SBV(23747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43820, 16), 8), UFXP(BV(54457, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20564, 16), 8), SFXP(SBV(1184, 16), 8)), SFXP(SBV(-29572, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21359, 16), 8), SFXP(SBV(10135, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54266, 16), 8), UFXP(BV(3773, 16), 8)), UFXP(BV(50493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-454, 16), 8), SFXP(SBV(15728, 16), 8)), SFXP(SBV(-16182, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32436, 16), 8), SFXP(SBV(28775, 16), 8)), SFXP(SBV(3661, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2919, 16), 8), SFXP(SBV(-8117, 16), 8)), SFXP(SBV(-11036, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7632, 16), 8), SFXP(SBV(-9930, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5989, 16), 8), SFXP(SBV(5228, 16), 8)), SFXP(SBV(-11217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34365, 16), 8), UFXP(BV(41339, 16), 8)), UFXP(BV(58562, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8623, 16), 8), UFXP(BV(44473, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30184, 16), 8), SFXP(SBV(8287, 16), 8)), SFXP(SBV(21897, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18324, 16), 8), SFXP(SBV(-316, 16), 8)), SFXP(SBV(-22619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41434, 16), 8), UFXP(BV(46969, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24482, 16), 8), UFXP(BV(65108, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20965, 16), 8), UFXP(BV(24790, 16), 8)), UFXP(BV(45755, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11362, 16), 8), SFXP(SBV(-30699, 16), 8)), SFXP(SBV(13748, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12363, 16), 8), UFXP(BV(21287, 16), 8)), UFXP(BV(33650, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5780, 16), 8), UFXP(BV(34022, 16), 8)), UFXP(BV(39802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17441, 16), 8), SFXP(SBV(-31417, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20143, 16), 8), SFXP(SBV(22497, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54133, 16), 8), UFXP(BV(58514, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44460, 16), 8), UFXP(BV(50999, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4526, 16), 8), UFXP(BV(39086, 16), 8)), UFXP(BV(35668, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30096, 16), 8), SFXP(SBV(4653, 16), 8)), SFXP(SBV(-30787, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15589, 16), 8), SFXP(SBV(26770, 16), 8)), SFXP(SBV(-11181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28876, 16), 8), SFXP(SBV(4169, 16), 8)), SFXP(SBV(-11499, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16200, 16), 8), UFXP(BV(54394, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22932, 16), 8), UFXP(BV(28848, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33944, 16), 8), UFXP(BV(58113, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49256, 16), 8), UFXP(BV(8947, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2378, 16), 8), SFXP(SBV(-2570, 16), 8)), SFXP(SBV(-4948, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(200, 16), 8), SFXP(SBV(30605, 16), 8)), SFXP(SBV(-30405, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6809, 16), 8), SFXP(SBV(-15360, 16), 8)), SFXP(SBV(-22169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27234, 16), 8), UFXP(BV(36327, 16), 8)), UFXP(BV(63561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17260, 16), 8), UFXP(BV(18959, 16), 8)), UFXP(BV(63837, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(879, 16), 8), SFXP(SBV(6878, 16), 8)), SFXP(SBV(23616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29617, 16), 8), UFXP(BV(49515, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11837, 16), 8), SFXP(SBV(-10177, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29761, 16), 8), SFXP(SBV(8329, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11625, 16), 8), SFXP(SBV(28282, 16), 8)), SFXP(SBV(16657, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30814, 16), 8), SFXP(SBV(29368, 16), 8)), SFXP(SBV(5354, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5233, 16), 8), SFXP(SBV(7546, 16), 8)), SFXP(SBV(2313, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-5338, 16), 8), SFXP(SBV(-19912, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3878, 16), 8), SFXP(SBV(-11616, 16), 8)), SFXP(SBV(-15494, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(65520, 16), 8), UFXP(BV(61335, 16), 8)), UFXP(BV(34823, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8636, 16), 8), SFXP(SBV(11355, 16), 8)), SFXP(SBV(-19991, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31629, 16), 8), SFXP(SBV(-7171, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24588, 16), 8), UFXP(BV(46838, 16), 8)), UFXP(BV(42196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6129, 16), 8), UFXP(BV(9365, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3914, 16), 8), SFXP(SBV(-25206, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7048, 16), 8), SFXP(SBV(24869, 16), 8)), SFXP(SBV(-17821, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62472, 16), 8), UFXP(BV(48190, 16), 8)), UFXP(BV(14282, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42272, 16), 8), UFXP(BV(28711, 16), 8)), UFXP(BV(13561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2258, 16), 8), UFXP(BV(48293, 16), 8)), UFXP(BV(50551, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17627, 16), 8), SFXP(SBV(-14146, 16), 8)), SFXP(SBV(31773, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46288, 16), 8), UFXP(BV(13499, 16), 8)), UFXP(BV(59787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54045, 16), 8), UFXP(BV(54249, 16), 8)), UFXP(BV(49420, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33898, 16), 8), UFXP(BV(6041, 16), 8)), UFXP(BV(39939, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2246, 16), 8), SFXP(SBV(9561, 16), 8)), SFXP(SBV(7315, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31983, 16), 8), SFXP(SBV(-26349, 16), 8)), SFXP(SBV(-15075, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(32107, 16), 8), SFXP(SBV(-22802, 16), 8)), SFXP(SBV(23804, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7161, 16), 8), SFXP(SBV(-16433, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57536, 16), 8), UFXP(BV(58735, 16), 8)), UFXP(BV(50735, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62559, 16), 8), UFXP(BV(19191, 16), 8)), UFXP(BV(36670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8447, 16), 8), SFXP(SBV(30782, 16), 8)), SFXP(SBV(32646, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42941, 16), 8), UFXP(BV(52399, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51266, 16), 8), UFXP(BV(16358, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9548, 16), 8), SFXP(SBV(-9273, 16), 8)), SFXP(SBV(275, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21192, 16), 8), SFXP(SBV(15138, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3959, 16), 8), SFXP(SBV(-10557, 16), 8)), SFXP(SBV(-6598, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4454, 16), 8), UFXP(BV(25801, 16), 8)), UFXP(BV(44189, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50239, 16), 8), UFXP(BV(6401, 16), 8)), UFXP(BV(56640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4585, 16), 8), SFXP(SBV(-26663, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5888, 16), 8), UFXP(BV(49098, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35045, 16), 8), UFXP(BV(52544, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36456, 16), 8), UFXP(BV(42648, 16), 8)), UFXP(BV(13568, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51540, 16), 8), UFXP(BV(14659, 16), 8)), UFXP(BV(663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27152, 16), 8), UFXP(BV(33289, 16), 8)), UFXP(BV(59399, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58630, 16), 8), UFXP(BV(56118, 16), 8)), UFXP(BV(2512, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16973, 16), 8), SFXP(SBV(-31194, 16), 8)), SFXP(SBV(-17369, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30353, 16), 8), SFXP(SBV(23997, 16), 8)), SFXP(SBV(11186, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32929, 16), 8), UFXP(BV(19486, 16), 8)), UFXP(BV(13443, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27861, 16), 8), UFXP(BV(47321, 16), 8)), UFXP(BV(9646, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43759, 16), 8), UFXP(BV(26504, 16), 8)), UFXP(BV(4727, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57562, 16), 8), UFXP(BV(49341, 16), 8)), UFXP(BV(8221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3755, 16), 8), UFXP(BV(12008, 16), 8)), UFXP(BV(57283, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31513, 16), 8), UFXP(BV(7239, 16), 8)), UFXP(BV(39135, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25291, 16), 8), UFXP(BV(44114, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39956, 16), 8), UFXP(BV(30486, 16), 8)), UFXP(BV(9470, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11909, 16), 8), UFXP(BV(45056, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13141, 16), 8), SFXP(SBV(-14864, 16), 8)), SFXP(SBV(1723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30610, 16), 8), SFXP(SBV(17837, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26151, 16), 8), UFXP(BV(22877, 16), 8)), UFXP(BV(49028, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27822, 16), 8), SFXP(SBV(-13475, 16), 8)), SFXP(SBV(14347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48138, 16), 8), UFXP(BV(53306, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22877, 16), 8), SFXP(SBV(28103, 16), 8)), SFXP(SBV(14556, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17727, 16), 8), SFXP(SBV(-13191, 16), 8)), SFXP(SBV(-30918, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20467, 16), 8), SFXP(SBV(25395, 16), 8)), SFXP(SBV(-1306, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31886, 16), 8), UFXP(BV(29682, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10407, 16), 8), SFXP(SBV(19889, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45596, 16), 8), UFXP(BV(58948, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23125, 16), 8), UFXP(BV(27751, 16), 8)), UFXP(BV(60910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46823, 16), 8), UFXP(BV(44515, 16), 8)), UFXP(BV(2308, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4031, 16), 8), SFXP(SBV(28262, 16), 8)), SFXP(SBV(-32293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33963, 16), 8), UFXP(BV(8012, 16), 8)), UFXP(BV(41975, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5395, 16), 8), SFXP(SBV(-24146, 16), 8)), SFXP(SBV(18751, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41560, 16), 8), UFXP(BV(1102, 16), 8)), UFXP(BV(40458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49241, 16), 8), UFXP(BV(28276, 16), 8)), UFXP(BV(20965, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32158, 16), 8), SFXP(SBV(5142, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23767, 16), 8), SFXP(SBV(-28333, 16), 8)), SFXP(SBV(4566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21971, 16), 8), UFXP(BV(12242, 16), 8)), UFXP(BV(9729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7404, 16), 8), SFXP(SBV(-30325, 16), 8)), SFXP(SBV(22921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1638, 16), 8), UFXP(BV(8577, 16), 8)), UFXP(BV(10215, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4901, 16), 8), UFXP(BV(6423, 16), 8)), UFXP(BV(57429, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13618, 16), 8), SFXP(SBV(6896, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7380, 16), 8), SFXP(SBV(11536, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11630, 16), 8), SFXP(SBV(-16010, 16), 8)), SFXP(SBV(-4380, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8713, 16), 8), UFXP(BV(64093, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14185, 16), 8), SFXP(SBV(26007, 16), 8)), SFXP(SBV(-25344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3711, 16), 8), SFXP(SBV(-13424, 16), 8)), SFXP(SBV(2013, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2391, 16), 8), SFXP(SBV(13886, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47128, 16), 8), UFXP(BV(5147, 16), 8)), UFXP(BV(41981, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2871, 16), 8), UFXP(BV(37890, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(529, 16), 8), SFXP(SBV(-31141, 16), 8)), SFXP(SBV(31670, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(65454, 16), 8), UFXP(BV(43646, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43392, 16), 8), UFXP(BV(17309, 16), 8)), UFXP(BV(26083, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12268, 16), 8), SFXP(SBV(1005, 16), 8)), SFXP(SBV(17374, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31714, 16), 8), UFXP(BV(31250, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4169, 16), 8), UFXP(BV(53170, 16), 8)), UFXP(BV(16535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6736, 16), 8), SFXP(SBV(-13680, 16), 8)), SFXP(SBV(-6944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59498, 16), 8), UFXP(BV(1917, 16), 8)), UFXP(BV(52322, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8447, 16), 8), SFXP(SBV(5672, 16), 8)), SFXP(SBV(-2775, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(6606, 16), 8), SFXP(SBV(31859, 16), 8)), SFXP(SBV(-29857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8309, 16), 8), SFXP(SBV(-31486, 16), 8)), SFXP(SBV(23177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31896, 16), 8), SFXP(SBV(-15598, 16), 8)), SFXP(SBV(-16298, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52624, 16), 8), UFXP(BV(63463, 16), 8)), UFXP(BV(50551, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52740, 16), 8), UFXP(BV(52243, 16), 8)), UFXP(BV(14970, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30491, 16), 8), SFXP(SBV(14447, 16), 8)), SFXP(SBV(-16044, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42072, 16), 8), UFXP(BV(63958, 16), 8)), UFXP(BV(43650, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25893, 16), 8), UFXP(BV(2847, 16), 8)), UFXP(BV(23046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24939, 16), 8), SFXP(SBV(-17296, 16), 8)), SFXP(SBV(7643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16550, 16), 8), SFXP(SBV(2569, 16), 8)), SFXP(SBV(19119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11770, 16), 8), UFXP(BV(24281, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36041, 16), 8), UFXP(BV(61245, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15460, 16), 8), UFXP(BV(49694, 16), 8)), UFXP(BV(51931, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24793, 16), 8), SFXP(SBV(25727, 16), 8)), SFXP(SBV(-15016, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48769, 16), 8), UFXP(BV(35053, 16), 8)), UFXP(BV(18286, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47917, 16), 8), UFXP(BV(30407, 16), 8)), UFXP(BV(17510, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11794, 16), 8), UFXP(BV(54454, 16), 8)), UFXP(BV(22876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35516, 16), 8), UFXP(BV(13980, 16), 8)), UFXP(BV(21536, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25470, 16), 8), SFXP(SBV(3946, 16), 8)), SFXP(SBV(-29416, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17674, 16), 8), UFXP(BV(14639, 16), 8)), UFXP(BV(3035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16987, 16), 8), SFXP(SBV(4159, 16), 8)), SFXP(SBV(-13829, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4003, 16), 8), SFXP(SBV(-19873, 16), 8)), SFXP(SBV(-15870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14419, 16), 8), SFXP(SBV(29617, 16), 8)), SFXP(SBV(-21500, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9750, 16), 8), UFXP(BV(52943, 16), 8)), UFXP(BV(62693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3959, 16), 8), UFXP(BV(59446, 16), 8)), UFXP(BV(10049, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(62360, 16), 8), UFXP(BV(11606, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11922, 16), 8), SFXP(SBV(-30142, 16), 8)), SFXP(SBV(27466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24372, 16), 8), UFXP(BV(42842, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6688, 16), 8), SFXP(SBV(-26655, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16387, 16), 8), UFXP(BV(41310, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29040, 16), 8), UFXP(BV(22825, 16), 8)), UFXP(BV(51865, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34096, 16), 8), UFXP(BV(43831, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9429, 16), 8), SFXP(SBV(24499, 16), 8)), SFXP(SBV(-15156, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(906, 16), 8), UFXP(BV(18303, 16), 8)), UFXP(BV(48139, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15234, 16), 8), UFXP(BV(22333, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29601, 16), 8), SFXP(SBV(-12889, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43907, 16), 8), UFXP(BV(9493, 16), 8)), UFXP(BV(53400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31377, 16), 8), UFXP(BV(15308, 16), 8)), UFXP(BV(41238, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20307, 16), 8), SFXP(SBV(14740, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26271, 16), 8), UFXP(BV(3290, 16), 8)), UFXP(BV(29561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53495, 16), 8), UFXP(BV(35100, 16), 8)), UFXP(BV(18395, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(453, 16), 8), SFXP(SBV(17833, 16), 8)), SFXP(SBV(18286, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13064, 16), 8), SFXP(SBV(-26930, 16), 8)), SFXP(SBV(-13866, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40881, 16), 8), UFXP(BV(17342, 16), 8)), UFXP(BV(58223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12402, 16), 8), UFXP(BV(29646, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8252, 16), 8), SFXP(SBV(-25588, 16), 8)), SFXP(SBV(-17336, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27782, 16), 8), UFXP(BV(51115, 16), 8)), UFXP(BV(42203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7215, 16), 8), UFXP(BV(44498, 16), 8)), UFXP(BV(51713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29688, 16), 8), UFXP(BV(61543, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26764, 16), 8), UFXP(BV(25859, 16), 8)), UFXP(BV(905, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23506, 16), 8), UFXP(BV(3240, 16), 8)), UFXP(BV(26746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55619, 16), 8), UFXP(BV(28336, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53211, 16), 8), UFXP(BV(20879, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51764, 16), 8), UFXP(BV(41593, 16), 8)), UFXP(BV(21626, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20011, 16), 8), SFXP(SBV(-8487, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39858, 16), 8), UFXP(BV(118, 16), 8)), UFXP(BV(39976, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2071, 16), 8), SFXP(SBV(-15252, 16), 8)), SFXP(SBV(13181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8934, 16), 8), SFXP(SBV(-22640, 16), 8)), SFXP(SBV(13706, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24675, 16), 8), UFXP(BV(4085, 16), 8)), UFXP(BV(28760, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9751, 16), 8), SFXP(SBV(9397, 16), 8)), SFXP(SBV(354, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64620, 16), 8), UFXP(BV(19531, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12686, 16), 8), SFXP(SBV(-22008, 16), 8)), SFXP(SBV(-9322, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21065, 16), 8), SFXP(SBV(-520, 16), 8)), SFXP(SBV(-20545, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32460, 16), 8), UFXP(BV(46466, 16), 8)), UFXP(BV(13390, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20884, 16), 8), SFXP(SBV(833, 16), 8)), SFXP(SBV(21717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19196, 16), 8), UFXP(BV(3681, 16), 8)), UFXP(BV(15515, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21234, 16), 8), SFXP(SBV(-947, 16), 8)), SFXP(SBV(-20287, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46464, 16), 8), UFXP(BV(238, 16), 8)), UFXP(BV(46702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25488, 16), 8), UFXP(BV(29198, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32329, 16), 8), SFXP(SBV(973, 16), 8)), SFXP(SBV(31356, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13801, 16), 8), UFXP(BV(42461, 16), 8)), UFXP(BV(60856, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48721, 16), 8), UFXP(BV(31796, 16), 8)), UFXP(BV(16925, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16942, 16), 8), UFXP(BV(37128, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61321, 16), 8), UFXP(BV(22492, 16), 8)), UFXP(BV(13672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2216, 16), 8), UFXP(BV(18262, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28618, 16), 8), SFXP(SBV(-25272, 16), 8)), SFXP(SBV(-11646, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12823, 16), 8), SFXP(SBV(-10560, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8511, 16), 8), SFXP(SBV(-23065, 16), 8)), SFXP(SBV(14554, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19083, 16), 8), SFXP(SBV(27230, 16), 8)), SFXP(SBV(8147, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56364, 16), 8), UFXP(BV(796, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4825, 16), 8), SFXP(SBV(-25155, 16), 8)), SFXP(SBV(-20330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29399, 16), 8), UFXP(BV(48422, 16), 8)), UFXP(BV(55750, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52859, 16), 8), UFXP(BV(46419, 16), 8)), UFXP(BV(33742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18162, 16), 8), UFXP(BV(32857, 16), 8)), UFXP(BV(37291, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4112, 16), 8), SFXP(SBV(498, 16), 8)), SFXP(SBV(7999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-25238, 16), 8), SFXP(SBV(7314, 16), 8)), SFXP(SBV(-161, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12256, 16), 8), UFXP(BV(61457, 16), 8)), UFXP(BV(58670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18802, 16), 8), SFXP(SBV(-13588, 16), 8)), SFXP(SBV(-32390, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23336, 16), 8), SFXP(SBV(-757, 16), 8)), SFXP(SBV(-24093, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24802, 16), 8), SFXP(SBV(16392, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(502, 16), 8), SFXP(SBV(21359, 16), 8)), SFXP(SBV(-20857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28947, 16), 8), SFXP(SBV(6924, 16), 8)), SFXP(SBV(-3507, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60763, 16), 8), UFXP(BV(18926, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26260, 16), 8), SFXP(SBV(-14073, 16), 8)), SFXP(SBV(-12187, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50347, 16), 8), UFXP(BV(48450, 16), 8)), UFXP(BV(1897, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3585, 16), 8), UFXP(BV(60204, 16), 8)), UFXP(BV(63789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13893, 16), 8), SFXP(SBV(7887, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3912, 16), 8), UFXP(BV(45274, 16), 8)), UFXP(BV(24174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2075, 16), 8), SFXP(SBV(-13378, 16), 8)), SFXP(SBV(-11303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26659, 16), 8), SFXP(SBV(11981, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61985, 16), 8), UFXP(BV(64741, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12681, 16), 8), UFXP(BV(20852, 16), 8)), UFXP(BV(57365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15343, 16), 8), SFXP(SBV(-28478, 16), 8)), SFXP(SBV(13135, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46915, 16), 8), UFXP(BV(49594, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13557, 16), 8), UFXP(BV(24384, 16), 8)), UFXP(BV(54709, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26886, 16), 8), SFXP(SBV(10427, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3889, 16), 8), SFXP(SBV(-24798, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25169, 16), 8), UFXP(BV(64026, 16), 8)), UFXP(BV(26679, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10204, 16), 8), SFXP(SBV(-9159, 16), 8)), SFXP(SBV(1045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46645, 16), 8), UFXP(BV(1616, 16), 8)), UFXP(BV(45029, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49030, 16), 8), UFXP(BV(34323, 16), 8)), UFXP(BV(14707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-696, 16), 8), SFXP(SBV(-3449, 16), 8)), SFXP(SBV(2753, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18247, 16), 8), SFXP(SBV(24707, 16), 8)), SFXP(SBV(6460, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12717, 16), 8), UFXP(BV(40596, 16), 8)), UFXP(BV(53313, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34331, 16), 8), UFXP(BV(56193, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44308, 16), 8), UFXP(BV(23178, 16), 8)), UFXP(BV(21130, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15259, 16), 8), SFXP(SBV(17784, 16), 8)), SFXP(SBV(-32493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16303, 16), 8), SFXP(SBV(-23314, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5378, 16), 8), SFXP(SBV(26111, 16), 8)), SFXP(SBV(-20733, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40780, 16), 8), UFXP(BV(31475, 16), 8)), UFXP(BV(9305, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-4634, 16), 8), SFXP(SBV(-13338, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30938, 16), 8), UFXP(BV(8591, 16), 8)), UFXP(BV(22347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26804, 16), 8), UFXP(BV(43753, 16), 8)), UFXP(BV(48587, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30452, 16), 8), SFXP(SBV(-3929, 16), 8)), SFXP(SBV(-31155, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19496, 16), 8), SFXP(SBV(-6352, 16), 8)), SFXP(SBV(-13144, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19271, 16), 8), UFXP(BV(53397, 16), 8)), UFXP(BV(21888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20937, 16), 8), SFXP(SBV(-23921, 16), 8)), SFXP(SBV(-20678, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17013, 16), 8), SFXP(SBV(28916, 16), 8)), SFXP(SBV(-11903, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57914, 16), 8), UFXP(BV(23446, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52132, 16), 8), UFXP(BV(33882, 16), 8)), UFXP(BV(18250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31118, 16), 8), UFXP(BV(28226, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29836, 16), 8), SFXP(SBV(-19322, 16), 8)), SFXP(SBV(-10514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27551, 16), 8), UFXP(BV(3457, 16), 8)), UFXP(BV(24094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58795, 16), 8), UFXP(BV(29844, 16), 8)), UFXP(BV(23103, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28723, 16), 8), SFXP(SBV(4312, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18039, 16), 8), SFXP(SBV(-117, 16), 8)), SFXP(SBV(18156, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10138, 16), 8), UFXP(BV(64310, 16), 8)), UFXP(BV(11364, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2656, 16), 8), SFXP(SBV(30431, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28383, 16), 8), SFXP(SBV(30246, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8663, 16), 8), UFXP(BV(54583, 16), 8)), UFXP(BV(12073, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27129, 16), 8), SFXP(SBV(-8195, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10244, 16), 8), UFXP(BV(49559, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23719, 16), 8), SFXP(SBV(5530, 16), 8)), SFXP(SBV(29249, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18923, 16), 8), UFXP(BV(17446, 16), 8)), UFXP(BV(44388, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49839, 16), 8), UFXP(BV(6499, 16), 8)), UFXP(BV(43340, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11806, 16), 8), SFXP(SBV(-22956, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29485, 16), 8), UFXP(BV(8400, 16), 8)), UFXP(BV(21085, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23310, 16), 8), UFXP(BV(2507, 16), 8)), UFXP(BV(31667, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12911, 16), 8), SFXP(SBV(-31787, 16), 8)), SFXP(SBV(18876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48242, 16), 8), UFXP(BV(48907, 16), 8)), UFXP(BV(41255, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1524, 16), 8), UFXP(BV(32538, 16), 8)), UFXP(BV(62631, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27547, 16), 8), SFXP(SBV(-10026, 16), 8)), SFXP(SBV(-17521, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25814, 16), 8), SFXP(SBV(3031, 16), 8)), SFXP(SBV(22783, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26774, 16), 8), UFXP(BV(38405, 16), 8)), UFXP(BV(53905, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2747, 16), 8), SFXP(SBV(-8073, 16), 8)), SFXP(SBV(5326, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23858, 16), 8), SFXP(SBV(30547, 16), 8)), SFXP(SBV(-6689, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4281, 16), 8), UFXP(BV(33026, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15895, 16), 8), SFXP(SBV(18734, 16), 8)), SFXP(SBV(-16456, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54230, 16), 8), UFXP(BV(30061, 16), 8)), UFXP(BV(24169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22187, 16), 8), UFXP(BV(56708, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3784, 16), 8), UFXP(BV(11433, 16), 8)), UFXP(BV(15217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60893, 16), 8), UFXP(BV(60670, 16), 8)), UFXP(BV(13245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38267, 16), 8), UFXP(BV(25145, 16), 8)), UFXP(BV(23134, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2520, 16), 8), UFXP(BV(34095, 16), 8)), UFXP(BV(36615, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35516, 16), 8), UFXP(BV(8236, 16), 8)), UFXP(BV(43752, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(26016, 16), 8), UFXP(BV(64050, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25380, 16), 8), UFXP(BV(34061, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20964, 16), 8), SFXP(SBV(-4349, 16), 8)), SFXP(SBV(16615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30471, 16), 8), SFXP(SBV(-25189, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10186, 16), 8), SFXP(SBV(-512, 16), 8)), SFXP(SBV(-9674, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3403, 16), 8), SFXP(SBV(25188, 16), 8)), SFXP(SBV(-21785, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27843, 16), 8), UFXP(BV(36295, 16), 8)), UFXP(BV(57084, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16883, 16), 8), SFXP(SBV(-30064, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32199, 16), 8), UFXP(BV(61093, 16), 8)), UFXP(BV(36642, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12124, 16), 8), SFXP(SBV(25010, 16), 8)), SFXP(SBV(4810, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43178, 16), 8), UFXP(BV(65134, 16), 8)), UFXP(BV(41253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(65157, 16), 8), UFXP(BV(22305, 16), 8)), UFXP(BV(40962, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34545, 16), 8), UFXP(BV(31986, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65481, 16), 8), UFXP(BV(2775, 16), 8)), UFXP(BV(62706, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47263, 16), 8), UFXP(BV(31825, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-360, 16), 8), SFXP(SBV(-15601, 16), 8)), SFXP(SBV(21938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14769, 16), 8), SFXP(SBV(29913, 16), 8)), SFXP(SBV(-15144, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25827, 16), 8), SFXP(SBV(17810, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6593, 16), 8), SFXP(SBV(5530, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6291, 16), 8), SFXP(SBV(28092, 16), 8)), SFXP(SBV(-31153, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26941, 16), 8), SFXP(SBV(-31784, 16), 8)), SFXP(SBV(2558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21485, 16), 8), SFXP(SBV(19609, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14939, 16), 8), SFXP(SBV(-19067, 16), 8)), SFXP(SBV(4128, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12724, 16), 8), SFXP(SBV(13086, 16), 8)), SFXP(SBV(-25810, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(65402, 16), 8), UFXP(BV(4371, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34335, 16), 8), UFXP(BV(41524, 16), 8)), UFXP(BV(10323, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56576, 16), 8), UFXP(BV(6214, 16), 8)), UFXP(BV(50362, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(4848, 16), 8), SFXP(SBV(26655, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62204, 16), 8), UFXP(BV(57860, 16), 8)), UFXP(BV(34372, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55952, 16), 8), UFXP(BV(29372, 16), 8)), UFXP(BV(19788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51075, 16), 8), UFXP(BV(44653, 16), 8)), UFXP(BV(61436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48026, 16), 8), UFXP(BV(46723, 16), 8)), UFXP(BV(1303, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34906, 16), 8), UFXP(BV(17922, 16), 8)), UFXP(BV(16984, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24130, 16), 8), UFXP(BV(51578, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2462, 16), 8), SFXP(SBV(22922, 16), 8)), SFXP(SBV(25384, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48011, 16), 8), UFXP(BV(9424, 16), 8)), UFXP(BV(57435, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3292, 16), 8), UFXP(BV(37865, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42703, 16), 8), UFXP(BV(25741, 16), 8)), UFXP(BV(16962, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4340, 16), 8), UFXP(BV(55378, 16), 8)), UFXP(BV(21326, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23166, 16), 8), UFXP(BV(48592, 16), 8)), UFXP(BV(6284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37980, 16), 8), UFXP(BV(15056, 16), 8)), UFXP(BV(22924, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25897, 16), 8), SFXP(SBV(26025, 16), 8)), SFXP(SBV(128, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52195, 16), 8), UFXP(BV(39335, 16), 8)), UFXP(BV(12860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12902, 16), 8), UFXP(BV(60191, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29029, 16), 8), SFXP(SBV(22513, 16), 8)), SFXP(SBV(-6516, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46682, 16), 8), UFXP(BV(48362, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47825, 16), 8), UFXP(BV(55226, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21281, 16), 8), UFXP(BV(40278, 16), 8)), UFXP(BV(61559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57354, 16), 8), UFXP(BV(10032, 16), 8)), UFXP(BV(1850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14649, 16), 8), SFXP(SBV(8930, 16), 8)), SFXP(SBV(5719, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3831, 16), 8), UFXP(BV(11892, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4221, 16), 8), SFXP(SBV(-20176, 16), 8)), SFXP(SBV(-24397, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11655, 16), 8), SFXP(SBV(16345, 16), 8)), SFXP(SBV(-28000, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58445, 16), 8), UFXP(BV(57010, 16), 8)), UFXP(BV(39300, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24587, 16), 8), SFXP(SBV(-32155, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58795, 16), 8), UFXP(BV(32952, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6554, 16), 8), UFXP(BV(10530, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31954, 16), 8), UFXP(BV(13947, 16), 8)), UFXP(BV(18007, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15449, 16), 8), SFXP(SBV(-6128, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49582, 16), 8), UFXP(BV(17379, 16), 8)), UFXP(BV(23623, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46113, 16), 8), UFXP(BV(60107, 16), 8)), UFXP(BV(13568, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30904, 16), 8), SFXP(SBV(-16429, 16), 8)), SFXP(SBV(17208, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36956, 16), 8), UFXP(BV(27302, 16), 8)), UFXP(BV(9654, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40260, 16), 8), UFXP(BV(2566, 16), 8)), UFXP(BV(37694, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57325, 16), 8), UFXP(BV(53091, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6210, 16), 8), UFXP(BV(24524, 16), 8)), UFXP(BV(30734, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47625, 16), 8), UFXP(BV(18737, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23932, 16), 8), SFXP(SBV(18723, 16), 8)), SFXP(SBV(5209, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34151, 16), 8), UFXP(BV(32252, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60063, 16), 8), UFXP(BV(50216, 16), 8)), UFXP(BV(9847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12447, 16), 8), UFXP(BV(33180, 16), 8)), UFXP(BV(44803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21529, 16), 8), SFXP(SBV(2812, 16), 8)), SFXP(SBV(-24341, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26936, 16), 8), SFXP(SBV(13303, 16), 8)), SFXP(SBV(13633, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7437, 16), 8), SFXP(SBV(29105, 16), 8)), SFXP(SBV(21668, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27578, 16), 8), UFXP(BV(51359, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18745, 16), 8), UFXP(BV(32979, 16), 8)), UFXP(BV(55514, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10633, 16), 8), SFXP(SBV(-29664, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7883, 16), 8), SFXP(SBV(-20071, 16), 8)), SFXP(SBV(-12188, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4135, 16), 8), SFXP(SBV(10032, 16), 8)), SFXP(SBV(30968, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12321, 16), 8), SFXP(SBV(-30662, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4680, 16), 8), UFXP(BV(31433, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57357, 16), 8), UFXP(BV(45019, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(65168, 16), 8), UFXP(BV(53784, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50777, 16), 8), UFXP(BV(20258, 16), 8)), UFXP(BV(30519, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16181, 16), 8), SFXP(SBV(-1265, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19575, 16), 8), SFXP(SBV(29642, 16), 8)), SFXP(SBV(16319, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22241, 16), 8), UFXP(BV(51289, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7171, 16), 8), SFXP(SBV(-31125, 16), 8)), SFXP(SBV(-19896, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35080, 16), 8), UFXP(BV(30193, 16), 8)), UFXP(BV(4887, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30399, 16), 8), UFXP(BV(7182, 16), 8)), UFXP(BV(867, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(949, 16), 8), SFXP(SBV(25828, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8763, 16), 8), SFXP(SBV(13377, 16), 8)), SFXP(SBV(22140, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7236, 16), 8), UFXP(BV(6773, 16), 8)), UFXP(BV(14009, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2005, 16), 8), SFXP(SBV(-11712, 16), 8)), SFXP(SBV(26192, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58714, 16), 8), UFXP(BV(39100, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11162, 16), 8), UFXP(BV(65172, 16), 8)), UFXP(BV(23553, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37025, 16), 8), UFXP(BV(56216, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51669, 16), 8), UFXP(BV(1665, 16), 8)), UFXP(BV(50004, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41015, 16), 8), UFXP(BV(8006, 16), 8)), UFXP(BV(49021, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8654, 16), 8), SFXP(SBV(-29972, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7712, 16), 8), UFXP(BV(28720, 16), 8)), UFXP(BV(44528, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46629, 16), 8), UFXP(BV(25085, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19877, 16), 8), SFXP(SBV(2778, 16), 8)), SFXP(SBV(-19088, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19855, 16), 8), SFXP(SBV(-29102, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48420, 16), 8), UFXP(BV(54837, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11657, 16), 8), SFXP(SBV(-26784, 16), 8)), SFXP(SBV(-25570, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29272, 16), 8), SFXP(SBV(1548, 16), 8)), SFXP(SBV(-30820, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23073, 16), 8), SFXP(SBV(-30571, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53487, 16), 8), UFXP(BV(41674, 16), 8)), UFXP(BV(11813, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29144, 16), 8), SFXP(SBV(6409, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58917, 16), 8), UFXP(BV(11803, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48262, 16), 8), UFXP(BV(65311, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56029, 16), 8), UFXP(BV(56785, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54551, 16), 8), UFXP(BV(63319, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14398, 16), 8), SFXP(SBV(21225, 16), 8)), SFXP(SBV(-29913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14408, 16), 8), SFXP(SBV(-15559, 16), 8)), SFXP(SBV(29967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2836, 16), 8), SFXP(SBV(26611, 16), 8)), SFXP(SBV(23775, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26212, 16), 8), SFXP(SBV(-145, 16), 8)), SFXP(SBV(26357, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23824, 16), 8), SFXP(SBV(24957, 16), 8)), SFXP(SBV(1133, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3526, 16), 8), UFXP(BV(8767, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38902, 16), 8), UFXP(BV(15163, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58199, 16), 8), UFXP(BV(19248, 16), 8)), UFXP(BV(11911, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37136, 16), 8), UFXP(BV(47312, 16), 8)), UFXP(BV(55360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25592, 16), 8), UFXP(BV(38276, 16), 8)), UFXP(BV(25316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20091, 16), 8), UFXP(BV(50403, 16), 8)), UFXP(BV(23492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36909, 16), 8), UFXP(BV(1267, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57646, 16), 8), UFXP(BV(30983, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(32294, 16), 8), SFXP(SBV(9732, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5579, 16), 8), UFXP(BV(4275, 16), 8)), UFXP(BV(9854, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48373, 16), 8), UFXP(BV(14083, 16), 8)), UFXP(BV(62456, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7309, 16), 8), UFXP(BV(57949, 16), 8)), UFXP(BV(65258, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23553, 16), 8), UFXP(BV(3898, 16), 8)), UFXP(BV(27451, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26083, 16), 8), SFXP(SBV(32271, 16), 8)), SFXP(SBV(11187, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(20885, 16), 8), UFXP(BV(16968, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61951, 16), 8), UFXP(BV(60383, 16), 8)), UFXP(BV(63459, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39303, 16), 8), UFXP(BV(33924, 16), 8)), UFXP(BV(30918, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13244, 16), 8), SFXP(SBV(23842, 16), 8)), SFXP(SBV(-10598, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63406, 16), 8), UFXP(BV(48372, 16), 8)), UFXP(BV(46242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7122, 16), 8), UFXP(BV(47790, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30898, 16), 8), UFXP(BV(34372, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24760, 16), 8), UFXP(BV(6144, 16), 8)), UFXP(BV(18616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6514, 16), 8), SFXP(SBV(-11747, 16), 8)), SFXP(SBV(-5233, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55517, 16), 8), UFXP(BV(21005, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38727, 16), 8), UFXP(BV(9765, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19435, 16), 8), UFXP(BV(49584, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45083, 16), 8), UFXP(BV(14864, 16), 8)), UFXP(BV(59947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-8072, 16), 8), SFXP(SBV(-22190, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3352, 16), 8), UFXP(BV(61355, 16), 8)), UFXP(BV(64707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11509, 16), 8), SFXP(SBV(11900, 16), 8)), SFXP(SBV(23409, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19740, 16), 8), UFXP(BV(23774, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29526, 16), 8), SFXP(SBV(-8391, 16), 8)), SFXP(SBV(27619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58679, 16), 8), UFXP(BV(19867, 16), 8)), UFXP(BV(13010, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53773, 16), 8), UFXP(BV(13409, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22406, 16), 8), UFXP(BV(58828, 16), 8)), UFXP(BV(37020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12996, 16), 8), SFXP(SBV(25271, 16), 8)), SFXP(SBV(27269, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13862, 16), 8), SFXP(SBV(-29251, 16), 8)), SFXP(SBV(-15389, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2416, 16), 8), SFXP(SBV(7827, 16), 8)), SFXP(SBV(8331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31538, 16), 8), SFXP(SBV(-26631, 16), 8)), SFXP(SBV(4907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30415, 16), 8), UFXP(BV(24752, 16), 8)), UFXP(BV(55167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19869, 16), 8), SFXP(SBV(-17335, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9177, 16), 8), UFXP(BV(12617, 16), 8)), UFXP(BV(62096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32391, 16), 8), SFXP(SBV(-26830, 16), 8)), SFXP(SBV(-5561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35922, 16), 8), UFXP(BV(19533, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57312, 16), 8), UFXP(BV(62529, 16), 8)), UFXP(BV(39512, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21474, 16), 8), SFXP(SBV(-842, 16), 8)), SFXP(SBV(22316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19065, 16), 8), SFXP(SBV(-7813, 16), 8)), SFXP(SBV(-26878, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26289, 16), 8), SFXP(SBV(22441, 16), 8)), SFXP(SBV(-16806, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22404, 16), 8), SFXP(SBV(15143, 16), 8)), SFXP(SBV(-7261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4685, 16), 8), SFXP(SBV(-12817, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8546, 16), 8), UFXP(BV(54524, 16), 8)), UFXP(BV(50693, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31612, 16), 8), SFXP(SBV(-23178, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65009, 16), 8), UFXP(BV(9793, 16), 8)), UFXP(BV(55216, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54360, 16), 8), UFXP(BV(49811, 16), 8)), UFXP(BV(25758, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27330, 16), 8), SFXP(SBV(9627, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15925, 16), 8), UFXP(BV(26750, 16), 8)), UFXP(BV(42675, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35999, 16), 8), UFXP(BV(2680, 16), 8)), UFXP(BV(38679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9368, 16), 8), UFXP(BV(62663, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6573, 16), 8), SFXP(SBV(27395, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(62511, 16), 8), UFXP(BV(32426, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63615, 16), 8), UFXP(BV(21071, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34093, 16), 8), UFXP(BV(31024, 16), 8)), UFXP(BV(3069, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21683, 16), 8), SFXP(SBV(-32501, 16), 8)), SFXP(SBV(-11352, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55200, 16), 8), UFXP(BV(33548, 16), 8)), UFXP(BV(21652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-32306, 16), 8), SFXP(SBV(14334, 16), 8)), SFXP(SBV(26125, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9816, 16), 8), SFXP(SBV(-6550, 16), 8)), SFXP(SBV(3266, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51991, 16), 8), UFXP(BV(40055, 16), 8)), UFXP(BV(11936, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17609, 16), 8), SFXP(SBV(-29658, 16), 8)), SFXP(SBV(-8414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3222, 16), 8), SFXP(SBV(-27881, 16), 8)), SFXP(SBV(-31103, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33846, 16), 8), UFXP(BV(29056, 16), 8)), UFXP(BV(62902, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48782, 16), 8), UFXP(BV(11358, 16), 8)), UFXP(BV(37424, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10772, 16), 8), SFXP(SBV(-20751, 16), 8)), SFXP(SBV(-31523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1092, 16), 8), SFXP(SBV(-28803, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18275, 16), 8), UFXP(BV(50909, 16), 8)), UFXP(BV(32902, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61726, 16), 8), UFXP(BV(17096, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25287, 16), 8), UFXP(BV(12650, 16), 8)), UFXP(BV(37937, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37421, 16), 8), UFXP(BV(41747, 16), 8)), UFXP(BV(7553, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25400, 16), 8), SFXP(SBV(-31263, 16), 8)), SFXP(SBV(-21683, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53209, 16), 8), UFXP(BV(40272, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6219, 16), 8), SFXP(SBV(21254, 16), 8)), SFXP(SBV(15035, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32950, 16), 8), UFXP(BV(43141, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12523, 16), 8), SFXP(SBV(-14102, 16), 8)), SFXP(SBV(26625, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30561, 16), 8), SFXP(SBV(6685, 16), 8)), SFXP(SBV(-23876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44679, 16), 8), UFXP(BV(53386, 16), 8)), UFXP(BV(32529, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(404, 16), 8), SFXP(SBV(-25222, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6264, 16), 8), SFXP(SBV(25835, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14550, 16), 8), SFXP(SBV(-12150, 16), 8)), SFXP(SBV(-2400, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5821, 16), 8), SFXP(SBV(-25894, 16), 8)), SFXP(SBV(-1039, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12314, 16), 8), SFXP(SBV(-4760, 16), 8)), SFXP(SBV(-17074, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2200, 16), 8), UFXP(BV(23899, 16), 8)), UFXP(BV(8775, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7556, 16), 8), SFXP(SBV(25523, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(1165, 16), 8), SFXP(SBV(2085, 16), 8)), SFXP(SBV(9489, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45278, 16), 8), UFXP(BV(12947, 16), 8)), UFXP(BV(32331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6990, 16), 8), SFXP(SBV(30356, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34390, 16), 8), UFXP(BV(47761, 16), 8)), UFXP(BV(59027, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55396, 16), 8), UFXP(BV(1659, 16), 8)), UFXP(BV(57055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10926, 16), 8), SFXP(SBV(22169, 16), 8)), SFXP(SBV(32441, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8299, 16), 8), UFXP(BV(988, 16), 8)), UFXP(BV(7311, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30607, 16), 8), SFXP(SBV(-2946, 16), 8)), SFXP(SBV(-27661, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2135, 16), 8), UFXP(BV(37798, 16), 8)), UFXP(BV(53086, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39425, 16), 8), UFXP(BV(29385, 16), 8)), UFXP(BV(10040, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3990, 16), 8), SFXP(SBV(-28409, 16), 8)), SFXP(SBV(-32399, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31966, 16), 8), UFXP(BV(16170, 16), 8)), UFXP(BV(53022, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6775, 16), 8), SFXP(SBV(-16203, 16), 8)), SFXP(SBV(9428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28358, 16), 8), SFXP(SBV(-31671, 16), 8)), SFXP(SBV(-3313, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48560, 16), 8), UFXP(BV(9358, 16), 8)), UFXP(BV(39202, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22521, 16), 8), UFXP(BV(62143, 16), 8)), UFXP(BV(27397, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42830, 16), 8), UFXP(BV(1391, 16), 8)), UFXP(BV(41439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34832, 16), 8), UFXP(BV(9398, 16), 8)), UFXP(BV(44230, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1115, 16), 8), SFXP(SBV(28843, 16), 8)), SFXP(SBV(27728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30456, 16), 8), SFXP(SBV(25044, 16), 8)), SFXP(SBV(5412, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31024, 16), 8), UFXP(BV(43792, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60272, 16), 8), UFXP(BV(14132, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31335, 16), 8), SFXP(SBV(-15495, 16), 8)), SFXP(SBV(15840, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1075, 16), 8), UFXP(BV(17503, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23023, 16), 8), SFXP(SBV(-22171, 16), 8)), SFXP(SBV(20342, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27536, 16), 8), SFXP(SBV(16845, 16), 8)), SFXP(SBV(-10691, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13348, 16), 8), SFXP(SBV(-31809, 16), 8)), SFXP(SBV(-18461, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8283, 16), 8), SFXP(SBV(3372, 16), 8)), SFXP(SBV(-4911, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64938, 16), 8), UFXP(BV(33972, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15419, 16), 8), SFXP(SBV(-13280, 16), 8)), SFXP(SBV(-2139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5562, 16), 8), SFXP(SBV(7127, 16), 8)), SFXP(SBV(-12689, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30292, 16), 8), SFXP(SBV(-23774, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21926, 16), 8), SFXP(SBV(14515, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39340, 16), 8), UFXP(BV(48445, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29711, 16), 8), SFXP(SBV(-10135, 16), 8)), SFXP(SBV(3395, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19679, 16), 8), UFXP(BV(9427, 16), 8)), UFXP(BV(10252, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-24626, 16), 8), SFXP(SBV(-28568, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30640, 16), 8), SFXP(SBV(11737, 16), 8)), SFXP(SBV(-18903, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21126, 16), 8), SFXP(SBV(17358, 16), 8)), SFXP(SBV(-9350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1216, 16), 8), SFXP(SBV(-11081, 16), 8)), SFXP(SBV(-12297, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4695, 16), 8), SFXP(SBV(251, 16), 8)), SFXP(SBV(4444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39654, 16), 8), UFXP(BV(45918, 16), 8)), UFXP(BV(20036, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18201, 16), 8), SFXP(SBV(-54, 16), 8)), SFXP(SBV(-3839, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60668, 16), 8), UFXP(BV(45723, 16), 8)), UFXP(BV(14945, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19311, 16), 8), SFXP(SBV(-7209, 16), 8)), SFXP(SBV(-26520, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54158, 16), 8), UFXP(BV(61617, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32164, 16), 8), UFXP(BV(35774, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1865, 16), 8), UFXP(BV(50460, 16), 8)), UFXP(BV(52325, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45894, 16), 8), UFXP(BV(26125, 16), 8)), UFXP(BV(6483, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25849, 16), 8), SFXP(SBV(-355, 16), 8)), SFXP(SBV(26204, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12065, 16), 8), UFXP(BV(43075, 16), 8)), UFXP(BV(55140, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25601, 16), 8), SFXP(SBV(-19924, 16), 8)), SFXP(SBV(5677, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21458, 16), 8), UFXP(BV(10215, 16), 8)), UFXP(BV(31673, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54832, 16), 8), UFXP(BV(35509, 16), 8)), UFXP(BV(24805, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17581, 16), 8), SFXP(SBV(-25380, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9215, 16), 8), UFXP(BV(17839, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28806, 16), 8), SFXP(SBV(9062, 16), 8)), SFXP(SBV(-19744, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19307, 16), 8), SFXP(SBV(-5762, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4782, 16), 8), UFXP(BV(1208, 16), 8)), UFXP(BV(22565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3664, 16), 8), SFXP(SBV(17930, 16), 8)), SFXP(SBV(21594, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17530, 16), 8), SFXP(SBV(26558, 16), 8)), SFXP(SBV(-16408, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24481, 16), 8), SFXP(SBV(7584, 16), 8)), SFXP(SBV(32065, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31291, 16), 8), SFXP(SBV(-26979, 16), 8)), SFXP(SBV(-20855, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30031, 16), 8), SFXP(SBV(13862, 16), 8)), SFXP(SBV(16169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43120, 16), 8), UFXP(BV(3137, 16), 8)), UFXP(BV(4100, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23588, 16), 8), SFXP(SBV(-32448, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27126, 16), 8), SFXP(SBV(10562, 16), 8)), SFXP(SBV(-5048, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24867, 16), 8), SFXP(SBV(-16404, 16), 8)), SFXP(SBV(-24265, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35631, 16), 8), UFXP(BV(27864, 16), 8)), UFXP(BV(11588, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29633, 16), 8), SFXP(SBV(-16543, 16), 8)), SFXP(SBV(-19360, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5136, 16), 8), SFXP(SBV(-24527, 16), 8)), SFXP(SBV(-19391, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40207, 16), 8), UFXP(BV(17598, 16), 8)), UFXP(BV(57805, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12278, 16), 8), SFXP(SBV(-8781, 16), 8)), SFXP(SBV(-21059, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44336, 16), 8), UFXP(BV(65375, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23132, 16), 8), UFXP(BV(2487, 16), 8)), UFXP(BV(28116, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29472, 16), 8), UFXP(BV(56585, 16), 8)), UFXP(BV(38423, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2216, 16), 8), SFXP(SBV(-31254, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60537, 16), 8), UFXP(BV(46044, 16), 8)), UFXP(BV(41045, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29647, 16), 8), SFXP(SBV(19727, 16), 8)), SFXP(SBV(-9204, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24631, 16), 8), SFXP(SBV(28832, 16), 8)), SFXP(SBV(-4201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5590, 16), 8), UFXP(BV(40688, 16), 8)), UFXP(BV(30438, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15770, 16), 8), SFXP(SBV(24695, 16), 8)), SFXP(SBV(-25071, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55120, 16), 8), UFXP(BV(55103, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4448, 16), 8), UFXP(BV(9152, 16), 8)), UFXP(BV(60832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20198, 16), 8), UFXP(BV(35327, 16), 8)), UFXP(BV(50407, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14284, 16), 8), SFXP(SBV(18502, 16), 8)), SFXP(SBV(4218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5077, 16), 8), SFXP(SBV(-13955, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-13064, 16), 8), SFXP(SBV(26333, 16), 8)), SFXP(SBV(32450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26298, 16), 8), SFXP(SBV(32459, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22874, 16), 8), SFXP(SBV(32322, 16), 8)), SFXP(SBV(9448, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58979, 16), 8), UFXP(BV(34296, 16), 8)), UFXP(BV(37022, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13599, 16), 8), SFXP(SBV(-1637, 16), 8)), SFXP(SBV(-11962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27075, 16), 8), SFXP(SBV(-5697, 16), 8)), SFXP(SBV(-12700, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55844, 16), 8), UFXP(BV(36577, 16), 8)), UFXP(BV(19267, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39413, 16), 8), UFXP(BV(43372, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63658, 16), 8), UFXP(BV(58385, 16), 8)), UFXP(BV(56507, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47547, 16), 8), UFXP(BV(47388, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18106, 16), 8), SFXP(SBV(-20784, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19807, 16), 8), SFXP(SBV(-24883, 16), 8)), SFXP(SBV(5076, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2604, 16), 8), SFXP(SBV(-936, 16), 8)), SFXP(SBV(-3540, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53001, 16), 8), UFXP(BV(1575, 16), 8)), UFXP(BV(51426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40138, 16), 8), UFXP(BV(22063, 16), 8)), UFXP(BV(51365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1345, 16), 8), SFXP(SBV(11802, 16), 8)), SFXP(SBV(-13147, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30675, 16), 8), SFXP(SBV(-27367, 16), 8)), SFXP(SBV(3308, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47653, 16), 8), UFXP(BV(48072, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7595, 16), 8), UFXP(BV(60782, 16), 8)), UFXP(BV(12349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31906, 16), 8), UFXP(BV(58692, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24065, 16), 8), UFXP(BV(41316, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25040, 16), 8), UFXP(BV(18099, 16), 8)), UFXP(BV(837, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18526, 16), 8), SFXP(SBV(-9004, 16), 8)), SFXP(SBV(3766, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5933, 16), 8), SFXP(SBV(8839, 16), 8)), SFXP(SBV(-14772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22982, 16), 8), SFXP(SBV(27396, 16), 8)), SFXP(SBV(-15158, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42982, 16), 8), UFXP(BV(45816, 16), 8)), UFXP(BV(24723, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37340, 16), 8), UFXP(BV(35206, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28991, 16), 8), SFXP(SBV(-130, 16), 8)), SFXP(SBV(29121, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53271, 16), 8), UFXP(BV(20197, 16), 8)), UFXP(BV(8487, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-51, 16), 8), SFXP(SBV(-2347, 16), 8)), SFXP(SBV(2296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28185, 16), 8), UFXP(BV(35445, 16), 8)), UFXP(BV(35788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43928, 16), 8), UFXP(BV(62496, 16), 8)), UFXP(BV(40888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24388, 16), 8), SFXP(SBV(-6241, 16), 8)), SFXP(SBV(-4729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8681, 16), 8), SFXP(SBV(28974, 16), 8)), SFXP(SBV(20293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(20105, 16), 8), UFXP(BV(56130, 16), 8)), UFXP(BV(17266, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21166, 16), 8), SFXP(SBV(-28099, 16), 8)), SFXP(SBV(6933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(136, 16), 8), SFXP(SBV(8317, 16), 8)), SFXP(SBV(-8181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23400, 16), 8), UFXP(BV(30930, 16), 8)), UFXP(BV(54330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53558, 16), 8), UFXP(BV(61915, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24914, 16), 8), SFXP(SBV(22760, 16), 8)), SFXP(SBV(13213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9504, 16), 8), UFXP(BV(20061, 16), 8)), UFXP(BV(54979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28111, 16), 8), SFXP(SBV(-7156, 16), 8)), SFXP(SBV(-641, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29742, 16), 8), SFXP(SBV(-1249, 16), 8)), SFXP(SBV(-14036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14191, 16), 8), UFXP(BV(4709, 16), 8)), UFXP(BV(18900, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22705, 16), 8), UFXP(BV(52466, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5865, 16), 8), SFXP(SBV(7658, 16), 8)), SFXP(SBV(-1793, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22001, 16), 8), SFXP(SBV(586, 16), 8)), SFXP(SBV(22587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18955, 16), 8), UFXP(BV(17218, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42113, 16), 8), UFXP(BV(18204, 16), 8)), UFXP(BV(23909, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5560, 16), 8), SFXP(SBV(1122, 16), 8)), SFXP(SBV(6682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27512, 16), 8), SFXP(SBV(19388, 16), 8)), SFXP(SBV(8124, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4226, 16), 8), SFXP(SBV(5157, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43761, 16), 8), UFXP(BV(25223, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17036, 16), 8), SFXP(SBV(-25927, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41186, 16), 8), UFXP(BV(43683, 16), 8)), UFXP(BV(15491, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3015, 16), 8), SFXP(SBV(27823, 16), 8)), SFXP(SBV(24808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27298, 16), 8), UFXP(BV(983, 16), 8)), UFXP(BV(28281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4894, 16), 8), SFXP(SBV(-6050, 16), 8)), SFXP(SBV(-1156, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6891, 16), 8), UFXP(BV(50009, 16), 8)), UFXP(BV(35420, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40387, 16), 8), UFXP(BV(47564, 16), 8)), UFXP(BV(22415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19744, 16), 8), SFXP(SBV(32065, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26127, 16), 8), SFXP(SBV(-3889, 16), 8)), SFXP(SBV(-22238, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6154, 16), 8), SFXP(SBV(-19622, 16), 8)), SFXP(SBV(13468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40911, 16), 8), UFXP(BV(36649, 16), 8)), UFXP(BV(4262, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15423, 16), 8), UFXP(BV(27821, 16), 8)), UFXP(BV(43244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16192, 16), 8), SFXP(SBV(-20576, 16), 8)), SFXP(SBV(4384, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15416, 16), 8), SFXP(SBV(11660, 16), 8)), SFXP(SBV(18745, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17624, 16), 8), SFXP(SBV(2745, 16), 8)), SFXP(SBV(-20369, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15241, 16), 8), UFXP(BV(42835, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26293, 16), 8), UFXP(BV(20588, 16), 8)), UFXP(BV(5705, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10119, 16), 8), SFXP(SBV(23835, 16), 8)), SFXP(SBV(-31582, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8335, 16), 8), UFXP(BV(50941, 16), 8)), UFXP(BV(20167, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57969, 16), 8), UFXP(BV(35876, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34033, 16), 8), UFXP(BV(9043, 16), 8)), UFXP(BV(24990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31863, 16), 8), SFXP(SBV(-19987, 16), 8)), SFXP(SBV(13686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11394, 16), 8), UFXP(BV(3568, 16), 8)), UFXP(BV(7826, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8214, 16), 8), SFXP(SBV(31766, 16), 8)), SFXP(SBV(29335, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16626, 16), 8), UFXP(BV(4854, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64633, 16), 8), UFXP(BV(41777, 16), 8)), UFXP(BV(40874, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18008, 16), 8), SFXP(SBV(-23284, 16), 8)), SFXP(SBV(24244, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16300, 16), 8), UFXP(BV(62303, 16), 8)), UFXP(BV(34789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5973, 16), 8), SFXP(SBV(10382, 16), 8)), SFXP(SBV(4409, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18690, 16), 8), UFXP(BV(19651, 16), 8)), UFXP(BV(58420, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5011, 16), 8), SFXP(SBV(-24588, 16), 8)), SFXP(SBV(-19577, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46592, 16), 8), UFXP(BV(6931, 16), 8)), UFXP(BV(39661, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4183, 16), 8), SFXP(SBV(-28392, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8854, 16), 8), SFXP(SBV(26594, 16), 8)), SFXP(SBV(-2274, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5094, 16), 8), UFXP(BV(27106, 16), 8)), UFXP(BV(43524, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39890, 16), 8), UFXP(BV(64304, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19419, 16), 8), SFXP(SBV(-30430, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21557, 16), 8), SFXP(SBV(-257, 16), 8)), SFXP(SBV(-21642, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3848, 16), 8), SFXP(SBV(-1662, 16), 8)), SFXP(SBV(5510, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8404, 16), 8), SFXP(SBV(3235, 16), 8)), SFXP(SBV(5169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15337, 16), 8), UFXP(BV(16221, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49569, 16), 8), UFXP(BV(22666, 16), 8)), UFXP(BV(26903, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34587, 16), 8), UFXP(BV(36919, 16), 8)), UFXP(BV(5970, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43891, 16), 8), UFXP(BV(28039, 16), 8)), UFXP(BV(15852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18901, 16), 8), UFXP(BV(8331, 16), 8)), UFXP(BV(27232, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39532, 16), 8), UFXP(BV(6931, 16), 8)), UFXP(BV(46463, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8883, 16), 8), SFXP(SBV(27894, 16), 8)), SFXP(SBV(-15139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28836, 16), 8), SFXP(SBV(-19584, 16), 8)), SFXP(SBV(-17116, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22333, 16), 8), SFXP(SBV(-10109, 16), 8)), SFXP(SBV(32442, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20088, 16), 8), UFXP(BV(57607, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19014, 16), 8), SFXP(SBV(-24018, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8387, 16), 8), UFXP(BV(47011, 16), 8)), UFXP(BV(26912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(27235, 16), 8), SFXP(SBV(21095, 16), 8)), SFXP(SBV(16003, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43370, 16), 8), UFXP(BV(44060, 16), 8)), UFXP(BV(64846, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31151, 16), 8), SFXP(SBV(5171, 16), 8)), SFXP(SBV(25980, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18375, 16), 8), SFXP(SBV(-3050, 16), 8)), SFXP(SBV(21425, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12979, 16), 8), SFXP(SBV(-16996, 16), 8)), SFXP(SBV(4017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21886, 16), 8), SFXP(SBV(18913, 16), 8)), SFXP(SBV(-2973, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32696, 16), 8), UFXP(BV(60272, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3052, 16), 8), UFXP(BV(34407, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64352, 16), 8), UFXP(BV(44785, 16), 8)), UFXP(BV(19567, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17204, 16), 8), SFXP(SBV(29980, 16), 8)), SFXP(SBV(12776, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16652, 16), 8), UFXP(BV(57931, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20468, 16), 8), SFXP(SBV(31709, 16), 8)), SFXP(SBV(20670, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60300, 16), 8), UFXP(BV(34999, 16), 8)), UFXP(BV(51905, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6727, 16), 8), SFXP(SBV(-2590, 16), 8)), SFXP(SBV(9317, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21054, 16), 8), UFXP(BV(19666, 16), 8)), UFXP(BV(1388, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9819, 16), 8), UFXP(BV(40631, 16), 8)), UFXP(BV(51094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42538, 16), 8), UFXP(BV(12976, 16), 8)), UFXP(BV(29562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19973, 16), 8), SFXP(SBV(-27029, 16), 8)), SFXP(SBV(7056, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1011, 16), 8), SFXP(SBV(-12791, 16), 8)), SFXP(SBV(-13802, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16767, 16), 8), UFXP(BV(31247, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5300, 16), 8), UFXP(BV(63008, 16), 8)), UFXP(BV(7828, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17381, 16), 8), SFXP(SBV(-2634, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6125, 16), 8), UFXP(BV(46937, 16), 8)), UFXP(BV(53062, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10526, 16), 8), SFXP(SBV(-24200, 16), 8)), SFXP(SBV(-30810, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60819, 16), 8), UFXP(BV(65229, 16), 8)), UFXP(BV(61126, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3997, 16), 8), SFXP(SBV(-30522, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18889, 16), 8), SFXP(SBV(29811, 16), 8)), SFXP(SBV(-28614, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42692, 16), 8), UFXP(BV(37991, 16), 8)), UFXP(BV(4701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30655, 16), 8), UFXP(BV(58322, 16), 8)), UFXP(BV(37015, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30455, 16), 8), SFXP(SBV(2383, 16), 8)), SFXP(SBV(21349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18962, 16), 8), UFXP(BV(35435, 16), 8)), UFXP(BV(54397, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29256, 16), 8), SFXP(SBV(-18971, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7012, 16), 8), SFXP(SBV(27793, 16), 8)), SFXP(SBV(-25165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13051, 16), 8), SFXP(SBV(-29920, 16), 8)), SFXP(SBV(22565, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(39048, 16), 8), UFXP(BV(22571, 16), 8)), UFXP(BV(34910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63871, 16), 8), UFXP(BV(38858, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28071, 16), 8), SFXP(SBV(-6958, 16), 8)), SFXP(SBV(-30507, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29369, 16), 8), SFXP(SBV(-6900, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17399, 16), 8), UFXP(BV(2660, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14662, 16), 8), UFXP(BV(47339, 16), 8)), UFXP(BV(62001, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15625, 16), 8), UFXP(BV(54229, 16), 8)), UFXP(BV(4318, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6714, 16), 8), SFXP(SBV(2196, 16), 8)), SFXP(SBV(-4518, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9957, 16), 8), SFXP(SBV(21778, 16), 8)), SFXP(SBV(-4922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30981, 16), 8), SFXP(SBV(11145, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8054, 16), 8), UFXP(BV(39028, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23555, 16), 8), SFXP(SBV(17844, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60309, 16), 8), UFXP(BV(50630, 16), 8)), UFXP(BV(45403, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15029, 16), 8), UFXP(BV(57648, 16), 8)), UFXP(BV(22917, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9914, 16), 8), UFXP(BV(8891, 16), 8)), UFXP(BV(1023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38534, 16), 8), UFXP(BV(38120, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21070, 16), 8), SFXP(SBV(-7172, 16), 8)), SFXP(SBV(-28242, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25338, 16), 8), SFXP(SBV(-30404, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8622, 16), 8), SFXP(SBV(-31101, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64314, 16), 8), UFXP(BV(29304, 16), 8)), UFXP(BV(35010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18904, 16), 8), SFXP(SBV(-11448, 16), 8)), SFXP(SBV(30352, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30214, 16), 8), SFXP(SBV(16726, 16), 8)), SFXP(SBV(-18596, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1079, 16), 8), SFXP(SBV(-14253, 16), 8)), SFXP(SBV(13174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8746, 16), 8), SFXP(SBV(11237, 16), 8)), SFXP(SBV(9314, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-79, 16), 8), SFXP(SBV(-31961, 16), 8)), SFXP(SBV(31882, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(14972, 16), 8), UFXP(BV(55604, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13033, 16), 8), UFXP(BV(57376, 16), 8)), UFXP(BV(21193, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20372, 16), 8), SFXP(SBV(29215, 16), 8)), SFXP(SBV(-15949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23786, 16), 8), UFXP(BV(9100, 16), 8)), UFXP(BV(14686, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1696, 16), 8), SFXP(SBV(-29913, 16), 8)), SFXP(SBV(31609, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26622, 16), 8), SFXP(SBV(-31486, 16), 8)), SFXP(SBV(-7428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2953, 16), 8), SFXP(SBV(-7689, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31096, 16), 8), SFXP(SBV(29481, 16), 8)), SFXP(SBV(1615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5923, 16), 8), SFXP(SBV(3082, 16), 8)), SFXP(SBV(-9005, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10555, 16), 8), SFXP(SBV(26064, 16), 8)), SFXP(SBV(15509, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65467, 16), 8), UFXP(BV(23236, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15429, 16), 8), SFXP(SBV(27030, 16), 8)), SFXP(SBV(-23077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32386, 16), 8), SFXP(SBV(-2592, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37199, 16), 8), UFXP(BV(17339, 16), 8)), UFXP(BV(54538, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13095, 16), 8), SFXP(SBV(-6683, 16), 8)), SFXP(SBV(-19778, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(64609, 16), 8), UFXP(BV(12929, 16), 8)), UFXP(BV(51742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64756, 16), 8), UFXP(BV(21876, 16), 8)), UFXP(BV(21096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13989, 16), 8), SFXP(SBV(2218, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17201, 16), 8), SFXP(SBV(-11059, 16), 8)), SFXP(SBV(-28260, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12101, 16), 8), SFXP(SBV(-32417, 16), 8)), SFXP(SBV(25008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42491, 16), 8), UFXP(BV(23957, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(25669, 16), 8), SFXP(SBV(-1627, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27516, 16), 8), UFXP(BV(61527, 16), 8)), UFXP(BV(59591, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9269, 16), 8), SFXP(SBV(16613, 16), 8)), SFXP(SBV(-25882, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21590, 16), 8), UFXP(BV(62868, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(65000, 16), 8), UFXP(BV(63460, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52919, 16), 8), UFXP(BV(32788, 16), 8)), UFXP(BV(20131, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19708, 16), 8), SFXP(SBV(-20429, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26442, 16), 8), SFXP(SBV(-13406, 16), 8)), SFXP(SBV(-8437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40941, 16), 8), UFXP(BV(24465, 16), 8)), UFXP(BV(65406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24990, 16), 8), SFXP(SBV(26316, 16), 8)), SFXP(SBV(1326, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4194, 16), 8), SFXP(SBV(-18181, 16), 8)), SFXP(SBV(22375, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51061, 16), 8), UFXP(BV(21766, 16), 8)), UFXP(BV(16005, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27574, 16), 8), SFXP(SBV(-23976, 16), 8)), SFXP(SBV(26573, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1646, 16), 8), UFXP(BV(962, 16), 8)), UFXP(BV(6185, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32590, 16), 8), UFXP(BV(40454, 16), 8)), UFXP(BV(57672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10827, 16), 8), UFXP(BV(43790, 16), 8)), UFXP(BV(54617, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16044, 16), 8), UFXP(BV(33365, 16), 8)), UFXP(BV(59432, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1575, 16), 8), SFXP(SBV(13936, 16), 8)), SFXP(SBV(12361, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41480, 16), 8), UFXP(BV(55472, 16), 8)), UFXP(BV(51544, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50981, 16), 8), UFXP(BV(1170, 16), 8)), UFXP(BV(36392, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1189, 16), 8), SFXP(SBV(-5122, 16), 8)), SFXP(SBV(3933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24760, 16), 8), SFXP(SBV(-9494, 16), 8)), SFXP(SBV(-31282, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26692, 16), 8), UFXP(BV(44332, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20828, 16), 8), SFXP(SBV(-6799, 16), 8)), SFXP(SBV(27627, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34855, 16), 8), UFXP(BV(59441, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23840, 16), 8), SFXP(SBV(8655, 16), 8)), SFXP(SBV(-32495, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41138, 16), 8), UFXP(BV(63366, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19870, 16), 8), SFXP(SBV(9247, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31593, 16), 8), SFXP(SBV(19885, 16), 8)), SFXP(SBV(-11708, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1660, 16), 8), SFXP(SBV(-21059, 16), 8)), SFXP(SBV(22719, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43914, 16), 8), UFXP(BV(520, 16), 8)), UFXP(BV(44434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30308, 16), 8), SFXP(SBV(-752, 16), 8)), SFXP(SBV(-29556, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54036, 16), 8), UFXP(BV(40514, 16), 8)), UFXP(BV(13522, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57698, 16), 8), UFXP(BV(40674, 16), 8)), UFXP(BV(32836, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32267, 16), 8), SFXP(SBV(-17639, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31873, 16), 8), SFXP(SBV(-10628, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63047, 16), 8), UFXP(BV(46217, 16), 8)), UFXP(BV(43728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10354, 16), 8), SFXP(SBV(-6437, 16), 8)), SFXP(SBV(-3917, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-706, 16), 8), SFXP(SBV(2707, 16), 8)), SFXP(SBV(-7466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12111, 16), 8), SFXP(SBV(-11749, 16), 8)), SFXP(SBV(23860, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2812, 16), 8), SFXP(SBV(-1687, 16), 8)), SFXP(SBV(4499, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8585, 16), 8), SFXP(SBV(-18871, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32359, 16), 8), UFXP(BV(48942, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-854, 16), 8), SFXP(SBV(-17150, 16), 8)), SFXP(SBV(-8324, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10586, 16), 8), UFXP(BV(2238, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-32173, 16), 8), SFXP(SBV(-32696, 16), 8)), SFXP(SBV(-19672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41850, 16), 8), UFXP(BV(53064, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22379, 16), 8), SFXP(SBV(-3073, 16), 8)), SFXP(SBV(-19306, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23927, 16), 8), SFXP(SBV(-27335, 16), 8)), SFXP(SBV(3408, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64816, 16), 8), UFXP(BV(1048, 16), 8)), UFXP(BV(63768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30367, 16), 8), SFXP(SBV(-28076, 16), 8)), SFXP(SBV(-2291, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44964, 16), 8), UFXP(BV(57889, 16), 8)), UFXP(BV(52611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44987, 16), 8), UFXP(BV(25623, 16), 8)), UFXP(BV(5074, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9690, 16), 8), UFXP(BV(23222, 16), 8)), UFXP(BV(52004, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1562, 16), 8), SFXP(SBV(-18074, 16), 8)), SFXP(SBV(-20792, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12748, 16), 8), SFXP(SBV(-10577, 16), 8)), SFXP(SBV(2171, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19291, 16), 8), UFXP(BV(50681, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2465, 16), 8), SFXP(SBV(23214, 16), 8)), SFXP(SBV(26917, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18274, 16), 8), UFXP(BV(57841, 16), 8)), UFXP(BV(10579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2795, 16), 8), SFXP(SBV(-3670, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13745, 16), 8), SFXP(SBV(-1686, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10267, 16), 8), SFXP(SBV(19537, 16), 8)), SFXP(SBV(-2892, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(65468, 16), 8), UFXP(BV(28577, 16), 8)), UFXP(BV(33625, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38476, 16), 8), UFXP(BV(24720, 16), 8)), UFXP(BV(63196, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25602, 16), 8), SFXP(SBV(-11329, 16), 8)), SFXP(SBV(28605, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39511, 16), 8), UFXP(BV(41189, 16), 8)), UFXP(BV(15164, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11016, 16), 8), UFXP(BV(32590, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11952, 16), 8), UFXP(BV(36262, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16674, 16), 8), SFXP(SBV(15586, 16), 8)), SFXP(SBV(-32121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16942, 16), 8), SFXP(SBV(-19408, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16181, 16), 8), UFXP(BV(59614, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32703, 16), 8), SFXP(SBV(-27398, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10251, 16), 8), UFXP(BV(64205, 16), 8)), UFXP(BV(15055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22197, 16), 8), SFXP(SBV(4046, 16), 8)), SFXP(SBV(-26243, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27213, 16), 8), UFXP(BV(1360, 16), 8)), UFXP(BV(13498, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26466, 16), 8), SFXP(SBV(8752, 16), 8)), SFXP(SBV(-17714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(946, 16), 8), UFXP(BV(60355, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-606, 16), 8), SFXP(SBV(-9097, 16), 8)), SFXP(SBV(21534, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27826, 16), 8), SFXP(SBV(-5787, 16), 8)), SFXP(SBV(-26341, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3418, 16), 8), SFXP(SBV(20060, 16), 8)), SFXP(SBV(16642, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29064, 16), 8), UFXP(BV(16282, 16), 8)), UFXP(BV(12782, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19071, 16), 8), SFXP(SBV(-30232, 16), 8)), SFXP(SBV(-23941, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18133, 16), 8), SFXP(SBV(-4330, 16), 8)), SFXP(SBV(13803, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57955, 16), 8), UFXP(BV(34615, 16), 8)), UFXP(BV(37593, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-6377, 16), 8), SFXP(SBV(27334, 16), 8)), SFXP(SBV(-25535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(55601, 16), 8), UFXP(BV(48933, 16), 8)), UFXP(BV(10995, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6602, 16), 8), UFXP(BV(19662, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27440, 16), 8), SFXP(SBV(10714, 16), 8)), SFXP(SBV(-16726, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50150, 16), 8), UFXP(BV(31770, 16), 8)), UFXP(BV(63310, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18866, 16), 8), SFXP(SBV(-9409, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10004, 16), 8), UFXP(BV(20125, 16), 8)), UFXP(BV(30129, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33420, 16), 8), UFXP(BV(6963, 16), 8)), UFXP(BV(40383, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23541, 16), 8), SFXP(SBV(-31963, 16), 8)), SFXP(SBV(-10032, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53662, 16), 8), UFXP(BV(28072, 16), 8)), UFXP(BV(25590, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5524, 16), 8), UFXP(BV(64288, 16), 8)), UFXP(BV(4276, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27060, 16), 8), SFXP(SBV(-11048, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22962, 16), 8), SFXP(SBV(-30413, 16), 8)), SFXP(SBV(-7451, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1276, 16), 8), SFXP(SBV(-31506, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5921, 16), 8), SFXP(SBV(-14080, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4458, 16), 8), SFXP(SBV(24840, 16), 8)), SFXP(SBV(-29298, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31670, 16), 8), SFXP(SBV(-18774, 16), 8)), SFXP(SBV(12896, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29570, 16), 8), UFXP(BV(20385, 16), 8)), UFXP(BV(60867, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24375, 16), 8), SFXP(SBV(15469, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29476, 16), 8), UFXP(BV(30439, 16), 8)), UFXP(BV(59915, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5532, 16), 8), SFXP(SBV(15486, 16), 8)), SFXP(SBV(9954, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21800, 16), 8), SFXP(SBV(-15341, 16), 8)), SFXP(SBV(-6459, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52113, 16), 8), UFXP(BV(51225, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47891, 16), 8), UFXP(BV(53368, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5842, 16), 8), UFXP(BV(21407, 16), 8)), UFXP(BV(27249, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29714, 16), 8), SFXP(SBV(25145, 16), 8)), SFXP(SBV(-30531, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57814, 16), 8), UFXP(BV(10616, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23486, 16), 8), SFXP(SBV(31101, 16), 8)), SFXP(SBV(7615, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24401, 16), 8), UFXP(BV(6886, 16), 8)), UFXP(BV(31287, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27356, 16), 8), UFXP(BV(576, 16), 8)), UFXP(BV(27932, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24190, 16), 8), SFXP(SBV(-17251, 16), 8)), SFXP(SBV(-6939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30433, 16), 8), UFXP(BV(27129, 16), 8)), UFXP(BV(57562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10851, 16), 8), SFXP(SBV(-23661, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38745, 16), 8), UFXP(BV(42742, 16), 8)), UFXP(BV(61539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20802, 16), 8), UFXP(BV(13760, 16), 8)), UFXP(BV(7042, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21781, 16), 8), UFXP(BV(22841, 16), 8)), UFXP(BV(64476, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24541, 16), 8), UFXP(BV(2117, 16), 8)), UFXP(BV(26658, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27824, 16), 8), UFXP(BV(13974, 16), 8)), UFXP(BV(41798, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5971, 16), 8), SFXP(SBV(-1025, 16), 8)), SFXP(SBV(-4946, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9952, 16), 8), SFXP(SBV(27710, 16), 8)), SFXP(SBV(-17758, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22390, 16), 8), SFXP(SBV(7953, 16), 8)), SFXP(SBV(14437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11736, 16), 8), UFXP(BV(63109, 16), 8)), UFXP(BV(9569, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6674, 16), 8), SFXP(SBV(5492, 16), 8)), SFXP(SBV(-1182, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23069, 16), 8), SFXP(SBV(17396, 16), 8)), SFXP(SBV(-25071, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24828, 16), 8), UFXP(BV(17794, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1838, 16), 8), UFXP(BV(49492, 16), 8)), UFXP(BV(51330, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26008, 16), 8), SFXP(SBV(-13897, 16), 8)), SFXP(SBV(25631, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27377, 16), 8), SFXP(SBV(21180, 16), 8)), SFXP(SBV(-6197, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14675, 16), 8), SFXP(SBV(-27928, 16), 8)), SFXP(SBV(28087, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42489, 16), 8), UFXP(BV(9756, 16), 8)), UFXP(BV(52245, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-776, 16), 8), SFXP(SBV(27946, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46244, 16), 8), UFXP(BV(52235, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20460, 16), 8), SFXP(SBV(25226, 16), 8)), SFXP(SBV(-4766, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24664, 16), 8), SFXP(SBV(-2317, 16), 8)), SFXP(SBV(22347, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26754, 16), 8), SFXP(SBV(5099, 16), 8)), SFXP(SBV(8597, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1457, 16), 8), SFXP(SBV(25657, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27070, 16), 8), SFXP(SBV(-10764, 16), 8)), SFXP(SBV(27702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16262, 16), 8), UFXP(BV(62292, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38792, 16), 8), UFXP(BV(27571, 16), 8)), UFXP(BV(827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22583, 16), 8), UFXP(BV(3037, 16), 8)), UFXP(BV(25620, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20486, 16), 8), SFXP(SBV(29720, 16), 8)), SFXP(SBV(9234, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17660, 16), 8), SFXP(SBV(-9348, 16), 8)), SFXP(SBV(27008, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19254, 16), 8), SFXP(SBV(3518, 16), 8)), SFXP(SBV(15736, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40559, 16), 8), UFXP(BV(11561, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3264, 16), 8), SFXP(SBV(14289, 16), 8)), SFXP(SBV(11025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59556, 16), 8), UFXP(BV(32989, 16), 8)), UFXP(BV(6870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52158, 16), 8), UFXP(BV(24547, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16457, 16), 8), SFXP(SBV(17457, 16), 8)), SFXP(SBV(1000, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9903, 16), 8), SFXP(SBV(12365, 16), 8)), SFXP(SBV(-22268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27585, 16), 8), UFXP(BV(22365, 16), 8)), UFXP(BV(5220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(47253, 16), 8), UFXP(BV(31896, 16), 8)), UFXP(BV(54725, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25188, 16), 8), SFXP(SBV(-16250, 16), 8)), SFXP(SBV(-8938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9028, 16), 8), SFXP(SBV(-22207, 16), 8)), SFXP(SBV(-31235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55424, 16), 8), UFXP(BV(60194, 16), 8)), UFXP(BV(50082, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19147, 16), 8), SFXP(SBV(4134, 16), 8)), SFXP(SBV(-23281, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26841, 16), 8), UFXP(BV(42958, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7613, 16), 8), SFXP(SBV(28715, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60089, 16), 8), UFXP(BV(2765, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11429, 16), 8), SFXP(SBV(-32062, 16), 8)), SFXP(SBV(-20633, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22178, 16), 8), SFXP(SBV(-27162, 16), 8)), SFXP(SBV(4984, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(20963, 16), 8), UFXP(BV(4288, 16), 8)), UFXP(BV(23450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28573, 16), 8), SFXP(SBV(16517, 16), 8)), SFXP(SBV(8508, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3393, 16), 8), UFXP(BV(11245, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3869, 16), 8), UFXP(BV(29460, 16), 8)), UFXP(BV(52021, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16824, 16), 8), UFXP(BV(64529, 16), 8)), UFXP(BV(17831, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18887, 16), 8), SFXP(SBV(14393, 16), 8)), SFXP(SBV(13302, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30771, 16), 8), SFXP(SBV(25151, 16), 8)), SFXP(SBV(9614, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30810, 16), 8), SFXP(SBV(15774, 16), 8)), SFXP(SBV(-2119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32990, 16), 8), UFXP(BV(64681, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3780, 16), 8), UFXP(BV(37047, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41877, 16), 8), UFXP(BV(48975, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16192, 16), 8), UFXP(BV(10346, 16), 8)), UFXP(BV(64560, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(39073, 16), 8), UFXP(BV(26200, 16), 8)), UFXP(BV(1181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9897, 16), 8), SFXP(SBV(11787, 16), 8)), SFXP(SBV(1890, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23673, 16), 8), UFXP(BV(6441, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39524, 16), 8), UFXP(BV(41350, 16), 8)), UFXP(BV(15338, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52372, 16), 8), UFXP(BV(46877, 16), 8)), UFXP(BV(33713, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24823, 16), 8), SFXP(SBV(-8422, 16), 8)), SFXP(SBV(16401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6897, 16), 8), SFXP(SBV(-29717, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30616, 16), 8), UFXP(BV(38829, 16), 8)), UFXP(BV(3909, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55715, 16), 8), UFXP(BV(43055, 16), 8)), UFXP(BV(12660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26752, 16), 8), UFXP(BV(20519, 16), 8)), UFXP(BV(6233, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54152, 16), 8), UFXP(BV(38380, 16), 8)), UFXP(BV(15772, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60961, 16), 8), UFXP(BV(1185, 16), 8)), UFXP(BV(20038, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59837, 16), 8), UFXP(BV(26370, 16), 8)), UFXP(BV(33467, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13156, 16), 8), SFXP(SBV(-17763, 16), 8)), SFXP(SBV(-30919, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22785, 16), 8), SFXP(SBV(2530, 16), 8)), SFXP(SBV(-28571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(32632, 16), 8), SFXP(SBV(7207, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52752, 16), 8), UFXP(BV(17164, 16), 8)), UFXP(BV(35588, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(366, 16), 8), SFXP(SBV(11265, 16), 8)), SFXP(SBV(-10899, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20192, 16), 8), UFXP(BV(27056, 16), 8)), UFXP(BV(36890, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55446, 16), 8), UFXP(BV(59238, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9529, 16), 8), SFXP(SBV(-2879, 16), 8)), SFXP(SBV(12408, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36423, 16), 8), UFXP(BV(59916, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15557, 16), 8), UFXP(BV(56283, 16), 8)), UFXP(BV(6304, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14839, 16), 8), SFXP(SBV(10113, 16), 8)), SFXP(SBV(-24952, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3081, 16), 8), SFXP(SBV(-11544, 16), 8)), SFXP(SBV(-14625, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52229, 16), 8), UFXP(BV(37215, 16), 8)), UFXP(BV(15014, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29864, 16), 8), SFXP(SBV(1429, 16), 8)), SFXP(SBV(28435, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33549, 16), 8), UFXP(BV(16133, 16), 8)), UFXP(BV(49682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17766, 16), 8), UFXP(BV(6500, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18629, 16), 8), SFXP(SBV(1572, 16), 8)), SFXP(SBV(-20201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58204, 16), 8), UFXP(BV(12601, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21903, 16), 8), SFXP(SBV(-17437, 16), 8)), SFXP(SBV(26196, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6085, 16), 8), SFXP(SBV(32766, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21916, 16), 8), SFXP(SBV(-10733, 16), 8)), SFXP(SBV(32649, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31004, 16), 8), SFXP(SBV(-19440, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8678, 16), 8), SFXP(SBV(-3819, 16), 8)), SFXP(SBV(4859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51285, 16), 8), UFXP(BV(18720, 16), 8)), UFXP(BV(14664, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24743, 16), 8), UFXP(BV(57694, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13648, 16), 8), SFXP(SBV(8846, 16), 8)), SFXP(SBV(-22494, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6410, 16), 8), SFXP(SBV(-12558, 16), 8)), SFXP(SBV(18968, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5918, 16), 8), SFXP(SBV(24647, 16), 8)), SFXP(SBV(-30565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20534, 16), 8), SFXP(SBV(-26319, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5019, 16), 8), UFXP(BV(53774, 16), 8)), UFXP(BV(16781, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22967, 16), 8), SFXP(SBV(6388, 16), 8)), SFXP(SBV(16579, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1516, 16), 8), UFXP(BV(13318, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7675, 16), 8), SFXP(SBV(11658, 16), 8)), SFXP(SBV(-3983, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24326, 16), 8), SFXP(SBV(16394, 16), 8)), SFXP(SBV(7932, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3502, 16), 8), SFXP(SBV(11654, 16), 8)), SFXP(SBV(-15156, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39099, 16), 8), UFXP(BV(425, 16), 8)), UFXP(BV(64911, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18735, 16), 8), UFXP(BV(31392, 16), 8)), UFXP(BV(52879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3013, 16), 8), SFXP(SBV(13365, 16), 8)), SFXP(SBV(26228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4211, 16), 8), SFXP(SBV(-26009, 16), 8)), SFXP(SBV(30220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32162, 16), 8), UFXP(BV(15933, 16), 8)), UFXP(BV(48095, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4299, 16), 8), UFXP(BV(28727, 16), 8)), UFXP(BV(33026, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(527, 16), 8), SFXP(SBV(-25824, 16), 8)), SFXP(SBV(-25297, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11941, 16), 8), SFXP(SBV(30675, 16), 8)), SFXP(SBV(-18734, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5162, 16), 8), SFXP(SBV(-9661, 16), 8)), SFXP(SBV(-14823, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3984, 16), 8), UFXP(BV(37097, 16), 8)), UFXP(BV(41081, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60893, 16), 8), UFXP(BV(43399, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56809, 16), 8), UFXP(BV(53752, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31752, 16), 8), SFXP(SBV(23417, 16), 8)), SFXP(SBV(8335, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29932, 16), 8), SFXP(SBV(7965, 16), 8)), SFXP(SBV(-27639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32947, 16), 8), UFXP(BV(39285, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3158, 16), 8), SFXP(SBV(-10077, 16), 8)), SFXP(SBV(-13235, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19500, 16), 8), SFXP(SBV(-4376, 16), 8)), SFXP(SBV(5649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36079, 16), 8), UFXP(BV(50982, 16), 8)), UFXP(BV(21525, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28482, 16), 8), SFXP(SBV(10856, 16), 8)), SFXP(SBV(-28166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29896, 16), 8), SFXP(SBV(22737, 16), 8)), SFXP(SBV(-7159, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52651, 16), 8), UFXP(BV(5710, 16), 8)), UFXP(BV(46941, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20994, 16), 8), SFXP(SBV(31061, 16), 8)), SFXP(SBV(8660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20323, 16), 8), UFXP(BV(25361, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9100, 16), 8), UFXP(BV(22816, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2031, 16), 8), UFXP(BV(56567, 16), 8)), UFXP(BV(58598, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10731, 16), 8), SFXP(SBV(3349, 16), 8)), SFXP(SBV(-7382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2372, 16), 8), SFXP(SBV(-3477, 16), 8)), SFXP(SBV(-5849, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2679, 16), 8), SFXP(SBV(-28330, 16), 8)), SFXP(SBV(31009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5410, 16), 8), UFXP(BV(44630, 16), 8)), UFXP(BV(50040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64974, 16), 8), UFXP(BV(6737, 16), 8)), UFXP(BV(58237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19619, 16), 8), SFXP(SBV(-16346, 16), 8)), SFXP(SBV(-29571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23021, 16), 8), SFXP(SBV(19876, 16), 8)), SFXP(SBV(-3145, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10165, 16), 8), SFXP(SBV(-6563, 16), 8)), SFXP(SBV(-16728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15426, 16), 8), SFXP(SBV(13266, 16), 8)), SFXP(SBV(-2160, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1460, 16), 8), UFXP(BV(64679, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7535, 16), 8), SFXP(SBV(18596, 16), 8)), SFXP(SBV(-26131, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50820, 16), 8), UFXP(BV(3841, 16), 8)), UFXP(BV(54661, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23661, 16), 8), SFXP(SBV(-19729, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27116, 16), 8), SFXP(SBV(-21534, 16), 8)), SFXP(SBV(-16886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15866, 16), 8), SFXP(SBV(14315, 16), 8)), SFXP(SBV(-30181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18967, 16), 8), UFXP(BV(30482, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(47802, 16), 8), UFXP(BV(7981, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-12271, 16), 8), SFXP(SBV(20908, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15226, 16), 8), SFXP(SBV(-23346, 16), 8)), SFXP(SBV(8120, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20742, 16), 8), SFXP(SBV(2274, 16), 8)), SFXP(SBV(18468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56597, 16), 8), UFXP(BV(54349, 16), 8)), UFXP(BV(2248, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55863, 16), 8), UFXP(BV(50596, 16), 8)), UFXP(BV(5267, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57120, 16), 8), UFXP(BV(25179, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2367, 16), 8), SFXP(SBV(-23727, 16), 8)), SFXP(SBV(-22774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39852, 16), 8), UFXP(BV(13632, 16), 8)), UFXP(BV(53484, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13406, 16), 8), SFXP(SBV(-11114, 16), 8)), SFXP(SBV(24520, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(24608, 16), 8), UFXP(BV(48218, 16), 8)), UFXP(BV(47435, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24416, 16), 8), SFXP(SBV(-10443, 16), 8)), SFXP(SBV(-12962, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32738, 16), 8), UFXP(BV(33836, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21934, 16), 8), SFXP(SBV(-32175, 16), 8)), SFXP(SBV(10241, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1429, 16), 8), UFXP(BV(52245, 16), 8)), UFXP(BV(14720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20939, 16), 8), UFXP(BV(13455, 16), 8)), UFXP(BV(7484, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(926, 16), 8), UFXP(BV(6229, 16), 8)), UFXP(BV(7155, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12022, 16), 8), UFXP(BV(27333, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17501, 16), 8), UFXP(BV(29311, 16), 8)), UFXP(BV(46812, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31685, 16), 8), UFXP(BV(61000, 16), 8)), UFXP(BV(27149, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10662, 16), 8), SFXP(SBV(-24207, 16), 8)), SFXP(SBV(-25144, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56279, 16), 8), UFXP(BV(64211, 16), 8)), UFXP(BV(54954, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27784, 16), 8), SFXP(SBV(4104, 16), 8)), SFXP(SBV(-31888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9953, 16), 8), UFXP(BV(34797, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30535, 16), 8), UFXP(BV(56889, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28986, 16), 8), SFXP(SBV(-23011, 16), 8)), SFXP(SBV(-13539, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28098, 16), 8), SFXP(SBV(5721, 16), 8)), SFXP(SBV(-31717, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3114, 16), 8), SFXP(SBV(-9728, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28877, 16), 8), SFXP(SBV(-6551, 16), 8)), SFXP(SBV(30108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5459, 16), 8), UFXP(BV(11883, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1706, 16), 8), UFXP(BV(5355, 16), 8)), UFXP(BV(7061, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58626, 16), 8), UFXP(BV(49431, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58280, 16), 8), UFXP(BV(26802, 16), 8)), UFXP(BV(31478, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9391, 16), 8), SFXP(SBV(4238, 16), 8)), SFXP(SBV(13629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22034, 16), 8), UFXP(BV(46419, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29193, 16), 8), UFXP(BV(55078, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32972, 16), 8), UFXP(BV(38031, 16), 8)), UFXP(BV(48610, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9299, 16), 8), SFXP(SBV(20759, 16), 8)), SFXP(SBV(-11460, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7836, 16), 8), SFXP(SBV(17096, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18421, 16), 8), SFXP(SBV(-6528, 16), 8)), SFXP(SBV(-10983, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22992, 16), 8), SFXP(SBV(-127, 16), 8)), SFXP(SBV(-11406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27660, 16), 8), SFXP(SBV(-16279, 16), 8)), SFXP(SBV(21597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21104, 16), 8), UFXP(BV(9582, 16), 8)), UFXP(BV(3485, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16242, 16), 8), SFXP(SBV(22661, 16), 8)), SFXP(SBV(4057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10000, 16), 8), SFXP(SBV(-32130, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16280, 16), 8), UFXP(BV(17705, 16), 8)), UFXP(BV(33985, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57729, 16), 8), UFXP(BV(7106, 16), 8)), UFXP(BV(50623, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29458, 16), 8), SFXP(SBV(-22878, 16), 8)), SFXP(SBV(11138, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-859, 16), 8), SFXP(SBV(-22978, 16), 8)), SFXP(SBV(11565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2399, 16), 8), SFXP(SBV(14261, 16), 8)), SFXP(SBV(-16660, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16496, 16), 8), SFXP(SBV(1094, 16), 8)), SFXP(SBV(17590, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(8376, 16), 8), UFXP(BV(22669, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18947, 16), 8), SFXP(SBV(-24436, 16), 8)), SFXP(SBV(26458, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-12987, 16), 8), SFXP(SBV(-27400, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18824, 16), 8), UFXP(BV(26912, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5235, 16), 8), UFXP(BV(64448, 16), 8)), UFXP(BV(6323, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24256, 16), 8), SFXP(SBV(4628, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6238, 16), 8), UFXP(BV(64243, 16), 8)), UFXP(BV(7531, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28858, 16), 8), SFXP(SBV(-7419, 16), 8)), SFXP(SBV(-29259, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16427, 16), 8), UFXP(BV(13330, 16), 8)), UFXP(BV(3392, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12210, 16), 8), SFXP(SBV(-26637, 16), 8)), SFXP(SBV(14427, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28566, 16), 8), SFXP(SBV(24135, 16), 8)), SFXP(SBV(-12835, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53576, 16), 8), UFXP(BV(65100, 16), 8)), UFXP(BV(58257, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58035, 16), 8), UFXP(BV(44378, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-824, 16), 8), SFXP(SBV(21870, 16), 8)), SFXP(SBV(-22694, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10494, 16), 8), SFXP(SBV(25037, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31449, 16), 8), SFXP(SBV(-14711, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42343, 16), 8), UFXP(BV(43924, 16), 8)), UFXP(BV(63955, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44483, 16), 8), UFXP(BV(55625, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7918, 16), 8), SFXP(SBV(580, 16), 8)), SFXP(SBV(-7338, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17217, 16), 8), UFXP(BV(4387, 16), 8)), UFXP(BV(12830, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14975, 16), 8), SFXP(SBV(-28212, 16), 8)), SFXP(SBV(-13237, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17550, 16), 8), UFXP(BV(60200, 16), 8)), UFXP(BV(22886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14719, 16), 8), SFXP(SBV(-13350, 16), 8)), SFXP(SBV(18859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13263, 16), 8), UFXP(BV(38960, 16), 8)), UFXP(BV(52223, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10364, 16), 8), SFXP(SBV(-27526, 16), 8)), SFXP(SBV(-17162, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42393, 16), 8), UFXP(BV(63416, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15500, 16), 8), UFXP(BV(33170, 16), 8)), UFXP(BV(48670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7761, 16), 8), SFXP(SBV(18420, 16), 8)), SFXP(SBV(-10659, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8445, 16), 8), UFXP(BV(31534, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21900, 16), 8), SFXP(SBV(-10396, 16), 8)), SFXP(SBV(-28158, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44476, 16), 8), UFXP(BV(12403, 16), 8)), UFXP(BV(32073, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3128, 16), 8), SFXP(SBV(26155, 16), 8)), SFXP(SBV(23027, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13654, 16), 8), SFXP(SBV(-3687, 16), 8)), SFXP(SBV(17341, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55409, 16), 8), UFXP(BV(65316, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23534, 16), 8), SFXP(SBV(21272, 16), 8)), SFXP(SBV(-2262, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42727, 16), 8), UFXP(BV(34379, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41212, 16), 8), UFXP(BV(6164, 16), 8)), UFXP(BV(47376, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30030, 16), 8), UFXP(BV(44779, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27900, 16), 8), SFXP(SBV(18273, 16), 8)), SFXP(SBV(-9627, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18355, 16), 8), SFXP(SBV(30415, 16), 8)), SFXP(SBV(12060, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11964, 16), 8), SFXP(SBV(27453, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47683, 16), 8), UFXP(BV(52433, 16), 8)), UFXP(BV(1396, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13970, 16), 8), UFXP(BV(47998, 16), 8)), UFXP(BV(63362, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3561, 16), 8), SFXP(SBV(349, 16), 8)), SFXP(SBV(4855, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44928, 16), 8), UFXP(BV(9265, 16), 8)), UFXP(BV(54193, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-86, 16), 8), SFXP(SBV(-17960, 16), 8)), SFXP(SBV(17874, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62155, 16), 8), UFXP(BV(63640, 16), 8)), UFXP(BV(50384, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8823, 16), 8), UFXP(BV(26965, 16), 8)), UFXP(BV(35788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41933, 16), 8), UFXP(BV(25353, 16), 8)), UFXP(BV(16580, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20327, 16), 8), SFXP(SBV(5024, 16), 8)), SFXP(SBV(25351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38163, 16), 8), UFXP(BV(58721, 16), 8)), UFXP(BV(44978, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38215, 16), 8), UFXP(BV(57575, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10341, 16), 8), SFXP(SBV(11200, 16), 8)), SFXP(SBV(21541, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52071, 16), 8), UFXP(BV(49104, 16), 8)), UFXP(BV(35639, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17780, 16), 8), SFXP(SBV(-20387, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22260, 16), 8), SFXP(SBV(8314, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10516, 16), 8), SFXP(SBV(-6365, 16), 8)), SFXP(SBV(-4151, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63804, 16), 8), UFXP(BV(39928, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58180, 16), 8), UFXP(BV(57944, 16), 8)), UFXP(BV(236, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29840, 16), 8), SFXP(SBV(1279, 16), 8)), SFXP(SBV(31119, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16351, 16), 8), SFXP(SBV(4085, 16), 8)), SFXP(SBV(20436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47556, 16), 8), UFXP(BV(23099, 16), 8)), UFXP(BV(24457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38501, 16), 8), UFXP(BV(50915, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32345, 16), 8), SFXP(SBV(-32407, 16), 8)), SFXP(SBV(-62, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30329, 16), 8), SFXP(SBV(-30712, 16), 8)), SFXP(SBV(383, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14077, 16), 8), SFXP(SBV(-13863, 16), 8)), SFXP(SBV(24129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-3557, 16), 8), SFXP(SBV(7435, 16), 8)), SFXP(SBV(27766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53284, 16), 8), UFXP(BV(9042, 16), 8)), UFXP(BV(62326, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14289, 16), 8), SFXP(SBV(18011, 16), 8)), SFXP(SBV(22269, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30293, 16), 8), UFXP(BV(60561, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10027, 16), 8), UFXP(BV(46343, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28104, 16), 8), UFXP(BV(14208, 16), 8)), UFXP(BV(52444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12950, 16), 8), UFXP(BV(571, 16), 8)), UFXP(BV(12379, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16293, 16), 8), UFXP(BV(61113, 16), 8)), UFXP(BV(22884, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9542, 16), 8), SFXP(SBV(1724, 16), 8)), SFXP(SBV(1276, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8226, 16), 8), SFXP(SBV(-24502, 16), 8)), SFXP(SBV(32728, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29472, 16), 8), UFXP(BV(56167, 16), 8)), UFXP(BV(38841, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-8065, 16), 8), SFXP(SBV(-27616, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24078, 16), 8), UFXP(BV(21922, 16), 8)), UFXP(BV(46000, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32554, 16), 8), UFXP(BV(9506, 16), 8)), UFXP(BV(23048, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3885, 16), 8), SFXP(SBV(29315, 16), 8)), SFXP(SBV(-25430, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35387, 16), 8), UFXP(BV(48129, 16), 8)), UFXP(BV(17980, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15757, 16), 8), SFXP(SBV(-27048, 16), 8)), SFXP(SBV(26426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40390, 16), 8), UFXP(BV(25351, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1514, 16), 8), UFXP(BV(60459, 16), 8)), UFXP(BV(6591, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12650, 16), 8), SFXP(SBV(-30000, 16), 8)), SFXP(SBV(-17350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21813, 16), 8), SFXP(SBV(3017, 16), 8)), SFXP(SBV(24830, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17061, 16), 8), UFXP(BV(54400, 16), 8)), UFXP(BV(20983, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11272, 16), 8), SFXP(SBV(24396, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13452, 16), 8), UFXP(BV(61802, 16), 8)), UFXP(BV(36238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44900, 16), 8), UFXP(BV(23706, 16), 8)), UFXP(BV(21194, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57724, 16), 8), UFXP(BV(58013, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21286, 16), 8), UFXP(BV(56630, 16), 8)), UFXP(BV(12380, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57886, 16), 8), UFXP(BV(13254, 16), 8)), UFXP(BV(47837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41593, 16), 8), UFXP(BV(47613, 16), 8)), UFXP(BV(59516, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(8096, 16), 8), UFXP(BV(19637, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14785, 16), 8), SFXP(SBV(8091, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42912, 16), 8), UFXP(BV(2847, 16), 8)), UFXP(BV(45759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5215, 16), 8), SFXP(SBV(-28064, 16), 8)), SFXP(SBV(22849, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26241, 16), 8), SFXP(SBV(28814, 16), 8)), SFXP(SBV(-2573, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63580, 16), 8), UFXP(BV(30161, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31836, 16), 8), UFXP(BV(36992, 16), 8)), UFXP(BV(60380, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28540, 16), 8), SFXP(SBV(-10929, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23488, 16), 8), SFXP(SBV(-24598, 16), 8)), SFXP(SBV(1110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11727, 16), 8), UFXP(BV(2492, 16), 8)), UFXP(BV(48619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5158, 16), 8), SFXP(SBV(-29011, 16), 8)), SFXP(SBV(5297, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7412, 16), 8), UFXP(BV(25518, 16), 8)), UFXP(BV(32930, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(852, 16), 8), UFXP(BV(62481, 16), 8)), UFXP(BV(63333, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16106, 16), 8), UFXP(BV(26717, 16), 8)), UFXP(BV(42475, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48563, 16), 8), UFXP(BV(33586, 16), 8)), UFXP(BV(14246, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28228, 16), 8), SFXP(SBV(27031, 16), 8)), SFXP(SBV(1197, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32247, 16), 8), SFXP(SBV(-18853, 16), 8)), SFXP(SBV(13394, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4435, 16), 8), SFXP(SBV(14707, 16), 8)), SFXP(SBV(19142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(65519, 16), 8), UFXP(BV(53057, 16), 8)), UFXP(BV(13117, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3237, 16), 8), SFXP(SBV(-20614, 16), 8)), SFXP(SBV(17377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32199, 16), 8), SFXP(SBV(662, 16), 8)), SFXP(SBV(-31537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49463, 16), 8), UFXP(BV(11245, 16), 8)), UFXP(BV(38218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2589, 16), 8), SFXP(SBV(400, 16), 8)), SFXP(SBV(2989, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12091, 16), 8), UFXP(BV(10975, 16), 8)), UFXP(BV(59603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8059, 16), 8), SFXP(SBV(-4396, 16), 8)), SFXP(SBV(-12455, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-995, 16), 8), SFXP(SBV(6775, 16), 8)), SFXP(SBV(5780, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11781, 16), 8), UFXP(BV(50498, 16), 8)), UFXP(BV(62279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32571, 16), 8), SFXP(SBV(2326, 16), 8)), SFXP(SBV(-30245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(15263, 16), 8), UFXP(BV(32517, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30196, 16), 8), UFXP(BV(52657, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5899, 16), 8), SFXP(SBV(-21865, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28936, 16), 8), SFXP(SBV(25975, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5416, 16), 8), SFXP(SBV(9224, 16), 8)), SFXP(SBV(-14640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21595, 16), 8), SFXP(SBV(-6418, 16), 8)), SFXP(SBV(15177, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10243, 16), 8), UFXP(BV(55476, 16), 8)), UFXP(BV(20303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(554, 16), 8), SFXP(SBV(20674, 16), 8)), SFXP(SBV(-20797, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13733, 16), 8), UFXP(BV(10947, 16), 8)), UFXP(BV(24680, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21552, 16), 8), SFXP(SBV(-15802, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27327, 16), 8), SFXP(SBV(-3243, 16), 8)), SFXP(SBV(-30570, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21723, 16), 8), SFXP(SBV(1326, 16), 8)), SFXP(SBV(-20397, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13793, 16), 8), SFXP(SBV(-6884, 16), 8)), SFXP(SBV(20677, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34257, 16), 8), UFXP(BV(15796, 16), 8)), UFXP(BV(50053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54108, 16), 8), UFXP(BV(63194, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49790, 16), 8), UFXP(BV(6654, 16), 8)), UFXP(BV(56444, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6847, 16), 8), SFXP(SBV(23339, 16), 8)), SFXP(SBV(-30186, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13397, 16), 8), SFXP(SBV(-22402, 16), 8)), SFXP(SBV(-9005, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29528, 16), 8), UFXP(BV(16704, 16), 8)), UFXP(BV(26158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31944, 16), 8), SFXP(SBV(12724, 16), 8)), SFXP(SBV(19220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25710, 16), 8), SFXP(SBV(30393, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32326, 16), 8), SFXP(SBV(-15299, 16), 8)), SFXP(SBV(17027, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27810, 16), 8), SFXP(SBV(-16562, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17053, 16), 8), SFXP(SBV(13615, 16), 8)), SFXP(SBV(30668, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41221, 16), 8), UFXP(BV(56707, 16), 8)), UFXP(BV(50050, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13671, 16), 8), SFXP(SBV(7465, 16), 8)), SFXP(SBV(6206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4520, 16), 8), SFXP(SBV(-6559, 16), 8)), SFXP(SBV(-15264, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20922, 16), 8), UFXP(BV(40408, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38156, 16), 8), UFXP(BV(53098, 16), 8)), UFXP(BV(50594, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11906, 16), 8), UFXP(BV(37115, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53934, 16), 8), UFXP(BV(45407, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24763, 16), 8), SFXP(SBV(-9040, 16), 8)), SFXP(SBV(-15723, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2222, 16), 8), UFXP(BV(36286, 16), 8)), UFXP(BV(31472, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19009, 16), 8), SFXP(SBV(-23986, 16), 8)), SFXP(SBV(-4977, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16282, 16), 8), UFXP(BV(14654, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25324, 16), 8), SFXP(SBV(-3746, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11496, 16), 8), SFXP(SBV(27641, 16), 8)), SFXP(SBV(-16145, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24078, 16), 8), SFXP(SBV(1301, 16), 8)), SFXP(SBV(8707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4570, 16), 8), SFXP(SBV(-2996, 16), 8)), SFXP(SBV(-1574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65464, 16), 8), UFXP(BV(50751, 16), 8)), UFXP(BV(50679, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5500, 16), 8), SFXP(SBV(14665, 16), 8)), SFXP(SBV(-20165, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28104, 16), 8), UFXP(BV(31870, 16), 8)), UFXP(BV(61770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26232, 16), 8), SFXP(SBV(9812, 16), 8)), SFXP(SBV(16420, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4656, 16), 8), UFXP(BV(4192, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(1875, 16), 8), SFXP(SBV(-12109, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14965, 16), 8), SFXP(SBV(17861, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23776, 16), 8), SFXP(SBV(13213, 16), 8)), SFXP(SBV(-10563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4673, 16), 8), SFXP(SBV(-25392, 16), 8)), SFXP(SBV(-30065, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18476, 16), 8), UFXP(BV(61865, 16), 8)), UFXP(BV(14805, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4418, 16), 8), UFXP(BV(34320, 16), 8)), UFXP(BV(38738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15150, 16), 8), SFXP(SBV(16984, 16), 8)), SFXP(SBV(1834, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28866, 16), 8), SFXP(SBV(8047, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10003, 16), 8), SFXP(SBV(25449, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37355, 16), 8), UFXP(BV(63760, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4958, 16), 8), SFXP(SBV(-9941, 16), 8)), SFXP(SBV(-4079, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34741, 16), 8), UFXP(BV(30457, 16), 8)), UFXP(BV(4284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24603, 16), 8), UFXP(BV(7093, 16), 8)), UFXP(BV(26317, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(39478, 16), 8), UFXP(BV(55501, 16), 8)), UFXP(BV(39181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50819, 16), 8), UFXP(BV(23954, 16), 8)), UFXP(BV(26865, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24239, 16), 8), SFXP(SBV(31228, 16), 8)), SFXP(SBV(6989, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12428, 16), 8), UFXP(BV(3067, 16), 8)), UFXP(BV(9361, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29426, 16), 8), SFXP(SBV(9141, 16), 8)), SFXP(SBV(-20285, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3585, 16), 8), SFXP(SBV(22497, 16), 8)), SFXP(SBV(18912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32181, 16), 8), SFXP(SBV(19221, 16), 8)), SFXP(SBV(-12960, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21676, 16), 8), UFXP(BV(1130, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26796, 16), 8), SFXP(SBV(-19724, 16), 8)), SFXP(SBV(-19016, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19733, 16), 8), SFXP(SBV(-19678, 16), 8)), SFXP(SBV(-26125, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12972, 16), 8), UFXP(BV(44489, 16), 8)), UFXP(BV(26117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22449, 16), 8), UFXP(BV(50069, 16), 8)), UFXP(BV(6982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23611, 16), 8), UFXP(BV(58801, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10314, 16), 8), SFXP(SBV(20314, 16), 8)), SFXP(SBV(30628, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33874, 16), 8), UFXP(BV(25141, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15604, 16), 8), UFXP(BV(43656, 16), 8)), UFXP(BV(39530, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22268, 16), 8), SFXP(SBV(2958, 16), 8)), SFXP(SBV(-25226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49980, 16), 8), UFXP(BV(24444, 16), 8)), UFXP(BV(25536, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11506, 16), 8), SFXP(SBV(31104, 16), 8)), SFXP(SBV(-22926, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26172, 16), 8), SFXP(SBV(30201, 16), 8)), SFXP(SBV(4029, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48273, 16), 8), UFXP(BV(7663, 16), 8)), UFXP(BV(40610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31268, 16), 8), UFXP(BV(64592, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13504, 16), 8), SFXP(SBV(2033, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20842, 16), 8), SFXP(SBV(-6515, 16), 8)), SFXP(SBV(6125, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60654, 16), 8), UFXP(BV(20039, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24289, 16), 8), SFXP(SBV(-9098, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19941, 16), 8), SFXP(SBV(2328, 16), 8)), SFXP(SBV(-22269, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57778, 16), 8), UFXP(BV(22296, 16), 8)), UFXP(BV(51367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15276, 16), 8), SFXP(SBV(-28035, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13159, 16), 8), UFXP(BV(58159, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(102, 16), 8), SFXP(SBV(10406, 16), 8)), SFXP(SBV(-10304, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4890, 16), 8), SFXP(SBV(-3980, 16), 8)), SFXP(SBV(-910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43118, 16), 8), UFXP(BV(35226, 16), 8)), UFXP(BV(12808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15383, 16), 8), UFXP(BV(55606, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55095, 16), 8), UFXP(BV(22673, 16), 8)), UFXP(BV(12232, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34152, 16), 8), UFXP(BV(30804, 16), 8)), UFXP(BV(46214, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11903, 16), 8), UFXP(BV(20133, 16), 8)), UFXP(BV(32036, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22896, 16), 8), SFXP(SBV(-7906, 16), 8)), SFXP(SBV(-30802, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63407, 16), 8), UFXP(BV(10112, 16), 8)), UFXP(BV(53295, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37778, 16), 8), UFXP(BV(41618, 16), 8)), UFXP(BV(61696, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(20, 16), 8), UFXP(BV(40257, 16), 8)), UFXP(BV(3145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28123, 16), 8), UFXP(BV(55145, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19825, 16), 8), UFXP(BV(36224, 16), 8)), UFXP(BV(56049, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25483, 16), 8), UFXP(BV(22036, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12356, 16), 8), SFXP(SBV(27477, 16), 8)), SFXP(SBV(-15121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16933, 16), 8), SFXP(SBV(-7212, 16), 8)), SFXP(SBV(24145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13043, 16), 8), UFXP(BV(18383, 16), 8)), UFXP(BV(31426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11841, 16), 8), UFXP(BV(46234, 16), 8)), UFXP(BV(58075, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(29782, 16), 8), UFXP(BV(53571, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34029, 16), 8), UFXP(BV(5989, 16), 8)), UFXP(BV(28040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(20640, 16), 8), UFXP(BV(55904, 16), 8)), UFXP(BV(50812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6499, 16), 8), SFXP(SBV(27148, 16), 8)), SFXP(SBV(-31697, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31668, 16), 8), SFXP(SBV(-19597, 16), 8)), SFXP(SBV(-12071, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12881, 16), 8), UFXP(BV(166, 16), 8)), UFXP(BV(8353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53940, 16), 8), UFXP(BV(61268, 16), 8)), UFXP(BV(58208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17042, 16), 8), SFXP(SBV(8833, 16), 8)), SFXP(SBV(-1808, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21159, 16), 8), SFXP(SBV(15816, 16), 8)), SFXP(SBV(3491, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52582, 16), 8), UFXP(BV(27977, 16), 8)), UFXP(BV(24605, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30701, 16), 8), SFXP(SBV(-31150, 16), 8)), SFXP(SBV(137, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5609, 16), 8), SFXP(SBV(-22783, 16), 8)), SFXP(SBV(-17174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28250, 16), 8), SFXP(SBV(-21085, 16), 8)), SFXP(SBV(-7165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21330, 16), 8), SFXP(SBV(-16407, 16), 8)), SFXP(SBV(4923, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6634, 16), 8), UFXP(BV(11797, 16), 8)), UFXP(BV(18431, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5998, 16), 8), SFXP(SBV(-26247, 16), 8)), SFXP(SBV(-32245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64507, 16), 8), UFXP(BV(36316, 16), 8)), UFXP(BV(35287, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11775, 16), 8), SFXP(SBV(31181, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16828, 16), 8), UFXP(BV(28532, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9589, 16), 8), UFXP(BV(53638, 16), 8)), UFXP(BV(43040, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22307, 16), 8), SFXP(SBV(21010, 16), 8)), SFXP(SBV(1297, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12203, 16), 8), SFXP(SBV(-32328, 16), 8)), SFXP(SBV(-20125, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3089, 16), 8), UFXP(BV(14710, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16705, 16), 8), UFXP(BV(37634, 16), 8)), UFXP(BV(54339, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17359, 16), 8), SFXP(SBV(19175, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40627, 16), 8), UFXP(BV(8582, 16), 8)), UFXP(BV(51237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2699, 16), 8), SFXP(SBV(-26470, 16), 8)), SFXP(SBV(-23771, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19779, 16), 8), UFXP(BV(54308, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25569, 16), 8), SFXP(SBV(-70, 16), 8)), SFXP(SBV(6991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27430, 16), 8), UFXP(BV(32440, 16), 8)), UFXP(BV(60526, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48150, 16), 8), UFXP(BV(45450, 16), 8)), UFXP(BV(28826, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20742, 16), 8), SFXP(SBV(18759, 16), 8)), SFXP(SBV(12590, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-205, 16), 8), SFXP(SBV(-4173, 16), 8)), SFXP(SBV(-4378, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-12497, 16), 8), SFXP(SBV(-17998, 16), 8)), SFXP(SBV(26630, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40984, 16), 8), UFXP(BV(18700, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36418, 16), 8), UFXP(BV(55974, 16), 8)), UFXP(BV(32883, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52672, 16), 8), UFXP(BV(14831, 16), 8)), UFXP(BV(36823, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23626, 16), 8), SFXP(SBV(16633, 16), 8)), SFXP(SBV(27715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6472, 16), 8), SFXP(SBV(-3333, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29497, 16), 8), UFXP(BV(13512, 16), 8)), UFXP(BV(43009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37817, 16), 8), UFXP(BV(22427, 16), 8)), UFXP(BV(15390, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28215, 16), 8), UFXP(BV(57080, 16), 8)), UFXP(BV(19759, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25369, 16), 8), UFXP(BV(8833, 16), 8)), UFXP(BV(16536, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(632, 16), 8), SFXP(SBV(-389, 16), 8)), SFXP(SBV(-960, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16366, 16), 8), SFXP(SBV(-24632, 16), 8)), SFXP(SBV(-1852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39301, 16), 8), UFXP(BV(17419, 16), 8)), UFXP(BV(21882, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23552, 16), 8), SFXP(SBV(-651, 16), 8)), SFXP(SBV(5644, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11197, 16), 8), UFXP(BV(26880, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19722, 16), 8), SFXP(SBV(21571, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48285, 16), 8), UFXP(BV(46886, 16), 8)), UFXP(BV(61499, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37524, 16), 8), UFXP(BV(17611, 16), 8)), UFXP(BV(19913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2930, 16), 8), SFXP(SBV(14092, 16), 8)), SFXP(SBV(30215, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28364, 16), 8), UFXP(BV(24092, 16), 8)), UFXP(BV(4272, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29566, 16), 8), SFXP(SBV(8631, 16), 8)), SFXP(SBV(20935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14090, 16), 8), UFXP(BV(47336, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30912, 16), 8), SFXP(SBV(-26990, 16), 8)), SFXP(SBV(3922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17501, 16), 8), SFXP(SBV(29051, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10821, 16), 8), SFXP(SBV(7334, 16), 8)), SFXP(SBV(3487, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4251, 16), 8), SFXP(SBV(-3336, 16), 8)), SFXP(SBV(7587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64216, 16), 8), UFXP(BV(32420, 16), 8)), UFXP(BV(31796, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22212, 16), 8), UFXP(BV(29252, 16), 8)), UFXP(BV(58496, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59099, 16), 8), UFXP(BV(43538, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6277, 16), 8), SFXP(SBV(-31159, 16), 8)), SFXP(SBV(24882, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32768, 16), 8), UFXP(BV(52669, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29460, 16), 8), UFXP(BV(5286, 16), 8)), UFXP(BV(34746, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13991, 16), 8), UFXP(BV(47369, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45205, 16), 8), UFXP(BV(29854, 16), 8)), UFXP(BV(15351, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8623, 16), 8), SFXP(SBV(-1255, 16), 8)), SFXP(SBV(-9878, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18097, 16), 8), SFXP(SBV(-18134, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14630, 16), 8), SFXP(SBV(13881, 16), 8)), SFXP(SBV(-749, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20245, 16), 8), SFXP(SBV(-5092, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4081, 16), 8), SFXP(SBV(-18799, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4929, 16), 8), UFXP(BV(51830, 16), 8)), UFXP(BV(14889, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44220, 16), 8), UFXP(BV(50072, 16), 8)), UFXP(BV(59684, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26485, 16), 8), UFXP(BV(39434, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13046, 16), 8), UFXP(BV(39045, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40897, 16), 8), UFXP(BV(15280, 16), 8)), UFXP(BV(16208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24893, 16), 8), SFXP(SBV(18487, 16), 8)), SFXP(SBV(-6406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24112, 16), 8), SFXP(SBV(16623, 16), 8)), SFXP(SBV(-7186, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26952, 16), 8), UFXP(BV(44364, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12310, 16), 8), SFXP(SBV(-4493, 16), 8)), SFXP(SBV(16803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14317, 16), 8), SFXP(SBV(-14635, 16), 8)), SFXP(SBV(32042, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52627, 16), 8), UFXP(BV(58421, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25035, 16), 8), UFXP(BV(46134, 16), 8)), UFXP(BV(55132, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15298, 16), 8), SFXP(SBV(13853, 16), 8)), SFXP(SBV(-24143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55542, 16), 8), UFXP(BV(5777, 16), 8)), UFXP(BV(61319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24342, 16), 8), SFXP(SBV(-28063, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-6545, 16), 8), SFXP(SBV(22476, 16), 8)), SFXP(SBV(15193, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25434, 16), 8), SFXP(SBV(18180, 16), 8)), SFXP(SBV(-28796, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55773, 16), 8), UFXP(BV(12876, 16), 8)), UFXP(BV(3113, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(64099, 16), 8), UFXP(BV(55608, 16), 8)), UFXP(BV(29872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11980, 16), 8), UFXP(BV(19330, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22042, 16), 8), UFXP(BV(16983, 16), 8)), UFXP(BV(39025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55432, 16), 8), UFXP(BV(15207, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4122, 16), 8), UFXP(BV(60136, 16), 8)), UFXP(BV(64258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10022, 16), 8), SFXP(SBV(-14199, 16), 8)), SFXP(SBV(-24221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14272, 16), 8), UFXP(BV(45317, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3642, 16), 8), SFXP(SBV(-20751, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7384, 16), 8), UFXP(BV(57621, 16), 8)), UFXP(BV(65005, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9091, 16), 8), UFXP(BV(4447, 16), 8)), UFXP(BV(13538, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57563, 16), 8), UFXP(BV(6611, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32399, 16), 8), SFXP(SBV(20553, 16), 8)), SFXP(SBV(-12584, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8739, 16), 8), UFXP(BV(28755, 16), 8)), UFXP(BV(37494, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19563, 16), 8), UFXP(BV(29672, 16), 8)), UFXP(BV(49235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11063, 16), 8), UFXP(BV(56226, 16), 8)), UFXP(BV(1753, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1788, 16), 8), UFXP(BV(43082, 16), 8)), UFXP(BV(44870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5825, 16), 8), SFXP(SBV(19785, 16), 8)), SFXP(SBV(25610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23380, 16), 8), UFXP(BV(36629, 16), 8)), UFXP(BV(60009, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16911, 16), 8), SFXP(SBV(21157, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29833, 16), 8), UFXP(BV(17776, 16), 8)), UFXP(BV(47609, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18559, 16), 8), SFXP(SBV(16303, 16), 8)), SFXP(SBV(2256, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4647, 16), 8), SFXP(SBV(9540, 16), 8)), SFXP(SBV(14187, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15397, 16), 8), SFXP(SBV(24871, 16), 8)), SFXP(SBV(-9474, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1762, 16), 8), UFXP(BV(58341, 16), 8)), UFXP(BV(8334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45718, 16), 8), UFXP(BV(10407, 16), 8)), UFXP(BV(23535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21935, 16), 8), UFXP(BV(55394, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30147, 16), 8), SFXP(SBV(4678, 16), 8)), SFXP(SBV(25469, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35283, 16), 8), UFXP(BV(19053, 16), 8)), UFXP(BV(54336, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52715, 16), 8), UFXP(BV(63860, 16), 8)), UFXP(BV(51039, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16541, 16), 8), SFXP(SBV(-22391, 16), 8)), SFXP(SBV(-26604, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43323, 16), 8), UFXP(BV(36181, 16), 8)), UFXP(BV(7142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1521, 16), 8), UFXP(BV(24142, 16), 8)), UFXP(BV(25663, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13945, 16), 8), SFXP(SBV(-14981, 16), 8)), SFXP(SBV(1036, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28193, 16), 8), SFXP(SBV(17595, 16), 8)), SFXP(SBV(-10598, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54735, 16), 8), UFXP(BV(55408, 16), 8)), UFXP(BV(44607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22920, 16), 8), SFXP(SBV(-21917, 16), 8)), SFXP(SBV(1003, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9792, 16), 8), SFXP(SBV(9297, 16), 8)), SFXP(SBV(-19089, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21033, 16), 8), SFXP(SBV(-19268, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26829, 16), 8), SFXP(SBV(-1290, 16), 8)), SFXP(SBV(-28119, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30373, 16), 8), SFXP(SBV(18901, 16), 8)), SFXP(SBV(-11472, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5028, 16), 8), SFXP(SBV(13425, 16), 8)), SFXP(SBV(18453, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26950, 16), 8), UFXP(BV(10396, 16), 8)), UFXP(BV(16554, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29270, 16), 8), SFXP(SBV(-14800, 16), 8)), SFXP(SBV(14470, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14525, 16), 8), UFXP(BV(19736, 16), 8)), UFXP(BV(60325, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31469, 16), 8), SFXP(SBV(16096, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29908, 16), 8), UFXP(BV(59601, 16), 8)), UFXP(BV(35843, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18256, 16), 8), UFXP(BV(44081, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10087, 16), 8), SFXP(SBV(-24311, 16), 8)), SFXP(SBV(25129, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5657, 16), 8), UFXP(BV(21341, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26380, 16), 8), SFXP(SBV(1723, 16), 8)), SFXP(SBV(24657, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33875, 16), 8), UFXP(BV(45419, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29368, 16), 8), UFXP(BV(1778, 16), 8)), UFXP(BV(31146, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15230, 16), 8), SFXP(SBV(18239, 16), 8)), SFXP(SBV(32067, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34593, 16), 8), UFXP(BV(50993, 16), 8)), UFXP(BV(9349, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18687, 16), 8), SFXP(SBV(5013, 16), 8)), SFXP(SBV(-23700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24307, 16), 8), SFXP(SBV(4077, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26714, 16), 8), UFXP(BV(7489, 16), 8)), UFXP(BV(19225, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9820, 16), 8), SFXP(SBV(17632, 16), 8)), SFXP(SBV(-20993, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-730, 16), 8), SFXP(SBV(-27751, 16), 8)), SFXP(SBV(-28481, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17592, 16), 8), SFXP(SBV(24700, 16), 8)), SFXP(SBV(7108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19531, 16), 8), UFXP(BV(15379, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28737, 16), 8), SFXP(SBV(-22618, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27414, 16), 8), SFXP(SBV(-18468, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58290, 16), 8), UFXP(BV(42026, 16), 8)), UFXP(BV(16264, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49365, 16), 8), UFXP(BV(52030, 16), 8)), UFXP(BV(35859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24369, 16), 8), SFXP(SBV(14087, 16), 8)), SFXP(SBV(-10282, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5856, 16), 8), UFXP(BV(33229, 16), 8)), UFXP(BV(39085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3763, 16), 8), SFXP(SBV(-6659, 16), 8)), SFXP(SBV(-2896, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22152, 16), 8), SFXP(SBV(-24900, 16), 8)), SFXP(SBV(-8059, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13045, 16), 8), SFXP(SBV(-28837, 16), 8)), SFXP(SBV(-23654, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8430, 16), 8), SFXP(SBV(-23685, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28415, 16), 8), SFXP(SBV(30479, 16), 8)), SFXP(SBV(-2064, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59728, 16), 8), UFXP(BV(11206, 16), 8)), UFXP(BV(5398, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21258, 16), 8), SFXP(SBV(-22314, 16), 8)), SFXP(SBV(-17926, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24118, 16), 8), SFXP(SBV(20822, 16), 8)), SFXP(SBV(-4419, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15936, 16), 8), SFXP(SBV(30702, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49218, 16), 8), UFXP(BV(26215, 16), 8)), UFXP(BV(9897, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16665, 16), 8), SFXP(SBV(26521, 16), 8)), SFXP(SBV(22350, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49636, 16), 8), UFXP(BV(40984, 16), 8)), UFXP(BV(8652, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40510, 16), 8), UFXP(BV(9642, 16), 8)), UFXP(BV(30868, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9480, 16), 8), SFXP(SBV(-18558, 16), 8)), SFXP(SBV(-31865, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5820, 16), 8), SFXP(SBV(-11713, 16), 8)), SFXP(SBV(-5893, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46136, 16), 8), UFXP(BV(12462, 16), 8)), UFXP(BV(58598, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50950, 16), 8), UFXP(BV(44865, 16), 8)), UFXP(BV(16291, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17629, 16), 8), SFXP(SBV(-13133, 16), 8)), SFXP(SBV(4496, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5334, 16), 8), UFXP(BV(9139, 16), 8)), UFXP(BV(61731, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35910, 16), 8), UFXP(BV(48073, 16), 8)), UFXP(BV(18447, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1626, 16), 8), SFXP(SBV(17721, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17817, 16), 8), SFXP(SBV(29101, 16), 8)), SFXP(SBV(11284, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28534, 16), 8), SFXP(SBV(3139, 16), 8)), SFXP(SBV(-31673, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14249, 16), 8), SFXP(SBV(-17842, 16), 8)), SFXP(SBV(-3593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40050, 16), 8), UFXP(BV(56627, 16), 8)), UFXP(BV(11669, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64379, 16), 8), UFXP(BV(64544, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2935, 16), 8), SFXP(SBV(-16599, 16), 8)), SFXP(SBV(-13664, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28564, 16), 8), SFXP(SBV(3762, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17832, 16), 8), SFXP(SBV(9229, 16), 8)), SFXP(SBV(-27061, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27452, 16), 8), SFXP(SBV(-30842, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18621, 16), 8), SFXP(SBV(-5744, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28279, 16), 8), SFXP(SBV(17579, 16), 8)), SFXP(SBV(10700, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17091, 16), 8), UFXP(BV(39527, 16), 8)), UFXP(BV(17450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19959, 16), 8), SFXP(SBV(-20095, 16), 8)), SFXP(SBV(136, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31104, 16), 8), SFXP(SBV(-27126, 16), 8)), SFXP(SBV(19009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42454, 16), 8), UFXP(BV(17081, 16), 8)), UFXP(BV(25373, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42966, 16), 8), UFXP(BV(54953, 16), 8)), UFXP(BV(32383, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18465, 16), 8), UFXP(BV(58729, 16), 8)), UFXP(BV(25272, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2357, 16), 8), SFXP(SBV(7477, 16), 8)), SFXP(SBV(5120, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15706, 16), 8), SFXP(SBV(-12881, 16), 8)), SFXP(SBV(-2825, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56664, 16), 8), UFXP(BV(40857, 16), 8)), UFXP(BV(31985, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26078, 16), 8), SFXP(SBV(11622, 16), 8)), SFXP(SBV(14456, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13092, 16), 8), UFXP(BV(52503, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15209, 16), 8), SFXP(SBV(25580, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18028, 16), 8), SFXP(SBV(9360, 16), 8)), SFXP(SBV(27388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19781, 16), 8), SFXP(SBV(-7109, 16), 8)), SFXP(SBV(-25021, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15087, 16), 8), SFXP(SBV(26973, 16), 8)), SFXP(SBV(11886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20643, 16), 8), SFXP(SBV(21631, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9972, 16), 8), UFXP(BV(59376, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30353, 16), 8), UFXP(BV(37371, 16), 8)), UFXP(BV(2188, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1335, 16), 8), UFXP(BV(11380, 16), 8)), UFXP(BV(55491, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47085, 16), 8), UFXP(BV(60497, 16), 8)), UFXP(BV(42046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13335, 16), 8), SFXP(SBV(4505, 16), 8)), SFXP(SBV(8830, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13976, 16), 8), UFXP(BV(39390, 16), 8)), UFXP(BV(40122, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(318, 16), 8), UFXP(BV(61858, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61530, 16), 8), UFXP(BV(26360, 16), 8)), UFXP(BV(44211, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4965, 16), 8), SFXP(SBV(1504, 16), 8)), SFXP(SBV(6469, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15769, 16), 8), UFXP(BV(11459, 16), 8)), UFXP(BV(4310, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49270, 16), 8), UFXP(BV(2210, 16), 8)), UFXP(BV(51480, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18182, 16), 8), UFXP(BV(19024, 16), 8)), UFXP(BV(40429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24426, 16), 8), UFXP(BV(34571, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17142, 16), 8), SFXP(SBV(32694, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24122, 16), 8), SFXP(SBV(-12172, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17174, 16), 8), SFXP(SBV(16666, 16), 8)), SFXP(SBV(508, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14499, 16), 8), UFXP(BV(7033, 16), 8)), UFXP(BV(21532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14612, 16), 8), SFXP(SBV(7441, 16), 8)), SFXP(SBV(22053, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-737, 16), 8), SFXP(SBV(66, 16), 8)), SFXP(SBV(-190, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22722, 16), 8), SFXP(SBV(-16131, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45484, 16), 8), UFXP(BV(48070, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50662, 16), 8), UFXP(BV(60487, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8639, 16), 8), SFXP(SBV(-8438, 16), 8)), SFXP(SBV(17077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11867, 16), 8), SFXP(SBV(-26592, 16), 8)), SFXP(SBV(27077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24520, 16), 8), SFXP(SBV(22912, 16), 8)), SFXP(SBV(1608, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27555, 16), 8), SFXP(SBV(-3060, 16), 8)), SFXP(SBV(30615, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47209, 16), 8), UFXP(BV(50446, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25584, 16), 8), UFXP(BV(23407, 16), 8)), UFXP(BV(48991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57217, 16), 8), UFXP(BV(41113, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2271, 16), 8), SFXP(SBV(-29321, 16), 8)), SFXP(SBV(-27050, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2053, 16), 8), SFXP(SBV(-3568, 16), 8)), SFXP(SBV(-1515, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18461, 16), 8), SFXP(SBV(-404, 16), 8)), SFXP(SBV(18865, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12133, 16), 8), SFXP(SBV(14180, 16), 8)), SFXP(SBV(-16695, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50132, 16), 8), UFXP(BV(47076, 16), 8)), UFXP(BV(3056, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(436, 16), 8), UFXP(BV(30318, 16), 8)), UFXP(BV(35654, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52049, 16), 8), UFXP(BV(52648, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19669, 16), 8), SFXP(SBV(-24523, 16), 8)), SFXP(SBV(4854, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25362, 16), 8), UFXP(BV(17913, 16), 8)), UFXP(BV(43275, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27745, 16), 8), UFXP(BV(10325, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33822, 16), 8), UFXP(BV(24373, 16), 8)), UFXP(BV(58195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9193, 16), 8), SFXP(SBV(-24929, 16), 8)), SFXP(SBV(-31414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28330, 16), 8), SFXP(SBV(21712, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14598, 16), 8), SFXP(SBV(-28269, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13435, 16), 8), SFXP(SBV(-7810, 16), 8)), SFXP(SBV(-21245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36269, 16), 8), UFXP(BV(10938, 16), 8)), UFXP(BV(25331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13536, 16), 8), UFXP(BV(49495, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14005, 16), 8), UFXP(BV(12940, 16), 8)), UFXP(BV(52548, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55621, 16), 8), UFXP(BV(8599, 16), 8)), UFXP(BV(47022, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14592, 16), 8), SFXP(SBV(3780, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2299, 16), 8), SFXP(SBV(-18876, 16), 8)), SFXP(SBV(27093, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46549, 16), 8), UFXP(BV(59318, 16), 8)), UFXP(BV(40331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17487, 16), 8), UFXP(BV(12543, 16), 8)), UFXP(BV(4944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20566, 16), 8), SFXP(SBV(28279, 16), 8)), SFXP(SBV(-7713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37348, 16), 8), UFXP(BV(35845, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41280, 16), 8), UFXP(BV(4412, 16), 8)), UFXP(BV(56075, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22968, 16), 8), UFXP(BV(37036, 16), 8)), UFXP(BV(60004, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1468, 16), 8), SFXP(SBV(14946, 16), 8)), SFXP(SBV(-13478, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5025, 16), 8), SFXP(SBV(-30255, 16), 8)), SFXP(SBV(-30256, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50088, 16), 8), UFXP(BV(17932, 16), 8)), UFXP(BV(35099, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45575, 16), 8), UFXP(BV(18649, 16), 8)), UFXP(BV(64224, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31286, 16), 8), SFXP(SBV(-18779, 16), 8)), SFXP(SBV(-15471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10333, 16), 8), SFXP(SBV(18025, 16), 8)), SFXP(SBV(7692, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40669, 16), 8), UFXP(BV(57367, 16), 8)), UFXP(BV(4005, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30688, 16), 8), UFXP(BV(36648, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24614, 16), 8), SFXP(SBV(-19497, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43908, 16), 8), UFXP(BV(9667, 16), 8)), UFXP(BV(53575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24821, 16), 8), SFXP(SBV(12669, 16), 8)), SFXP(SBV(-12152, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21597, 16), 8), UFXP(BV(21060, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13117, 16), 8), SFXP(SBV(-21208, 16), 8)), SFXP(SBV(-8091, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27378, 16), 8), UFXP(BV(37848, 16), 8)), UFXP(BV(65226, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5063, 16), 8), SFXP(SBV(1978, 16), 8)), SFXP(SBV(3085, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15091, 16), 8), UFXP(BV(39849, 16), 8)), UFXP(BV(54940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(7250, 16), 8), UFXP(BV(21627, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5860, 16), 8), SFXP(SBV(32233, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25788, 16), 8), SFXP(SBV(21421, 16), 8)), SFXP(SBV(-4367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1550, 16), 8), SFXP(SBV(-11467, 16), 8)), SFXP(SBV(-13017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19607, 16), 8), SFXP(SBV(-20278, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16187, 16), 8), SFXP(SBV(-12680, 16), 8)), SFXP(SBV(28867, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11585, 16), 8), SFXP(SBV(-11724, 16), 8)), SFXP(SBV(-6268, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3503, 16), 8), SFXP(SBV(-6419, 16), 8)), SFXP(SBV(-2916, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21920, 16), 8), UFXP(BV(25991, 16), 8)), UFXP(BV(47911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32697, 16), 8), SFXP(SBV(28903, 16), 8)), SFXP(SBV(-3936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61933, 16), 8), UFXP(BV(52468, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7304, 16), 8), SFXP(SBV(9425, 16), 8)), SFXP(SBV(2121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22599, 16), 8), SFXP(SBV(-21078, 16), 8)), SFXP(SBV(1521, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10116, 16), 8), UFXP(BV(38351, 16), 8)), UFXP(BV(48467, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28533, 16), 8), SFXP(SBV(30029, 16), 8)), SFXP(SBV(-4607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20492, 16), 8), SFXP(SBV(-17456, 16), 8)), SFXP(SBV(3036, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9476, 16), 8), SFXP(SBV(27490, 16), 8)), SFXP(SBV(-28570, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11969, 16), 8), SFXP(SBV(-19437, 16), 8)), SFXP(SBV(8748, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(41763, 16), 8), UFXP(BV(8645, 16), 8)), UFXP(BV(34061, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45976, 16), 8), UFXP(BV(19010, 16), 8)), UFXP(BV(64986, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2877, 16), 8), SFXP(SBV(21692, 16), 8)), SFXP(SBV(24569, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31376, 16), 8), UFXP(BV(54433, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16366, 16), 8), SFXP(SBV(25108, 16), 8)), SFXP(SBV(-8742, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2381, 16), 8), SFXP(SBV(-28423, 16), 8)), SFXP(SBV(-30804, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45118, 16), 8), UFXP(BV(11169, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29002, 16), 8), UFXP(BV(46953, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53051, 16), 8), UFXP(BV(10805, 16), 8)), UFXP(BV(10902, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21042, 16), 8), UFXP(BV(27663, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13595, 16), 8), SFXP(SBV(-507, 16), 8)), SFXP(SBV(-13088, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50435, 16), 8), UFXP(BV(1349, 16), 8)), UFXP(BV(51784, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11983, 16), 8), SFXP(SBV(6221, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24233, 16), 8), SFXP(SBV(-7854, 16), 8)), SFXP(SBV(-32087, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53940, 16), 8), UFXP(BV(36405, 16), 8)), UFXP(BV(24809, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63160, 16), 8), UFXP(BV(23452, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7558, 16), 8), SFXP(SBV(4964, 16), 8)), SFXP(SBV(-12522, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15940, 16), 8), SFXP(SBV(6103, 16), 8)), SFXP(SBV(-9837, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7669, 16), 8), SFXP(SBV(1805, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5926, 16), 8), SFXP(SBV(23159, 16), 8)), SFXP(SBV(29085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25524, 16), 8), SFXP(SBV(-12387, 16), 8)), SFXP(SBV(-13137, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6770, 16), 8), SFXP(SBV(31209, 16), 8)), SFXP(SBV(-27557, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13894, 16), 8), UFXP(BV(36625, 16), 8)), UFXP(BV(21685, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4681, 16), 8), SFXP(SBV(-3669, 16), 8)), SFXP(SBV(-1012, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8663, 16), 8), SFXP(SBV(28828, 16), 8)), SFXP(SBV(20165, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44195, 16), 8), UFXP(BV(50569, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47217, 16), 8), UFXP(BV(27635, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13361, 16), 8), UFXP(BV(34417, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1077, 16), 8), SFXP(SBV(15081, 16), 8)), SFXP(SBV(-14004, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10759, 16), 8), SFXP(SBV(-21995, 16), 8)), SFXP(SBV(32754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31454, 16), 8), UFXP(BV(57756, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29458, 16), 8), SFXP(SBV(-5313, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52463, 16), 8), UFXP(BV(21355, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42617, 16), 8), UFXP(BV(43233, 16), 8)), UFXP(BV(53689, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25603, 16), 8), SFXP(SBV(6383, 16), 8)), SFXP(SBV(31986, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42000, 16), 8), UFXP(BV(3710, 16), 8)), UFXP(BV(45710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20727, 16), 8), UFXP(BV(21601, 16), 8)), UFXP(BV(42328, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18129, 16), 8), SFXP(SBV(6766, 16), 8)), SFXP(SBV(-11363, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31487, 16), 8), UFXP(BV(63636, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8455, 16), 8), SFXP(SBV(10908, 16), 8)), SFXP(SBV(-19363, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9688, 16), 8), UFXP(BV(35234, 16), 8)), UFXP(BV(22667, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40974, 16), 8), UFXP(BV(44728, 16), 8)), UFXP(BV(61782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31324, 16), 8), UFXP(BV(21816, 16), 8)), UFXP(BV(53140, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42481, 16), 8), UFXP(BV(9410, 16), 8)), UFXP(BV(51891, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-358, 16), 8), SFXP(SBV(17012, 16), 8)), SFXP(SBV(-17370, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19, 16), 8), UFXP(BV(6064, 16), 8)), UFXP(BV(59491, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48150, 16), 8), UFXP(BV(13038, 16), 8)), UFXP(BV(27432, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49530, 16), 8), UFXP(BV(3692, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33287, 16), 8), UFXP(BV(51312, 16), 8)), UFXP(BV(19063, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3793, 16), 8), UFXP(BV(19481, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14921, 16), 8), SFXP(SBV(-428, 16), 8)), SFXP(SBV(-14493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15906, 16), 8), SFXP(SBV(3557, 16), 8)), SFXP(SBV(-19463, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1384, 16), 8), SFXP(SBV(-13484, 16), 8)), SFXP(SBV(7362, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(837, 16), 8), SFXP(SBV(-24493, 16), 8)), SFXP(SBV(-23656, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44005, 16), 8), UFXP(BV(49587, 16), 8)), UFXP(BV(59954, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1886, 16), 8), SFXP(SBV(9654, 16), 8)), SFXP(SBV(7768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25654, 16), 8), UFXP(BV(2358, 16), 8)), UFXP(BV(23296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22266, 16), 8), SFXP(SBV(24147, 16), 8)), SFXP(SBV(-19123, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48864, 16), 8), UFXP(BV(45790, 16), 8)), UFXP(BV(23879, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29114, 16), 8), UFXP(BV(37738, 16), 8)), UFXP(BV(56912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12772, 16), 8), SFXP(SBV(7718, 16), 8)), SFXP(SBV(20490, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25219, 16), 8), SFXP(SBV(-30348, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42021, 16), 8), UFXP(BV(44739, 16), 8)), UFXP(BV(21224, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31317, 16), 8), SFXP(SBV(-28750, 16), 8)), SFXP(SBV(2567, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64140, 16), 8), UFXP(BV(29932, 16), 8)), UFXP(BV(28536, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45811, 16), 8), UFXP(BV(11748, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5746, 16), 8), UFXP(BV(44241, 16), 8)), UFXP(BV(9963, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39183, 16), 8), UFXP(BV(53770, 16), 8)), UFXP(BV(27417, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9146, 16), 8), SFXP(SBV(-30068, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9953, 16), 8), SFXP(SBV(-5219, 16), 8)), SFXP(SBV(-4734, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49132, 16), 8), UFXP(BV(53943, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25757, 16), 8), SFXP(SBV(-16375, 16), 8)), SFXP(SBV(-9143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1397, 16), 8), UFXP(BV(15465, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1126, 16), 8), SFXP(SBV(22861, 16), 8)), SFXP(SBV(-30520, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34891, 16), 8), UFXP(BV(9755, 16), 8)), UFXP(BV(25136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(45729, 16), 8), UFXP(BV(32210, 16), 8)), UFXP(BV(52006, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-859, 16), 8), SFXP(SBV(-9462, 16), 8)), SFXP(SBV(-10321, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30021, 16), 8), SFXP(SBV(11109, 16), 8)), SFXP(SBV(24406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51587, 16), 8), UFXP(BV(5937, 16), 8)), UFXP(BV(16727, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(367, 16), 8), SFXP(SBV(31175, 16), 8)), SFXP(SBV(-30808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12250, 16), 8), UFXP(BV(32126, 16), 8)), UFXP(BV(44376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6672, 16), 8), SFXP(SBV(-12733, 16), 8)), SFXP(SBV(6061, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18038, 16), 8), SFXP(SBV(-30140, 16), 8)), SFXP(SBV(12102, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10882, 16), 8), SFXP(SBV(-31763, 16), 8)), SFXP(SBV(26080, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5866, 16), 8), SFXP(SBV(-19713, 16), 8)), SFXP(SBV(-13847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65218, 16), 8), UFXP(BV(55139, 16), 8)), UFXP(BV(54821, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15138, 16), 8), SFXP(SBV(15333, 16), 8)), SFXP(SBV(-30471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19929, 16), 8), SFXP(SBV(23000, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27169, 16), 8), UFXP(BV(18813, 16), 8)), UFXP(BV(8356, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57623, 16), 8), UFXP(BV(34656, 16), 8)), UFXP(BV(26743, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18897, 16), 8), SFXP(SBV(14852, 16), 8)), SFXP(SBV(17790, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21012, 16), 8), SFXP(SBV(-2591, 16), 8)), SFXP(SBV(-23603, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48886, 16), 8), UFXP(BV(47178, 16), 8)), UFXP(BV(30724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15802, 16), 8), SFXP(SBV(32365, 16), 8)), SFXP(SBV(31701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12237, 16), 8), UFXP(BV(60268, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7405, 16), 8), SFXP(SBV(-23257, 16), 8)), SFXP(SBV(-15852, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17907, 16), 8), SFXP(SBV(-29496, 16), 8)), SFXP(SBV(-18133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26282, 16), 8), SFXP(SBV(-28222, 16), 8)), SFXP(SBV(1940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45790, 16), 8), UFXP(BV(34967, 16), 8)), UFXP(BV(28528, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20868, 16), 8), UFXP(BV(59186, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47850, 16), 8), UFXP(BV(39401, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50004, 16), 8), UFXP(BV(47578, 16), 8)), UFXP(BV(32046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29367, 16), 8), SFXP(SBV(-30555, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24085, 16), 8), SFXP(SBV(18894, 16), 8)), SFXP(SBV(5191, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17493, 16), 8), SFXP(SBV(18614, 16), 8)), SFXP(SBV(-26749, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20741, 16), 8), SFXP(SBV(-129, 16), 8)), SFXP(SBV(20870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5794, 16), 8), UFXP(BV(35733, 16), 8)), UFXP(BV(22306, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25289, 16), 8), SFXP(SBV(-8341, 16), 8)), SFXP(SBV(16948, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19473, 16), 8), SFXP(SBV(-13744, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13612, 16), 8), SFXP(SBV(-24486, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5605, 16), 8), SFXP(SBV(4831, 16), 8)), SFXP(SBV(10436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53818, 16), 8), UFXP(BV(41771, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28946, 16), 8), UFXP(BV(28211, 16), 8)), UFXP(BV(57157, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4753, 16), 8), SFXP(SBV(-21597, 16), 8)), SFXP(SBV(-7762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25322, 16), 8), SFXP(SBV(12965, 16), 8)), SFXP(SBV(-12357, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36667, 16), 8), UFXP(BV(5074, 16), 8)), UFXP(BV(5855, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17869, 16), 8), UFXP(BV(25449, 16), 8)), UFXP(BV(43318, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22161, 16), 8), UFXP(BV(6817, 16), 8)), UFXP(BV(299, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(157, 16), 8), UFXP(BV(25652, 16), 8)), UFXP(BV(15732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26794, 16), 8), UFXP(BV(39973, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19957, 16), 8), SFXP(SBV(-1619, 16), 8)), SFXP(SBV(21576, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36539, 16), 8), UFXP(BV(58227, 16), 8)), UFXP(BV(43848, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42850, 16), 8), UFXP(BV(29979, 16), 8)), UFXP(BV(37234, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(409, 16), 8), SFXP(SBV(-17577, 16), 8)), SFXP(SBV(17986, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17351, 16), 8), UFXP(BV(23439, 16), 8)), UFXP(BV(59448, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32072, 16), 8), UFXP(BV(22307, 16), 8)), UFXP(BV(9765, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35386, 16), 8), UFXP(BV(64302, 16), 8)), UFXP(BV(36620, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14794, 16), 8), SFXP(SBV(26765, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15431, 16), 8), SFXP(SBV(22718, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53561, 16), 8), UFXP(BV(57292, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(55247, 16), 8), UFXP(BV(8358, 16), 8)), UFXP(BV(34257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-8357, 16), 8), SFXP(SBV(-4889, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8660, 16), 8), SFXP(SBV(-7493, 16), 8)), SFXP(SBV(16153, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37883, 16), 8), UFXP(BV(17700, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41006, 16), 8), UFXP(BV(28908, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42445, 16), 8), UFXP(BV(44257, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42511, 16), 8), UFXP(BV(63517, 16), 8)), UFXP(BV(40492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65330, 16), 8), UFXP(BV(55576, 16), 8)), UFXP(BV(9754, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6291, 16), 8), SFXP(SBV(14691, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58120, 16), 8), UFXP(BV(43107, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28722, 16), 8), SFXP(SBV(-31856, 16), 8)), SFXP(SBV(3134, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29779, 16), 8), SFXP(SBV(-16827, 16), 8)), SFXP(SBV(8692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21294, 16), 8), SFXP(SBV(-21310, 16), 8)), SFXP(SBV(16, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29822, 16), 8), SFXP(SBV(-9826, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24337, 16), 8), UFXP(BV(37317, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14108, 16), 8), SFXP(SBV(13617, 16), 8)), SFXP(SBV(-27725, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19248, 16), 8), SFXP(SBV(-828, 16), 8)), SFXP(SBV(20076, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-738, 16), 8), SFXP(SBV(17041, 16), 8)), SFXP(SBV(-17779, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38528, 16), 8), UFXP(BV(64793, 16), 8)), UFXP(BV(37785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17133, 16), 8), SFXP(SBV(-21190, 16), 8)), SFXP(SBV(-4057, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61456, 16), 8), UFXP(BV(52050, 16), 8)), UFXP(BV(9406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18051, 16), 8), UFXP(BV(30544, 16), 8)), UFXP(BV(56558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21342, 16), 8), SFXP(SBV(-29949, 16), 8)), SFXP(SBV(-8607, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62701, 16), 8), UFXP(BV(58971, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34088, 16), 8), UFXP(BV(28678, 16), 8)), UFXP(BV(17566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63536, 16), 8), UFXP(BV(25410, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48108, 16), 8), UFXP(BV(47585, 16), 8)), UFXP(BV(30157, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62098, 16), 8), UFXP(BV(677, 16), 8)), UFXP(BV(62775, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47663, 16), 8), UFXP(BV(60331, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51397, 16), 8), UFXP(BV(15609, 16), 8)), UFXP(BV(35788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1336, 16), 8), UFXP(BV(43267, 16), 8)), UFXP(BV(44603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27184, 16), 8), SFXP(SBV(-19264, 16), 8)), SFXP(SBV(7920, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36348, 16), 8), UFXP(BV(42132, 16), 8)), UFXP(BV(12944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5127, 16), 8), SFXP(SBV(-11801, 16), 8)), SFXP(SBV(25802, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25615, 16), 8), UFXP(BV(45032, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28250, 16), 8), SFXP(SBV(4069, 16), 8)), SFXP(SBV(-24181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19239, 16), 8), SFXP(SBV(-28791, 16), 8)), SFXP(SBV(-1024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7346, 16), 8), SFXP(SBV(-31050, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51394, 16), 8), UFXP(BV(38238, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14168, 16), 8), SFXP(SBV(-18236, 16), 8)), SFXP(SBV(32404, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26719, 16), 8), SFXP(SBV(-5954, 16), 8)), SFXP(SBV(-32673, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13327, 16), 8), SFXP(SBV(-4063, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3615, 16), 8), SFXP(SBV(-7461, 16), 8)), SFXP(SBV(-3846, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4204, 16), 8), SFXP(SBV(-25774, 16), 8)), SFXP(SBV(-29978, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25897, 16), 8), SFXP(SBV(32740, 16), 8)), SFXP(SBV(-30353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22050, 16), 8), UFXP(BV(9745, 16), 8)), UFXP(BV(12305, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-983, 16), 8), SFXP(SBV(6371, 16), 8)), SFXP(SBV(-7354, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50985, 16), 8), UFXP(BV(17811, 16), 8)), UFXP(BV(3260, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52775, 16), 8), UFXP(BV(49830, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48102, 16), 8), UFXP(BV(6490, 16), 8)), UFXP(BV(54592, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10816, 16), 8), SFXP(SBV(19456, 16), 8)), SFXP(SBV(29952, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22216, 16), 8), SFXP(SBV(-30849, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11669, 16), 8), UFXP(BV(4555, 16), 8)), UFXP(BV(16224, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11785, 16), 8), SFXP(SBV(-21412, 16), 8)), SFXP(SBV(-2665, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50387, 16), 8), UFXP(BV(10885, 16), 8)), UFXP(BV(39502, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7926, 16), 8), SFXP(SBV(642, 16), 8)), SFXP(SBV(19877, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45807, 16), 8), UFXP(BV(46492, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-9537, 16), 8), SFXP(SBV(8578, 16), 8)), SFXP(SBV(8116, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12911, 16), 8), SFXP(SBV(27519, 16), 8)), SFXP(SBV(11626, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58469, 16), 8), UFXP(BV(37274, 16), 8)), UFXP(BV(59034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28460, 16), 8), SFXP(SBV(-17812, 16), 8)), SFXP(SBV(14114, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38403, 16), 8), UFXP(BV(20019, 16), 8)), UFXP(BV(58422, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51667, 16), 8), UFXP(BV(39726, 16), 8)), UFXP(BV(11941, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12594, 16), 8), SFXP(SBV(-20563, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5200, 16), 8), SFXP(SBV(-19327, 16), 8)), SFXP(SBV(-637, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19117, 16), 8), UFXP(BV(32413, 16), 8)), UFXP(BV(61170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23028, 16), 8), SFXP(SBV(23137, 16), 8)), SFXP(SBV(-15906, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1681, 16), 8), SFXP(SBV(19714, 16), 8)), SFXP(SBV(-21395, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58891, 16), 8), UFXP(BV(24246, 16), 8)), UFXP(BV(17601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36138, 16), 8), UFXP(BV(49070, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4250, 16), 8), SFXP(SBV(-5575, 16), 8)), SFXP(SBV(-1325, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28126, 16), 8), SFXP(SBV(27684, 16), 8)), SFXP(SBV(26907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1981, 16), 8), SFXP(SBV(-4247, 16), 8)), SFXP(SBV(6228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11509, 16), 8), SFXP(SBV(16864, 16), 8)), SFXP(SBV(28277, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40795, 16), 8), UFXP(BV(3363, 16), 8)), UFXP(BV(37432, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1272, 16), 8), SFXP(SBV(-6447, 16), 8)), SFXP(SBV(-32034, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54341, 16), 8), UFXP(BV(41293, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26109, 16), 8), SFXP(SBV(-23681, 16), 8)), SFXP(SBV(-2428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29971, 16), 8), SFXP(SBV(10990, 16), 8)), SFXP(SBV(-24575, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9984, 16), 8), UFXP(BV(10799, 16), 8)), UFXP(BV(27945, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23985, 16), 8), UFXP(BV(9376, 16), 8)), UFXP(BV(33361, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49175, 16), 8), UFXP(BV(56758, 16), 8)), UFXP(BV(23660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47579, 16), 8), UFXP(BV(17572, 16), 8)), UFXP(BV(30007, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4357, 16), 8), SFXP(SBV(19472, 16), 8)), SFXP(SBV(-15115, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31349, 16), 8), SFXP(SBV(13721, 16), 8)), SFXP(SBV(-17628, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37454, 16), 8), UFXP(BV(11709, 16), 8)), UFXP(BV(49163, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20554, 16), 8), SFXP(SBV(-1937, 16), 8)), SFXP(SBV(-22491, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23386, 16), 8), SFXP(SBV(31158, 16), 8)), SFXP(SBV(-10992, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19077, 16), 8), SFXP(SBV(6403, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(65456, 16), 8), UFXP(BV(44302, 16), 8)), UFXP(BV(55276, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31169, 16), 8), SFXP(SBV(24686, 16), 8)), SFXP(SBV(9681, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11165, 16), 8), SFXP(SBV(-8671, 16), 8)), SFXP(SBV(2494, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13490, 16), 8), SFXP(SBV(21112, 16), 8)), SFXP(SBV(7622, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9043, 16), 8), SFXP(SBV(-15602, 16), 8)), SFXP(SBV(24645, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4026, 16), 8), SFXP(SBV(-376, 16), 8)), SFXP(SBV(4402, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40124, 16), 8), UFXP(BV(52576, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16192, 16), 8), UFXP(BV(44852, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27633, 16), 8), UFXP(BV(17507, 16), 8)), UFXP(BV(45140, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31097, 16), 8), SFXP(SBV(24680, 16), 8)), SFXP(SBV(6417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64690, 16), 8), UFXP(BV(6628, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49479, 16), 8), UFXP(BV(27363, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1057, 16), 8), UFXP(BV(24590, 16), 8)), UFXP(BV(25647, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36873, 16), 8), UFXP(BV(22767, 16), 8)), UFXP(BV(59640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5896, 16), 8), SFXP(SBV(-12111, 16), 8)), SFXP(SBV(18007, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35735, 16), 8), UFXP(BV(2843, 16), 8)), UFXP(BV(3638, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31255, 16), 8), SFXP(SBV(6305, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11269, 16), 8), UFXP(BV(40118, 16), 8)), UFXP(BV(51387, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35399, 16), 8), UFXP(BV(47842, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8733, 16), 8), UFXP(BV(61416, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14199, 16), 8), UFXP(BV(27671, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19183, 16), 8), SFXP(SBV(30033, 16), 8)), SFXP(SBV(-16320, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14336, 16), 8), SFXP(SBV(-12131, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53359, 16), 8), UFXP(BV(24187, 16), 8)), UFXP(BV(60648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8266, 16), 8), SFXP(SBV(13162, 16), 8)), SFXP(SBV(-4896, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49472, 16), 8), UFXP(BV(54007, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32075, 16), 8), SFXP(SBV(-3604, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(55693, 16), 8), UFXP(BV(17759, 16), 8)), UFXP(BV(62397, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33188, 16), 8), UFXP(BV(64301, 16), 8)), UFXP(BV(31953, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24751, 16), 8), SFXP(SBV(23507, 16), 8)), SFXP(SBV(-1244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22414, 16), 8), SFXP(SBV(19853, 16), 8)), SFXP(SBV(2561, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23462, 16), 8), SFXP(SBV(8343, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33480, 16), 8), UFXP(BV(56195, 16), 8)), UFXP(BV(42821, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26210, 16), 8), UFXP(BV(41903, 16), 8)), UFXP(BV(49843, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15211, 16), 8), UFXP(BV(38255, 16), 8)), UFXP(BV(53466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29007, 16), 8), SFXP(SBV(-16747, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30582, 16), 8), SFXP(SBV(-687, 16), 8)), SFXP(SBV(-16533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25412, 16), 8), SFXP(SBV(23014, 16), 8)), SFXP(SBV(2398, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54233, 16), 8), UFXP(BV(12022, 16), 8)), UFXP(BV(42211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9989, 16), 8), UFXP(BV(32033, 16), 8)), UFXP(BV(4729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26122, 16), 8), SFXP(SBV(-15641, 16), 8)), SFXP(SBV(-23128, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18538, 16), 8), SFXP(SBV(-21722, 16), 8)), SFXP(SBV(-25276, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55263, 16), 8), UFXP(BV(18458, 16), 8)), UFXP(BV(8185, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30336, 16), 8), SFXP(SBV(-7272, 16), 8)), SFXP(SBV(-9764, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23534, 16), 8), SFXP(SBV(26806, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9101, 16), 8), SFXP(SBV(-26718, 16), 8)), SFXP(SBV(-29717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36461, 16), 8), UFXP(BV(13719, 16), 8)), UFXP(BV(53395, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30530, 16), 8), SFXP(SBV(17033, 16), 8)), SFXP(SBV(13497, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17874, 16), 8), UFXP(BV(37938, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38094, 16), 8), UFXP(BV(12914, 16), 8)), UFXP(BV(25180, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24892, 16), 8), SFXP(SBV(21126, 16), 8)), SFXP(SBV(-22558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3429, 16), 8), SFXP(SBV(-26049, 16), 8)), SFXP(SBV(29478, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10107, 16), 8), SFXP(SBV(-24251, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31519, 16), 8), UFXP(BV(28300, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42907, 16), 8), UFXP(BV(21784, 16), 8)), UFXP(BV(21123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18940, 16), 8), SFXP(SBV(-23777, 16), 8)), SFXP(SBV(-4837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38826, 16), 8), UFXP(BV(38185, 16), 8)), UFXP(BV(24125, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64580, 16), 8), UFXP(BV(55710, 16), 8)), UFXP(BV(8870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(7502, 16), 8), UFXP(BV(64080, 16), 8)), UFXP(BV(42836, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15136, 16), 8), SFXP(SBV(1175, 16), 8)), SFXP(SBV(-13961, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17083, 16), 8), SFXP(SBV(30669, 16), 8)), SFXP(SBV(-17784, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14726, 16), 8), SFXP(SBV(-6505, 16), 8)), SFXP(SBV(21231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12788, 16), 8), SFXP(SBV(6718, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39745, 16), 8), UFXP(BV(13236, 16), 8)), UFXP(BV(26509, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49203, 16), 8), UFXP(BV(37475, 16), 8)), UFXP(BV(21142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17030, 16), 8), UFXP(BV(50077, 16), 8)), UFXP(BV(54495, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15910, 16), 8), SFXP(SBV(25675, 16), 8)), SFXP(SBV(-9765, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21233, 16), 8), SFXP(SBV(-8666, 16), 8)), SFXP(SBV(-12567, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18780, 16), 8), UFXP(BV(10733, 16), 8)), UFXP(BV(8047, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50411, 16), 8), UFXP(BV(58872, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45373, 16), 8), UFXP(BV(48925, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24437, 16), 8), UFXP(BV(53107, 16), 8)), UFXP(BV(36866, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29642, 16), 8), SFXP(SBV(-15016, 16), 8)), SFXP(SBV(-30784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15780, 16), 8), UFXP(BV(1769, 16), 8)), UFXP(BV(14011, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(153, 16), 8), UFXP(BV(39225, 16), 8)), UFXP(BV(39378, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35788, 16), 8), UFXP(BV(51104, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3592, 16), 8), UFXP(BV(20082, 16), 8)), UFXP(BV(49046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31218, 16), 8), SFXP(SBV(14428, 16), 8)), SFXP(SBV(19890, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9662, 16), 8), SFXP(SBV(9853, 16), 8)), SFXP(SBV(-191, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30040, 16), 8), SFXP(SBV(-18340, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22843, 16), 8), UFXP(BV(41418, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20989, 16), 8), SFXP(SBV(-7708, 16), 8)), SFXP(SBV(13281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10542, 16), 8), SFXP(SBV(-11457, 16), 8)), SFXP(SBV(-915, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28764, 16), 8), SFXP(SBV(18538, 16), 8)), SFXP(SBV(10226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28754, 16), 8), UFXP(BV(20288, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16910, 16), 8), UFXP(BV(17175, 16), 8)), UFXP(BV(34085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-205, 16), 8), SFXP(SBV(7944, 16), 8)), SFXP(SBV(7739, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17356, 16), 8), UFXP(BV(5869, 16), 8)), UFXP(BV(4684, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44493, 16), 8), UFXP(BV(20141, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60736, 16), 8), UFXP(BV(9154, 16), 8)), UFXP(BV(9099, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18292, 16), 8), SFXP(SBV(24050, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18294, 16), 8), SFXP(SBV(26516, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5405, 16), 8), SFXP(SBV(16538, 16), 8)), SFXP(SBV(21943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33922, 16), 8), UFXP(BV(52318, 16), 8)), UFXP(BV(20704, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21525, 16), 8), SFXP(SBV(32689, 16), 8)), SFXP(SBV(3954, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3901, 16), 8), SFXP(SBV(13781, 16), 8)), SFXP(SBV(-17682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35679, 16), 8), UFXP(BV(2786, 16), 8)), UFXP(BV(38465, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3414, 16), 8), UFXP(BV(33575, 16), 8)), UFXP(BV(36989, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30037, 16), 8), SFXP(SBV(-282, 16), 8)), SFXP(SBV(29755, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12293, 16), 8), UFXP(BV(31345, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32024, 16), 8), UFXP(BV(55853, 16), 8)), UFXP(BV(40046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59479, 16), 8), UFXP(BV(10645, 16), 8)), UFXP(BV(48834, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15620, 16), 8), SFXP(SBV(9666, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11518, 16), 8), SFXP(SBV(9506, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1682, 16), 8), SFXP(SBV(-643, 16), 8)), SFXP(SBV(1039, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17831, 16), 8), SFXP(SBV(-24695, 16), 8)), SFXP(SBV(-6864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31160, 16), 8), UFXP(BV(27095, 16), 8)), UFXP(BV(58255, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10809, 16), 8), SFXP(SBV(2726, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57051, 16), 8), UFXP(BV(47238, 16), 8)), UFXP(BV(9813, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59927, 16), 8), UFXP(BV(7425, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14177, 16), 8), SFXP(SBV(10229, 16), 8)), SFXP(SBV(-24406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50209, 16), 8), UFXP(BV(58079, 16), 8)), UFXP(BV(53243, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17286, 16), 8), SFXP(SBV(17513, 16), 8)), SFXP(SBV(-227, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2859, 16), 8), SFXP(SBV(30243, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58865, 16), 8), UFXP(BV(21299, 16), 8)), UFXP(BV(37566, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15146, 16), 8), SFXP(SBV(5955, 16), 8)), SFXP(SBV(-21101, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2255, 16), 8), SFXP(SBV(-10025, 16), 8)), SFXP(SBV(-22770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56412, 16), 8), UFXP(BV(1032, 16), 8)), UFXP(BV(55380, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63927, 16), 8), UFXP(BV(12068, 16), 8)), UFXP(BV(51859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53986, 16), 8), UFXP(BV(23704, 16), 8)), UFXP(BV(30282, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64168, 16), 8), UFXP(BV(49535, 16), 8)), UFXP(BV(48167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11515, 16), 8), SFXP(SBV(-28127, 16), 8)), SFXP(SBV(-19982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51966, 16), 8), UFXP(BV(44587, 16), 8)), UFXP(BV(31017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24161, 16), 8), SFXP(SBV(-30020, 16), 8)), SFXP(SBV(5859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44583, 16), 8), UFXP(BV(12841, 16), 8)), UFXP(BV(31742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40774, 16), 8), UFXP(BV(22263, 16), 8)), UFXP(BV(63037, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(45138, 16), 8), UFXP(BV(50017, 16), 8)), UFXP(BV(37190, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21385, 16), 8), UFXP(BV(7290, 16), 8)), UFXP(BV(19147, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29031, 16), 8), SFXP(SBV(3221, 16), 8)), SFXP(SBV(32252, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5859, 16), 8), UFXP(BV(1247, 16), 8)), UFXP(BV(28539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57363, 16), 8), UFXP(BV(54037, 16), 8)), UFXP(BV(49675, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14175, 16), 8), SFXP(SBV(-17091, 16), 8)), SFXP(SBV(28843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25832, 16), 8), SFXP(SBV(15023, 16), 8)), SFXP(SBV(-24681, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10950, 16), 8), SFXP(SBV(-13371, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9634, 16), 8), UFXP(BV(23145, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20525, 16), 8), UFXP(BV(64235, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32823, 16), 8), UFXP(BV(35410, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5989, 16), 8), SFXP(SBV(17046, 16), 8)), SFXP(SBV(-11057, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25340, 16), 8), UFXP(BV(3923, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32268, 16), 8), SFXP(SBV(21794, 16), 8)), SFXP(SBV(10474, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26272, 16), 8), UFXP(BV(954, 16), 8)), UFXP(BV(27226, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8735, 16), 8), SFXP(SBV(21420, 16), 8)), SFXP(SBV(-12685, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20856, 16), 8), SFXP(SBV(14203, 16), 8)), SFXP(SBV(-6653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44744, 16), 8), UFXP(BV(2596, 16), 8)), UFXP(BV(60517, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42871, 16), 8), UFXP(BV(24171, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61876, 16), 8), UFXP(BV(40549, 16), 8)), UFXP(BV(35956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19008, 16), 8), SFXP(SBV(19295, 16), 8)), SFXP(SBV(287, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29497, 16), 8), SFXP(SBV(-24240, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3289, 16), 8), SFXP(SBV(14207, 16), 8)), SFXP(SBV(-17496, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15566, 16), 8), UFXP(BV(45734, 16), 8)), UFXP(BV(61300, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22216, 16), 8), UFXP(BV(22908, 16), 8)), UFXP(BV(21904, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46271, 16), 8), UFXP(BV(3817, 16), 8)), UFXP(BV(42454, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27328, 16), 8), UFXP(BV(30046, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52550, 16), 8), UFXP(BV(48712, 16), 8)), UFXP(BV(35726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22020, 16), 8), SFXP(SBV(-15327, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15259, 16), 8), SFXP(SBV(6929, 16), 8)), SFXP(SBV(8330, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2507, 16), 8), SFXP(SBV(29307, 16), 8)), SFXP(SBV(-26800, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48358, 16), 8), UFXP(BV(4607, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14470, 16), 8), SFXP(SBV(-29011, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30574, 16), 8), SFXP(SBV(4135, 16), 8)), SFXP(SBV(26439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(47837, 16), 8), UFXP(BV(34904, 16), 8)), UFXP(BV(34212, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35555, 16), 8), UFXP(BV(56333, 16), 8)), UFXP(BV(25122, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21992, 16), 8), SFXP(SBV(20972, 16), 8)), SFXP(SBV(32154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28387, 16), 8), UFXP(BV(25201, 16), 8)), UFXP(BV(53588, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3529, 16), 8), UFXP(BV(43514, 16), 8)), UFXP(BV(47043, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6219, 16), 8), UFXP(BV(25620, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23839, 16), 8), SFXP(SBV(1895, 16), 8)), SFXP(SBV(-25734, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26334, 16), 8), SFXP(SBV(20482, 16), 8)), SFXP(SBV(-9774, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20904, 16), 8), SFXP(SBV(-5394, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62083, 16), 8), UFXP(BV(11556, 16), 8)), UFXP(BV(49953, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16740, 16), 8), SFXP(SBV(-22687, 16), 8)), SFXP(SBV(5947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12124, 16), 8), SFXP(SBV(5014, 16), 8)), SFXP(SBV(7110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3163, 16), 8), UFXP(BV(37162, 16), 8)), UFXP(BV(40325, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39693, 16), 8), UFXP(BV(12269, 16), 8)), UFXP(BV(51962, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6111, 16), 8), UFXP(BV(14025, 16), 8)), UFXP(BV(57622, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25434, 16), 8), UFXP(BV(16389, 16), 8)), UFXP(BV(41823, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(65504, 16), 8), UFXP(BV(55660, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13517, 16), 8), SFXP(SBV(20507, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-672, 16), 8), SFXP(SBV(-32246, 16), 8)), SFXP(SBV(32618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8211, 16), 8), UFXP(BV(9137, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27711, 16), 8), UFXP(BV(32992, 16), 8)), UFXP(BV(60703, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38464, 16), 8), UFXP(BV(59224, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5378, 16), 8), SFXP(SBV(-11807, 16), 8)), SFXP(SBV(6429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21526, 16), 8), UFXP(BV(6804, 16), 8)), UFXP(BV(28330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36373, 16), 8), UFXP(BV(23978, 16), 8)), UFXP(BV(64506, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7701, 16), 8), SFXP(SBV(-20592, 16), 8)), SFXP(SBV(-29626, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29524, 16), 8), SFXP(SBV(-28571, 16), 8)), SFXP(SBV(953, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22943, 16), 8), UFXP(BV(46303, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42501, 16), 8), UFXP(BV(3551, 16), 8)), UFXP(BV(38950, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32760, 16), 8), UFXP(BV(7553, 16), 8)), UFXP(BV(40313, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9004, 16), 8), SFXP(SBV(950, 16), 8)), SFXP(SBV(-9954, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12798, 16), 8), UFXP(BV(13529, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26871, 16), 8), SFXP(SBV(-29999, 16), 8)), SFXP(SBV(-8666, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8153, 16), 8), UFXP(BV(48594, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15837, 16), 8), SFXP(SBV(-18112, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9649, 16), 8), SFXP(SBV(10180, 16), 8)), SFXP(SBV(-531, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29429, 16), 8), SFXP(SBV(-12749, 16), 8)), SFXP(SBV(-23795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11128, 16), 8), UFXP(BV(46203, 16), 8)), UFXP(BV(30461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11829, 16), 8), UFXP(BV(37863, 16), 8)), UFXP(BV(49692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18575, 16), 8), SFXP(SBV(-5552, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14630, 16), 8), SFXP(SBV(8721, 16), 8)), SFXP(SBV(-23351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(376, 16), 8), UFXP(BV(9260, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18414, 16), 8), SFXP(SBV(743, 16), 8)), SFXP(SBV(-17671, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29393, 16), 8), UFXP(BV(56516, 16), 8)), UFXP(BV(901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31334, 16), 8), SFXP(SBV(8452, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56688, 16), 8), UFXP(BV(20854, 16), 8)), UFXP(BV(30337, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27641, 16), 8), SFXP(SBV(-2540, 16), 8)), SFXP(SBV(-30181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45137, 16), 8), UFXP(BV(28125, 16), 8)), UFXP(BV(43698, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60177, 16), 8), UFXP(BV(51281, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1385, 16), 8), UFXP(BV(64315, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22450, 16), 8), SFXP(SBV(-22686, 16), 8)), SFXP(SBV(20400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32686, 16), 8), UFXP(BV(60272, 16), 8)), UFXP(BV(27422, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-7002, 16), 8), SFXP(SBV(14910, 16), 8)), SFXP(SBV(-14596, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2338, 16), 8), SFXP(SBV(15756, 16), 8)), SFXP(SBV(18094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(41254, 16), 8), UFXP(BV(819, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13389, 16), 8), SFXP(SBV(-19920, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53872, 16), 8), UFXP(BV(32145, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24324, 16), 8), UFXP(BV(39718, 16), 8)), UFXP(BV(50142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31874, 16), 8), UFXP(BV(54491, 16), 8)), UFXP(BV(34348, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26687, 16), 8), UFXP(BV(23463, 16), 8)), UFXP(BV(3224, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54783, 16), 8), UFXP(BV(24828, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(951, 16), 8), SFXP(SBV(-2141, 16), 8)), SFXP(SBV(3092, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59399, 16), 8), UFXP(BV(34513, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13465, 16), 8), SFXP(SBV(-1431, 16), 8)), SFXP(SBV(9732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43813, 16), 8), UFXP(BV(3249, 16), 8)), UFXP(BV(47062, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-26518, 16), 8), SFXP(SBV(10685, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45372, 16), 8), UFXP(BV(65243, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23331, 16), 8), UFXP(BV(54346, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27051, 16), 8), SFXP(SBV(-27154, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3916, 16), 8), SFXP(SBV(23993, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37922, 16), 8), UFXP(BV(21687, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16991, 16), 8), SFXP(SBV(2024, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14427, 16), 8), SFXP(SBV(5372, 16), 8)), SFXP(SBV(24939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43364, 16), 8), UFXP(BV(58648, 16), 8)), UFXP(BV(50252, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56567, 16), 8), UFXP(BV(57220, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4746, 16), 8), SFXP(SBV(28482, 16), 8)), SFXP(SBV(23736, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19206, 16), 8), UFXP(BV(27288, 16), 8)), UFXP(BV(15624, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57626, 16), 8), UFXP(BV(2737, 16), 8)), UFXP(BV(54889, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7488, 16), 8), SFXP(SBV(12610, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18881, 16), 8), SFXP(SBV(-11849, 16), 8)), SFXP(SBV(-7032, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52631, 16), 8), UFXP(BV(26517, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55942, 16), 8), UFXP(BV(61744, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59409, 16), 8), UFXP(BV(19411, 16), 8)), UFXP(BV(48193, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6828, 16), 8), SFXP(SBV(-29599, 16), 8)), SFXP(SBV(-22771, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64530, 16), 8), UFXP(BV(35998, 16), 8)), UFXP(BV(28532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26521, 16), 8), SFXP(SBV(966, 16), 8)), SFXP(SBV(27487, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12634, 16), 8), UFXP(BV(21510, 16), 8)), UFXP(BV(12976, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20824, 16), 8), SFXP(SBV(25286, 16), 8)), SFXP(SBV(-4462, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14140, 16), 8), SFXP(SBV(31540, 16), 8)), SFXP(SBV(19856, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13420, 16), 8), SFXP(SBV(-22769, 16), 8)), SFXP(SBV(-9349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16661, 16), 8), UFXP(BV(6326, 16), 8)), UFXP(BV(18492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21818, 16), 8), UFXP(BV(27213, 16), 8)), UFXP(BV(25511, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1887, 16), 8), SFXP(SBV(-3588, 16), 8)), SFXP(SBV(-1701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2621, 16), 8), UFXP(BV(23155, 16), 8)), UFXP(BV(25776, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62375, 16), 8), UFXP(BV(60642, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18953, 16), 8), SFXP(SBV(25101, 16), 8)), SFXP(SBV(-6148, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31602, 16), 8), SFXP(SBV(-12518, 16), 8)), SFXP(SBV(-27575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5679, 16), 8), SFXP(SBV(-28684, 16), 8)), SFXP(SBV(19045, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12381, 16), 8), SFXP(SBV(-29083, 16), 8)), SFXP(SBV(16702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52859, 16), 8), UFXP(BV(7415, 16), 8)), UFXP(BV(60274, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20990, 16), 8), SFXP(SBV(-7814, 16), 8)), SFXP(SBV(28804, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56236, 16), 8), UFXP(BV(20024, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34548, 16), 8), UFXP(BV(44787, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2265, 16), 8), UFXP(BV(58621, 16), 8)), UFXP(BV(9180, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18775, 16), 8), SFXP(SBV(10621, 16), 8)), SFXP(SBV(-8154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26436, 16), 8), UFXP(BV(53192, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4582, 16), 8), UFXP(BV(32958, 16), 8)), UFXP(BV(37540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24548, 16), 8), SFXP(SBV(-26360, 16), 8)), SFXP(SBV(1812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16123, 16), 8), SFXP(SBV(-22226, 16), 8)), SFXP(SBV(27187, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14781, 16), 8), SFXP(SBV(-28689, 16), 8)), SFXP(SBV(22066, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15905, 16), 8), UFXP(BV(34871, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17055, 16), 8), SFXP(SBV(1917, 16), 8)), SFXP(SBV(-3360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2576, 16), 8), UFXP(BV(26504, 16), 8)), UFXP(BV(4552, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24806, 16), 8), SFXP(SBV(-15833, 16), 8)), SFXP(SBV(8973, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4355, 16), 8), SFXP(SBV(-14194, 16), 8)), SFXP(SBV(-9839, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41639, 16), 8), UFXP(BV(49319, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8544, 16), 8), SFXP(SBV(30618, 16), 8)), SFXP(SBV(-22074, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64519, 16), 8), UFXP(BV(4971, 16), 8)), UFXP(BV(59548, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20267, 16), 8), UFXP(BV(22762, 16), 8)), UFXP(BV(63041, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19093, 16), 8), UFXP(BV(20501, 16), 8)), UFXP(BV(64128, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35619, 16), 8), UFXP(BV(23851, 16), 8)), UFXP(BV(11768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28323, 16), 8), SFXP(SBV(-17565, 16), 8)), SFXP(SBV(10758, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23547, 16), 8), SFXP(SBV(-25372, 16), 8)), SFXP(SBV(25568, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-18607, 16), 8), SFXP(SBV(220, 16), 8)), SFXP(SBV(-15991, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25651, 16), 8), SFXP(SBV(11962, 16), 8)), SFXP(SBV(18935, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8488, 16), 8), SFXP(SBV(21377, 16), 8)), SFXP(SBV(12889, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11642, 16), 8), UFXP(BV(4703, 16), 8)), UFXP(BV(16345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18486, 16), 8), UFXP(BV(40911, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4968, 16), 8), SFXP(SBV(-25869, 16), 8)), SFXP(SBV(-20901, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39110, 16), 8), UFXP(BV(35143, 16), 8)), UFXP(BV(3967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-5913, 16), 8), SFXP(SBV(-11211, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7883, 16), 8), SFXP(SBV(-21380, 16), 8)), SFXP(SBV(-13497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21871, 16), 8), SFXP(SBV(27310, 16), 8)), SFXP(SBV(-16355, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30678, 16), 8), SFXP(SBV(-9228, 16), 8)), SFXP(SBV(-25630, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11398, 16), 8), SFXP(SBV(-32010, 16), 8)), SFXP(SBV(22128, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1377, 16), 8), SFXP(SBV(25483, 16), 8)), SFXP(SBV(24106, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9713, 16), 8), UFXP(BV(54647, 16), 8)), UFXP(BV(64360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5694, 16), 8), UFXP(BV(41020, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11675, 16), 8), SFXP(SBV(27381, 16), 8)), SFXP(SBV(15706, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14609, 16), 8), UFXP(BV(63320, 16), 8)), UFXP(BV(16825, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15551, 16), 8), UFXP(BV(57783, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8896, 16), 8), UFXP(BV(25985, 16), 8)), UFXP(BV(51010, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41563, 16), 8), UFXP(BV(17875, 16), 8)), UFXP(BV(59438, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4750, 16), 8), UFXP(BV(52, 16), 8)), UFXP(BV(4698, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19887, 16), 8), SFXP(SBV(27910, 16), 8)), SFXP(SBV(17739, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9615, 16), 8), SFXP(SBV(-8003, 16), 8)), SFXP(SBV(17618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46616, 16), 8), UFXP(BV(1153, 16), 8)), UFXP(BV(45463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44825, 16), 8), UFXP(BV(11409, 16), 8)), UFXP(BV(33416, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36550, 16), 8), UFXP(BV(59654, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3518, 16), 8), UFXP(BV(57314, 16), 8)), UFXP(BV(60832, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30813, 16), 8), SFXP(SBV(23959, 16), 8)), SFXP(SBV(199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3489, 16), 8), SFXP(SBV(-11043, 16), 8)), SFXP(SBV(-19432, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25533, 16), 8), SFXP(SBV(23946, 16), 8)), SFXP(SBV(-29037, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2114, 16), 8), SFXP(SBV(-19524, 16), 8)), SFXP(SBV(-17410, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58197, 16), 8), UFXP(BV(62426, 16), 8)), UFXP(BV(35653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43565, 16), 8), UFXP(BV(58806, 16), 8)), UFXP(BV(50295, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48305, 16), 8), UFXP(BV(56203, 16), 8)), UFXP(BV(53728, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29639, 16), 8), UFXP(BV(31820, 16), 8)), UFXP(BV(14019, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28016, 16), 8), UFXP(BV(23751, 16), 8)), UFXP(BV(51767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(846, 16), 8), SFXP(SBV(3098, 16), 8)), SFXP(SBV(3944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(20824, 16), 8), UFXP(BV(32635, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32341, 16), 8), SFXP(SBV(28820, 16), 8)), SFXP(SBV(4375, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29563, 16), 8), SFXP(SBV(-5531, 16), 8)), SFXP(SBV(16637, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12707, 16), 8), SFXP(SBV(-7127, 16), 8)), SFXP(SBV(-5580, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45860, 16), 8), UFXP(BV(52856, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43639, 16), 8), UFXP(BV(59929, 16), 8)), UFXP(BV(57707, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17921, 16), 8), UFXP(BV(31826, 16), 8)), UFXP(BV(51631, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19042, 16), 8), SFXP(SBV(16778, 16), 8)), SFXP(SBV(-29716, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35560, 16), 8), UFXP(BV(57494, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18228, 16), 8), SFXP(SBV(14693, 16), 8)), SFXP(SBV(3535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3566, 16), 8), SFXP(SBV(-2638, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50617, 16), 8), UFXP(BV(43369, 16), 8)), UFXP(BV(7248, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20466, 16), 8), UFXP(BV(10094, 16), 8)), UFXP(BV(10372, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28343, 16), 8), UFXP(BV(13809, 16), 8)), UFXP(BV(14534, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50839, 16), 8), UFXP(BV(25425, 16), 8)), UFXP(BV(25414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32545, 16), 8), SFXP(SBV(-20911, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23792, 16), 8), SFXP(SBV(-17536, 16), 8)), SFXP(SBV(6256, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20341, 16), 8), SFXP(SBV(25121, 16), 8)), SFXP(SBV(4780, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18346, 16), 8), SFXP(SBV(4396, 16), 8)), SFXP(SBV(-13950, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6997, 16), 8), SFXP(SBV(11998, 16), 8)), SFXP(SBV(-5001, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29834, 16), 8), UFXP(BV(18424, 16), 8)), UFXP(BV(48258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4958, 16), 8), SFXP(SBV(-23885, 16), 8)), SFXP(SBV(-28843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7456, 16), 8), SFXP(SBV(11801, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29472, 16), 8), UFXP(BV(26609, 16), 8)), UFXP(BV(56081, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6807, 16), 8), SFXP(SBV(-32768, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23601, 16), 8), UFXP(BV(44661, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18138, 16), 8), SFXP(SBV(-20863, 16), 8)), SFXP(SBV(-29151, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36711, 16), 8), UFXP(BV(63778, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12381, 16), 8), UFXP(BV(59064, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37211, 16), 8), UFXP(BV(41325, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54808, 16), 8), UFXP(BV(12090, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8871, 16), 8), UFXP(BV(34875, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32548, 16), 8), SFXP(SBV(21235, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1518, 16), 8), UFXP(BV(61681, 16), 8)), UFXP(BV(38070, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10293, 16), 8), SFXP(SBV(-16103, 16), 8)), SFXP(SBV(26396, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12405, 16), 8), SFXP(SBV(7336, 16), 8)), SFXP(SBV(-5069, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23961, 16), 8), SFXP(SBV(3587, 16), 8)), SFXP(SBV(-27548, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25664, 16), 8), SFXP(SBV(-12919, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63912, 16), 8), UFXP(BV(58548, 16), 8)), UFXP(BV(5364, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26140, 16), 8), SFXP(SBV(24913, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50560, 16), 8), UFXP(BV(55362, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29104, 16), 8), UFXP(BV(63790, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42075, 16), 8), UFXP(BV(5687, 16), 8)), UFXP(BV(36388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24822, 16), 8), SFXP(SBV(25356, 16), 8)), SFXP(SBV(-534, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5604, 16), 8), SFXP(SBV(8336, 16), 8)), SFXP(SBV(-2732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8242, 16), 8), UFXP(BV(19216, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49564, 16), 8), UFXP(BV(12555, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33090, 16), 8), UFXP(BV(52393, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-12395, 16), 8), SFXP(SBV(1260, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6896, 16), 8), SFXP(SBV(4787, 16), 8)), SFXP(SBV(11683, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30355, 16), 8), UFXP(BV(59427, 16), 8)), UFXP(BV(36464, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11274, 16), 8), SFXP(SBV(-25843, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58511, 16), 8), UFXP(BV(62512, 16), 8)), UFXP(BV(807, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27037, 16), 8), UFXP(BV(59681, 16), 8)), UFXP(BV(21182, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15482, 16), 8), SFXP(SBV(-7871, 16), 8)), SFXP(SBV(7611, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15026, 16), 8), SFXP(SBV(20429, 16), 8)), SFXP(SBV(-19438, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60609, 16), 8), UFXP(BV(38014, 16), 8)), UFXP(BV(22595, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7114, 16), 8), UFXP(BV(17931, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20271, 16), 8), SFXP(SBV(-24807, 16), 8)), SFXP(SBV(4536, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22378, 16), 8), SFXP(SBV(10075, 16), 8)), SFXP(SBV(12303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-3547, 16), 8), SFXP(SBV(19363, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34076, 16), 8), UFXP(BV(3222, 16), 8)), UFXP(BV(30854, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20271, 16), 8), SFXP(SBV(-23013, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4151, 16), 8), UFXP(BV(46710, 16), 8)), UFXP(BV(22977, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25125, 16), 8), UFXP(BV(17144, 16), 8)), UFXP(BV(44190, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24176, 16), 8), UFXP(BV(43047, 16), 8)), UFXP(BV(1687, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14108, 16), 8), SFXP(SBV(-3276, 16), 8)), SFXP(SBV(-17384, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53271, 16), 8), UFXP(BV(64120, 16), 8)), UFXP(BV(51855, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24720, 16), 8), SFXP(SBV(14753, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17806, 16), 8), UFXP(BV(3452, 16), 8)), UFXP(BV(14354, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41753, 16), 8), UFXP(BV(59029, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25487, 16), 8), SFXP(SBV(15092, 16), 8)), SFXP(SBV(-10395, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20479, 16), 8), UFXP(BV(54739, 16), 8)), UFXP(BV(31276, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55029, 16), 8), UFXP(BV(7525, 16), 8)), UFXP(BV(62554, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7321, 16), 8), SFXP(SBV(-3953, 16), 8)), SFXP(SBV(3368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2309, 16), 8), UFXP(BV(55355, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18365, 16), 8), SFXP(SBV(-31487, 16), 8)), SFXP(SBV(-15684, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46901, 16), 8), UFXP(BV(31065, 16), 8)), UFXP(BV(12430, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24128, 16), 8), SFXP(SBV(-30766, 16), 8)), SFXP(SBV(-6638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64212, 16), 8), UFXP(BV(50031, 16), 8)), UFXP(BV(48707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5010, 16), 8), SFXP(SBV(30272, 16), 8)), SFXP(SBV(-25262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23600, 16), 8), SFXP(SBV(17824, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33011, 16), 8), UFXP(BV(39005, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-12717, 16), 8), SFXP(SBV(-31385, 16), 8)), SFXP(SBV(-13789, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29856, 16), 8), UFXP(BV(58086, 16), 8)), UFXP(BV(24071, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24354, 16), 8), UFXP(BV(16736, 16), 8)), UFXP(BV(7618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12661, 16), 8), UFXP(BV(38520, 16), 8)), UFXP(BV(4540, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54824, 16), 8), UFXP(BV(54493, 16), 8)), UFXP(BV(331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3457, 16), 8), UFXP(BV(51723, 16), 8)), UFXP(BV(55180, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31250, 16), 8), SFXP(SBV(2137, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17931, 16), 8), UFXP(BV(50205, 16), 8)), UFXP(BV(33262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11341, 16), 8), SFXP(SBV(-14722, 16), 8)), SFXP(SBV(26063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19868, 16), 8), SFXP(SBV(-6161, 16), 8)), SFXP(SBV(13707, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55516, 16), 8), UFXP(BV(38294, 16), 8)), UFXP(BV(17222, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3894, 16), 8), SFXP(SBV(-19911, 16), 8)), SFXP(SBV(-23805, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(47662, 16), 8), UFXP(BV(58519, 16), 8)), UFXP(BV(16074, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21540, 16), 8), UFXP(BV(34794, 16), 8)), UFXP(BV(56334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49002, 16), 8), UFXP(BV(54297, 16), 8)), UFXP(BV(38521, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31699, 16), 8), UFXP(BV(59532, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29276, 16), 8), UFXP(BV(35801, 16), 8)), UFXP(BV(30947, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12306, 16), 8), UFXP(BV(59997, 16), 8)), UFXP(BV(6767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8607, 16), 8), SFXP(SBV(-24089, 16), 8)), SFXP(SBV(15482, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26627, 16), 8), SFXP(SBV(-653, 16), 8)), SFXP(SBV(-2383, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43135, 16), 8), UFXP(BV(3696, 16), 8)), UFXP(BV(32938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18098, 16), 8), SFXP(SBV(15772, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11394, 16), 8), SFXP(SBV(-16935, 16), 8)), SFXP(SBV(-28329, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5802, 16), 8), SFXP(SBV(-4203, 16), 8)), SFXP(SBV(1599, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55891, 16), 8), UFXP(BV(64396, 16), 8)), UFXP(BV(57031, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63985, 16), 8), UFXP(BV(58076, 16), 8)), UFXP(BV(5909, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10336, 16), 8), SFXP(SBV(4000, 16), 8)), SFXP(SBV(6336, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(25508, 16), 8), SFXP(SBV(-23990, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47526, 16), 8), UFXP(BV(60373, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14328, 16), 8), SFXP(SBV(21953, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63647, 16), 8), UFXP(BV(38960, 16), 8)), UFXP(BV(37071, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3055, 16), 8), UFXP(BV(59018, 16), 8)), UFXP(BV(48937, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42106, 16), 8), UFXP(BV(34481, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29899, 16), 8), SFXP(SBV(21955, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5690, 16), 8), UFXP(BV(24012, 16), 8)), UFXP(BV(29702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25475, 16), 8), UFXP(BV(40630, 16), 8)), UFXP(BV(45465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12159, 16), 8), SFXP(SBV(14717, 16), 8)), SFXP(SBV(26876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10642, 16), 8), UFXP(BV(50623, 16), 8)), UFXP(BV(7262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16678, 16), 8), SFXP(SBV(-10882, 16), 8)), SFXP(SBV(-27560, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55273, 16), 8), UFXP(BV(40486, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40695, 16), 8), UFXP(BV(58904, 16), 8)), UFXP(BV(47327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61741, 16), 8), UFXP(BV(60871, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2102, 16), 8), UFXP(BV(33582, 16), 8)), UFXP(BV(35684, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48601, 16), 8), UFXP(BV(6465, 16), 8)), UFXP(BV(55066, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25563, 16), 8), UFXP(BV(20490, 16), 8)), UFXP(BV(5073, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56069, 16), 8), UFXP(BV(41282, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61338, 16), 8), UFXP(BV(52567, 16), 8)), UFXP(BV(12223, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26264, 16), 8), SFXP(SBV(-2765, 16), 8)), SFXP(SBV(-23499, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53120, 16), 8), UFXP(BV(36216, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8829, 16), 8), UFXP(BV(63962, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27206, 16), 8), UFXP(BV(56622, 16), 8)), UFXP(BV(36120, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59780, 16), 8), UFXP(BV(11467, 16), 8)), UFXP(BV(5711, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42368, 16), 8), UFXP(BV(14070, 16), 8)), UFXP(BV(28298, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27610, 16), 8), UFXP(BV(23697, 16), 8)), UFXP(BV(65390, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58973, 16), 8), UFXP(BV(6195, 16), 8)), UFXP(BV(65168, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30172, 16), 8), SFXP(SBV(23043, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45996, 16), 8), UFXP(BV(43143, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19771, 16), 8), SFXP(SBV(23480, 16), 8)), SFXP(SBV(-22285, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31220, 16), 8), SFXP(SBV(-7415, 16), 8)), SFXP(SBV(13222, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23063, 16), 8), UFXP(BV(25620, 16), 8)), UFXP(BV(62979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14602, 16), 8), SFXP(SBV(-24831, 16), 8)), SFXP(SBV(26103, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23377, 16), 8), UFXP(BV(61990, 16), 8)), UFXP(BV(19831, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35485, 16), 8), UFXP(BV(30962, 16), 8)), UFXP(BV(911, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42864, 16), 8), UFXP(BV(62879, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26470, 16), 8), SFXP(SBV(9229, 16), 8)), SFXP(SBV(-17241, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1365, 16), 8), UFXP(BV(27733, 16), 8)), UFXP(BV(16801, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29211, 16), 8), UFXP(BV(61197, 16), 8)), UFXP(BV(24872, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7501, 16), 8), SFXP(SBV(-11027, 16), 8)), SFXP(SBV(3526, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4636, 16), 8), UFXP(BV(23265, 16), 8)), UFXP(BV(27901, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62284, 16), 8), UFXP(BV(55336, 16), 8)), UFXP(BV(28196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18803, 16), 8), UFXP(BV(11132, 16), 8)), UFXP(BV(7671, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15029, 16), 8), UFXP(BV(46023, 16), 8)), UFXP(BV(61052, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14789, 16), 8), SFXP(SBV(-2543, 16), 8)), SFXP(SBV(-17332, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12307, 16), 8), UFXP(BV(63653, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39454, 16), 8), UFXP(BV(13345, 16), 8)), UFXP(BV(25078, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6172, 16), 8), UFXP(BV(3562, 16), 8)), UFXP(BV(20342, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23514, 16), 8), SFXP(SBV(-15490, 16), 8)), SFXP(SBV(-8024, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52840, 16), 8), UFXP(BV(116, 16), 8)), UFXP(BV(23943, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8360, 16), 8), SFXP(SBV(-22926, 16), 8)), SFXP(SBV(27782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32228, 16), 8), UFXP(BV(36137, 16), 8)), UFXP(BV(2829, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6319, 16), 8), UFXP(BV(57606, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32724, 16), 8), SFXP(SBV(30025, 16), 8)), SFXP(SBV(2699, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29227, 16), 8), SFXP(SBV(-32017, 16), 8)), SFXP(SBV(-4292, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47313, 16), 8), UFXP(BV(33185, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12780, 16), 8), SFXP(SBV(-4745, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30616, 16), 8), SFXP(SBV(9997, 16), 8)), SFXP(SBV(24923, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3348, 16), 8), SFXP(SBV(-22192, 16), 8)), SFXP(SBV(-28085, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(41197, 16), 8), UFXP(BV(55450, 16), 8)), UFXP(BV(10439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40701, 16), 8), UFXP(BV(64363, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58724, 16), 8), UFXP(BV(50178, 16), 8)), UFXP(BV(43366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8386, 16), 8), SFXP(SBV(-29585, 16), 8)), SFXP(SBV(21199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25573, 16), 8), SFXP(SBV(22542, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30229, 16), 8), UFXP(BV(45165, 16), 8)), UFXP(BV(9858, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26356, 16), 8), UFXP(BV(54690, 16), 8)), UFXP(BV(15510, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15416, 16), 8), UFXP(BV(29892, 16), 8)), UFXP(BV(45308, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32112, 16), 8), SFXP(SBV(-31347, 16), 8)), SFXP(SBV(-71, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50658, 16), 8), UFXP(BV(54323, 16), 8)), UFXP(BV(1685, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29332, 16), 8), SFXP(SBV(743, 16), 8)), SFXP(SBV(30075, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25017, 16), 8), SFXP(SBV(26804, 16), 8)), SFXP(SBV(1787, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2157, 16), 8), SFXP(SBV(5447, 16), 8)), SFXP(SBV(-7604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20623, 16), 8), SFXP(SBV(17696, 16), 8)), SFXP(SBV(-2927, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22340, 16), 8), UFXP(BV(41927, 16), 8)), UFXP(BV(54306, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9599, 16), 8), UFXP(BV(47971, 16), 8)), UFXP(BV(57570, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5617, 16), 8), SFXP(SBV(2333, 16), 8)), SFXP(SBV(-14347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29128, 16), 8), UFXP(BV(53066, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41556, 16), 8), UFXP(BV(61878, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24039, 16), 8), SFXP(SBV(-4812, 16), 8)), SFXP(SBV(-19227, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61869, 16), 8), UFXP(BV(60899, 16), 8)), UFXP(BV(970, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17692, 16), 8), SFXP(SBV(1793, 16), 8)), SFXP(SBV(15899, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6280, 16), 8), UFXP(BV(56479, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22291, 16), 8), UFXP(BV(62853, 16), 8)), UFXP(BV(19608, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2929, 16), 8), SFXP(SBV(25070, 16), 8)), SFXP(SBV(24692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17646, 16), 8), SFXP(SBV(-22210, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54573, 16), 8), UFXP(BV(38693, 16), 8)), UFXP(BV(56411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19248, 16), 8), SFXP(SBV(-17010, 16), 8)), SFXP(SBV(2238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50466, 16), 8), UFXP(BV(5250, 16), 8)), UFXP(BV(45216, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21335, 16), 8), UFXP(BV(756, 16), 8)), UFXP(BV(20579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17648, 16), 8), SFXP(SBV(-7768, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55618, 16), 8), UFXP(BV(61713, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22563, 16), 8), SFXP(SBV(16904, 16), 8)), SFXP(SBV(26069, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8295, 16), 8), SFXP(SBV(18200, 16), 8)), SFXP(SBV(101, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19319, 16), 8), SFXP(SBV(-13584, 16), 8)), SFXP(SBV(-5735, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26079, 16), 8), UFXP(BV(40648, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25832, 16), 8), SFXP(SBV(-21750, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14981, 16), 8), SFXP(SBV(16572, 16), 8)), SFXP(SBV(-31553, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20898, 16), 8), SFXP(SBV(1805, 16), 8)), SFXP(SBV(-22703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24710, 16), 8), SFXP(SBV(-20653, 16), 8)), SFXP(SBV(27419, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22772, 16), 8), SFXP(SBV(7902, 16), 8)), SFXP(SBV(14870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29739, 16), 8), SFXP(SBV(28724, 16), 8)), SFXP(SBV(-5528, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28733, 16), 8), UFXP(BV(48910, 16), 8)), UFXP(BV(50086, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49802, 16), 8), UFXP(BV(48127, 16), 8)), UFXP(BV(32393, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23748, 16), 8), SFXP(SBV(-24193, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57581, 16), 8), UFXP(BV(2176, 16), 8)), UFXP(BV(30686, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26285, 16), 8), SFXP(SBV(-27394, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12388, 16), 8), SFXP(SBV(-27415, 16), 8)), SFXP(SBV(-15909, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13455, 16), 8), UFXP(BV(23066, 16), 8)), UFXP(BV(55925, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49987, 16), 8), UFXP(BV(567, 16), 8)), UFXP(BV(45178, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-540, 16), 8), SFXP(SBV(-570, 16), 8)), SFXP(SBV(-1110, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10366, 16), 8), SFXP(SBV(-26529, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7656, 16), 8), UFXP(BV(58013, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3025, 16), 8), SFXP(SBV(-9559, 16), 8)), SFXP(SBV(-12584, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29466, 16), 8), UFXP(BV(80, 16), 8)), UFXP(BV(9209, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16037, 16), 8), SFXP(SBV(-18443, 16), 8)), SFXP(SBV(2406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26498, 16), 8), UFXP(BV(62911, 16), 8)), UFXP(BV(23873, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61364, 16), 8), UFXP(BV(41189, 16), 8)), UFXP(BV(20175, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6985, 16), 8), SFXP(SBV(8385, 16), 8)), SFXP(SBV(15370, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36150, 16), 8), UFXP(BV(34180, 16), 8)), UFXP(BV(4794, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26479, 16), 8), SFXP(SBV(-25300, 16), 8)), SFXP(SBV(1179, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7131, 16), 8), SFXP(SBV(3687, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38473, 16), 8), UFXP(BV(3873, 16), 8)), UFXP(BV(42346, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16328, 16), 8), SFXP(SBV(12278, 16), 8)), SFXP(SBV(28606, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58626, 16), 8), UFXP(BV(15511, 16), 8)), UFXP(BV(8601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(41392, 16), 8), UFXP(BV(40651, 16), 8)), UFXP(BV(19159, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1275, 16), 8), UFXP(BV(17047, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30680, 16), 8), SFXP(SBV(29298, 16), 8)), SFXP(SBV(27762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6249, 16), 8), SFXP(SBV(1843, 16), 8)), SFXP(SBV(8092, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30715, 16), 8), SFXP(SBV(19479, 16), 8)), SFXP(SBV(-11236, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9665, 16), 8), SFXP(SBV(30683, 16), 8)), SFXP(SBV(21244, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22334, 16), 8), UFXP(BV(59630, 16), 8)), UFXP(BV(24907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28643, 16), 8), UFXP(BV(52233, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7845, 16), 8), SFXP(SBV(18289, 16), 8)), SFXP(SBV(10444, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32716, 16), 8), SFXP(SBV(-30106, 16), 8)), SFXP(SBV(2610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8731, 16), 8), UFXP(BV(31325, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21291, 16), 8), UFXP(BV(1537, 16), 8)), UFXP(BV(22828, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16093, 16), 8), SFXP(SBV(-26775, 16), 8)), SFXP(SBV(-10682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27543, 16), 8), UFXP(BV(37669, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53248, 16), 8), UFXP(BV(5096, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15831, 16), 8), UFXP(BV(15928, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8557, 16), 8), SFXP(SBV(964, 16), 8)), SFXP(SBV(-9521, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3743, 16), 8), SFXP(SBV(23947, 16), 8)), SFXP(SBV(-20204, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60542, 16), 8), UFXP(BV(18611, 16), 8)), UFXP(BV(41931, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64720, 16), 8), UFXP(BV(9205, 16), 8)), UFXP(BV(8389, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10092, 16), 8), SFXP(SBV(10904, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28001, 16), 8), SFXP(SBV(17196, 16), 8)), SFXP(SBV(19665, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27801, 16), 8), SFXP(SBV(8932, 16), 8)), SFXP(SBV(18869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27600, 16), 8), SFXP(SBV(32201, 16), 8)), SFXP(SBV(-5735, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26219, 16), 8), SFXP(SBV(28133, 16), 8)), SFXP(SBV(-1914, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3382, 16), 8), UFXP(BV(33481, 16), 8)), UFXP(BV(49100, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4418, 16), 8), SFXP(SBV(-32637, 16), 8)), SFXP(SBV(-26580, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26022, 16), 8), SFXP(SBV(-937, 16), 8)), SFXP(SBV(-26959, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30879, 16), 8), SFXP(SBV(-13790, 16), 8)), SFXP(SBV(-24965, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21158, 16), 8), SFXP(SBV(-30413, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18202, 16), 8), UFXP(BV(20290, 16), 8)), UFXP(BV(38492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45817, 16), 8), UFXP(BV(7079, 16), 8)), UFXP(BV(52896, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17984, 16), 8), SFXP(SBV(11217, 16), 8)), SFXP(SBV(29201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13541, 16), 8), SFXP(SBV(-18511, 16), 8)), SFXP(SBV(4970, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23690, 16), 8), UFXP(BV(5605, 16), 8)), UFXP(BV(29295, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34699, 16), 8), UFXP(BV(45299, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25579, 16), 8), SFXP(SBV(-7787, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4569, 16), 8), SFXP(SBV(17298, 16), 8)), SFXP(SBV(12729, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41536, 16), 8), UFXP(BV(7671, 16), 8)), UFXP(BV(49207, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48319, 16), 8), UFXP(BV(4782, 16), 8)), UFXP(BV(50615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32108, 16), 8), SFXP(SBV(23547, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24437, 16), 8), SFXP(SBV(22911, 16), 8)), SFXP(SBV(24329, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10455, 16), 8), SFXP(SBV(9921, 16), 8)), SFXP(SBV(-20376, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32342, 16), 8), UFXP(BV(21598, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32653, 16), 8), UFXP(BV(22447, 16), 8)), UFXP(BV(55100, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42095, 16), 8), UFXP(BV(48588, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1622, 16), 8), UFXP(BV(10608, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2487, 16), 8), UFXP(BV(5503, 16), 8)), UFXP(BV(7990, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12550, 16), 8), UFXP(BV(15385, 16), 8)), UFXP(BV(27935, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15711, 16), 8), SFXP(SBV(20220, 16), 8)), SFXP(SBV(4509, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25586, 16), 8), UFXP(BV(57559, 16), 8)), UFXP(BV(33563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3282, 16), 8), SFXP(SBV(20515, 16), 8)), SFXP(SBV(-17233, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9580, 16), 8), SFXP(SBV(9340, 16), 8)), SFXP(SBV(18920, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13641, 16), 8), SFXP(SBV(27669, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8183, 16), 8), SFXP(SBV(-27062, 16), 8)), SFXP(SBV(-30291, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6846, 16), 8), SFXP(SBV(-7760, 16), 8)), SFXP(SBV(14606, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47986, 16), 8), UFXP(BV(63932, 16), 8)), UFXP(BV(46382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21126, 16), 8), SFXP(SBV(15201, 16), 8)), SFXP(SBV(9254, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63420, 16), 8), UFXP(BV(43545, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63926, 16), 8), UFXP(BV(28952, 16), 8)), UFXP(BV(20671, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61146, 16), 8), UFXP(BV(37968, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23951, 16), 8), SFXP(SBV(21312, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16449, 16), 8), SFXP(SBV(-644, 16), 8)), SFXP(SBV(17093, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42198, 16), 8), UFXP(BV(30872, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5017, 16), 8), SFXP(SBV(23033, 16), 8)), SFXP(SBV(18016, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8699, 16), 8), SFXP(SBV(-19565, 16), 8)), SFXP(SBV(-9467, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26530, 16), 8), SFXP(SBV(12951, 16), 8)), SFXP(SBV(-13579, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3220, 16), 8), UFXP(BV(17317, 16), 8)), UFXP(BV(51439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40529, 16), 8), UFXP(BV(64577, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27784, 16), 8), SFXP(SBV(11997, 16), 8)), SFXP(SBV(-25755, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21895, 16), 8), SFXP(SBV(-20637, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17892, 16), 8), SFXP(SBV(-31220, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-448, 16), 8), SFXP(SBV(2478, 16), 8)), SFXP(SBV(2030, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59787, 16), 8), UFXP(BV(46251, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16373, 16), 8), SFXP(SBV(6629, 16), 8)), SFXP(SBV(-23002, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19150, 16), 8), SFXP(SBV(1097, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21080, 16), 8), SFXP(SBV(-26601, 16), 8)), SFXP(SBV(-17855, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7846, 16), 8), UFXP(BV(27725, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18051, 16), 8), UFXP(BV(5605, 16), 8)), UFXP(BV(12446, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55292, 16), 8), UFXP(BV(41326, 16), 8)), UFXP(BV(31082, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13234, 16), 8), SFXP(SBV(-30945, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63024, 16), 8), UFXP(BV(17297, 16), 8)), UFXP(BV(14785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3097, 16), 8), SFXP(SBV(30962, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5404, 16), 8), SFXP(SBV(-31393, 16), 8)), SFXP(SBV(-7327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54098, 16), 8), UFXP(BV(53901, 16), 8)), UFXP(BV(52649, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13533, 16), 8), SFXP(SBV(-8373, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25313, 16), 8), SFXP(SBV(10962, 16), 8)), SFXP(SBV(-30201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26081, 16), 8), SFXP(SBV(21984, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20844, 16), 8), SFXP(SBV(17796, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22062, 16), 8), SFXP(SBV(-23748, 16), 8)), SFXP(SBV(14980, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57454, 16), 8), UFXP(BV(16698, 16), 8)), UFXP(BV(8616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1779, 16), 8), SFXP(SBV(15003, 16), 8)), SFXP(SBV(16782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52719, 16), 8), UFXP(BV(58971, 16), 8)), UFXP(BV(46154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31143, 16), 8), SFXP(SBV(24784, 16), 8)), SFXP(SBV(-9609, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44551, 16), 8), UFXP(BV(57412, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48226, 16), 8), UFXP(BV(50749, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22316, 16), 8), SFXP(SBV(-16682, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14895, 16), 8), SFXP(SBV(-26601, 16), 8)), SFXP(SBV(-25122, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26265, 16), 8), UFXP(BV(50295, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21685, 16), 8), SFXP(SBV(10672, 16), 8)), SFXP(SBV(13511, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(26977, 16), 8), SFXP(SBV(-25482, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41489, 16), 8), UFXP(BV(30117, 16), 8)), UFXP(BV(11372, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30525, 16), 8), SFXP(SBV(26144, 16), 8)), SFXP(SBV(4381, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6212, 16), 8), UFXP(BV(48023, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12096, 16), 8), SFXP(SBV(24835, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45435, 16), 8), UFXP(BV(59036, 16), 8)), UFXP(BV(51935, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15359, 16), 8), SFXP(SBV(26513, 16), 8)), SFXP(SBV(17813, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11186, 16), 8), SFXP(SBV(-16426, 16), 8)), SFXP(SBV(5240, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9376, 16), 8), SFXP(SBV(21379, 16), 8)), SFXP(SBV(30755, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27111, 16), 8), SFXP(SBV(-7731, 16), 8)), SFXP(SBV(-30694, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(152, 16), 8), SFXP(SBV(-20443, 16), 8)), SFXP(SBV(-12138, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64651, 16), 8), UFXP(BV(57180, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49260, 16), 8), UFXP(BV(50067, 16), 8)), UFXP(BV(194, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24808, 16), 8), SFXP(SBV(-9909, 16), 8)), SFXP(SBV(-22795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6768, 16), 8), UFXP(BV(54560, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6835, 16), 8), SFXP(SBV(-31258, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61724, 16), 8), UFXP(BV(60377, 16), 8)), UFXP(BV(8468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18586, 16), 8), UFXP(BV(15180, 16), 8)), UFXP(BV(3406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22276, 16), 8), UFXP(BV(50741, 16), 8)), UFXP(BV(7481, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(24959, 16), 8), UFXP(BV(39713, 16), 8)), UFXP(BV(5238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56855, 16), 8), UFXP(BV(44998, 16), 8)), UFXP(BV(11857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24854, 16), 8), SFXP(SBV(23081, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21811, 16), 8), SFXP(SBV(-12838, 16), 8)), SFXP(SBV(20324, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3699, 16), 8), SFXP(SBV(4473, 16), 8)), SFXP(SBV(774, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4482, 16), 8), SFXP(SBV(-6239, 16), 8)), SFXP(SBV(-10721, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14169, 16), 8), UFXP(BV(46801, 16), 8)), UFXP(BV(32904, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36072, 16), 8), UFXP(BV(61652, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28584, 16), 8), UFXP(BV(32523, 16), 8)), UFXP(BV(61597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5432, 16), 8), UFXP(BV(4517, 16), 8)), UFXP(BV(9949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46238, 16), 8), UFXP(BV(51704, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1900, 16), 8), SFXP(SBV(-9438, 16), 8)), SFXP(SBV(11338, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13362, 16), 8), SFXP(SBV(-15803, 16), 8)), SFXP(SBV(-29165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16589, 16), 8), SFXP(SBV(-20699, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14317, 16), 8), UFXP(BV(16058, 16), 8)), UFXP(BV(46089, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-644, 16), 8), SFXP(SBV(-27104, 16), 8)), SFXP(SBV(26460, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3822, 16), 8), SFXP(SBV(-18525, 16), 8)), SFXP(SBV(22347, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3172, 16), 8), SFXP(SBV(17154, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52264, 16), 8), UFXP(BV(27138, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8357, 16), 8), SFXP(SBV(18235, 16), 8)), SFXP(SBV(-26592, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23350, 16), 8), UFXP(BV(17773, 16), 8)), UFXP(BV(41123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21253, 16), 8), SFXP(SBV(18543, 16), 8)), SFXP(SBV(-2710, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18272, 16), 8), SFXP(SBV(-4132, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10744, 16), 8), SFXP(SBV(19455, 16), 8)), SFXP(SBV(30071, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54076, 16), 8), UFXP(BV(3380, 16), 8)), UFXP(BV(57456, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63320, 16), 8), UFXP(BV(34841, 16), 8)), UFXP(BV(32625, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32059, 16), 8), SFXP(SBV(23102, 16), 8)), SFXP(SBV(10375, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20068, 16), 8), UFXP(BV(59974, 16), 8)), UFXP(BV(48344, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62608, 16), 8), UFXP(BV(64043, 16), 8)), UFXP(BV(64948, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59596, 16), 8), UFXP(BV(47293, 16), 8)), UFXP(BV(65150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18238, 16), 8), UFXP(BV(20596, 16), 8)), UFXP(BV(38834, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8319, 16), 8), SFXP(SBV(-11084, 16), 8)), SFXP(SBV(-32506, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(8024, 16), 8), SFXP(SBV(17219, 16), 8)), SFXP(SBV(15420, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25792, 16), 8), SFXP(SBV(11140, 16), 8)), SFXP(SBV(-8243, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9841, 16), 8), SFXP(SBV(-180, 16), 8)), SFXP(SBV(-9661, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16889, 16), 8), SFXP(SBV(-9681, 16), 8)), SFXP(SBV(26570, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26799, 16), 8), SFXP(SBV(-224, 16), 8)), SFXP(SBV(23449, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39773, 16), 8), UFXP(BV(32885, 16), 8)), UFXP(BV(6888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12688, 16), 8), SFXP(SBV(7274, 16), 8)), SFXP(SBV(-19962, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33443, 16), 8), UFXP(BV(65513, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25824, 16), 8), SFXP(SBV(-15538, 16), 8)), SFXP(SBV(-24174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3284, 16), 8), SFXP(SBV(-29653, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2046, 16), 8), UFXP(BV(40905, 16), 8)), UFXP(BV(42951, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15782, 16), 8), UFXP(BV(900, 16), 8)), UFXP(BV(16682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58551, 16), 8), UFXP(BV(19169, 16), 8)), UFXP(BV(12184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2792, 16), 8), SFXP(SBV(177, 16), 8)), SFXP(SBV(-2615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9216, 16), 8), SFXP(SBV(30335, 16), 8)), SFXP(SBV(25985, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7496, 16), 8), SFXP(SBV(-17537, 16), 8)), SFXP(SBV(25033, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56564, 16), 8), UFXP(BV(7321, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3227, 16), 8), SFXP(SBV(4318, 16), 8)), SFXP(SBV(7545, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4512, 16), 8), SFXP(SBV(-23514, 16), 8)), SFXP(SBV(-19002, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43539, 16), 8), UFXP(BV(40519, 16), 8)), UFXP(BV(9957, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30095, 16), 8), UFXP(BV(14063, 16), 8)), UFXP(BV(16032, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33256, 16), 8), UFXP(BV(26802, 16), 8)), UFXP(BV(60058, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62408, 16), 8), UFXP(BV(17586, 16), 8)), UFXP(BV(44822, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54407, 16), 8), UFXP(BV(4302, 16), 8)), UFXP(BV(50105, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23941, 16), 8), UFXP(BV(46889, 16), 8)), UFXP(BV(59661, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7875, 16), 8), UFXP(BV(58975, 16), 8)), UFXP(BV(1314, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10361, 16), 8), SFXP(SBV(28246, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31731, 16), 8), SFXP(SBV(-10862, 16), 8)), SFXP(SBV(-20869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9319, 16), 8), SFXP(SBV(3353, 16), 8)), SFXP(SBV(12672, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12395, 16), 8), SFXP(SBV(1182, 16), 8)), SFXP(SBV(11213, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22692, 16), 8), SFXP(SBV(5140, 16), 8)), SFXP(SBV(-17552, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15926, 16), 8), UFXP(BV(1817, 16), 8)), UFXP(BV(17743, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56747, 16), 8), UFXP(BV(5479, 16), 8)), UFXP(BV(51268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42691, 16), 8), UFXP(BV(2796, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62312, 16), 8), UFXP(BV(31617, 16), 8)), UFXP(BV(30695, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21672, 16), 8), SFXP(SBV(16187, 16), 8)), SFXP(SBV(27677, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9941, 16), 8), SFXP(SBV(-8345, 16), 8)), SFXP(SBV(1596, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16557, 16), 8), SFXP(SBV(-12228, 16), 8)), SFXP(SBV(28785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3841, 16), 8), SFXP(SBV(23540, 16), 8)), SFXP(SBV(25511, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11450, 16), 8), UFXP(BV(41640, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30705, 16), 8), UFXP(BV(12061, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51680, 16), 8), UFXP(BV(22545, 16), 8)), UFXP(BV(29135, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54981, 16), 8), UFXP(BV(37146, 16), 8)), UFXP(BV(26591, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34793, 16), 8), UFXP(BV(30312, 16), 8)), UFXP(BV(56476, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24700, 16), 8), UFXP(BV(37742, 16), 8)), UFXP(BV(62442, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56278, 16), 8), UFXP(BV(3417, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34942, 16), 8), UFXP(BV(64048, 16), 8)), UFXP(BV(33454, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35768, 16), 8), UFXP(BV(25738, 16), 8)), UFXP(BV(61506, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(11877, 16), 8), SFXP(SBV(-21409, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16888, 16), 8), UFXP(BV(11508, 16), 8)), UFXP(BV(5380, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17361, 16), 8), SFXP(SBV(10358, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21334, 16), 8), SFXP(SBV(3475, 16), 8)), SFXP(SBV(24809, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16844, 16), 8), UFXP(BV(26838, 16), 8)), UFXP(BV(43682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16374, 16), 8), SFXP(SBV(9005, 16), 8)), SFXP(SBV(-25379, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56628, 16), 8), UFXP(BV(32247, 16), 8)), UFXP(BV(24381, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32097, 16), 8), SFXP(SBV(-29940, 16), 8)), SFXP(SBV(-2157, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41612, 16), 8), UFXP(BV(57265, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12882, 16), 8), SFXP(SBV(-4737, 16), 8)), SFXP(SBV(8145, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12318, 16), 8), SFXP(SBV(-29126, 16), 8)), SFXP(SBV(16808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27175, 16), 8), UFXP(BV(5160, 16), 8)), UFXP(BV(23459, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14987, 16), 8), UFXP(BV(52891, 16), 8)), UFXP(BV(16204, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4789, 16), 8), SFXP(SBV(-22141, 16), 8)), SFXP(SBV(20977, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17043, 16), 8), SFXP(SBV(-20487, 16), 8)), SFXP(SBV(28006, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12544, 16), 8), SFXP(SBV(17429, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42771, 16), 8), UFXP(BV(3221, 16), 8)), UFXP(BV(45992, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31861, 16), 8), SFXP(SBV(7889, 16), 8)), SFXP(SBV(-23972, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18854, 16), 8), UFXP(BV(29603, 16), 8)), UFXP(BV(17526, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58118, 16), 8), UFXP(BV(61565, 16), 8)), UFXP(BV(62089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51944, 16), 8), UFXP(BV(6325, 16), 8)), UFXP(BV(45619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27555, 16), 8), SFXP(SBV(-29021, 16), 8)), SFXP(SBV(-1466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57637, 16), 8), UFXP(BV(64326, 16), 8)), UFXP(BV(56427, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10343, 16), 8), UFXP(BV(43565, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29198, 16), 8), SFXP(SBV(27487, 16), 8)), SFXP(SBV(-8851, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18697, 16), 8), UFXP(BV(41354, 16), 8)), UFXP(BV(5640, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25274, 16), 8), UFXP(BV(7121, 16), 8)), UFXP(BV(32395, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8242, 16), 8), SFXP(SBV(-6728, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24951, 16), 8), UFXP(BV(32803, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13060, 16), 8), SFXP(SBV(-13254, 16), 8)), SFXP(SBV(-26314, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8209, 16), 8), UFXP(BV(289, 16), 8)), UFXP(BV(8498, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14199, 16), 8), SFXP(SBV(20067, 16), 8)), SFXP(SBV(-5868, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20374, 16), 8), UFXP(BV(21428, 16), 8)), UFXP(BV(41802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23348, 16), 8), SFXP(SBV(-29986, 16), 8)), SFXP(SBV(6638, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9597, 16), 8), SFXP(SBV(8682, 16), 8)), SFXP(SBV(-18279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18956, 16), 8), SFXP(SBV(-3164, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2128, 16), 8), UFXP(BV(44899, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14857, 16), 8), SFXP(SBV(6774, 16), 8)), SFXP(SBV(-21631, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30201, 16), 8), SFXP(SBV(10944, 16), 8)), SFXP(SBV(-19257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24088, 16), 8), SFXP(SBV(30999, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6542, 16), 8), UFXP(BV(9400, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10828, 16), 8), UFXP(BV(12359, 16), 8)), UFXP(BV(23187, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65074, 16), 8), UFXP(BV(26098, 16), 8)), UFXP(BV(38976, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21544, 16), 8), UFXP(BV(39574, 16), 8)), UFXP(BV(47506, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53868, 16), 8), UFXP(BV(2148, 16), 8)), UFXP(BV(51720, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25843, 16), 8), SFXP(SBV(-1562, 16), 8)), SFXP(SBV(26610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40916, 16), 8), UFXP(BV(47095, 16), 8)), UFXP(BV(56001, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16793, 16), 8), UFXP(BV(7802, 16), 8)), UFXP(BV(8991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58943, 16), 8), UFXP(BV(58208, 16), 8)), UFXP(BV(32821, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39756, 16), 8), UFXP(BV(29771, 16), 8)), UFXP(BV(9985, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16202, 16), 8), SFXP(SBV(-10376, 16), 8)), SFXP(SBV(-26578, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32869, 16), 8), UFXP(BV(61776, 16), 8)), UFXP(BV(1844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(32601, 16), 8), SFXP(SBV(-8797, 16), 8)), SFXP(SBV(-6166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1870, 16), 8), SFXP(SBV(-5705, 16), 8)), SFXP(SBV(3835, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29942, 16), 8), UFXP(BV(58870, 16), 8)), UFXP(BV(4210, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19082, 16), 8), SFXP(SBV(-21092, 16), 8)), SFXP(SBV(25362, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35282, 16), 8), UFXP(BV(19235, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3988, 16), 8), UFXP(BV(26842, 16), 8)), UFXP(BV(30830, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35152, 16), 8), UFXP(BV(45299, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46531, 16), 8), UFXP(BV(33884, 16), 8)), UFXP(BV(12647, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8738, 16), 8), UFXP(BV(50405, 16), 8)), UFXP(BV(59143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17848, 16), 8), SFXP(SBV(21978, 16), 8)), SFXP(SBV(25710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22768, 16), 8), UFXP(BV(53824, 16), 8)), UFXP(BV(2844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31462, 16), 8), SFXP(SBV(11119, 16), 8)), SFXP(SBV(20343, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32689, 16), 8), SFXP(SBV(12234, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12532, 16), 8), SFXP(SBV(27204, 16), 8)), SFXP(SBV(-14672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27821, 16), 8), UFXP(BV(38160, 16), 8)), UFXP(BV(18300, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12304, 16), 8), UFXP(BV(44825, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18012, 16), 8), UFXP(BV(51647, 16), 8)), UFXP(BV(29371, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19922, 16), 8), SFXP(SBV(9126, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2423, 16), 8), UFXP(BV(52936, 16), 8)), UFXP(BV(42279, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35378, 16), 8), UFXP(BV(43097, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26690, 16), 8), SFXP(SBV(-8736, 16), 8)), SFXP(SBV(-17954, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-12704, 16), 8), SFXP(SBV(-14773, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11045, 16), 8), UFXP(BV(23248, 16), 8)), UFXP(BV(34293, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(850, 16), 8), SFXP(SBV(-12551, 16), 8)), SFXP(SBV(-11701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30347, 16), 8), SFXP(SBV(-25427, 16), 8)), SFXP(SBV(-4920, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11197, 16), 8), SFXP(SBV(-9093, 16), 8)), SFXP(SBV(-20290, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18020, 16), 8), SFXP(SBV(-30613, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45128, 16), 8), UFXP(BV(36978, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6389, 16), 8), SFXP(SBV(-7134, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31290, 16), 8), SFXP(SBV(-9932, 16), 8)), SFXP(SBV(21358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25655, 16), 8), UFXP(BV(63478, 16), 8)), UFXP(BV(27713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6625, 16), 8), UFXP(BV(41284, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14733, 16), 8), UFXP(BV(12015, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2966, 16), 8), SFXP(SBV(32038, 16), 8)), SFXP(SBV(22025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37329, 16), 8), UFXP(BV(57668, 16), 8)), UFXP(BV(29461, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19763, 16), 8), SFXP(SBV(-28473, 16), 8)), SFXP(SBV(8710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8585, 16), 8), UFXP(BV(26399, 16), 8)), UFXP(BV(34984, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52522, 16), 8), UFXP(BV(33055, 16), 8)), UFXP(BV(31491, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(8671, 16), 8), SFXP(SBV(25550, 16), 8)), SFXP(SBV(13438, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27862, 16), 8), SFXP(SBV(15713, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27063, 16), 8), SFXP(SBV(3155, 16), 8)), SFXP(SBV(23908, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19092, 16), 8), UFXP(BV(53049, 16), 8)), UFXP(BV(31579, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31203, 16), 8), UFXP(BV(59533, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32767, 16), 8), UFXP(BV(60248, 16), 8)), UFXP(BV(27479, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45580, 16), 8), UFXP(BV(8463, 16), 8)), UFXP(BV(54043, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29824, 16), 8), SFXP(SBV(27585, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46808, 16), 8), UFXP(BV(34538, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58750, 16), 8), UFXP(BV(43009, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3112, 16), 8), UFXP(BV(18371, 16), 8)), UFXP(BV(21483, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54832, 16), 8), UFXP(BV(18136, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36111, 16), 8), UFXP(BV(53250, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31697, 16), 8), SFXP(SBV(11586, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37768, 16), 8), UFXP(BV(61085, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32618, 16), 8), UFXP(BV(64984, 16), 8)), UFXP(BV(33170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23035, 16), 8), SFXP(SBV(-3325, 16), 8)), SFXP(SBV(-19710, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3159, 16), 8), SFXP(SBV(18732, 16), 8)), SFXP(SBV(-15573, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22985, 16), 8), SFXP(SBV(25622, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11891, 16), 8), UFXP(BV(47486, 16), 8)), UFXP(BV(59377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(1106, 16), 8), SFXP(SBV(-31946, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28383, 16), 8), SFXP(SBV(1643, 16), 8)), SFXP(SBV(-26740, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27032, 16), 8), SFXP(SBV(15271, 16), 8)), SFXP(SBV(-11761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31133, 16), 8), SFXP(SBV(-30997, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35905, 16), 8), UFXP(BV(23402, 16), 8)), UFXP(BV(12503, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14460, 16), 8), SFXP(SBV(-24507, 16), 8)), SFXP(SBV(8007, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10701, 16), 8), SFXP(SBV(-28479, 16), 8)), SFXP(SBV(-26356, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49069, 16), 8), UFXP(BV(44243, 16), 8)), UFXP(BV(26168, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53742, 16), 8), UFXP(BV(52806, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26857, 16), 8), SFXP(SBV(-26816, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7697, 16), 8), UFXP(BV(37674, 16), 8)), UFXP(BV(45371, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8795, 16), 8), SFXP(SBV(18820, 16), 8)), SFXP(SBV(-8790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(41462, 16), 8), UFXP(BV(38775, 16), 8)), UFXP(BV(54116, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25372, 16), 8), SFXP(SBV(-27372, 16), 8)), SFXP(SBV(-2000, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5386, 16), 8), SFXP(SBV(5065, 16), 8)), SFXP(SBV(-321, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9060, 16), 8), UFXP(BV(36504, 16), 8)), UFXP(BV(45564, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26177, 16), 8), UFXP(BV(35733, 16), 8)), UFXP(BV(55980, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42589, 16), 8), UFXP(BV(51750, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14255, 16), 8), SFXP(SBV(31084, 16), 8)), SFXP(SBV(16829, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21604, 16), 8), UFXP(BV(27051, 16), 8)), UFXP(BV(54626, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29293, 16), 8), UFXP(BV(34345, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39171, 16), 8), UFXP(BV(16365, 16), 8)), UFXP(BV(55536, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50506, 16), 8), UFXP(BV(44211, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52600, 16), 8), UFXP(BV(54784, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7469, 16), 8), SFXP(SBV(24088, 16), 8)), SFXP(SBV(16619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28952, 16), 8), SFXP(SBV(-8731, 16), 8)), SFXP(SBV(20221, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24865, 16), 8), SFXP(SBV(1413, 16), 8)), SFXP(SBV(6171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23375, 16), 8), SFXP(SBV(-7685, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10012, 16), 8), UFXP(BV(41047, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2444, 16), 8), UFXP(BV(58963, 16), 8)), UFXP(BV(38625, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29178, 16), 8), SFXP(SBV(-11017, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40381, 16), 8), UFXP(BV(7125, 16), 8)), UFXP(BV(33256, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2866, 16), 8), UFXP(BV(64345, 16), 8)), UFXP(BV(65002, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6117, 16), 8), SFXP(SBV(-18717, 16), 8)), SFXP(SBV(24834, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(640, 16), 8), SFXP(SBV(24835, 16), 8)), SFXP(SBV(-24195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6876, 16), 8), SFXP(SBV(-7881, 16), 8)), SFXP(SBV(-1005, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18835, 16), 8), SFXP(SBV(-27052, 16), 8)), SFXP(SBV(19649, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18093, 16), 8), SFXP(SBV(23624, 16), 8)), SFXP(SBV(5531, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22778, 16), 8), SFXP(SBV(5876, 16), 8)), SFXP(SBV(16902, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28137, 16), 8), UFXP(BV(9092, 16), 8)), UFXP(BV(37229, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35409, 16), 8), UFXP(BV(28312, 16), 8)), UFXP(BV(63721, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14166, 16), 8), UFXP(BV(43669, 16), 8)), UFXP(BV(57169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5518, 16), 8), UFXP(BV(53099, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13845, 16), 8), UFXP(BV(8318, 16), 8)), UFXP(BV(22163, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35794, 16), 8), UFXP(BV(32020, 16), 8)), UFXP(BV(2278, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4158, 16), 8), UFXP(BV(17596, 16), 8)), UFXP(BV(23653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33092, 16), 8), UFXP(BV(61853, 16), 8)), UFXP(BV(75, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59735, 16), 8), UFXP(BV(46245, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61149, 16), 8), UFXP(BV(40709, 16), 8)), UFXP(BV(24558, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4964, 16), 8), UFXP(BV(21117, 16), 8)), UFXP(BV(26081, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27270, 16), 8), SFXP(SBV(-29944, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5478, 16), 8), UFXP(BV(29006, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7441, 16), 8), SFXP(SBV(1960, 16), 8)), SFXP(SBV(-9401, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(7727, 16), 8), UFXP(BV(42989, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28094, 16), 8), SFXP(SBV(-19748, 16), 8)), SFXP(SBV(-8346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16396, 16), 8), UFXP(BV(51094, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31598, 16), 8), UFXP(BV(45481, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7154, 16), 8), SFXP(SBV(-20657, 16), 8)), SFXP(SBV(-27811, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12604, 16), 8), SFXP(SBV(9418, 16), 8)), SFXP(SBV(-3186, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44524, 16), 8), UFXP(BV(26465, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13412, 16), 8), SFXP(SBV(-12509, 16), 8)), SFXP(SBV(-25921, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10496, 16), 8), SFXP(SBV(7038, 16), 8)), SFXP(SBV(3458, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32681, 16), 8), SFXP(SBV(13503, 16), 8)), SFXP(SBV(-19178, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11605, 16), 8), UFXP(BV(3955, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57872, 16), 8), UFXP(BV(42314, 16), 8)), UFXP(BV(34650, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10655, 16), 8), SFXP(SBV(-26824, 16), 8)), SFXP(SBV(16169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55811, 16), 8), UFXP(BV(37832, 16), 8)), UFXP(BV(17979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(303, 16), 8), SFXP(SBV(4218, 16), 8)), SFXP(SBV(-3915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36927, 16), 8), UFXP(BV(28263, 16), 8)), UFXP(BV(65190, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18451, 16), 8), UFXP(BV(63204, 16), 8)), UFXP(BV(16119, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27257, 16), 8), SFXP(SBV(32451, 16), 8)), SFXP(SBV(-5194, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14495, 16), 8), UFXP(BV(1030, 16), 8)), UFXP(BV(58320, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30771, 16), 8), SFXP(SBV(22575, 16), 8)), SFXP(SBV(-8196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19122, 16), 8), UFXP(BV(22163, 16), 8)), UFXP(BV(17072, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49773, 16), 8), UFXP(BV(15106, 16), 8)), UFXP(BV(53411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15958, 16), 8), SFXP(SBV(-13637, 16), 8)), SFXP(SBV(1892, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8132, 16), 8), SFXP(SBV(-21894, 16), 8)), SFXP(SBV(30026, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28793, 16), 8), SFXP(SBV(-14548, 16), 8)), SFXP(SBV(-14245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2038, 16), 8), UFXP(BV(50144, 16), 8)), UFXP(BV(17430, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49942, 16), 8), UFXP(BV(35031, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9246, 16), 8), SFXP(SBV(16023, 16), 8)), SFXP(SBV(25269, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39160, 16), 8), UFXP(BV(25550, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50735, 16), 8), UFXP(BV(10322, 16), 8)), UFXP(BV(61057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11478, 16), 8), SFXP(SBV(-4372, 16), 8)), SFXP(SBV(585, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29053, 16), 8), SFXP(SBV(-27751, 16), 8)), SFXP(SBV(8732, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22000, 16), 8), SFXP(SBV(-11403, 16), 8)), SFXP(SBV(-32133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19442, 16), 8), SFXP(SBV(-19661, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25333, 16), 8), SFXP(SBV(9838, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1164, 16), 8), SFXP(SBV(7468, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21936, 16), 8), UFXP(BV(10436, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(665, 16), 8), UFXP(BV(930, 16), 8)), UFXP(BV(2416, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33926, 16), 8), UFXP(BV(65047, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28566, 16), 8), UFXP(BV(15526, 16), 8)), UFXP(BV(13040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35222, 16), 8), UFXP(BV(41293, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7572, 16), 8), SFXP(SBV(-3202, 16), 8)), SFXP(SBV(-10774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53886, 16), 8), UFXP(BV(49494, 16), 8)), UFXP(BV(37844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26068, 16), 8), SFXP(SBV(8030, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-5926, 16), 8), SFXP(SBV(-5103, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21294, 16), 8), SFXP(SBV(-18520, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22388, 16), 8), UFXP(BV(50275, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45774, 16), 8), UFXP(BV(8407, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22607, 16), 8), SFXP(SBV(-26088, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18472, 16), 8), SFXP(SBV(-30179, 16), 8)), SFXP(SBV(-11707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3024, 16), 8), SFXP(SBV(-15234, 16), 8)), SFXP(SBV(-12210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24249, 16), 8), UFXP(BV(8853, 16), 8)), UFXP(BV(52148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9095, 16), 8), UFXP(BV(40427, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58561, 16), 8), UFXP(BV(46461, 16), 8)), UFXP(BV(12100, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45913, 16), 8), UFXP(BV(27619, 16), 8)), UFXP(BV(18294, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7897, 16), 8), SFXP(SBV(25403, 16), 8)), SFXP(SBV(2809, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(978, 16), 8), UFXP(BV(43392, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34753, 16), 8), UFXP(BV(34344, 16), 8)), UFXP(BV(409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12387, 16), 8), SFXP(SBV(-29879, 16), 8)), SFXP(SBV(23270, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11692, 16), 8), SFXP(SBV(28524, 16), 8)), SFXP(SBV(-16832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25012, 16), 8), UFXP(BV(20065, 16), 8)), UFXP(BV(45077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16174, 16), 8), SFXP(SBV(-18928, 16), 8)), SFXP(SBV(30434, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48971, 16), 8), UFXP(BV(26970, 16), 8)), UFXP(BV(22001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-12503, 16), 8), SFXP(SBV(17962, 16), 8)), SFXP(SBV(-25293, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4438, 16), 8), SFXP(SBV(9035, 16), 8)), SFXP(SBV(13473, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10514, 16), 8), SFXP(SBV(12655, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17400, 16), 8), SFXP(SBV(28078, 16), 8)), SFXP(SBV(20058, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30736, 16), 8), UFXP(BV(58523, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26359, 16), 8), SFXP(SBV(-20610, 16), 8)), SFXP(SBV(-5749, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10541, 16), 8), SFXP(SBV(25854, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50821, 16), 8), UFXP(BV(57356, 16), 8)), UFXP(BV(42641, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2308, 16), 8), UFXP(BV(43601, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39300, 16), 8), UFXP(BV(13736, 16), 8)), UFXP(BV(53036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49401, 16), 8), UFXP(BV(31622, 16), 8)), UFXP(BV(17779, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22286, 16), 8), SFXP(SBV(32338, 16), 8)), SFXP(SBV(-2874, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32727, 16), 8), SFXP(SBV(-21052, 16), 8)), SFXP(SBV(-11675, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22657, 16), 8), UFXP(BV(29573, 16), 8)), UFXP(BV(58620, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(8961, 16), 8), UFXP(BV(24838, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40986, 16), 8), UFXP(BV(13409, 16), 8)), UFXP(BV(27577, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22689, 16), 8), UFXP(BV(41751, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52691, 16), 8), UFXP(BV(49678, 16), 8)), UFXP(BV(3013, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27209, 16), 8), UFXP(BV(10765, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25025, 16), 8), SFXP(SBV(28430, 16), 8)), SFXP(SBV(3405, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29899, 16), 8), UFXP(BV(50612, 16), 8)), UFXP(BV(12886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29830, 16), 8), SFXP(SBV(-9569, 16), 8)), SFXP(SBV(20261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15887, 16), 8), SFXP(SBV(-3477, 16), 8)), SFXP(SBV(-12410, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(41483, 16), 8), UFXP(BV(50966, 16), 8)), UFXP(BV(1146, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28870, 16), 8), SFXP(SBV(-19869, 16), 8)), SFXP(SBV(-9001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6580, 16), 8), SFXP(SBV(-4544, 16), 8)), SFXP(SBV(-2036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(15419, 16), 8), UFXP(BV(4265, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26786, 16), 8), SFXP(SBV(24759, 16), 8)), SFXP(SBV(2027, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31975, 16), 8), SFXP(SBV(8509, 16), 8)), SFXP(SBV(-23466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22431, 16), 8), SFXP(SBV(-27293, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1709, 16), 8), SFXP(SBV(23158, 16), 8)), SFXP(SBV(-21449, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28541, 16), 8), SFXP(SBV(-16994, 16), 8)), SFXP(SBV(5912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11923, 16), 8), SFXP(SBV(27274, 16), 8)), SFXP(SBV(-15351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40102, 16), 8), UFXP(BV(883, 16), 8)), UFXP(BV(39219, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13401, 16), 8), SFXP(SBV(16856, 16), 8)), SFXP(SBV(30257, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23506, 16), 8), SFXP(SBV(-18428, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15413, 16), 8), SFXP(SBV(22140, 16), 8)), SFXP(SBV(-6727, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22229, 16), 8), SFXP(SBV(-15550, 16), 8)), SFXP(SBV(26018, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26942, 16), 8), SFXP(SBV(-2081, 16), 8)), SFXP(SBV(29023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27194, 16), 8), UFXP(BV(24726, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53875, 16), 8), UFXP(BV(9975, 16), 8)), UFXP(BV(43900, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28828, 16), 8), UFXP(BV(46319, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42539, 16), 8), UFXP(BV(54153, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62523, 16), 8), UFXP(BV(39817, 16), 8)), UFXP(BV(22706, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1071, 16), 8), SFXP(SBV(21700, 16), 8)), SFXP(SBV(-20629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(55147, 16), 8), UFXP(BV(31571, 16), 8)), UFXP(BV(50752, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11207, 16), 8), SFXP(SBV(29747, 16), 8)), SFXP(SBV(-8475, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3297, 16), 8), SFXP(SBV(8791, 16), 8)), SFXP(SBV(-5494, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47389, 16), 8), UFXP(BV(1475, 16), 8)), UFXP(BV(10898, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4684, 16), 8), SFXP(SBV(-22388, 16), 8)), SFXP(SBV(-17704, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28934, 16), 8), UFXP(BV(2684, 16), 8)), UFXP(BV(31618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63794, 16), 8), UFXP(BV(57129, 16), 8)), UFXP(BV(6665, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28883, 16), 8), SFXP(SBV(-27135, 16), 8)), SFXP(SBV(1748, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11009, 16), 8), SFXP(SBV(2065, 16), 8)), SFXP(SBV(-13074, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47676, 16), 8), UFXP(BV(47200, 16), 8)), UFXP(BV(29340, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53828, 16), 8), UFXP(BV(24851, 16), 8)), UFXP(BV(13143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24778, 16), 8), SFXP(SBV(7244, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3267, 16), 8), UFXP(BV(23824, 16), 8)), UFXP(BV(27091, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37441, 16), 8), UFXP(BV(61231, 16), 8)), UFXP(BV(42377, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47343, 16), 8), UFXP(BV(21241, 16), 8)), UFXP(BV(61550, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23165, 16), 8), SFXP(SBV(-14413, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24513, 16), 8), SFXP(SBV(-22204, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40351, 16), 8), UFXP(BV(3456, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24803, 16), 8), SFXP(SBV(-10048, 16), 8)), SFXP(SBV(-9523, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49792, 16), 8), UFXP(BV(34364, 16), 8)), UFXP(BV(18620, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24837, 16), 8), SFXP(SBV(-12188, 16), 8)), SFXP(SBV(-28511, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25053, 16), 8), UFXP(BV(56907, 16), 8)), UFXP(BV(16424, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11696, 16), 8), SFXP(SBV(-18665, 16), 8)), SFXP(SBV(6969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42073, 16), 8), UFXP(BV(63781, 16), 8)), UFXP(BV(43828, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-673, 16), 8), SFXP(SBV(-24856, 16), 8)), SFXP(SBV(24183, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31569, 16), 8), UFXP(BV(31496, 16), 8)), UFXP(BV(73, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55641, 16), 8), UFXP(BV(35889, 16), 8)), UFXP(BV(25994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50389, 16), 8), UFXP(BV(14596, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38556, 16), 8), UFXP(BV(54775, 16), 8)), UFXP(BV(27795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50650, 16), 8), UFXP(BV(32924, 16), 8)), UFXP(BV(17726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3628, 16), 8), SFXP(SBV(-14150, 16), 8)), SFXP(SBV(10522, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19827, 16), 8), SFXP(SBV(-14412, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23196, 16), 8), SFXP(SBV(-25802, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57030, 16), 8), UFXP(BV(31280, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5258, 16), 8), UFXP(BV(37246, 16), 8)), UFXP(BV(42504, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7525, 16), 8), UFXP(BV(33600, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25536, 16), 8), SFXP(SBV(28995, 16), 8)), SFXP(SBV(-11005, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37023, 16), 8), UFXP(BV(54588, 16), 8)), UFXP(BV(30257, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33870, 16), 8), UFXP(BV(46609, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38990, 16), 8), UFXP(BV(28142, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20673, 16), 8), SFXP(SBV(20919, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1491, 16), 8), SFXP(SBV(25125, 16), 8)), SFXP(SBV(-26616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8221, 16), 8), SFXP(SBV(-32291, 16), 8)), SFXP(SBV(25024, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43810, 16), 8), UFXP(BV(54094, 16), 8)), UFXP(BV(55252, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8126, 16), 8), SFXP(SBV(-16902, 16), 8)), SFXP(SBV(25028, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26175, 16), 8), SFXP(SBV(21036, 16), 8)), SFXP(SBV(11840, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5864, 16), 8), SFXP(SBV(29280, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10409, 16), 8), SFXP(SBV(-25146, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23312, 16), 8), SFXP(SBV(10735, 16), 8)), SFXP(SBV(12577, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16397, 16), 8), SFXP(SBV(-4760, 16), 8)), SFXP(SBV(-21157, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1781, 16), 8), SFXP(SBV(29089, 16), 8)), SFXP(SBV(-30870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13709, 16), 8), UFXP(BV(12576, 16), 8)), UFXP(BV(1133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4620, 16), 8), SFXP(SBV(28026, 16), 8)), SFXP(SBV(32646, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28035, 16), 8), SFXP(SBV(15225, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53081, 16), 8), UFXP(BV(42448, 16), 8)), UFXP(BV(19669, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8492, 16), 8), UFXP(BV(53768, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7129, 16), 8), UFXP(BV(55730, 16), 8)), UFXP(BV(62859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4169, 16), 8), UFXP(BV(57368, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28736, 16), 8), UFXP(BV(59961, 16), 8)), UFXP(BV(23161, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18015, 16), 8), UFXP(BV(37687, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2418, 16), 8), UFXP(BV(35062, 16), 8)), UFXP(BV(37480, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(925, 16), 8), SFXP(SBV(-10092, 16), 8)), SFXP(SBV(29071, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(620, 16), 8), UFXP(BV(54318, 16), 8)), UFXP(BV(11838, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18958, 16), 8), UFXP(BV(25809, 16), 8)), UFXP(BV(44767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5712, 16), 8), SFXP(SBV(24435, 16), 8)), SFXP(SBV(-30147, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26498, 16), 8), SFXP(SBV(-14062, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6680, 16), 8), UFXP(BV(17105, 16), 8)), UFXP(BV(53117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41456, 16), 8), UFXP(BV(63664, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28499, 16), 8), SFXP(SBV(1255, 16), 8)), SFXP(SBV(-27244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16215, 16), 8), SFXP(SBV(14900, 16), 8)), SFXP(SBV(-31115, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61355, 16), 8), UFXP(BV(15671, 16), 8)), UFXP(BV(45684, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25982, 16), 8), SFXP(SBV(-17022, 16), 8)), SFXP(SBV(-8960, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25480, 16), 8), SFXP(SBV(-23870, 16), 8)), SFXP(SBV(-1610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52033, 16), 8), UFXP(BV(53522, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14113, 16), 8), SFXP(SBV(21690, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3372, 16), 8), UFXP(BV(12373, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2487, 16), 8), SFXP(SBV(-11799, 16), 8)), SFXP(SBV(-9312, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(315, 16), 8), UFXP(BV(63103, 16), 8)), UFXP(BV(12110, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4204, 16), 8), SFXP(SBV(32297, 16), 8)), SFXP(SBV(29035, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37867, 16), 8), UFXP(BV(25502, 16), 8)), UFXP(BV(12365, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38509, 16), 8), UFXP(BV(53980, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27209, 16), 8), SFXP(SBV(7217, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51694, 16), 8), UFXP(BV(20841, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49058, 16), 8), UFXP(BV(57852, 16), 8)), UFXP(BV(56742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16250, 16), 8), UFXP(BV(40614, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6567, 16), 8), SFXP(SBV(-23740, 16), 8)), SFXP(SBV(30307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24457, 16), 8), SFXP(SBV(2217, 16), 8)), SFXP(SBV(22240, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9851, 16), 8), SFXP(SBV(-28568, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45885, 16), 8), UFXP(BV(544, 16), 8)), UFXP(BV(46429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59314, 16), 8), UFXP(BV(3117, 16), 8)), UFXP(BV(62431, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19347, 16), 8), SFXP(SBV(26268, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5694, 16), 8), UFXP(BV(50673, 16), 8)), UFXP(BV(56367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15568, 16), 8), SFXP(SBV(-27524, 16), 8)), SFXP(SBV(30133, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64657, 16), 8), UFXP(BV(20919, 16), 8)), UFXP(BV(20040, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13901, 16), 8), SFXP(SBV(-27413, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31122, 16), 8), SFXP(SBV(3095, 16), 8)), SFXP(SBV(28027, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44243, 16), 8), UFXP(BV(52082, 16), 8)), UFXP(BV(57697, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55216, 16), 8), UFXP(BV(57982, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7642, 16), 8), SFXP(SBV(16701, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24976, 16), 8), SFXP(SBV(25260, 16), 8)), SFXP(SBV(-284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26035, 16), 8), UFXP(BV(10225, 16), 8)), UFXP(BV(36260, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22756, 16), 8), UFXP(BV(13622, 16), 8)), UFXP(BV(9134, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5917, 16), 8), SFXP(SBV(-4188, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27877, 16), 8), SFXP(SBV(18593, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-93, 16), 8), SFXP(SBV(21008, 16), 8)), SFXP(SBV(-21101, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37153, 16), 8), UFXP(BV(47419, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29598, 16), 8), UFXP(BV(48025, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49765, 16), 8), UFXP(BV(23990, 16), 8)), UFXP(BV(8219, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12599, 16), 8), SFXP(SBV(862, 16), 8)), SFXP(SBV(-13461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52012, 16), 8), UFXP(BV(13227, 16), 8)), UFXP(BV(38785, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51305, 16), 8), UFXP(BV(2961, 16), 8)), UFXP(BV(54266, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12249, 16), 8), SFXP(SBV(-25085, 16), 8)), SFXP(SBV(-12836, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4307, 16), 8), UFXP(BV(52160, 16), 8)), UFXP(BV(17683, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3362, 16), 8), UFXP(BV(35796, 16), 8)), UFXP(BV(39158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32534, 16), 8), SFXP(SBV(-3577, 16), 8)), SFXP(SBV(-28957, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31437, 16), 8), UFXP(BV(17543, 16), 8)), UFXP(BV(57143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(962, 16), 8), UFXP(BV(53942, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56615, 16), 8), UFXP(BV(46713, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14253, 16), 8), SFXP(SBV(-25726, 16), 8)), SFXP(SBV(25557, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11178, 16), 8), SFXP(SBV(10428, 16), 8)), SFXP(SBV(-3424, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28537, 16), 8), SFXP(SBV(-22095, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64606, 16), 8), UFXP(BV(6148, 16), 8)), UFXP(BV(5218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10746, 16), 8), SFXP(SBV(32767, 16), 8)), SFXP(SBV(-22021, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37705, 16), 8), UFXP(BV(15671, 16), 8)), UFXP(BV(53376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1318, 16), 8), SFXP(SBV(523, 16), 8)), SFXP(SBV(2692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-532, 16), 8), SFXP(SBV(18927, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21116, 16), 8), SFXP(SBV(-9359, 16), 8)), SFXP(SBV(-14460, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21229, 16), 8), SFXP(SBV(-19970, 16), 8)), SFXP(SBV(-17628, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26780, 16), 8), UFXP(BV(64890, 16), 8)), UFXP(BV(27426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63923, 16), 8), UFXP(BV(12101, 16), 8)), UFXP(BV(10488, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8024, 16), 8), SFXP(SBV(-14313, 16), 8)), SFXP(SBV(-22337, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7478, 16), 8), SFXP(SBV(23172, 16), 8)), SFXP(SBV(-15694, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19234, 16), 8), UFXP(BV(42338, 16), 8)), UFXP(BV(35246, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25561, 16), 8), SFXP(SBV(-23659, 16), 8)), SFXP(SBV(16316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49838, 16), 8), UFXP(BV(27477, 16), 8)), UFXP(BV(22361, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20994, 16), 8), SFXP(SBV(25813, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2406, 16), 8), SFXP(SBV(-28362, 16), 8)), SFXP(SBV(30768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8022, 16), 8), SFXP(SBV(6934, 16), 8)), SFXP(SBV(-1088, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32133, 16), 8), SFXP(SBV(-21616, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29248, 16), 8), SFXP(SBV(8025, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13034, 16), 8), SFXP(SBV(-18779, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2920, 16), 8), SFXP(SBV(18950, 16), 8)), SFXP(SBV(16030, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25434, 16), 8), UFXP(BV(4285, 16), 8)), UFXP(BV(21149, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16069, 16), 8), SFXP(SBV(24079, 16), 8)), SFXP(SBV(-8010, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54745, 16), 8), UFXP(BV(59118, 16), 8)), UFXP(BV(48327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50470, 16), 8), UFXP(BV(18099, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42085, 16), 8), UFXP(BV(61022, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19854, 16), 8), SFXP(SBV(-25872, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15083, 16), 8), SFXP(SBV(5359, 16), 8)), SFXP(SBV(-9724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20376, 16), 8), SFXP(SBV(5325, 16), 8)), SFXP(SBV(25701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2953, 16), 8), SFXP(SBV(7736, 16), 8)), SFXP(SBV(4783, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23922, 16), 8), SFXP(SBV(3635, 16), 8)), SFXP(SBV(-27557, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-185, 16), 8), SFXP(SBV(-24926, 16), 8)), SFXP(SBV(24741, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16813, 16), 8), SFXP(SBV(-7426, 16), 8)), SFXP(SBV(-28956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3282, 16), 8), SFXP(SBV(9078, 16), 8)), SFXP(SBV(-5796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22744, 16), 8), SFXP(SBV(1106, 16), 8)), SFXP(SBV(32726, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51852, 16), 8), UFXP(BV(54548, 16), 8)), UFXP(BV(40864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57274, 16), 8), UFXP(BV(15745, 16), 8)), UFXP(BV(49166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24732, 16), 8), SFXP(SBV(-15351, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32631, 16), 8), SFXP(SBV(15731, 16), 8)), SFXP(SBV(16900, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12370, 16), 8), SFXP(SBV(24665, 16), 8)), SFXP(SBV(-28501, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11026, 16), 8), SFXP(SBV(-8182, 16), 8)), SFXP(SBV(24722, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53254, 16), 8), UFXP(BV(61536, 16), 8)), UFXP(BV(21410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7812, 16), 8), SFXP(SBV(-15470, 16), 8)), SFXP(SBV(-23282, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25325, 16), 8), SFXP(SBV(29648, 16), 8)), SFXP(SBV(-10563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12972, 16), 8), SFXP(SBV(10056, 16), 8)), SFXP(SBV(23028, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21374, 16), 8), SFXP(SBV(-11039, 16), 8)), SFXP(SBV(-32413, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4755, 16), 8), UFXP(BV(62869, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39763, 16), 8), UFXP(BV(61997, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5630, 16), 8), SFXP(SBV(-26097, 16), 8)), SFXP(SBV(31727, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58969, 16), 8), UFXP(BV(33428, 16), 8)), UFXP(BV(25541, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3714, 16), 8), SFXP(SBV(25067, 16), 8)), SFXP(SBV(-29549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14398, 16), 8), SFXP(SBV(-28238, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28454, 16), 8), UFXP(BV(61009, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32058, 16), 8), SFXP(SBV(-14706, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6756, 16), 8), UFXP(BV(9579, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23513, 16), 8), SFXP(SBV(-452, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27856, 16), 8), UFXP(BV(56261, 16), 8)), UFXP(BV(18581, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5774, 16), 8), SFXP(SBV(25249, 16), 8)), SFXP(SBV(19475, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22581, 16), 8), SFXP(SBV(15425, 16), 8)), SFXP(SBV(-15662, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22878, 16), 8), UFXP(BV(64529, 16), 8)), UFXP(BV(65143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26063, 16), 8), SFXP(SBV(-29829, 16), 8)), SFXP(SBV(3766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56343, 16), 8), UFXP(BV(50012, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6519, 16), 8), SFXP(SBV(-10393, 16), 8)), SFXP(SBV(-3874, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49031, 16), 8), UFXP(BV(31094, 16), 8)), UFXP(BV(17937, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22295, 16), 8), SFXP(SBV(-3210, 16), 8)), SFXP(SBV(-19085, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35052, 16), 8), UFXP(BV(45510, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7260, 16), 8), SFXP(SBV(13723, 16), 8)), SFXP(SBV(-6463, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13803, 16), 8), SFXP(SBV(-21202, 16), 8)), SFXP(SBV(29057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14403, 16), 8), SFXP(SBV(19568, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16645, 16), 8), UFXP(BV(57153, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1319, 16), 8), SFXP(SBV(3367, 16), 8)), SFXP(SBV(-4686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58498, 16), 8), UFXP(BV(31747, 16), 8)), UFXP(BV(26751, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(15949, 16), 8), UFXP(BV(5685, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28420, 16), 8), SFXP(SBV(-16374, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13536, 16), 8), UFXP(BV(51465, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52522, 16), 8), UFXP(BV(44069, 16), 8)), UFXP(BV(62943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34842, 16), 8), UFXP(BV(37165, 16), 8)), UFXP(BV(6471, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23796, 16), 8), UFXP(BV(65017, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20248, 16), 8), SFXP(SBV(125, 16), 8)), SFXP(SBV(-9886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56138, 16), 8), UFXP(BV(12648, 16), 8)), UFXP(BV(21056, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62044, 16), 8), UFXP(BV(25655, 16), 8)), UFXP(BV(57346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38136, 16), 8), UFXP(BV(30469, 16), 8)), UFXP(BV(16944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2092, 16), 8), UFXP(BV(32451, 16), 8)), UFXP(BV(3042, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4054, 16), 8), UFXP(BV(1530, 16), 8)), UFXP(BV(5584, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35008, 16), 8), UFXP(BV(62636, 16), 8)), UFXP(BV(45793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14659, 16), 8), UFXP(BV(52057, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57341, 16), 8), UFXP(BV(63194, 16), 8)), UFXP(BV(54999, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24794, 16), 8), UFXP(BV(26832, 16), 8)), UFXP(BV(63498, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52677, 16), 8), UFXP(BV(62424, 16), 8)), UFXP(BV(65437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65417, 16), 8), UFXP(BV(1743, 16), 8)), UFXP(BV(1624, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30366, 16), 8), SFXP(SBV(-19202, 16), 8)), SFXP(SBV(15968, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30944, 16), 8), SFXP(SBV(25532, 16), 8)), SFXP(SBV(-5412, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54039, 16), 8), UFXP(BV(49900, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30367, 16), 8), UFXP(BV(41332, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13123, 16), 8), UFXP(BV(6647, 16), 8)), UFXP(BV(6476, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61475, 16), 8), UFXP(BV(4761, 16), 8)), UFXP(BV(56714, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8041, 16), 8), SFXP(SBV(26766, 16), 8)), SFXP(SBV(18725, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60067, 16), 8), UFXP(BV(25330, 16), 8)), UFXP(BV(19861, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25925, 16), 8), UFXP(BV(29092, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3459, 16), 8), SFXP(SBV(32653, 16), 8)), SFXP(SBV(-17554, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18481, 16), 8), SFXP(SBV(17774, 16), 8)), SFXP(SBV(-27590, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27610, 16), 8), UFXP(BV(39820, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44326, 16), 8), UFXP(BV(26871, 16), 8)), UFXP(BV(17455, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19719, 16), 8), SFXP(SBV(10629, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48645, 16), 8), UFXP(BV(27850, 16), 8)), UFXP(BV(49163, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22188, 16), 8), SFXP(SBV(-15575, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14272, 16), 8), SFXP(SBV(-19881, 16), 8)), SFXP(SBV(-5747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49515, 16), 8), UFXP(BV(22902, 16), 8)), UFXP(BV(26613, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28749, 16), 8), SFXP(SBV(12011, 16), 8)), SFXP(SBV(16738, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44116, 16), 8), UFXP(BV(36895, 16), 8)), UFXP(BV(1055, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35921, 16), 8), UFXP(BV(12405, 16), 8)), UFXP(BV(48326, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7514, 16), 8), SFXP(SBV(15580, 16), 8)), SFXP(SBV(-23094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12864, 16), 8), UFXP(BV(31757, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7044, 16), 8), UFXP(BV(19747, 16), 8)), UFXP(BV(52833, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1658, 16), 8), UFXP(BV(2076, 16), 8)), UFXP(BV(3734, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60746, 16), 8), UFXP(BV(53610, 16), 8)), UFXP(BV(7082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40330, 16), 8), UFXP(BV(9237, 16), 8)), UFXP(BV(31093, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21087, 16), 8), SFXP(SBV(27286, 16), 8)), SFXP(SBV(17163, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36077, 16), 8), UFXP(BV(48584, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44756, 16), 8), UFXP(BV(11625, 16), 8)), UFXP(BV(56381, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7098, 16), 8), SFXP(SBV(335, 16), 8)), SFXP(SBV(-6763, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18013, 16), 8), SFXP(SBV(-21699, 16), 8)), SFXP(SBV(25824, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(594, 16), 8), UFXP(BV(44240, 16), 8)), UFXP(BV(21890, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26595, 16), 8), SFXP(SBV(27693, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14429, 16), 8), UFXP(BV(4226, 16), 8)), UFXP(BV(41583, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24535, 16), 8), SFXP(SBV(17698, 16), 8)), SFXP(SBV(-6837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32541, 16), 8), UFXP(BV(4997, 16), 8)), UFXP(BV(37538, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14308, 16), 8), UFXP(BV(42245, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43361, 16), 8), UFXP(BV(11065, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65052, 16), 8), UFXP(BV(51231, 16), 8)), UFXP(BV(13821, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16202, 16), 8), SFXP(SBV(-13757, 16), 8)), SFXP(SBV(29959, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25338, 16), 8), SFXP(SBV(19779, 16), 8)), SFXP(SBV(-5559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49096, 16), 8), UFXP(BV(62569, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15844, 16), 8), UFXP(BV(35501, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31137, 16), 8), SFXP(SBV(-31927, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29118, 16), 8), SFXP(SBV(-7851, 16), 8)), SFXP(SBV(21267, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39721, 16), 8), UFXP(BV(44402, 16), 8)), UFXP(BV(8142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37031, 16), 8), UFXP(BV(6122, 16), 8)), UFXP(BV(43153, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2533, 16), 8), SFXP(SBV(-15421, 16), 8)), SFXP(SBV(-17954, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26959, 16), 8), SFXP(SBV(5994, 16), 8)), SFXP(SBV(-32583, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19189, 16), 8), SFXP(SBV(15433, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1099, 16), 8), UFXP(BV(31299, 16), 8)), UFXP(BV(35336, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62493, 16), 8), UFXP(BV(39572, 16), 8)), UFXP(BV(26259, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21638, 16), 8), SFXP(SBV(25549, 16), 8)), SFXP(SBV(-3911, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54276, 16), 8), UFXP(BV(10213, 16), 8)), UFXP(BV(64489, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31579, 16), 8), UFXP(BV(49212, 16), 8)), UFXP(BV(41258, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40552, 16), 8), UFXP(BV(15665, 16), 8)), UFXP(BV(56217, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6691, 16), 8), SFXP(SBV(30167, 16), 8)), SFXP(SBV(-28678, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62442, 16), 8), UFXP(BV(31168, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14479, 16), 8), UFXP(BV(30318, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42695, 16), 8), UFXP(BV(9492, 16), 8)), UFXP(BV(33203, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31221, 16), 8), SFXP(SBV(28776, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23557, 16), 8), SFXP(SBV(-29321, 16), 8)), SFXP(SBV(12658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23430, 16), 8), SFXP(SBV(-12888, 16), 8)), SFXP(SBV(-10542, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17027, 16), 8), SFXP(SBV(7916, 16), 8)), SFXP(SBV(-9111, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10309, 16), 8), SFXP(SBV(31596, 16), 8)), SFXP(SBV(-21287, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4872, 16), 8), SFXP(SBV(-7223, 16), 8)), SFXP(SBV(-2351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22668, 16), 8), UFXP(BV(38754, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29582, 16), 8), UFXP(BV(32408, 16), 8)), UFXP(BV(61990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4039, 16), 8), SFXP(SBV(21529, 16), 8)), SFXP(SBV(25568, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1345, 16), 8), SFXP(SBV(-18590, 16), 8)), SFXP(SBV(-32135, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17882, 16), 8), SFXP(SBV(-32298, 16), 8)), SFXP(SBV(14416, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26701, 16), 8), SFXP(SBV(-10905, 16), 8)), SFXP(SBV(23288, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26022, 16), 8), SFXP(SBV(-20874, 16), 8)), SFXP(SBV(24657, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34219, 16), 8), UFXP(BV(47042, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35627, 16), 8), UFXP(BV(8247, 16), 8)), UFXP(BV(33606, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12409, 16), 8), UFXP(BV(5384, 16), 8)), UFXP(BV(7025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28038, 16), 8), UFXP(BV(23837, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19637, 16), 8), SFXP(SBV(32058, 16), 8)), SFXP(SBV(-12421, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14138, 16), 8), SFXP(SBV(30742, 16), 8)), SFXP(SBV(-16604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7939, 16), 8), SFXP(SBV(-24881, 16), 8)), SFXP(SBV(-16942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18637, 16), 8), UFXP(BV(21845, 16), 8)), UFXP(BV(62328, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21481, 16), 8), SFXP(SBV(-1602, 16), 8)), SFXP(SBV(-19879, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56704, 16), 8), UFXP(BV(32950, 16), 8)), UFXP(BV(23754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51938, 16), 8), UFXP(BV(9276, 16), 8)), UFXP(BV(46932, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4856, 16), 8), SFXP(SBV(-3051, 16), 8)), SFXP(SBV(-7907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20835, 16), 8), SFXP(SBV(-12353, 16), 8)), SFXP(SBV(8482, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-9026, 16), 8), SFXP(SBV(-21282, 16), 8)), SFXP(SBV(29461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50821, 16), 8), UFXP(BV(21302, 16), 8)), UFXP(BV(29519, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1304, 16), 8), SFXP(SBV(1741, 16), 8)), SFXP(SBV(437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10792, 16), 8), UFXP(BV(15078, 16), 8)), UFXP(BV(45807, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55394, 16), 8), UFXP(BV(40950, 16), 8)), UFXP(BV(14444, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15944, 16), 8), SFXP(SBV(214, 16), 8)), SFXP(SBV(16158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30613, 16), 8), SFXP(SBV(2311, 16), 8)), SFXP(SBV(32612, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25092, 16), 8), UFXP(BV(21735, 16), 8)), UFXP(BV(46827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19313, 16), 8), UFXP(BV(3299, 16), 8)), UFXP(BV(16014, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63253, 16), 8), UFXP(BV(4441, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44451, 16), 8), UFXP(BV(59256, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19890, 16), 8), UFXP(BV(7930, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22618, 16), 8), SFXP(SBV(-19902, 16), 8)), SFXP(SBV(-2716, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9222, 16), 8), UFXP(BV(54016, 16), 8)), UFXP(BV(20742, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13420, 16), 8), SFXP(SBV(-25279, 16), 8)), SFXP(SBV(11859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5606, 16), 8), SFXP(SBV(22782, 16), 8)), SFXP(SBV(17176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28806, 16), 8), SFXP(SBV(-26542, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38987, 16), 8), UFXP(BV(19236, 16), 8)), UFXP(BV(45924, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31318, 16), 8), SFXP(SBV(-1896, 16), 8)), SFXP(SBV(-29422, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3337, 16), 8), UFXP(BV(17997, 16), 8)), UFXP(BV(50876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31222, 16), 8), SFXP(SBV(15940, 16), 8)), SFXP(SBV(22023, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3752, 16), 8), SFXP(SBV(21902, 16), 8)), SFXP(SBV(-18150, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-23860, 16), 8), SFXP(SBV(-12768, 16), 8)), SFXP(SBV(10369, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23842, 16), 8), SFXP(SBV(9014, 16), 8)), SFXP(SBV(12469, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14126, 16), 8), SFXP(SBV(-28875, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21804, 16), 8), SFXP(SBV(9019, 16), 8)), SFXP(SBV(-30823, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11901, 16), 8), SFXP(SBV(31834, 16), 8)), SFXP(SBV(19933, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26863, 16), 8), UFXP(BV(22046, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9962, 16), 8), UFXP(BV(65496, 16), 8)), UFXP(BV(10002, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32898, 16), 8), UFXP(BV(3313, 16), 8)), UFXP(BV(36211, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31196, 16), 8), SFXP(SBV(-22283, 16), 8)), SFXP(SBV(-8913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11324, 16), 8), SFXP(SBV(32717, 16), 8)), SFXP(SBV(-21393, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10118, 16), 8), SFXP(SBV(-25335, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62174, 16), 8), UFXP(BV(27535, 16), 8)), UFXP(BV(2676, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15303, 16), 8), UFXP(BV(3208, 16), 8)), UFXP(BV(12095, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10878, 16), 8), UFXP(BV(35232, 16), 8)), UFXP(BV(46110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36129, 16), 8), UFXP(BV(54985, 16), 8)), UFXP(BV(25578, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28883, 16), 8), SFXP(SBV(-21450, 16), 8)), SFXP(SBV(4752, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64478, 16), 8), UFXP(BV(5034, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37594, 16), 8), UFXP(BV(21939, 16), 8)), UFXP(BV(10513, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18410, 16), 8), UFXP(BV(8555, 16), 8)), UFXP(BV(25401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23534, 16), 8), SFXP(SBV(31707, 16), 8)), SFXP(SBV(10295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18405, 16), 8), SFXP(SBV(-20328, 16), 8)), SFXP(SBV(26803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22277, 16), 8), SFXP(SBV(2019, 16), 8)), SFXP(SBV(24296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25137, 16), 8), SFXP(SBV(8, 16), 8)), SFXP(SBV(-25129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9760, 16), 8), SFXP(SBV(13485, 16), 8)), SFXP(SBV(3725, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11839, 16), 8), SFXP(SBV(19088, 16), 8)), SFXP(SBV(30778, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17992, 16), 8), SFXP(SBV(-116, 16), 8)), SFXP(SBV(-8152, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18819, 16), 8), SFXP(SBV(6782, 16), 8)), SFXP(SBV(-25601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31966, 16), 8), UFXP(BV(19315, 16), 8)), UFXP(BV(52514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16879, 16), 8), UFXP(BV(41132, 16), 8)), UFXP(BV(25004, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30243, 16), 8), SFXP(SBV(-18695, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18823, 16), 8), SFXP(SBV(13208, 16), 8)), SFXP(SBV(5615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15326, 16), 8), SFXP(SBV(-19136, 16), 8)), SFXP(SBV(31074, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55265, 16), 8), UFXP(BV(877, 16), 8)), UFXP(BV(56142, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13369, 16), 8), SFXP(SBV(-7858, 16), 8)), SFXP(SBV(-21227, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7210, 16), 8), UFXP(BV(43560, 16), 8)), UFXP(BV(50770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25741, 16), 8), SFXP(SBV(-3739, 16), 8)), SFXP(SBV(-29480, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15638, 16), 8), UFXP(BV(41697, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18964, 16), 8), SFXP(SBV(3274, 16), 8)), SFXP(SBV(22238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64192, 16), 8), UFXP(BV(25035, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15742, 16), 8), UFXP(BV(64330, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7991, 16), 8), UFXP(BV(24464, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28851, 16), 8), SFXP(SBV(-14171, 16), 8)), SFXP(SBV(22514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32525, 16), 8), UFXP(BV(43852, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64106, 16), 8), UFXP(BV(11106, 16), 8)), UFXP(BV(53000, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22494, 16), 8), UFXP(BV(17887, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21122, 16), 8), SFXP(SBV(12138, 16), 8)), SFXP(SBV(-18439, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9497, 16), 8), SFXP(SBV(25535, 16), 8)), SFXP(SBV(16038, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26353, 16), 8), SFXP(SBV(-9598, 16), 8)), SFXP(SBV(29585, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23308, 16), 8), UFXP(BV(46494, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6937, 16), 8), UFXP(BV(52732, 16), 8)), UFXP(BV(59669, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21338, 16), 8), SFXP(SBV(15017, 16), 8)), SFXP(SBV(-6321, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1278, 16), 8), UFXP(BV(29395, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19875, 16), 8), SFXP(SBV(-19867, 16), 8)), SFXP(SBV(8, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21102, 16), 8), UFXP(BV(38583, 16), 8)), UFXP(BV(34656, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30554, 16), 8), SFXP(SBV(-11823, 16), 8)), SFXP(SBV(18731, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48460, 16), 8), UFXP(BV(64315, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6892, 16), 8), UFXP(BV(61649, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(60233, 16), 8), UFXP(BV(26463, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41224, 16), 8), UFXP(BV(55405, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31575, 16), 8), UFXP(BV(33316, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(844, 16), 8), SFXP(SBV(-4739, 16), 8)), SFXP(SBV(5583, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33366, 16), 8), UFXP(BV(59234, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31786, 16), 8), SFXP(SBV(-14329, 16), 8)), SFXP(SBV(17457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1325, 16), 8), UFXP(BV(57034, 16), 8)), UFXP(BV(9827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10699, 16), 8), UFXP(BV(61837, 16), 8)), UFXP(BV(14398, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28912, 16), 8), SFXP(SBV(-25310, 16), 8)), SFXP(SBV(25136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60471, 16), 8), UFXP(BV(2895, 16), 8)), UFXP(BV(63366, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9318, 16), 8), UFXP(BV(60879, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42164, 16), 8), UFXP(BV(42819, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18792, 16), 8), SFXP(SBV(-20239, 16), 8)), SFXP(SBV(-21659, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(831, 16), 8), UFXP(BV(58190, 16), 8)), UFXP(BV(57818, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14747, 16), 8), SFXP(SBV(23977, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3357, 16), 8), SFXP(SBV(30748, 16), 8)), SFXP(SBV(-31431, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(550, 16), 8), SFXP(SBV(23322, 16), 8)), SFXP(SBV(23872, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-536, 16), 8), SFXP(SBV(-18109, 16), 8)), SFXP(SBV(-27621, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19027, 16), 8), SFXP(SBV(26673, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61965, 16), 8), UFXP(BV(53181, 16), 8)), UFXP(BV(8784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27291, 16), 8), UFXP(BV(18551, 16), 8)), UFXP(BV(45842, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15705, 16), 8), SFXP(SBV(22362, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23978, 16), 8), SFXP(SBV(27254, 16), 8)), SFXP(SBV(-3276, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9875, 16), 8), SFXP(SBV(32056, 16), 8)), SFXP(SBV(23605, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15885, 16), 8), SFXP(SBV(-24868, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6188, 16), 8), SFXP(SBV(-25517, 16), 8)), SFXP(SBV(-31705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18834, 16), 8), UFXP(BV(46006, 16), 8)), UFXP(BV(64840, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18691, 16), 8), SFXP(SBV(29742, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18176, 16), 8), SFXP(SBV(3994, 16), 8)), SFXP(SBV(-21430, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33089, 16), 8), UFXP(BV(39850, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9585, 16), 8), SFXP(SBV(-8861, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21348, 16), 8), SFXP(SBV(-12638, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25537, 16), 8), SFXP(SBV(-5921, 16), 8)), SFXP(SBV(19616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18587, 16), 8), SFXP(SBV(31226, 16), 8)), SFXP(SBV(15723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(32209, 16), 8), SFXP(SBV(29916, 16), 8)), SFXP(SBV(28372, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21129, 16), 8), SFXP(SBV(19673, 16), 8)), SFXP(SBV(-14686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32419, 16), 8), UFXP(BV(30030, 16), 8)), UFXP(BV(62449, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19406, 16), 8), UFXP(BV(13080, 16), 8)), UFXP(BV(8485, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59835, 16), 8), UFXP(BV(43909, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24529, 16), 8), SFXP(SBV(-18863, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49454, 16), 8), UFXP(BV(7582, 16), 8)), UFXP(BV(41872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25360, 16), 8), UFXP(BV(44240, 16), 8)), UFXP(BV(57149, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6192, 16), 8), SFXP(SBV(20873, 16), 8)), SFXP(SBV(14681, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15719, 16), 8), SFXP(SBV(24933, 16), 8)), SFXP(SBV(-23617, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(64742, 16), 8), UFXP(BV(63279, 16), 8)), UFXP(BV(12377, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7376, 16), 8), UFXP(BV(40652, 16), 8)), UFXP(BV(32260, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49786, 16), 8), UFXP(BV(34368, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18520, 16), 8), UFXP(BV(7043, 16), 8)), UFXP(BV(25563, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54181, 16), 8), UFXP(BV(3159, 16), 8)), UFXP(BV(57340, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(27628, 16), 8), SFXP(SBV(19047, 16), 8)), SFXP(SBV(23971, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38731, 16), 8), UFXP(BV(43161, 16), 8)), UFXP(BV(16356, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22905, 16), 8), SFXP(SBV(17667, 16), 8)), SFXP(SBV(-7850, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9703, 16), 8), UFXP(BV(34370, 16), 8)), UFXP(BV(44073, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28710, 16), 8), SFXP(SBV(-6690, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21958, 16), 8), SFXP(SBV(-10723, 16), 8)), SFXP(SBV(-32681, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-4024, 16), 8), SFXP(SBV(18546, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26600, 16), 8), SFXP(SBV(31807, 16), 8)), SFXP(SBV(-7129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4348, 16), 8), SFXP(SBV(22175, 16), 8)), SFXP(SBV(-17827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49033, 16), 8), UFXP(BV(61389, 16), 8)), UFXP(BV(27207, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59644, 16), 8), UFXP(BV(12257, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16197, 16), 8), SFXP(SBV(-11901, 16), 8)), SFXP(SBV(-4296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26657, 16), 8), SFXP(SBV(22529, 16), 8)), SFXP(SBV(-4128, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14901, 16), 8), SFXP(SBV(-18996, 16), 8)), SFXP(SBV(8411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20431, 16), 8), SFXP(SBV(8868, 16), 8)), SFXP(SBV(-11563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5020, 16), 8), SFXP(SBV(-14885, 16), 8)), SFXP(SBV(-19905, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45197, 16), 8), UFXP(BV(25070, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18582, 16), 8), SFXP(SBV(22598, 16), 8)), SFXP(SBV(-4016, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53863, 16), 8), UFXP(BV(668, 16), 8)), UFXP(BV(54531, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28999, 16), 8), SFXP(SBV(-8050, 16), 8)), SFXP(SBV(28487, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49880, 16), 8), UFXP(BV(17579, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32401, 16), 8), UFXP(BV(41257, 16), 8)), UFXP(BV(8122, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(689, 16), 8), SFXP(SBV(29014, 16), 8)), SFXP(SBV(29703, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21739, 16), 8), UFXP(BV(60654, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26407, 16), 8), SFXP(SBV(-25741, 16), 8)), SFXP(SBV(666, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49124, 16), 8), UFXP(BV(42411, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44030, 16), 8), UFXP(BV(1166, 16), 8)), UFXP(BV(42864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55469, 16), 8), UFXP(BV(4613, 16), 8)), UFXP(BV(60082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61403, 16), 8), UFXP(BV(43784, 16), 8)), UFXP(BV(16072, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19370, 16), 8), UFXP(BV(35093, 16), 8)), UFXP(BV(54463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63538, 16), 8), UFXP(BV(15798, 16), 8)), UFXP(BV(54365, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17361, 16), 8), UFXP(BV(53605, 16), 8)), UFXP(BV(30818, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15611, 16), 8), SFXP(SBV(6445, 16), 8)), SFXP(SBV(9166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14105, 16), 8), SFXP(SBV(-20758, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-511, 16), 8), SFXP(SBV(21110, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34916, 16), 8), UFXP(BV(4672, 16), 8)), UFXP(BV(39588, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1648, 16), 8), SFXP(SBV(-21934, 16), 8)), SFXP(SBV(-23582, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35435, 16), 8), UFXP(BV(46219, 16), 8)), UFXP(BV(16118, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36138, 16), 8), UFXP(BV(62840, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4636, 16), 8), UFXP(BV(25162, 16), 8)), UFXP(BV(45010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12875, 16), 8), SFXP(SBV(12290, 16), 8)), SFXP(SBV(585, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60680, 16), 8), UFXP(BV(15968, 16), 8)), UFXP(BV(49363, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9952, 16), 8), SFXP(SBV(-22277, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14915, 16), 8), SFXP(SBV(-12713, 16), 8)), SFXP(SBV(-27628, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46351, 16), 8), UFXP(BV(57942, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8564, 16), 8), UFXP(BV(5710, 16), 8)), UFXP(BV(2854, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7456, 16), 8), UFXP(BV(4526, 16), 8)), UFXP(BV(11982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63055, 16), 8), UFXP(BV(57278, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31548, 16), 8), SFXP(SBV(-21603, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25041, 16), 8), SFXP(SBV(-13341, 16), 8)), SFXP(SBV(-27154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18267, 16), 8), SFXP(SBV(-31310, 16), 8)), SFXP(SBV(-13043, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15109, 16), 8), UFXP(BV(37560, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13719, 16), 8), UFXP(BV(47018, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14, 16), 8), SFXP(SBV(-6112, 16), 8)), SFXP(SBV(-6098, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15574, 16), 8), UFXP(BV(31139, 16), 8)), UFXP(BV(49971, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38377, 16), 8), UFXP(BV(56230, 16), 8)), UFXP(BV(40840, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31728, 16), 8), UFXP(BV(19493, 16), 8)), UFXP(BV(12235, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22969, 16), 8), SFXP(SBV(24481, 16), 8)), SFXP(SBV(-1512, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27971, 16), 8), SFXP(SBV(-13517, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59256, 16), 8), UFXP(BV(59349, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19755, 16), 8), SFXP(SBV(5326, 16), 8)), SFXP(SBV(-25081, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63759, 16), 8), UFXP(BV(62578, 16), 8)), UFXP(BV(1181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3193, 16), 8), UFXP(BV(634, 16), 8)), UFXP(BV(2559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14017, 16), 8), SFXP(SBV(-7607, 16), 8)), SFXP(SBV(-21624, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15713, 16), 8), SFXP(SBV(-4302, 16), 8)), SFXP(SBV(1909, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12074, 16), 8), UFXP(BV(60014, 16), 8)), UFXP(BV(12456, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34845, 16), 8), UFXP(BV(59415, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28105, 16), 8), SFXP(SBV(-23633, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11567, 16), 8), SFXP(SBV(18991, 16), 8)), SFXP(SBV(30558, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(618, 16), 8), UFXP(BV(4452, 16), 8)), UFXP(BV(61702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46271, 16), 8), UFXP(BV(34543, 16), 8)), UFXP(BV(17593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64065, 16), 8), UFXP(BV(49200, 16), 8)), UFXP(BV(14865, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2076, 16), 8), UFXP(BV(20246, 16), 8)), UFXP(BV(22322, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25333, 16), 8), SFXP(SBV(-15234, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25333, 16), 8), SFXP(SBV(3121, 16), 8)), SFXP(SBV(28454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30842, 16), 8), SFXP(SBV(31483, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20211, 16), 8), UFXP(BV(25632, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1027, 16), 8), SFXP(SBV(-32360, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47503, 16), 8), UFXP(BV(46482, 16), 8)), UFXP(BV(1021, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8533, 16), 8), SFXP(SBV(4449, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18009, 16), 8), UFXP(BV(9630, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29991, 16), 8), SFXP(SBV(-18773, 16), 8)), SFXP(SBV(28924, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52252, 16), 8), UFXP(BV(52982, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3971, 16), 8), SFXP(SBV(-6724, 16), 8)), SFXP(SBV(10695, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17130, 16), 8), SFXP(SBV(26684, 16), 8)), SFXP(SBV(-16063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14558, 16), 8), SFXP(SBV(3047, 16), 8)), SFXP(SBV(-17605, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34934, 16), 8), UFXP(BV(63852, 16), 8)), UFXP(BV(36618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41606, 16), 8), UFXP(BV(37333, 16), 8)), UFXP(BV(13403, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12995, 16), 8), UFXP(BV(46665, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21407, 16), 8), UFXP(BV(20416, 16), 8)), UFXP(BV(3273, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53743, 16), 8), UFXP(BV(30953, 16), 8)), UFXP(BV(22790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54286, 16), 8), UFXP(BV(29537, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41287, 16), 8), UFXP(BV(17956, 16), 8)), UFXP(BV(23331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(600, 16), 8), UFXP(BV(31411, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54591, 16), 8), UFXP(BV(64917, 16), 8)), UFXP(BV(53972, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10497, 16), 8), UFXP(BV(2082, 16), 8)), UFXP(BV(19835, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9938, 16), 8), SFXP(SBV(21556, 16), 8)), SFXP(SBV(-31494, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47094, 16), 8), UFXP(BV(23727, 16), 8)), UFXP(BV(5285, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9167, 16), 8), SFXP(SBV(-16444, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29214, 16), 8), SFXP(SBV(-29435, 16), 8)), SFXP(SBV(-221, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(586, 16), 8), SFXP(SBV(-20271, 16), 8)), SFXP(SBV(20857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5411, 16), 8), SFXP(SBV(28337, 16), 8)), SFXP(SBV(22926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55635, 16), 8), UFXP(BV(28037, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30728, 16), 8), SFXP(SBV(11631, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16770, 16), 8), SFXP(SBV(-32195, 16), 8)), SFXP(SBV(-15425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57917, 16), 8), UFXP(BV(11180, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31653, 16), 8), SFXP(SBV(19339, 16), 8)), SFXP(SBV(12314, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17025, 16), 8), SFXP(SBV(17089, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33371, 16), 8), UFXP(BV(25526, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30805, 16), 8), UFXP(BV(19835, 16), 8)), UFXP(BV(27490, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45932, 16), 8), UFXP(BV(4317, 16), 8)), UFXP(BV(41615, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63568, 16), 8), UFXP(BV(24834, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63253, 16), 8), UFXP(BV(47847, 16), 8)), UFXP(BV(45564, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32802, 16), 8), UFXP(BV(40679, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24961, 16), 8), SFXP(SBV(-7257, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32650, 16), 8), SFXP(SBV(-29280, 16), 8)), SFXP(SBV(3370, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49871, 16), 8), UFXP(BV(50710, 16), 8)), UFXP(BV(48343, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28817, 16), 8), SFXP(SBV(-20993, 16), 8)), SFXP(SBV(-3811, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6968, 16), 8), SFXP(SBV(-27480, 16), 8)), SFXP(SBV(31088, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5393, 16), 8), SFXP(SBV(24362, 16), 8)), SFXP(SBV(18969, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5413, 16), 8), SFXP(SBV(-23182, 16), 8)), SFXP(SBV(-28595, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45763, 16), 8), UFXP(BV(38406, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31273, 16), 8), UFXP(BV(28176, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16234, 16), 8), SFXP(SBV(18730, 16), 8)), SFXP(SBV(-8098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20449, 16), 8), SFXP(SBV(-21507, 16), 8)), SFXP(SBV(-14020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6583, 16), 8), SFXP(SBV(-29945, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9032, 16), 8), SFXP(SBV(22557, 16), 8)), SFXP(SBV(31589, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14770, 16), 8), UFXP(BV(23519, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28619, 16), 8), SFXP(SBV(-25242, 16), 8)), SFXP(SBV(-3377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21719, 16), 8), SFXP(SBV(13648, 16), 8)), SFXP(SBV(-21754, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3480, 16), 8), SFXP(SBV(-14186, 16), 8)), SFXP(SBV(10706, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24649, 16), 8), UFXP(BV(21273, 16), 8)), UFXP(BV(45922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26384, 16), 8), SFXP(SBV(2463, 16), 8)), SFXP(SBV(-28847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14675, 16), 8), UFXP(BV(28316, 16), 8)), UFXP(BV(50329, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57357, 16), 8), UFXP(BV(31133, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11224, 16), 8), UFXP(BV(39306, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51693, 16), 8), UFXP(BV(64531, 16), 8)), UFXP(BV(54344, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10520, 16), 8), UFXP(BV(61694, 16), 8)), UFXP(BV(44870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33394, 16), 8), UFXP(BV(3945, 16), 8)), UFXP(BV(29449, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60533, 16), 8), UFXP(BV(61364, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9611, 16), 8), SFXP(SBV(23797, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28170, 16), 8), SFXP(SBV(12175, 16), 8)), SFXP(SBV(-15995, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13142, 16), 8), UFXP(BV(25051, 16), 8)), UFXP(BV(40832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38872, 16), 8), UFXP(BV(1393, 16), 8)), UFXP(BV(37479, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30102, 16), 8), SFXP(SBV(12454, 16), 8)), SFXP(SBV(-17648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22745, 16), 8), SFXP(SBV(7541, 16), 8)), SFXP(SBV(-14640, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35526, 16), 8), UFXP(BV(21335, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10138, 16), 8), SFXP(SBV(31386, 16), 8)), SFXP(SBV(-21248, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8514, 16), 8), SFXP(SBV(-15772, 16), 8)), SFXP(SBV(7258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5515, 16), 8), SFXP(SBV(-13456, 16), 8)), SFXP(SBV(7941, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20483, 16), 8), SFXP(SBV(31300, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21639, 16), 8), SFXP(SBV(-12508, 16), 8)), SFXP(SBV(9131, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3749, 16), 8), UFXP(BV(59950, 16), 8)), UFXP(BV(9335, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54537, 16), 8), UFXP(BV(74, 16), 8)), UFXP(BV(15765, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9472, 16), 8), UFXP(BV(62300, 16), 8)), UFXP(BV(11340, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13164, 16), 8), SFXP(SBV(-333, 16), 8)), SFXP(SBV(12831, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1320, 16), 8), SFXP(SBV(28310, 16), 8)), SFXP(SBV(26990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28316, 16), 8), SFXP(SBV(19701, 16), 8)), SFXP(SBV(17519, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38772, 16), 8), UFXP(BV(3684, 16), 8)), UFXP(BV(35088, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24580, 16), 8), SFXP(SBV(401, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17556, 16), 8), UFXP(BV(38510, 16), 8)), UFXP(BV(19504, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23555, 16), 8), UFXP(BV(42814, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42729, 16), 8), UFXP(BV(21348, 16), 8)), UFXP(BV(21381, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(16567, 16), 8), SFXP(SBV(-12300, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4524, 16), 8), SFXP(SBV(11150, 16), 8)), SFXP(SBV(15674, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24076, 16), 8), SFXP(SBV(-31136, 16), 8)), SFXP(SBV(-20877, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28572, 16), 8), SFXP(SBV(2130, 16), 8)), SFXP(SBV(-26442, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32255, 16), 8), SFXP(SBV(-21474, 16), 8)), SFXP(SBV(11807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19394, 16), 8), SFXP(SBV(18205, 16), 8)), SFXP(SBV(1189, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18097, 16), 8), UFXP(BV(28132, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10496, 16), 8), SFXP(SBV(29117, 16), 8)), SFXP(SBV(-18621, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40511, 16), 8), UFXP(BV(10390, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8537, 16), 8), UFXP(BV(51407, 16), 8)), UFXP(BV(59944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3413, 16), 8), SFXP(SBV(-29626, 16), 8)), SFXP(SBV(26213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19143, 16), 8), UFXP(BV(27984, 16), 8)), UFXP(BV(60953, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(853, 16), 8), SFXP(SBV(17599, 16), 8)), SFXP(SBV(18452, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17845, 16), 8), SFXP(SBV(-21599, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29286, 16), 8), SFXP(SBV(-30858, 16), 8)), SFXP(SBV(-5392, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6816, 16), 8), UFXP(BV(23885, 16), 8)), UFXP(BV(30701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8619, 16), 8), SFXP(SBV(30888, 16), 8)), SFXP(SBV(22269, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38858, 16), 8), UFXP(BV(5095, 16), 8)), UFXP(BV(43953, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13971, 16), 8), SFXP(SBV(9296, 16), 8)), SFXP(SBV(16967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24691, 16), 8), SFXP(SBV(16726, 16), 8)), SFXP(SBV(7965, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23688, 16), 8), UFXP(BV(28635, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52809, 16), 8), UFXP(BV(31368, 16), 8)), UFXP(BV(48225, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20426, 16), 8), SFXP(SBV(-7965, 16), 8)), SFXP(SBV(12461, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14752, 16), 8), SFXP(SBV(-10858, 16), 8)), SFXP(SBV(3894, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23715, 16), 8), SFXP(SBV(23225, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13320, 16), 8), UFXP(BV(64746, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63727, 16), 8), UFXP(BV(54960, 16), 8)), UFXP(BV(8767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-263, 16), 8), SFXP(SBV(18854, 16), 8)), SFXP(SBV(-19117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14055, 16), 8), UFXP(BV(61076, 16), 8)), UFXP(BV(9595, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11928, 16), 8), SFXP(SBV(-11701, 16), 8)), SFXP(SBV(-23629, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27720, 16), 8), SFXP(SBV(27546, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26182, 16), 8), SFXP(SBV(9023, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31726, 16), 8), SFXP(SBV(-9905, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3058, 16), 8), SFXP(SBV(25072, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22402, 16), 8), SFXP(SBV(-25374, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54560, 16), 8), UFXP(BV(34441, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(1913, 16), 8), SFXP(SBV(-19090, 16), 8)), SFXP(SBV(-11581, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22827, 16), 8), SFXP(SBV(27904, 16), 8)), SFXP(SBV(-14805, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3027, 16), 8), SFXP(SBV(-20528, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4625, 16), 8), UFXP(BV(64976, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12325, 16), 8), UFXP(BV(57438, 16), 8)), UFXP(BV(12814, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40245, 16), 8), UFXP(BV(29369, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(2199, 16), 8), SFXP(SBV(19835, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(32108, 16), 8), SFXP(SBV(21549, 16), 8)), SFXP(SBV(15740, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12330, 16), 8), UFXP(BV(3653, 16), 8)), UFXP(BV(15983, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31581, 16), 8), SFXP(SBV(-7165, 16), 8)), SFXP(SBV(24416, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18245, 16), 8), SFXP(SBV(-32205, 16), 8)), SFXP(SBV(13960, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4702, 16), 8), UFXP(BV(51843, 16), 8)), UFXP(BV(56545, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46218, 16), 8), UFXP(BV(51149, 16), 8)), UFXP(BV(31831, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56095, 16), 8), UFXP(BV(27313, 16), 8)), UFXP(BV(21078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30275, 16), 8), SFXP(SBV(12840, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17029, 16), 8), SFXP(SBV(10145, 16), 8)), SFXP(SBV(-27174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3657, 16), 8), UFXP(BV(20488, 16), 8)), UFXP(BV(48705, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25993, 16), 8), SFXP(SBV(-3032, 16), 8)), SFXP(SBV(-29025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43065, 16), 8), UFXP(BV(7774, 16), 8)), UFXP(BV(35291, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46471, 16), 8), UFXP(BV(48720, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52987, 16), 8), UFXP(BV(50827, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26234, 16), 8), UFXP(BV(50480, 16), 8)), UFXP(BV(11178, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58543, 16), 8), UFXP(BV(49351, 16), 8)), UFXP(BV(9192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4319, 16), 8), SFXP(SBV(32442, 16), 8)), SFXP(SBV(23044, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24632, 16), 8), UFXP(BV(33239, 16), 8)), UFXP(BV(56929, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7980, 16), 8), UFXP(BV(58137, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19478, 16), 8), UFXP(BV(25689, 16), 8)), UFXP(BV(54028, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8551, 16), 8), SFXP(SBV(8886, 16), 8)), SFXP(SBV(17437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(26105, 16), 8), UFXP(BV(38060, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2532, 16), 8), SFXP(SBV(12416, 16), 8)), SFXP(SBV(14948, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43960, 16), 8), UFXP(BV(42460, 16), 8)), UFXP(BV(1500, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28320, 16), 8), UFXP(BV(21234, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35583, 16), 8), UFXP(BV(14583, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62399, 16), 8), UFXP(BV(64240, 16), 8)), UFXP(BV(60682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21490, 16), 8), UFXP(BV(37391, 16), 8)), UFXP(BV(58881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6310, 16), 8), SFXP(SBV(21761, 16), 8)), SFXP(SBV(28071, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9511, 16), 8), SFXP(SBV(23560, 16), 8)), SFXP(SBV(14049, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36045, 16), 8), UFXP(BV(63757, 16), 8)), UFXP(BV(64140, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3101, 16), 8), SFXP(SBV(15439, 16), 8)), SFXP(SBV(-9591, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10204, 16), 8), SFXP(SBV(30004, 16), 8)), SFXP(SBV(25328, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24348, 16), 8), SFXP(SBV(-16564, 16), 8)), SFXP(SBV(24624, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25312, 16), 8), SFXP(SBV(17987, 16), 8)), SFXP(SBV(7325, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20413, 16), 8), UFXP(BV(376, 16), 8)), UFXP(BV(20037, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9289, 16), 8), SFXP(SBV(22429, 16), 8)), SFXP(SBV(-31718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27209, 16), 8), SFXP(SBV(-13155, 16), 8)), SFXP(SBV(14054, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7650, 16), 8), UFXP(BV(37580, 16), 8)), UFXP(BV(8885, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-922, 16), 8), SFXP(SBV(-22512, 16), 8)), SFXP(SBV(-23434, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6565, 16), 8), UFXP(BV(24609, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10492, 16), 8), UFXP(BV(51754, 16), 8)), UFXP(BV(24274, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(46023, 16), 8), UFXP(BV(18702, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31447, 16), 8), SFXP(SBV(-15739, 16), 8)), SFXP(SBV(-15708, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14091, 16), 8), SFXP(SBV(22715, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9165, 16), 8), SFXP(SBV(-25128, 16), 8)), SFXP(SBV(-15963, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24429, 16), 8), SFXP(SBV(1103, 16), 8)), SFXP(SBV(-23326, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58150, 16), 8), UFXP(BV(62524, 16), 8)), UFXP(BV(46453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-18084, 16), 8), SFXP(SBV(-1005, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13831, 16), 8), UFXP(BV(64724, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64821, 16), 8), UFXP(BV(52411, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18488, 16), 8), SFXP(SBV(-21263, 16), 8)), SFXP(SBV(-2775, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41875, 16), 8), UFXP(BV(19326, 16), 8)), UFXP(BV(61201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27316, 16), 8), SFXP(SBV(-10039, 16), 8)), SFXP(SBV(28181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6845, 16), 8), SFXP(SBV(-8276, 16), 8)), SFXP(SBV(1431, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3501, 16), 8), SFXP(SBV(-24840, 16), 8)), SFXP(SBV(-12027, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12932, 16), 8), UFXP(BV(145, 16), 8)), UFXP(BV(12787, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31760, 16), 8), SFXP(SBV(-19123, 16), 8)), SFXP(SBV(14653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28381, 16), 8), UFXP(BV(27082, 16), 8)), UFXP(BV(55463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39237, 16), 8), UFXP(BV(62602, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59479, 16), 8), UFXP(BV(21686, 16), 8)), UFXP(BV(57785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30709, 16), 8), SFXP(SBV(11295, 16), 8)), SFXP(SBV(-19414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10166, 16), 8), UFXP(BV(49296, 16), 8)), UFXP(BV(57047, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15016, 16), 8), UFXP(BV(27369, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4773, 16), 8), SFXP(SBV(16006, 16), 8)), SFXP(SBV(20779, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11780, 16), 8), SFXP(SBV(-2716, 16), 8)), SFXP(SBV(9064, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28529, 16), 8), SFXP(SBV(-10650, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48100, 16), 8), UFXP(BV(40961, 16), 8)), UFXP(BV(7139, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30884, 16), 8), UFXP(BV(53436, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12126, 16), 8), SFXP(SBV(23046, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15996, 16), 8), UFXP(BV(31980, 16), 8)), UFXP(BV(32170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14906, 16), 8), SFXP(SBV(21819, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10672, 16), 8), UFXP(BV(21840, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23482, 16), 8), SFXP(SBV(10, 16), 8)), SFXP(SBV(918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64613, 16), 8), UFXP(BV(49478, 16), 8)), UFXP(BV(48555, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32629, 16), 8), SFXP(SBV(-12121, 16), 8)), SFXP(SBV(20786, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2399, 16), 8), SFXP(SBV(-7716, 16), 8)), SFXP(SBV(-5317, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62507, 16), 8), UFXP(BV(11076, 16), 8)), UFXP(BV(17429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27874, 16), 8), UFXP(BV(39396, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22043, 16), 8), SFXP(SBV(-23183, 16), 8)), SFXP(SBV(1140, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61275, 16), 8), UFXP(BV(31601, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-5962, 16), 8), SFXP(SBV(22768, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57923, 16), 8), UFXP(BV(30019, 16), 8)), UFXP(BV(22406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48471, 16), 8), UFXP(BV(59911, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24730, 16), 8), SFXP(SBV(-17965, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4010, 16), 8), SFXP(SBV(28659, 16), 8)), SFXP(SBV(32669, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58495, 16), 8), UFXP(BV(62928, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21201, 16), 8), SFXP(SBV(-13733, 16), 8)), SFXP(SBV(7468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14633, 16), 8), UFXP(BV(58247, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9928, 16), 8), UFXP(BV(27519, 16), 8)), UFXP(BV(18646, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50475, 16), 8), UFXP(BV(23152, 16), 8)), UFXP(BV(42849, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-185, 16), 8), SFXP(SBV(-23728, 16), 8)), SFXP(SBV(23543, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47353, 16), 8), UFXP(BV(20024, 16), 8)), UFXP(BV(33876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19585, 16), 8), SFXP(SBV(-28978, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48640, 16), 8), UFXP(BV(39577, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9858, 16), 8), UFXP(BV(46740, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19303, 16), 8), SFXP(SBV(-7031, 16), 8)), SFXP(SBV(-5865, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23494, 16), 8), SFXP(SBV(-15622, 16), 8)), SFXP(SBV(8107, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60058, 16), 8), UFXP(BV(46457, 16), 8)), UFXP(BV(40979, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51215, 16), 8), UFXP(BV(43745, 16), 8)), UFXP(BV(29424, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10432, 16), 8), UFXP(BV(45901, 16), 8)), UFXP(BV(56333, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49953, 16), 8), UFXP(BV(37835, 16), 8)), UFXP(BV(12118, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16182, 16), 8), UFXP(BV(4241, 16), 8)), UFXP(BV(5933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5180, 16), 8), SFXP(SBV(6560, 16), 8)), SFXP(SBV(-1666, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23651, 16), 8), SFXP(SBV(854, 16), 8)), SFXP(SBV(-22797, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10900, 16), 8), SFXP(SBV(26410, 16), 8)), SFXP(SBV(28226, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31485, 16), 8), SFXP(SBV(26925, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9676, 16), 8), SFXP(SBV(23528, 16), 8)), SFXP(SBV(-13852, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26415, 16), 8), SFXP(SBV(-28150, 16), 8)), SFXP(SBV(10971, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28375, 16), 8), UFXP(BV(30921, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27255, 16), 8), SFXP(SBV(28186, 16), 8)), SFXP(SBV(-10095, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27982, 16), 8), SFXP(SBV(29873, 16), 8)), SFXP(SBV(1891, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24546, 16), 8), UFXP(BV(15485, 16), 8)), UFXP(BV(9061, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24485, 16), 8), UFXP(BV(16699, 16), 8)), UFXP(BV(7786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12623, 16), 8), UFXP(BV(24485, 16), 8)), UFXP(BV(37108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18371, 16), 8), SFXP(SBV(-22989, 16), 8)), SFXP(SBV(-4618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63723, 16), 8), UFXP(BV(26158, 16), 8)), UFXP(BV(23132, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14790, 16), 8), SFXP(SBV(6062, 16), 8)), SFXP(SBV(-20852, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14883, 16), 8), SFXP(SBV(14694, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18893, 16), 8), SFXP(SBV(-27355, 16), 8)), SFXP(SBV(-8462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21334, 16), 8), UFXP(BV(12022, 16), 8)), UFXP(BV(33356, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39559, 16), 8), UFXP(BV(63413, 16), 8)), UFXP(BV(37436, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6660, 16), 8), SFXP(SBV(23230, 16), 8)), SFXP(SBV(-29890, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22110, 16), 8), SFXP(SBV(-8915, 16), 8)), SFXP(SBV(-13195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24261, 16), 8), SFXP(SBV(-20379, 16), 8)), SFXP(SBV(30765, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14932, 16), 8), SFXP(SBV(-16601, 16), 8)), SFXP(SBV(14734, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65345, 16), 8), UFXP(BV(36492, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18058, 16), 8), UFXP(BV(20193, 16), 8)), UFXP(BV(63401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18987, 16), 8), SFXP(SBV(-13999, 16), 8)), SFXP(SBV(-32550, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26080, 16), 8), UFXP(BV(18529, 16), 8)), UFXP(BV(44609, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27511, 16), 8), SFXP(SBV(29324, 16), 8)), SFXP(SBV(-1813, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34235, 16), 8), UFXP(BV(40120, 16), 8)), UFXP(BV(59651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13389, 16), 8), SFXP(SBV(4657, 16), 8)), SFXP(SBV(-8732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52589, 16), 8), UFXP(BV(25244, 16), 8)), UFXP(BV(12297, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24998, 16), 8), SFXP(SBV(27591, 16), 8)), SFXP(SBV(-2593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16087, 16), 8), UFXP(BV(28488, 16), 8)), UFXP(BV(20709, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1108, 16), 8), SFXP(SBV(-24254, 16), 8)), SFXP(SBV(-23146, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31915, 16), 8), SFXP(SBV(12201, 16), 8)), SFXP(SBV(-13745, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21801, 16), 8), SFXP(SBV(18123, 16), 8)), SFXP(SBV(29507, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12440, 16), 8), SFXP(SBV(20868, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26078, 16), 8), UFXP(BV(1570, 16), 8)), UFXP(BV(27648, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5968, 16), 8), UFXP(BV(34038, 16), 8)), UFXP(BV(37466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36393, 16), 8), UFXP(BV(2739, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(62862, 16), 8), UFXP(BV(40386, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56925, 16), 8), UFXP(BV(31090, 16), 8)), UFXP(BV(31994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6259, 16), 8), UFXP(BV(4400, 16), 8)), UFXP(BV(10659, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50383, 16), 8), UFXP(BV(28363, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(865, 16), 8), SFXP(SBV(-1308, 16), 8)), SFXP(SBV(-443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15370, 16), 8), SFXP(SBV(18590, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59861, 16), 8), UFXP(BV(44816, 16), 8)), UFXP(BV(59192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21553, 16), 8), SFXP(SBV(-20903, 16), 8)), SFXP(SBV(-23080, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21384, 16), 8), SFXP(SBV(-8698, 16), 8)), SFXP(SBV(-30082, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3079, 16), 8), SFXP(SBV(11368, 16), 8)), SFXP(SBV(14447, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1173, 16), 8), SFXP(SBV(25768, 16), 8)), SFXP(SBV(-26941, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5055, 16), 8), SFXP(SBV(-16214, 16), 8)), SFXP(SBV(11159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10043, 16), 8), SFXP(SBV(-28488, 16), 8)), SFXP(SBV(3486, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10999, 16), 8), SFXP(SBV(489, 16), 8)), SFXP(SBV(21009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36777, 16), 8), UFXP(BV(15218, 16), 8)), UFXP(BV(23532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20588, 16), 8), SFXP(SBV(546, 16), 8)), SFXP(SBV(21134, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28106, 16), 8), UFXP(BV(65205, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13796, 16), 8), UFXP(BV(10251, 16), 8)), UFXP(BV(24047, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56229, 16), 8), UFXP(BV(49353, 16), 8)), UFXP(BV(40046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-626, 16), 8), SFXP(SBV(-31992, 16), 8)), SFXP(SBV(-32618, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27972, 16), 8), SFXP(SBV(30756, 16), 8)), SFXP(SBV(6808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22375, 16), 8), UFXP(BV(43491, 16), 8)), UFXP(BV(330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6569, 16), 8), UFXP(BV(50309, 16), 8)), UFXP(BV(56878, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(15500, 16), 8), UFXP(BV(22573, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23182, 16), 8), SFXP(SBV(11244, 16), 8)), SFXP(SBV(11938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11831, 16), 8), UFXP(BV(49087, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31985, 16), 8), UFXP(BV(7957, 16), 8)), UFXP(BV(39942, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3748, 16), 8), SFXP(SBV(-30485, 16), 8)), SFXP(SBV(26737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4723, 16), 8), SFXP(SBV(-2213, 16), 8)), SFXP(SBV(24708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7854, 16), 8), UFXP(BV(30735, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27320, 16), 8), SFXP(SBV(-19931, 16), 8)), SFXP(SBV(-7389, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36079, 16), 8), UFXP(BV(30899, 16), 8)), UFXP(BV(1442, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26018, 16), 8), UFXP(BV(680, 16), 8)), UFXP(BV(26698, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30479, 16), 8), SFXP(SBV(8619, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1165, 16), 8), SFXP(SBV(-28577, 16), 8)), SFXP(SBV(1024, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28925, 16), 8), UFXP(BV(22461, 16), 8)), UFXP(BV(51386, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10697, 16), 8), SFXP(SBV(-11748, 16), 8)), SFXP(SBV(22445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40388, 16), 8), UFXP(BV(52217, 16), 8)), UFXP(BV(27069, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6849, 16), 8), SFXP(SBV(-28035, 16), 8)), SFXP(SBV(30652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8101, 16), 8), SFXP(SBV(25275, 16), 8)), SFXP(SBV(-17174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28865, 16), 8), UFXP(BV(12681, 16), 8)), UFXP(BV(16184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11331, 16), 8), SFXP(SBV(-5492, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19984, 16), 8), SFXP(SBV(-27497, 16), 8)), SFXP(SBV(16203, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13144, 16), 8), SFXP(SBV(31861, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43173, 16), 8), UFXP(BV(6543, 16), 8)), UFXP(BV(49716, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13261, 16), 8), SFXP(SBV(-2134, 16), 8)), SFXP(SBV(-11127, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56055, 16), 8), UFXP(BV(6551, 16), 8)), UFXP(BV(58182, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30104, 16), 8), UFXP(BV(25647, 16), 8)), UFXP(BV(55751, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(6104, 16), 8), SFXP(SBV(-9539, 16), 8)), SFXP(SBV(-30838, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(16194, 16), 8), SFXP(SBV(8185, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25502, 16), 8), SFXP(SBV(-20829, 16), 8)), SFXP(SBV(4673, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18499, 16), 8), SFXP(SBV(23882, 16), 8)), SFXP(SBV(-23155, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27070, 16), 8), UFXP(BV(34332, 16), 8)), UFXP(BV(61402, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65530, 16), 8), UFXP(BV(3392, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2452, 16), 8), SFXP(SBV(14879, 16), 8)), SFXP(SBV(11441, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1286, 16), 8), SFXP(SBV(-11210, 16), 8)), SFXP(SBV(-9924, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11347, 16), 8), SFXP(SBV(-1463, 16), 8)), SFXP(SBV(-9884, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63739, 16), 8), UFXP(BV(9558, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19157, 16), 8), UFXP(BV(21885, 16), 8)), UFXP(BV(41042, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17469, 16), 8), SFXP(SBV(-718, 16), 8)), SFXP(SBV(16751, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28516, 16), 8), SFXP(SBV(9713, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14988, 16), 8), SFXP(SBV(25192, 16), 8)), SFXP(SBV(-32415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21775, 16), 8), SFXP(SBV(18491, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40294, 16), 8), UFXP(BV(2358, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12229, 16), 8), SFXP(SBV(30640, 16), 8)), SFXP(SBV(22667, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61129, 16), 8), UFXP(BV(304, 16), 8)), UFXP(BV(60825, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9450, 16), 8), SFXP(SBV(6257, 16), 8)), SFXP(SBV(15707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30792, 16), 8), SFXP(SBV(10845, 16), 8)), SFXP(SBV(-19947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9484, 16), 8), SFXP(SBV(14993, 16), 8)), SFXP(SBV(-24477, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26670, 16), 8), UFXP(BV(52346, 16), 8)), UFXP(BV(39860, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-556, 16), 8), SFXP(SBV(-5681, 16), 8)), SFXP(SBV(-6237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20641, 16), 8), SFXP(SBV(-5986, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15531, 16), 8), SFXP(SBV(5577, 16), 8)), SFXP(SBV(21108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28173, 16), 8), UFXP(BV(30767, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12267, 16), 8), UFXP(BV(9018, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8787, 16), 8), UFXP(BV(11214, 16), 8)), UFXP(BV(63109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9754, 16), 8), SFXP(SBV(-26836, 16), 8)), SFXP(SBV(-17082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11571, 16), 8), UFXP(BV(4045, 16), 8)), UFXP(BV(7526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11057, 16), 8), SFXP(SBV(9289, 16), 8)), SFXP(SBV(-1768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4637, 16), 8), UFXP(BV(26387, 16), 8)), UFXP(BV(43786, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25703, 16), 8), SFXP(SBV(15097, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11169, 16), 8), UFXP(BV(39563, 16), 8)), UFXP(BV(50732, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(145, 16), 8), SFXP(SBV(4179, 16), 8)), SFXP(SBV(-4034, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8198, 16), 8), UFXP(BV(43074, 16), 8)), UFXP(BV(51272, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37074, 16), 8), UFXP(BV(11050, 16), 8)), UFXP(BV(26024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11977, 16), 8), SFXP(SBV(-6046, 16), 8)), SFXP(SBV(-5931, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29494, 16), 8), SFXP(SBV(-30829, 16), 8)), SFXP(SBV(5213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16440, 16), 8), UFXP(BV(18516, 16), 8)), UFXP(BV(34956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24369, 16), 8), SFXP(SBV(-17838, 16), 8)), SFXP(SBV(-6531, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4265, 16), 8), UFXP(BV(8002, 16), 8)), UFXP(BV(12267, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57377, 16), 8), UFXP(BV(54848, 16), 8)), UFXP(BV(37791, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28872, 16), 8), SFXP(SBV(31445, 16), 8)), SFXP(SBV(-5219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36379, 16), 8), UFXP(BV(63446, 16), 8)), UFXP(BV(37592, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31457, 16), 8), UFXP(BV(59533, 16), 8)), UFXP(BV(25454, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30737, 16), 8), UFXP(BV(29333, 16), 8)), UFXP(BV(48500, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34041, 16), 8), UFXP(BV(19820, 16), 8)), UFXP(BV(14221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6656, 16), 8), UFXP(BV(14758, 16), 8)), UFXP(BV(21414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5991, 16), 8), UFXP(BV(44161, 16), 8)), UFXP(BV(27366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-17457, 16), 8), SFXP(SBV(29827, 16), 8)), SFXP(SBV(-2329, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59744, 16), 8), UFXP(BV(57611, 16), 8)), UFXP(BV(10087, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52368, 16), 8), UFXP(BV(5187, 16), 8)), UFXP(BV(57555, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19655, 16), 8), SFXP(SBV(-18268, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2254, 16), 8), SFXP(SBV(-5587, 16), 8)), SFXP(SBV(16344, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(7378, 16), 8), UFXP(BV(44082, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4146, 16), 8), SFXP(SBV(4883, 16), 8)), SFXP(SBV(9029, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5107, 16), 8), UFXP(BV(40984, 16), 8)), UFXP(BV(31167, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52794, 16), 8), UFXP(BV(5664, 16), 8)), UFXP(BV(47130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35359, 16), 8), UFXP(BV(3739, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28196, 16), 8), UFXP(BV(1942, 16), 8)), UFXP(BV(30138, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22407, 16), 8), SFXP(SBV(8924, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22349, 16), 8), UFXP(BV(18088, 16), 8)), UFXP(BV(6233, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22123, 16), 8), UFXP(BV(15422, 16), 8)), UFXP(BV(37545, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21163, 16), 8), SFXP(SBV(-25685, 16), 8)), SFXP(SBV(26174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5203, 16), 8), SFXP(SBV(8305, 16), 8)), SFXP(SBV(13508, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4399, 16), 8), UFXP(BV(52812, 16), 8)), UFXP(BV(17123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26627, 16), 8), SFXP(SBV(-9565, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23086, 16), 8), UFXP(BV(58457, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26793, 16), 8), SFXP(SBV(11739, 16), 8)), SFXP(SBV(15054, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27518, 16), 8), SFXP(SBV(-31043, 16), 8)), SFXP(SBV(-6975, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62530, 16), 8), UFXP(BV(62584, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25096, 16), 8), SFXP(SBV(25752, 16), 8)), SFXP(SBV(-31403, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-344, 16), 8), SFXP(SBV(-7423, 16), 8)), SFXP(SBV(-7767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60213, 16), 8), UFXP(BV(58707, 16), 8)), UFXP(BV(53384, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13652, 16), 8), SFXP(SBV(-8674, 16), 8)), SFXP(SBV(-3817, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5441, 16), 8), SFXP(SBV(22249, 16), 8)), SFXP(SBV(27690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17869, 16), 8), UFXP(BV(11745, 16), 8)), UFXP(BV(6124, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7935, 16), 8), SFXP(SBV(-14436, 16), 8)), SFXP(SBV(11292, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(743, 16), 8), UFXP(BV(39364, 16), 8)), UFXP(BV(40107, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29927, 16), 8), UFXP(BV(36621, 16), 8)), UFXP(BV(21241, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21229, 16), 8), SFXP(SBV(-14290, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29957, 16), 8), SFXP(SBV(-20666, 16), 8)), SFXP(SBV(-9291, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62406, 16), 8), UFXP(BV(25693, 16), 8)), UFXP(BV(36713, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11783, 16), 8), SFXP(SBV(-21409, 16), 8)), SFXP(SBV(9626, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11512, 16), 8), SFXP(SBV(-30569, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(524, 16), 8), UFXP(BV(11423, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12624, 16), 8), UFXP(BV(45395, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13994, 16), 8), UFXP(BV(50807, 16), 8)), UFXP(BV(64801, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37211, 16), 8), UFXP(BV(2332, 16), 8)), UFXP(BV(39543, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7115, 16), 8), UFXP(BV(52315, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36847, 16), 8), UFXP(BV(62886, 16), 8)), UFXP(BV(34197, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13771, 16), 8), UFXP(BV(57190, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9671, 16), 8), SFXP(SBV(21589, 16), 8)), SFXP(SBV(-11918, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31189, 16), 8), SFXP(SBV(-20532, 16), 8)), SFXP(SBV(13815, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2534, 16), 8), UFXP(BV(35124, 16), 8)), UFXP(BV(37658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17106, 16), 8), SFXP(SBV(-20241, 16), 8)), SFXP(SBV(-23747, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5352, 16), 8), SFXP(SBV(8617, 16), 8)), SFXP(SBV(13969, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10838, 16), 8), SFXP(SBV(-17916, 16), 8)), SFXP(SBV(-7078, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21174, 16), 8), UFXP(BV(35567, 16), 8)), UFXP(BV(56741, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12056, 16), 8), SFXP(SBV(4874, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9682, 16), 8), UFXP(BV(32306, 16), 8)), UFXP(BV(41988, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28995, 16), 8), SFXP(SBV(8065, 16), 8)), SFXP(SBV(-4048, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9119, 16), 8), SFXP(SBV(7304, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9853, 16), 8), SFXP(SBV(-9753, 16), 8)), SFXP(SBV(-19606, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1387, 16), 8), UFXP(BV(16412, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8144, 16), 8), SFXP(SBV(-24994, 16), 8)), SFXP(SBV(16850, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2385, 16), 8), UFXP(BV(21445, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26754, 16), 8), UFXP(BV(49458, 16), 8)), UFXP(BV(56940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7927, 16), 8), UFXP(BV(64014, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11631, 16), 8), SFXP(SBV(-29947, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16978, 16), 8), SFXP(SBV(-5338, 16), 8)), SFXP(SBV(-22316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-129, 16), 8), SFXP(SBV(-14158, 16), 8)), SFXP(SBV(7135, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31496, 16), 8), SFXP(SBV(25954, 16), 8)), SFXP(SBV(5542, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28143, 16), 8), UFXP(BV(53002, 16), 8)), UFXP(BV(40677, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15377, 16), 8), SFXP(SBV(7651, 16), 8)), SFXP(SBV(-23028, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13584, 16), 8), UFXP(BV(63612, 16), 8)), UFXP(BV(33076, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10838, 16), 8), UFXP(BV(62587, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11320, 16), 8), SFXP(SBV(-30987, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17071, 16), 8), UFXP(BV(17635, 16), 8)), UFXP(BV(61853, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5942, 16), 8), SFXP(SBV(15013, 16), 8)), SFXP(SBV(-9071, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57250, 16), 8), UFXP(BV(39901, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53149, 16), 8), UFXP(BV(46590, 16), 8)), UFXP(BV(6559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(16948, 16), 8), SFXP(SBV(-26473, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2044, 16), 8), SFXP(SBV(25363, 16), 8)), SFXP(SBV(23319, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19740, 16), 8), UFXP(BV(50955, 16), 8)), UFXP(BV(62485, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2213, 16), 8), UFXP(BV(55443, 16), 8)), UFXP(BV(20527, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48813, 16), 8), UFXP(BV(42543, 16), 8)), UFXP(BV(6270, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43719, 16), 8), UFXP(BV(2159, 16), 8)), UFXP(BV(41029, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34283, 16), 8), UFXP(BV(9768, 16), 8)), UFXP(BV(62926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6341, 16), 8), UFXP(BV(7478, 16), 8)), UFXP(BV(64399, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37785, 16), 8), UFXP(BV(9110, 16), 8)), UFXP(BV(46895, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47094, 16), 8), UFXP(BV(56631, 16), 8)), UFXP(BV(55999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1227, 16), 8), SFXP(SBV(8722, 16), 8)), SFXP(SBV(9949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11197, 16), 8), UFXP(BV(62838, 16), 8)), UFXP(BV(8499, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(27704, 16), 8), SFXP(SBV(-2082, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59034, 16), 8), UFXP(BV(63622, 16), 8)), UFXP(BV(56805, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26786, 16), 8), SFXP(SBV(-24849, 16), 8)), SFXP(SBV(21420, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12388, 16), 8), SFXP(SBV(21771, 16), 8)), SFXP(SBV(9383, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14214, 16), 8), UFXP(BV(4562, 16), 8)), UFXP(BV(18776, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(905, 16), 8), SFXP(SBV(-11850, 16), 8)), SFXP(SBV(12755, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56587, 16), 8), UFXP(BV(21971, 16), 8)), UFXP(BV(34616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30555, 16), 8), SFXP(SBV(-20599, 16), 8)), SFXP(SBV(9956, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3771, 16), 8), UFXP(BV(32689, 16), 8)), UFXP(BV(22773, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18789, 16), 8), SFXP(SBV(26863, 16), 8)), SFXP(SBV(5518, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7423, 16), 8), SFXP(SBV(-1684, 16), 8)), SFXP(SBV(5739, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28308, 16), 8), UFXP(BV(8688, 16), 8)), UFXP(BV(43198, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37159, 16), 8), UFXP(BV(45100, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10579, 16), 8), UFXP(BV(46046, 16), 8)), UFXP(BV(30069, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7539, 16), 8), UFXP(BV(36821, 16), 8)), UFXP(BV(36254, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17440, 16), 8), SFXP(SBV(-1187, 16), 8)), SFXP(SBV(15328, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23776, 16), 8), SFXP(SBV(-20352, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15732, 16), 8), SFXP(SBV(5370, 16), 8)), SFXP(SBV(10362, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42010, 16), 8), UFXP(BV(46833, 16), 8)), UFXP(BV(17657, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9595, 16), 8), SFXP(SBV(13555, 16), 8)), SFXP(SBV(23150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51680, 16), 8), UFXP(BV(39783, 16), 8)), UFXP(BV(35802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-5295, 16), 8), SFXP(SBV(-15198, 16), 8)), SFXP(SBV(-13330, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(9572, 16), 8), SFXP(SBV(18900, 16), 8)), SFXP(SBV(-14214, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21224, 16), 8), SFXP(SBV(-20140, 16), 8)), SFXP(SBV(-24172, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(14001, 16), 8), UFXP(BV(46156, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25622, 16), 8), SFXP(SBV(21252, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24569, 16), 8), UFXP(BV(52830, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23384, 16), 8), SFXP(SBV(-24981, 16), 8)), SFXP(SBV(1597, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14703, 16), 8), SFXP(SBV(10740, 16), 8)), SFXP(SBV(-3963, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25054, 16), 8), UFXP(BV(51768, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5961, 16), 8), UFXP(BV(2440, 16), 8)), UFXP(BV(8401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27755, 16), 8), SFXP(SBV(-21237, 16), 8)), SFXP(SBV(16544, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-731, 16), 8), SFXP(SBV(16371, 16), 8)), SFXP(SBV(15640, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8748, 16), 8), UFXP(BV(35879, 16), 8)), UFXP(BV(46405, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63454, 16), 8), UFXP(BV(61209, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18336, 16), 8), SFXP(SBV(-11142, 16), 8)), SFXP(SBV(-11613, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30741, 16), 8), SFXP(SBV(-10204, 16), 8)), SFXP(SBV(24591, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23048, 16), 8), SFXP(SBV(-10029, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27820, 16), 8), SFXP(SBV(32434, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63325, 16), 8), UFXP(BV(40441, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30514, 16), 8), SFXP(SBV(-20924, 16), 8)), SFXP(SBV(-14098, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46430, 16), 8), UFXP(BV(50246, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2517, 16), 8), SFXP(SBV(2495, 16), 8)), SFXP(SBV(5012, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15599, 16), 8), UFXP(BV(32657, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56140, 16), 8), UFXP(BV(24680, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20999, 16), 8), SFXP(SBV(17014, 16), 8)), SFXP(SBV(27523, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14418, 16), 8), UFXP(BV(49600, 16), 8)), UFXP(BV(64018, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12293, 16), 8), SFXP(SBV(18995, 16), 8)), SFXP(SBV(6702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17649, 16), 8), SFXP(SBV(14711, 16), 8)), SFXP(SBV(31158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5504, 16), 8), SFXP(SBV(22179, 16), 8)), SFXP(SBV(-27683, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26720, 16), 8), UFXP(BV(48994, 16), 8)), UFXP(BV(1941, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-924, 16), 8), SFXP(SBV(13426, 16), 8)), SFXP(SBV(12502, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53694, 16), 8), UFXP(BV(58478, 16), 8)), UFXP(BV(46636, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40160, 16), 8), UFXP(BV(19490, 16), 8)), UFXP(BV(20670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(940, 16), 8), SFXP(SBV(12128, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27966, 16), 8), SFXP(SBV(203, 16), 8)), SFXP(SBV(-22176, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5956, 16), 8), UFXP(BV(7656, 16), 8)), UFXP(BV(13612, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23470, 16), 8), SFXP(SBV(2770, 16), 8)), SFXP(SBV(-20700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8692, 16), 8), SFXP(SBV(-3719, 16), 8)), SFXP(SBV(4801, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11727, 16), 8), UFXP(BV(12932, 16), 8)), UFXP(BV(24659, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12899, 16), 8), UFXP(BV(40630, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57687, 16), 8), UFXP(BV(31410, 16), 8)), UFXP(BV(26277, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6366, 16), 8), UFXP(BV(14664, 16), 8)), UFXP(BV(21030, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14028, 16), 8), SFXP(SBV(26735, 16), 8)), SFXP(SBV(12707, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57358, 16), 8), UFXP(BV(19327, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-9516, 16), 8), SFXP(SBV(7573, 16), 8)), SFXP(SBV(-19358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15680, 16), 8), UFXP(BV(11778, 16), 8)), UFXP(BV(506, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52246, 16), 8), UFXP(BV(52326, 16), 8)), UFXP(BV(62168, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34497, 16), 8), UFXP(BV(50347, 16), 8)), UFXP(BV(49686, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31037, 16), 8), SFXP(SBV(13550, 16), 8)), SFXP(SBV(17487, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53631, 16), 8), UFXP(BV(39205, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3329, 16), 8), UFXP(BV(56364, 16), 8)), UFXP(BV(59693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12178, 16), 8), UFXP(BV(43676, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38059, 16), 8), UFXP(BV(19590, 16), 8)), UFXP(BV(28822, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18026, 16), 8), SFXP(SBV(-27271, 16), 8)), SFXP(SBV(-19718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-3692, 16), 8), SFXP(SBV(1833, 16), 8)), SFXP(SBV(-26436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57255, 16), 8), UFXP(BV(42817, 16), 8)), UFXP(BV(14438, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33064, 16), 8), UFXP(BV(11257, 16), 8)), UFXP(BV(21807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20426, 16), 8), SFXP(SBV(-10839, 16), 8)), SFXP(SBV(-12866, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26150, 16), 8), SFXP(SBV(-24688, 16), 8)), SFXP(SBV(-14698, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7603, 16), 8), SFXP(SBV(-26887, 16), 8)), SFXP(SBV(12091, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20715, 16), 8), UFXP(BV(19868, 16), 8)), UFXP(BV(847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34547, 16), 8), UFXP(BV(13894, 16), 8)), UFXP(BV(48441, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43511, 16), 8), UFXP(BV(29443, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21373, 16), 8), SFXP(SBV(-10132, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2599, 16), 8), SFXP(SBV(25790, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48457, 16), 8), UFXP(BV(43285, 16), 8)), UFXP(BV(1207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-32129, 16), 8), SFXP(SBV(4884, 16), 8)), SFXP(SBV(-23137, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6445, 16), 8), SFXP(SBV(-18205, 16), 8)), SFXP(SBV(11760, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29886, 16), 8), UFXP(BV(64675, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3472, 16), 8), SFXP(SBV(4912, 16), 8)), SFXP(SBV(-8384, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56704, 16), 8), UFXP(BV(46736, 16), 8)), UFXP(BV(62872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35878, 16), 8), UFXP(BV(61945, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29464, 16), 8), SFXP(SBV(-32216, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32298, 16), 8), SFXP(SBV(-1701, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5890, 16), 8), SFXP(SBV(27650, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27026, 16), 8), UFXP(BV(29634, 16), 8)), UFXP(BV(48279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16777, 16), 8), SFXP(SBV(6340, 16), 8)), SFXP(SBV(23117, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12088, 16), 8), SFXP(SBV(31128, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22824, 16), 8), SFXP(SBV(-31696, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28802, 16), 8), UFXP(BV(7729, 16), 8)), UFXP(BV(36531, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23497, 16), 8), UFXP(BV(42690, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5111, 16), 8), SFXP(SBV(-12187, 16), 8)), SFXP(SBV(-7076, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-5193, 16), 8), SFXP(SBV(27749, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6391, 16), 8), SFXP(SBV(16456, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10280, 16), 8), SFXP(SBV(-31327, 16), 8)), SFXP(SBV(21047, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24693, 16), 8), SFXP(SBV(-11754, 16), 8)), SFXP(SBV(19644, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20548, 16), 8), SFXP(SBV(-4095, 16), 8)), SFXP(SBV(24643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22858, 16), 8), SFXP(SBV(-15329, 16), 8)), SFXP(SBV(7529, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21339, 16), 8), UFXP(BV(16435, 16), 8)), UFXP(BV(37774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14400, 16), 8), UFXP(BV(30500, 16), 8)), UFXP(BV(49436, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6293, 16), 8), SFXP(SBV(-4314, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9048, 16), 8), UFXP(BV(21569, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2701, 16), 8), SFXP(SBV(25221, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18941, 16), 8), SFXP(SBV(9207, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24734, 16), 8), SFXP(SBV(-25829, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31518, 16), 8), SFXP(SBV(8602, 16), 8)), SFXP(SBV(-22916, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6300, 16), 8), SFXP(SBV(20578, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57643, 16), 8), UFXP(BV(63032, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15747, 16), 8), SFXP(SBV(17097, 16), 8)), SFXP(SBV(-1350, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9149, 16), 8), UFXP(BV(59210, 16), 8)), UFXP(BV(18911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9819, 16), 8), SFXP(SBV(-19402, 16), 8)), SFXP(SBV(-29221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54946, 16), 8), UFXP(BV(44200, 16), 8)), UFXP(BV(49587, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2693, 16), 8), SFXP(SBV(-29512, 16), 8)), SFXP(SBV(-32205, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2141, 16), 8), UFXP(BV(14314, 16), 8)), UFXP(BV(54176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12200, 16), 8), SFXP(SBV(-23, 16), 8)), SFXP(SBV(-12223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2158, 16), 8), UFXP(BV(26699, 16), 8)), UFXP(BV(28857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3820, 16), 8), SFXP(SBV(22497, 16), 8)), SFXP(SBV(-18677, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39101, 16), 8), UFXP(BV(48267, 16), 8)), UFXP(BV(32187, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3187, 16), 8), SFXP(SBV(26720, 16), 8)), SFXP(SBV(-23533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14816, 16), 8), SFXP(SBV(6870, 16), 8)), SFXP(SBV(4385, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14782, 16), 8), SFXP(SBV(29556, 16), 8)), SFXP(SBV(-2693, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30746, 16), 8), SFXP(SBV(-3445, 16), 8)), SFXP(SBV(27301, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7892, 16), 8), SFXP(SBV(9333, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28680, 16), 8), SFXP(SBV(17327, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13496, 16), 8), SFXP(SBV(-30588, 16), 8)), SFXP(SBV(25839, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32205, 16), 8), UFXP(BV(17711, 16), 8)), UFXP(BV(14494, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32341, 16), 8), SFXP(SBV(-22699, 16), 8)), SFXP(SBV(9642, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19860, 16), 8), SFXP(SBV(-1476, 16), 8)), SFXP(SBV(18384, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4759, 16), 8), UFXP(BV(8874, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17534, 16), 8), UFXP(BV(19992, 16), 8)), UFXP(BV(58576, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2393, 16), 8), SFXP(SBV(2300, 16), 8)), SFXP(SBV(-93, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18403, 16), 8), SFXP(SBV(15021, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57934, 16), 8), UFXP(BV(27594, 16), 8)), UFXP(BV(30340, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40242, 16), 8), UFXP(BV(19663, 16), 8)), UFXP(BV(10740, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11540, 16), 8), SFXP(SBV(-30468, 16), 8)), SFXP(SBV(-18928, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3277, 16), 8), SFXP(SBV(15896, 16), 8)), SFXP(SBV(19173, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11837, 16), 8), UFXP(BV(47426, 16), 8)), UFXP(BV(59263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65006, 16), 8), UFXP(BV(36889, 16), 8)), UFXP(BV(28117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51120, 16), 8), UFXP(BV(61264, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38154, 16), 8), UFXP(BV(55378, 16), 8)), UFXP(BV(61485, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-970, 16), 8), SFXP(SBV(-3550, 16), 8)), SFXP(SBV(2580, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62832, 16), 8), UFXP(BV(19284, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4711, 16), 8), SFXP(SBV(16447, 16), 8)), SFXP(SBV(21158, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33319, 16), 8), UFXP(BV(6831, 16), 8)), UFXP(BV(40150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11965, 16), 8), UFXP(BV(29794, 16), 8)), UFXP(BV(41759, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(65471, 16), 8), UFXP(BV(39385, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8093, 16), 8), SFXP(SBV(-14864, 16), 8)), SFXP(SBV(6771, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9448, 16), 8), SFXP(SBV(-20965, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11170, 16), 8), UFXP(BV(61693, 16), 8)), UFXP(BV(15013, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3996, 16), 8), SFXP(SBV(-32710, 16), 8)), SFXP(SBV(28714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52146, 16), 8), UFXP(BV(61624, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7349, 16), 8), SFXP(SBV(9684, 16), 8)), SFXP(SBV(17033, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36686, 16), 8), UFXP(BV(41731, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62337, 16), 8), UFXP(BV(50527, 16), 8)), UFXP(BV(47328, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29447, 16), 8), UFXP(BV(55688, 16), 8)), UFXP(BV(39295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31174, 16), 8), SFXP(SBV(23696, 16), 8)), SFXP(SBV(7478, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(869, 16), 8), UFXP(BV(57081, 16), 8)), UFXP(BV(57950, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35205, 16), 8), UFXP(BV(55896, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46381, 16), 8), UFXP(BV(41719, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14980, 16), 8), SFXP(SBV(-3108, 16), 8)), SFXP(SBV(-14741, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34097, 16), 8), UFXP(BV(11439, 16), 8)), UFXP(BV(45536, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31837, 16), 8), SFXP(SBV(-20547, 16), 8)), SFXP(SBV(11290, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55417, 16), 8), UFXP(BV(5781, 16), 8)), UFXP(BV(49636, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19536, 16), 8), SFXP(SBV(969, 16), 8)), SFXP(SBV(8411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13575, 16), 8), SFXP(SBV(18474, 16), 8)), SFXP(SBV(-32049, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42908, 16), 8), UFXP(BV(45589, 16), 8)), UFXP(BV(38968, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(16867, 16), 8), SFXP(SBV(-3282, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33019, 16), 8), UFXP(BV(657, 16), 8)), UFXP(BV(32362, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21132, 16), 8), UFXP(BV(42760, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21845, 16), 8), SFXP(SBV(31488, 16), 8)), SFXP(SBV(41, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48471, 16), 8), UFXP(BV(3219, 16), 8)), UFXP(BV(45252, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56184, 16), 8), UFXP(BV(28275, 16), 8)), UFXP(BV(45095, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54985, 16), 8), UFXP(BV(23750, 16), 8)), UFXP(BV(31235, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6584, 16), 8), SFXP(SBV(24253, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59196, 16), 8), UFXP(BV(28863, 16), 8)), UFXP(BV(54981, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64893, 16), 8), UFXP(BV(30363, 16), 8)), UFXP(BV(34530, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27765, 16), 8), SFXP(SBV(-14898, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58396, 16), 8), UFXP(BV(44372, 16), 8)), UFXP(BV(37232, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3914, 16), 8), SFXP(SBV(27975, 16), 8)), SFXP(SBV(-31889, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30175, 16), 8), UFXP(BV(21746, 16), 8)), UFXP(BV(51921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38281, 16), 8), UFXP(BV(36134, 16), 8)), UFXP(BV(8879, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26991, 16), 8), UFXP(BV(4643, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(514, 16), 8), SFXP(SBV(-13772, 16), 8)), SFXP(SBV(-27651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25641, 16), 8), SFXP(SBV(-17952, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17937, 16), 8), SFXP(SBV(12200, 16), 8)), SFXP(SBV(5737, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22831, 16), 8), UFXP(BV(21815, 16), 8)), UFXP(BV(1016, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25888, 16), 8), SFXP(SBV(-17838, 16), 8)), SFXP(SBV(-8050, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26960, 16), 8), SFXP(SBV(-1512, 16), 8)), SFXP(SBV(-25448, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28404, 16), 8), SFXP(SBV(14622, 16), 8)), SFXP(SBV(-16043, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4454, 16), 8), UFXP(BV(35394, 16), 8)), UFXP(BV(25976, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6274, 16), 8), SFXP(SBV(15248, 16), 8)), SFXP(SBV(21522, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13883, 16), 8), SFXP(SBV(18289, 16), 8)), SFXP(SBV(32172, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61625, 16), 8), UFXP(BV(21067, 16), 8)), UFXP(BV(40558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23536, 16), 8), SFXP(SBV(-17388, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4156, 16), 8), SFXP(SBV(20294, 16), 8)), SFXP(SBV(24450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55233, 16), 8), UFXP(BV(2112, 16), 8)), UFXP(BV(53121, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28947, 16), 8), UFXP(BV(2661, 16), 8)), UFXP(BV(26286, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26501, 16), 8), SFXP(SBV(-31001, 16), 8)), SFXP(SBV(4500, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29862, 16), 8), SFXP(SBV(32217, 16), 8)), SFXP(SBV(-22511, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17910, 16), 8), SFXP(SBV(29705, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15540, 16), 8), SFXP(SBV(13085, 16), 8)), SFXP(SBV(2455, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26084, 16), 8), SFXP(SBV(-5972, 16), 8)), SFXP(SBV(-32056, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15677, 16), 8), UFXP(BV(3786, 16), 8)), UFXP(BV(19463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46351, 16), 8), UFXP(BV(30868, 16), 8)), UFXP(BV(15483, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28249, 16), 8), SFXP(SBV(20426, 16), 8)), SFXP(SBV(7823, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3725, 16), 8), UFXP(BV(36793, 16), 8)), UFXP(BV(40518, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22865, 16), 8), SFXP(SBV(-3551, 16), 8)), SFXP(SBV(19314, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20921, 16), 8), UFXP(BV(27203, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-494, 16), 8), SFXP(SBV(3056, 16), 8)), SFXP(SBV(2562, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38529, 16), 8), UFXP(BV(13622, 16), 8)), UFXP(BV(52151, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51068, 16), 8), UFXP(BV(41252, 16), 8)), UFXP(BV(9816, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13768, 16), 8), UFXP(BV(974, 16), 8)), UFXP(BV(12794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31891, 16), 8), UFXP(BV(20979, 16), 8)), UFXP(BV(10912, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26078, 16), 8), UFXP(BV(28539, 16), 8)), UFXP(BV(54617, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18532, 16), 8), SFXP(SBV(-12609, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50616, 16), 8), UFXP(BV(30123, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27807, 16), 8), UFXP(BV(15593, 16), 8)), UFXP(BV(43400, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3449, 16), 8), SFXP(SBV(-5981, 16), 8)), SFXP(SBV(-2532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28903, 16), 8), SFXP(SBV(-9107, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16039, 16), 8), SFXP(SBV(-26397, 16), 8)), SFXP(SBV(10358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43910, 16), 8), UFXP(BV(61538, 16), 8)), UFXP(BV(39912, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40042, 16), 8), UFXP(BV(27371, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22666, 16), 8), SFXP(SBV(4042, 16), 8)), SFXP(SBV(26708, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14862, 16), 8), SFXP(SBV(-32009, 16), 8)), SFXP(SBV(-18665, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15407, 16), 8), SFXP(SBV(-21537, 16), 8)), SFXP(SBV(-6130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48597, 16), 8), UFXP(BV(29816, 16), 8)), UFXP(BV(18781, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24354, 16), 8), SFXP(SBV(28399, 16), 8)), SFXP(SBV(-4045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1684, 16), 8), UFXP(BV(21657, 16), 8)), UFXP(BV(11391, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10814, 16), 8), SFXP(SBV(24945, 16), 8)), SFXP(SBV(5156, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8804, 16), 8), SFXP(SBV(-19897, 16), 8)), SFXP(SBV(11093, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16487, 16), 8), SFXP(SBV(19745, 16), 8)), SFXP(SBV(3258, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11002, 16), 8), UFXP(BV(23341, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8605, 16), 8), UFXP(BV(2013, 16), 8)), UFXP(BV(6592, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33381, 16), 8), UFXP(BV(7763, 16), 8)), UFXP(BV(25618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54256, 16), 8), UFXP(BV(58413, 16), 8)), UFXP(BV(61379, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32315, 16), 8), SFXP(SBV(5306, 16), 8)), SFXP(SBV(-27009, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5121, 16), 8), SFXP(SBV(14418, 16), 8)), SFXP(SBV(9297, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23167, 16), 8), UFXP(BV(7929, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2843, 16), 8), SFXP(SBV(-11050, 16), 8)), SFXP(SBV(13893, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63272, 16), 8), UFXP(BV(9842, 16), 8)), UFXP(BV(7680, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11339, 16), 8), UFXP(BV(20158, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28954, 16), 8), SFXP(SBV(5963, 16), 8)), SFXP(SBV(30619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2302, 16), 8), SFXP(SBV(-22577, 16), 8)), SFXP(SBV(-24879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-632, 16), 8), SFXP(SBV(4722, 16), 8)), SFXP(SBV(-11658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6834, 16), 8), SFXP(SBV(-25438, 16), 8)), SFXP(SBV(-18604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10752, 16), 8), SFXP(SBV(13009, 16), 8)), SFXP(SBV(-2257, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6857, 16), 8), UFXP(BV(31057, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5216, 16), 8), SFXP(SBV(-21578, 16), 8)), SFXP(SBV(-16362, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31335, 16), 8), UFXP(BV(63670, 16), 8)), UFXP(BV(33201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28369, 16), 8), UFXP(BV(37676, 16), 8)), UFXP(BV(46350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26771, 16), 8), SFXP(SBV(19649, 16), 8)), SFXP(SBV(-7122, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2799, 16), 8), SFXP(SBV(20309, 16), 8)), SFXP(SBV(-23108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19674, 16), 8), SFXP(SBV(-3083, 16), 8)), SFXP(SBV(-22757, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-332, 16), 8), SFXP(SBV(-27818, 16), 8)), SFXP(SBV(-29459, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14865, 16), 8), SFXP(SBV(2999, 16), 8)), SFXP(SBV(11866, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8548, 16), 8), SFXP(SBV(9953, 16), 8)), SFXP(SBV(18501, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14925, 16), 8), UFXP(BV(64288, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21984, 16), 8), SFXP(SBV(-12774, 16), 8)), SFXP(SBV(-9210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22451, 16), 8), UFXP(BV(37743, 16), 8)), UFXP(BV(60194, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12415, 16), 8), UFXP(BV(60030, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51531, 16), 8), UFXP(BV(64985, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-99, 16), 8), SFXP(SBV(23115, 16), 8)), SFXP(SBV(-8940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7179, 16), 8), UFXP(BV(52079, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22742, 16), 8), SFXP(SBV(-27284, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7596, 16), 8), SFXP(SBV(19558, 16), 8)), SFXP(SBV(27154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51967, 16), 8), UFXP(BV(40998, 16), 8)), UFXP(BV(10969, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20804, 16), 8), SFXP(SBV(17315, 16), 8)), SFXP(SBV(30858, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(596, 16), 8), SFXP(SBV(-1142, 16), 8)), SFXP(SBV(-546, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15474, 16), 8), UFXP(BV(27852, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16220, 16), 8), UFXP(BV(24968, 16), 8)), UFXP(BV(9093, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10337, 16), 8), UFXP(BV(58947, 16), 8)), UFXP(BV(16926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14052, 16), 8), UFXP(BV(18659, 16), 8)), UFXP(BV(32711, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49564, 16), 8), UFXP(BV(19825, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53800, 16), 8), UFXP(BV(12344, 16), 8)), UFXP(BV(41456, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8140, 16), 8), SFXP(SBV(29295, 16), 8)), SFXP(SBV(-13985, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30663, 16), 8), SFXP(SBV(4014, 16), 8)), SFXP(SBV(22035, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22007, 16), 8), UFXP(BV(50550, 16), 8)), UFXP(BV(36993, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8074, 16), 8), UFXP(BV(17099, 16), 8)), UFXP(BV(14999, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49013, 16), 8), UFXP(BV(42484, 16), 8)), UFXP(BV(7396, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-25446, 16), 8), SFXP(SBV(-342, 16), 8)), SFXP(SBV(-31541, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11162, 16), 8), UFXP(BV(63380, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11755, 16), 8), SFXP(SBV(29364, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1202, 16), 8), SFXP(SBV(22063, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29110, 16), 8), UFXP(BV(64486, 16), 8)), UFXP(BV(30160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7146, 16), 8), SFXP(SBV(19672, 16), 8)), SFXP(SBV(26818, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24867, 16), 8), SFXP(SBV(-26875, 16), 8)), SFXP(SBV(-2008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58964, 16), 8), UFXP(BV(24843, 16), 8)), UFXP(BV(18271, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38393, 16), 8), UFXP(BV(45561, 16), 8)), UFXP(BV(58368, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4687, 16), 8), SFXP(SBV(-8783, 16), 8)), SFXP(SBV(-29733, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25330, 16), 8), SFXP(SBV(16152, 16), 8)), SFXP(SBV(25300, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19719, 16), 8), UFXP(BV(60806, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-257, 16), 8), SFXP(SBV(30140, 16), 8)), SFXP(SBV(29883, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11116, 16), 8), SFXP(SBV(22469, 16), 8)), SFXP(SBV(-11353, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11641, 16), 8), SFXP(SBV(-17446, 16), 8)), SFXP(SBV(5805, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54879, 16), 8), UFXP(BV(55537, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6580, 16), 8), SFXP(SBV(-5339, 16), 8)), SFXP(SBV(11919, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21316, 16), 8), SFXP(SBV(876, 16), 8)), SFXP(SBV(-22192, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32372, 16), 8), UFXP(BV(16916, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14479, 16), 8), SFXP(SBV(-23759, 16), 8)), SFXP(SBV(-32480, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63407, 16), 8), UFXP(BV(64513, 16), 8)), UFXP(BV(53564, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30530, 16), 8), UFXP(BV(35895, 16), 8)), UFXP(BV(20920, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49616, 16), 8), UFXP(BV(40997, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14475, 16), 8), SFXP(SBV(-6409, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55277, 16), 8), UFXP(BV(54150, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38043, 16), 8), UFXP(BV(23940, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22123, 16), 8), SFXP(SBV(-22038, 16), 8)), SFXP(SBV(3936, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27726, 16), 8), SFXP(SBV(-32242, 16), 8)), SFXP(SBV(18552, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28917, 16), 8), SFXP(SBV(-28322, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24470, 16), 8), SFXP(SBV(9116, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15024, 16), 8), SFXP(SBV(-26833, 16), 8)), SFXP(SBV(23679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46629, 16), 8), UFXP(BV(44160, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39792, 16), 8), UFXP(BV(54779, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28841, 16), 8), SFXP(SBV(16802, 16), 8)), SFXP(SBV(7628, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8781, 16), 8), UFXP(BV(56056, 16), 8)), UFXP(BV(22221, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25115, 16), 8), SFXP(SBV(31601, 16), 8)), SFXP(SBV(8820, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38096, 16), 8), UFXP(BV(27315, 16), 8)), UFXP(BV(1582, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6752, 16), 8), SFXP(SBV(-16936, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32797, 16), 8), UFXP(BV(14905, 16), 8)), UFXP(BV(47702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13443, 16), 8), UFXP(BV(41195, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44813, 16), 8), UFXP(BV(62798, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15568, 16), 8), SFXP(SBV(24187, 16), 8)), SFXP(SBV(8619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8243, 16), 8), SFXP(SBV(18860, 16), 8)), SFXP(SBV(-17454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13479, 16), 8), SFXP(SBV(-252, 16), 8)), SFXP(SBV(13227, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36693, 16), 8), UFXP(BV(10169, 16), 8)), UFXP(BV(26524, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7194, 16), 8), SFXP(SBV(8995, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-526, 16), 8), SFXP(SBV(20783, 16), 8)), SFXP(SBV(-21309, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30379, 16), 8), SFXP(SBV(12665, 16), 8)), SFXP(SBV(17714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7551, 16), 8), UFXP(BV(50886, 16), 8)), UFXP(BV(58437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19250, 16), 8), UFXP(BV(41988, 16), 8)), UFXP(BV(42798, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28113, 16), 8), SFXP(SBV(-24369, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27110, 16), 8), SFXP(SBV(13744, 16), 8)), SFXP(SBV(24682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32167, 16), 8), SFXP(SBV(-9756, 16), 8)), SFXP(SBV(22411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9145, 16), 8), SFXP(SBV(144, 16), 8)), SFXP(SBV(9001, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11290, 16), 8), UFXP(BV(27036, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17671, 16), 8), SFXP(SBV(12197, 16), 8)), SFXP(SBV(5474, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20119, 16), 8), SFXP(SBV(11317, 16), 8)), SFXP(SBV(-8802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11971, 16), 8), SFXP(SBV(-18538, 16), 8)), SFXP(SBV(-14901, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35262, 16), 8), UFXP(BV(17663, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2851, 16), 8), UFXP(BV(17480, 16), 8)), UFXP(BV(63597, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3393, 16), 8), SFXP(SBV(-24677, 16), 8)), SFXP(SBV(28070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57185, 16), 8), UFXP(BV(27616, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62196, 16), 8), UFXP(BV(17842, 16), 8)), UFXP(BV(44354, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33343, 16), 8), UFXP(BV(55562, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5990, 16), 8), SFXP(SBV(-32219, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29527, 16), 8), SFXP(SBV(-17033, 16), 8)), SFXP(SBV(18976, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27787, 16), 8), SFXP(SBV(-32351, 16), 8)), SFXP(SBV(-4564, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1568, 16), 8), UFXP(BV(16750, 16), 8)), UFXP(BV(18318, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43904, 16), 8), UFXP(BV(12881, 16), 8)), UFXP(BV(56785, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50411, 16), 8), UFXP(BV(59627, 16), 8)), UFXP(BV(56320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2133, 16), 8), UFXP(BV(58702, 16), 8)), UFXP(BV(60835, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51889, 16), 8), UFXP(BV(7903, 16), 8)), UFXP(BV(59792, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31524, 16), 8), UFXP(BV(39402, 16), 8)), UFXP(BV(5390, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18452, 16), 8), SFXP(SBV(22210, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21810, 16), 8), UFXP(BV(64763, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61207, 16), 8), UFXP(BV(61752, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24998, 16), 8), UFXP(BV(44040, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12995, 16), 8), SFXP(SBV(-29066, 16), 8)), SFXP(SBV(-31888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20348, 16), 8), SFXP(SBV(-10400, 16), 8)), SFXP(SBV(25330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18006, 16), 8), UFXP(BV(55179, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28943, 16), 8), SFXP(SBV(-12120, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28386, 16), 8), SFXP(SBV(-25221, 16), 8)), SFXP(SBV(-11929, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13970, 16), 8), SFXP(SBV(28990, 16), 8)), SFXP(SBV(22576, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22792, 16), 8), SFXP(SBV(24370, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40954, 16), 8), UFXP(BV(47648, 16), 8)), UFXP(BV(58842, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15131, 16), 8), UFXP(BV(45880, 16), 8)), UFXP(BV(61011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1813, 16), 8), SFXP(SBV(12616, 16), 8)), SFXP(SBV(-14429, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7524, 16), 8), SFXP(SBV(25498, 16), 8)), SFXP(SBV(-32514, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10402, 16), 8), SFXP(SBV(-31724, 16), 8)), SFXP(SBV(21322, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9429, 16), 8), SFXP(SBV(-3527, 16), 8)), SFXP(SBV(-12956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21701, 16), 8), SFXP(SBV(-17935, 16), 8)), SFXP(SBV(13013, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61539, 16), 8), UFXP(BV(50504, 16), 8)), UFXP(BV(16330, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13716, 16), 8), SFXP(SBV(-10718, 16), 8)), SFXP(SBV(24434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19739, 16), 8), SFXP(SBV(-30206, 16), 8)), SFXP(SBV(10467, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29002, 16), 8), SFXP(SBV(-7873, 16), 8)), SFXP(SBV(21129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29966, 16), 8), SFXP(SBV(19757, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17147, 16), 8), UFXP(BV(37841, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37945, 16), 8), UFXP(BV(60673, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30525, 16), 8), SFXP(SBV(2597, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20774, 16), 8), SFXP(SBV(-4563, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53302, 16), 8), UFXP(BV(54945, 16), 8)), UFXP(BV(63893, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31383, 16), 8), UFXP(BV(48084, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26641, 16), 8), UFXP(BV(61911, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1335, 16), 8), UFXP(BV(642, 16), 8)), UFXP(BV(1977, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-574, 16), 8), SFXP(SBV(-6079, 16), 8)), SFXP(SBV(-6653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12162, 16), 8), UFXP(BV(51289, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7169, 16), 8), SFXP(SBV(11070, 16), 8)), SFXP(SBV(-17676, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32404, 16), 8), SFXP(SBV(6406, 16), 8)), SFXP(SBV(25998, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1676, 16), 8), UFXP(BV(2814, 16), 8)), UFXP(BV(64398, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30929, 16), 8), SFXP(SBV(-18752, 16), 8)), SFXP(SBV(12177, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44446, 16), 8), UFXP(BV(34232, 16), 8)), UFXP(BV(10214, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2470, 16), 8), UFXP(BV(50141, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35317, 16), 8), UFXP(BV(265, 16), 8)), UFXP(BV(36558, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57348, 16), 8), UFXP(BV(26243, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28286, 16), 8), UFXP(BV(31106, 16), 8)), UFXP(BV(62716, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47043, 16), 8), UFXP(BV(41479, 16), 8)), UFXP(BV(5564, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4364, 16), 8), SFXP(SBV(-769, 16), 8)), SFXP(SBV(5133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5820, 16), 8), SFXP(SBV(19385, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6524, 16), 8), SFXP(SBV(14712, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10365, 16), 8), UFXP(BV(3292, 16), 8)), UFXP(BV(13657, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28926, 16), 8), UFXP(BV(50647, 16), 8)), UFXP(BV(21084, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49475, 16), 8), UFXP(BV(36221, 16), 8)), UFXP(BV(13254, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14756, 16), 8), SFXP(SBV(17766, 16), 8)), SFXP(SBV(-24532, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20458, 16), 8), UFXP(BV(22696, 16), 8)), UFXP(BV(43154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7015, 16), 8), SFXP(SBV(15945, 16), 8)), SFXP(SBV(-22960, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24228, 16), 8), SFXP(SBV(-10034, 16), 8)), SFXP(SBV(-32121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4627, 16), 8), SFXP(SBV(1742, 16), 8)), SFXP(SBV(31486, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28825, 16), 8), UFXP(BV(52966, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22873, 16), 8), SFXP(SBV(-7325, 16), 8)), SFXP(SBV(-30198, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2189, 16), 8), SFXP(SBV(-20262, 16), 8)), SFXP(SBV(-22451, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16524, 16), 8), SFXP(SBV(-22121, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16634, 16), 8), SFXP(SBV(11252, 16), 8)), SFXP(SBV(5382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31979, 16), 8), SFXP(SBV(24404, 16), 8)), SFXP(SBV(7575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12208, 16), 8), SFXP(SBV(8766, 16), 8)), SFXP(SBV(20974, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4151, 16), 8), SFXP(SBV(23445, 16), 8)), SFXP(SBV(-19294, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28311, 16), 8), UFXP(BV(28587, 16), 8)), UFXP(BV(65260, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40005, 16), 8), UFXP(BV(54712, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10845, 16), 8), SFXP(SBV(-17129, 16), 8)), SFXP(SBV(4744, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9357, 16), 8), UFXP(BV(28664, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35231, 16), 8), UFXP(BV(43077, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29871, 16), 8), UFXP(BV(53677, 16), 8)), UFXP(BV(37306, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23010, 16), 8), UFXP(BV(41338, 16), 8)), UFXP(BV(64348, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44445, 16), 8), UFXP(BV(54665, 16), 8)), UFXP(BV(33574, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5924, 16), 8), SFXP(SBV(-2978, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34297, 16), 8), UFXP(BV(46997, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32459, 16), 8), SFXP(SBV(-25279, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31143, 16), 8), SFXP(SBV(9827, 16), 8)), SFXP(SBV(15829, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26405, 16), 8), SFXP(SBV(26859, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13661, 16), 8), UFXP(BV(37434, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64747, 16), 8), UFXP(BV(8777, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41786, 16), 8), UFXP(BV(61416, 16), 8)), UFXP(BV(63250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18483, 16), 8), UFXP(BV(34484, 16), 8)), UFXP(BV(52967, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6070, 16), 8), UFXP(BV(44961, 16), 8)), UFXP(BV(51031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21735, 16), 8), SFXP(SBV(-24684, 16), 8)), SFXP(SBV(2949, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-355, 16), 8), SFXP(SBV(23717, 16), 8)), SFXP(SBV(23362, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12637, 16), 8), UFXP(BV(44497, 16), 8)), UFXP(BV(33830, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46522, 16), 8), UFXP(BV(36424, 16), 8)), UFXP(BV(10098, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44905, 16), 8), UFXP(BV(61776, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(26280, 16), 8), UFXP(BV(1428, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59529, 16), 8), UFXP(BV(25, 16), 8)), UFXP(BV(5813, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24075, 16), 8), SFXP(SBV(-30072, 16), 8)), SFXP(SBV(5997, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26186, 16), 8), SFXP(SBV(-5059, 16), 8)), SFXP(SBV(31245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10583, 16), 8), UFXP(BV(60446, 16), 8)), UFXP(BV(8460, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13110, 16), 8), UFXP(BV(48348, 16), 8)), UFXP(BV(51114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16573, 16), 8), SFXP(SBV(6109, 16), 8)), SFXP(SBV(22682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18034, 16), 8), UFXP(BV(29658, 16), 8)), UFXP(BV(47692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28884, 16), 8), SFXP(SBV(-13913, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4182, 16), 8), UFXP(BV(46958, 16), 8)), UFXP(BV(51140, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20923, 16), 8), SFXP(SBV(-2304, 16), 8)), SFXP(SBV(18619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16894, 16), 8), UFXP(BV(20328, 16), 8)), UFXP(BV(62102, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30108, 16), 8), SFXP(SBV(27818, 16), 8)), SFXP(SBV(2290, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8525, 16), 8), UFXP(BV(22634, 16), 8)), UFXP(BV(31159, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55607, 16), 8), UFXP(BV(46150, 16), 8)), UFXP(BV(36221, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22868, 16), 8), SFXP(SBV(25712, 16), 8)), SFXP(SBV(-3045, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24961, 16), 8), SFXP(SBV(-11706, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24506, 16), 8), UFXP(BV(29255, 16), 8)), UFXP(BV(53761, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23628, 16), 8), UFXP(BV(28612, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28349, 16), 8), SFXP(SBV(21018, 16), 8)), SFXP(SBV(31798, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(27634, 16), 8), SFXP(SBV(29568, 16), 8)), SFXP(SBV(-19537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38779, 16), 8), UFXP(BV(30773, 16), 8)), UFXP(BV(8453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11472, 16), 8), SFXP(SBV(-8371, 16), 8)), SFXP(SBV(-19843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10032, 16), 8), SFXP(SBV(-11981, 16), 8)), SFXP(SBV(22013, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16097, 16), 8), UFXP(BV(9546, 16), 8)), UFXP(BV(6551, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25925, 16), 8), SFXP(SBV(1370, 16), 8)), SFXP(SBV(24555, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62084, 16), 8), UFXP(BV(35747, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37555, 16), 8), UFXP(BV(33170, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2435, 16), 8), SFXP(SBV(-7561, 16), 8)), SFXP(SBV(-6382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16571, 16), 8), SFXP(SBV(25659, 16), 8)), SFXP(SBV(-22520, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-789, 16), 8), SFXP(SBV(-17464, 16), 8)), SFXP(SBV(-18253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7139, 16), 8), UFXP(BV(18933, 16), 8)), UFXP(BV(26072, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48389, 16), 8), UFXP(BV(53160, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9947, 16), 8), SFXP(SBV(-3841, 16), 8)), SFXP(SBV(-13788, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30469, 16), 8), SFXP(SBV(30046, 16), 8)), SFXP(SBV(-5021, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48301, 16), 8), UFXP(BV(63831, 16), 8)), UFXP(BV(50276, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47828, 16), 8), UFXP(BV(61296, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10017, 16), 8), UFXP(BV(649, 16), 8)), UFXP(BV(9368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8782, 16), 8), UFXP(BV(60457, 16), 8)), UFXP(BV(3703, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62116, 16), 8), UFXP(BV(58338, 16), 8)), UFXP(BV(3778, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21135, 16), 8), SFXP(SBV(-18230, 16), 8)), SFXP(SBV(2905, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18124, 16), 8), SFXP(SBV(14053, 16), 8)), SFXP(SBV(-11869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30800, 16), 8), SFXP(SBV(22889, 16), 8)), SFXP(SBV(-11847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17639, 16), 8), SFXP(SBV(-6901, 16), 8)), SFXP(SBV(10738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25389, 16), 8), SFXP(SBV(-32307, 16), 8)), SFXP(SBV(6918, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17937, 16), 8), SFXP(SBV(13364, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4247, 16), 8), SFXP(SBV(7997, 16), 8)), SFXP(SBV(-3750, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28365, 16), 8), UFXP(BV(14855, 16), 8)), UFXP(BV(13510, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21543, 16), 8), SFXP(SBV(27267, 16), 8)), SFXP(SBV(5724, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5871, 16), 8), UFXP(BV(20892, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8642, 16), 8), SFXP(SBV(16375, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8269, 16), 8), SFXP(SBV(-24175, 16), 8)), SFXP(SBV(-5561, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15791, 16), 8), SFXP(SBV(5796, 16), 8)), SFXP(SBV(9995, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51613, 16), 8), UFXP(BV(42824, 16), 8)), UFXP(BV(8789, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10531, 16), 8), UFXP(BV(40939, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48123, 16), 8), UFXP(BV(19702, 16), 8)), UFXP(BV(33576, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1717, 16), 8), SFXP(SBV(-19913, 16), 8)), SFXP(SBV(-18196, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15693, 16), 8), SFXP(SBV(19708, 16), 8)), SFXP(SBV(30135, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8437, 16), 8), SFXP(SBV(-5269, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34692, 16), 8), UFXP(BV(55061, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9441, 16), 8), SFXP(SBV(-21422, 16), 8)), SFXP(SBV(30863, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3681, 16), 8), UFXP(BV(35034, 16), 8)), UFXP(BV(38715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32382, 16), 8), SFXP(SBV(-11730, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18012, 16), 8), UFXP(BV(55301, 16), 8)), UFXP(BV(7777, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4034, 16), 8), SFXP(SBV(28896, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30039, 16), 8), SFXP(SBV(-5775, 16), 8)), SFXP(SBV(29722, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40154, 16), 8), UFXP(BV(7349, 16), 8)), UFXP(BV(32805, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41886, 16), 8), UFXP(BV(44915, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6381, 16), 8), SFXP(SBV(-317, 16), 8)), SFXP(SBV(-6064, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19996, 16), 8), SFXP(SBV(12301, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14324, 16), 8), SFXP(SBV(-18920, 16), 8)), SFXP(SBV(4596, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32201, 16), 8), UFXP(BV(16288, 16), 8)), UFXP(BV(48489, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52169, 16), 8), UFXP(BV(7151, 16), 8)), UFXP(BV(59320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46072, 16), 8), UFXP(BV(28918, 16), 8)), UFXP(BV(17154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26751, 16), 8), UFXP(BV(11306, 16), 8)), UFXP(BV(38057, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26526, 16), 8), UFXP(BV(23419, 16), 8)), UFXP(BV(1778, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20829, 16), 8), SFXP(SBV(-14239, 16), 8)), SFXP(SBV(-21116, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8924, 16), 8), SFXP(SBV(-9599, 16), 8)), SFXP(SBV(6935, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17969, 16), 8), SFXP(SBV(20842, 16), 8)), SFXP(SBV(-2873, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11448, 16), 8), UFXP(BV(4753, 16), 8)), UFXP(BV(16201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21423, 16), 8), UFXP(BV(23566, 16), 8)), UFXP(BV(63393, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29380, 16), 8), SFXP(SBV(-474, 16), 8)), SFXP(SBV(29854, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-23366, 16), 8), SFXP(SBV(-27009, 16), 8)), SFXP(SBV(-25164, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7808, 16), 8), UFXP(BV(48356, 16), 8)), UFXP(BV(56164, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20794, 16), 8), SFXP(SBV(-9304, 16), 8)), SFXP(SBV(30098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26964, 16), 8), SFXP(SBV(4021, 16), 8)), SFXP(SBV(30985, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42562, 16), 8), UFXP(BV(10851, 16), 8)), UFXP(BV(34591, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49289, 16), 8), UFXP(BV(8120, 16), 8)), UFXP(BV(41169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61417, 16), 8), UFXP(BV(18058, 16), 8)), UFXP(BV(43359, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50925, 16), 8), UFXP(BV(19413, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57169, 16), 8), UFXP(BV(46597, 16), 8)), UFXP(BV(10572, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20647, 16), 8), SFXP(SBV(8329, 16), 8)), SFXP(SBV(-12318, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7785, 16), 8), UFXP(BV(36010, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19267, 16), 8), UFXP(BV(20660, 16), 8)), UFXP(BV(39927, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(2395, 16), 8), SFXP(SBV(-9886, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28965, 16), 8), SFXP(SBV(8195, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51566, 16), 8), UFXP(BV(12719, 16), 8)), UFXP(BV(38847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51166, 16), 8), UFXP(BV(58381, 16), 8)), UFXP(BV(3038, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24818, 16), 8), SFXP(SBV(-32752, 16), 8)), SFXP(SBV(-29425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56013, 16), 8), UFXP(BV(61651, 16), 8)), UFXP(BV(52128, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1530, 16), 8), SFXP(SBV(23594, 16), 8)), SFXP(SBV(-9939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(893, 16), 8), UFXP(BV(19544, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53275, 16), 8), UFXP(BV(29008, 16), 8)), UFXP(BV(24267, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11876, 16), 8), SFXP(SBV(375, 16), 8)), SFXP(SBV(-11501, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34190, 16), 8), UFXP(BV(41727, 16), 8)), UFXP(BV(10381, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2762, 16), 8), SFXP(SBV(5787, 16), 8)), SFXP(SBV(-3025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43680, 16), 8), UFXP(BV(26839, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20227, 16), 8), UFXP(BV(56806, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29593, 16), 8), SFXP(SBV(-19076, 16), 8)), SFXP(SBV(10517, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17970, 16), 8), SFXP(SBV(-19702, 16), 8)), SFXP(SBV(-1732, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7314, 16), 8), SFXP(SBV(-1462, 16), 8)), SFXP(SBV(8776, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18244, 16), 8), SFXP(SBV(-29821, 16), 8)), SFXP(SBV(28061, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1195, 16), 8), SFXP(SBV(9599, 16), 8)), SFXP(SBV(-8404, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20259, 16), 8), SFXP(SBV(-16715, 16), 8)), SFXP(SBV(-3544, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12686, 16), 8), SFXP(SBV(-32388, 16), 8)), SFXP(SBV(-19702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9214, 16), 8), SFXP(SBV(-7643, 16), 8)), SFXP(SBV(-16857, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26821, 16), 8), UFXP(BV(29974, 16), 8)), UFXP(BV(56795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35363, 16), 8), UFXP(BV(38258, 16), 8)), UFXP(BV(41955, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10208, 16), 8), UFXP(BV(4155, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23242, 16), 8), UFXP(BV(15990, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39931, 16), 8), UFXP(BV(18423, 16), 8)), UFXP(BV(21508, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40343, 16), 8), UFXP(BV(10720, 16), 8)), UFXP(BV(51063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30264, 16), 8), SFXP(SBV(5802, 16), 8)), SFXP(SBV(24462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18436, 16), 8), UFXP(BV(61873, 16), 8)), UFXP(BV(64910, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15234, 16), 8), SFXP(SBV(25307, 16), 8)), SFXP(SBV(-24995, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6314, 16), 8), UFXP(BV(24799, 16), 8)), UFXP(BV(21820, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(418, 16), 8), SFXP(SBV(23492, 16), 8)), SFXP(SBV(23910, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31657, 16), 8), SFXP(SBV(21653, 16), 8)), SFXP(SBV(-12226, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24893, 16), 8), SFXP(SBV(-25590, 16), 8)), SFXP(SBV(697, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43994, 16), 8), UFXP(BV(23767, 16), 8)), UFXP(BV(20227, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23685, 16), 8), SFXP(SBV(17863, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17292, 16), 8), SFXP(SBV(2608, 16), 8)), SFXP(SBV(20445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27359, 16), 8), UFXP(BV(37994, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(623, 16), 8), UFXP(BV(51250, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15238, 16), 8), UFXP(BV(44221, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37413, 16), 8), UFXP(BV(580, 16), 8)), UFXP(BV(19228, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24730, 16), 8), UFXP(BV(24995, 16), 8)), UFXP(BV(49725, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51857, 16), 8), UFXP(BV(54526, 16), 8)), UFXP(BV(40847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65406, 16), 8), UFXP(BV(2599, 16), 8)), UFXP(BV(62807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21698, 16), 8), SFXP(SBV(5318, 16), 8)), SFXP(SBV(-8009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3066, 16), 8), UFXP(BV(26092, 16), 8)), UFXP(BV(42510, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18036, 16), 8), SFXP(SBV(7921, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53742, 16), 8), UFXP(BV(54274, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5617, 16), 8), SFXP(SBV(-16612, 16), 8)), SFXP(SBV(10995, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31065, 16), 8), SFXP(SBV(-14297, 16), 8)), SFXP(SBV(16768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44302, 16), 8), UFXP(BV(46849, 16), 8)), UFXP(BV(62989, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12854, 16), 8), SFXP(SBV(-18352, 16), 8)), SFXP(SBV(31206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32371, 16), 8), SFXP(SBV(-13409, 16), 8)), SFXP(SBV(19756, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2210, 16), 8), SFXP(SBV(-27452, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43436, 16), 8), UFXP(BV(14794, 16), 8)), UFXP(BV(28642, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8796, 16), 8), UFXP(BV(60904, 16), 8)), UFXP(BV(4164, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11697, 16), 8), SFXP(SBV(-27662, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16493, 16), 8), UFXP(BV(53248, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15982, 16), 8), SFXP(SBV(28709, 16), 8)), SFXP(SBV(22821, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11223, 16), 8), UFXP(BV(57671, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16311, 16), 8), SFXP(SBV(-3849, 16), 8)), SFXP(SBV(-16906, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22065, 16), 8), SFXP(SBV(27620, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-849, 16), 8), SFXP(SBV(13888, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10127, 16), 8), SFXP(SBV(-24700, 16), 8)), SFXP(SBV(-5942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63308, 16), 8), UFXP(BV(49816, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61340, 16), 8), UFXP(BV(41373, 16), 8)), UFXP(BV(19967, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20617, 16), 8), UFXP(BV(47399, 16), 8)), UFXP(BV(2480, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9019, 16), 8), UFXP(BV(45616, 16), 8)), UFXP(BV(34209, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3531, 16), 8), SFXP(SBV(10179, 16), 8)), SFXP(SBV(13710, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7734, 16), 8), SFXP(SBV(-9387, 16), 8)), SFXP(SBV(-17121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27467, 16), 8), SFXP(SBV(12266, 16), 8)), SFXP(SBV(-15201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11050, 16), 8), SFXP(SBV(-25189, 16), 8)), SFXP(SBV(-26852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29876, 16), 8), UFXP(BV(33903, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19034, 16), 8), SFXP(SBV(-1928, 16), 8)), SFXP(SBV(20962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24377, 16), 8), SFXP(SBV(30313, 16), 8)), SFXP(SBV(-5936, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15256, 16), 8), SFXP(SBV(15104, 16), 8)), SFXP(SBV(17400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16075, 16), 8), UFXP(BV(61226, 16), 8)), UFXP(BV(43474, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26522, 16), 8), UFXP(BV(15858, 16), 8)), UFXP(BV(10664, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18980, 16), 8), UFXP(BV(41538, 16), 8)), UFXP(BV(64997, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19011, 16), 8), SFXP(SBV(23589, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-54, 16), 8), SFXP(SBV(19435, 16), 8)), SFXP(SBV(-19489, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-5227, 16), 8), SFXP(SBV(26496, 16), 8)), SFXP(SBV(-16706, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(34264, 16), 8), UFXP(BV(42288, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9933, 16), 8), SFXP(SBV(10151, 16), 8)), SFXP(SBV(218, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41207, 16), 8), UFXP(BV(14918, 16), 8)), UFXP(BV(26289, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17052, 16), 8), UFXP(BV(44162, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1538, 16), 8), SFXP(SBV(642, 16), 8)), SFXP(SBV(3857, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35177, 16), 8), UFXP(BV(23270, 16), 8)), UFXP(BV(51806, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36719, 16), 8), UFXP(BV(53497, 16), 8)), UFXP(BV(5555, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32767, 16), 8), SFXP(SBV(11031, 16), 8)), SFXP(SBV(-21738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27759, 16), 8), SFXP(SBV(-3856, 16), 8)), SFXP(SBV(-31615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4070, 16), 8), SFXP(SBV(-22546, 16), 8)), SFXP(SBV(-18476, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-679, 16), 8), SFXP(SBV(-16371, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(360, 16), 8), UFXP(BV(13639, 16), 8)), UFXP(BV(19179, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22998, 16), 8), UFXP(BV(1620, 16), 8)), UFXP(BV(14463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16886, 16), 8), UFXP(BV(45897, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24539, 16), 8), SFXP(SBV(13698, 16), 8)), SFXP(SBV(-10841, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29756, 16), 8), SFXP(SBV(-17328, 16), 8)), SFXP(SBV(17507, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18814, 16), 8), SFXP(SBV(-24682, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29071, 16), 8), UFXP(BV(41494, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1745, 16), 8), SFXP(SBV(-13242, 16), 8)), SFXP(SBV(-11497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14968, 16), 8), SFXP(SBV(18436, 16), 8)), SFXP(SBV(-32132, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1607, 16), 8), SFXP(SBV(19282, 16), 8)), SFXP(SBV(20889, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28105, 16), 8), SFXP(SBV(-6599, 16), 8)), SFXP(SBV(-3577, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6170, 16), 8), UFXP(BV(14028, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37309, 16), 8), UFXP(BV(64557, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11257, 16), 8), UFXP(BV(25467, 16), 8)), UFXP(BV(36724, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15637, 16), 8), UFXP(BV(63152, 16), 8)), UFXP(BV(18021, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22384, 16), 8), SFXP(SBV(-22553, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19671, 16), 8), SFXP(SBV(-10769, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29285, 16), 8), UFXP(BV(4366, 16), 8)), UFXP(BV(40695, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48702, 16), 8), UFXP(BV(48270, 16), 8)), UFXP(BV(31436, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22174, 16), 8), SFXP(SBV(22266, 16), 8)), SFXP(SBV(-92, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8225, 16), 8), SFXP(SBV(28463, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27829, 16), 8), SFXP(SBV(18759, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28538, 16), 8), UFXP(BV(38300, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23587, 16), 8), SFXP(SBV(21123, 16), 8)), SFXP(SBV(-2464, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1584, 16), 8), UFXP(BV(40042, 16), 8)), UFXP(BV(41626, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18371, 16), 8), SFXP(SBV(16194, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(574, 16), 8), SFXP(SBV(24500, 16), 8)), SFXP(SBV(-23926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44028, 16), 8), UFXP(BV(60360, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31639, 16), 8), SFXP(SBV(-24317, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30647, 16), 8), SFXP(SBV(17514, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(27925, 16), 8), SFXP(SBV(14177, 16), 8)), SFXP(SBV(-26409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-17097, 16), 8), SFXP(SBV(14105, 16), 8)), SFXP(SBV(-24500, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6137, 16), 8), UFXP(BV(19063, 16), 8)), UFXP(BV(25200, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40097, 16), 8), UFXP(BV(33849, 16), 8)), UFXP(BV(8410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25397, 16), 8), SFXP(SBV(3491, 16), 8)), SFXP(SBV(21906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51701, 16), 8), UFXP(BV(61318, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5528, 16), 8), UFXP(BV(5242, 16), 8)), UFXP(BV(286, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27222, 16), 8), SFXP(SBV(-14233, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10095, 16), 8), SFXP(SBV(6946, 16), 8)), SFXP(SBV(11762, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5206, 16), 8), UFXP(BV(12063, 16), 8)), UFXP(BV(48705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34213, 16), 8), UFXP(BV(17757, 16), 8)), UFXP(BV(51970, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12394, 16), 8), SFXP(SBV(-32450, 16), 8)), SFXP(SBV(20056, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(840, 16), 8), SFXP(SBV(-17384, 16), 8)), SFXP(SBV(-16544, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9863, 16), 8), SFXP(SBV(19974, 16), 8)), SFXP(SBV(-10111, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-8645, 16), 8), SFXP(SBV(26021, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23852, 16), 8), SFXP(SBV(8965, 16), 8)), SFXP(SBV(14887, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12442, 16), 8), SFXP(SBV(32323, 16), 8)), SFXP(SBV(-19881, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29227, 16), 8), UFXP(BV(43176, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2118, 16), 8), SFXP(SBV(630, 16), 8)), SFXP(SBV(-5212, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28842, 16), 8), SFXP(SBV(2049, 16), 8)), SFXP(SBV(-30891, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63638, 16), 8), UFXP(BV(47055, 16), 8)), UFXP(BV(31803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10034, 16), 8), SFXP(SBV(9431, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38014, 16), 8), UFXP(BV(8156, 16), 8)), UFXP(BV(31454, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2587, 16), 8), UFXP(BV(30979, 16), 8)), UFXP(BV(33566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55236, 16), 8), UFXP(BV(51253, 16), 8)), UFXP(BV(3983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18935, 16), 8), UFXP(BV(14004, 16), 8)), UFXP(BV(4931, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3406, 16), 8), SFXP(SBV(-24083, 16), 8)), SFXP(SBV(-27489, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5620, 16), 8), UFXP(BV(10135, 16), 8)), UFXP(BV(15755, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54063, 16), 8), UFXP(BV(9825, 16), 8)), UFXP(BV(63888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48274, 16), 8), UFXP(BV(52381, 16), 8)), UFXP(BV(47101, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64604, 16), 8), UFXP(BV(23781, 16), 8)), UFXP(BV(22849, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47429, 16), 8), UFXP(BV(2874, 16), 8)), UFXP(BV(50303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23272, 16), 8), SFXP(SBV(24618, 16), 8)), SFXP(SBV(-1346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38558, 16), 8), UFXP(BV(37557, 16), 8)), UFXP(BV(1001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3077, 16), 8), SFXP(SBV(-12981, 16), 8)), SFXP(SBV(-9904, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19483, 16), 8), UFXP(BV(46518, 16), 8)), UFXP(BV(465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25577, 16), 8), SFXP(SBV(-12490, 16), 8)), SFXP(SBV(-27469, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28111, 16), 8), SFXP(SBV(2184, 16), 8)), SFXP(SBV(-30295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7750, 16), 8), SFXP(SBV(5336, 16), 8)), SFXP(SBV(-2414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38118, 16), 8), UFXP(BV(39181, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10308, 16), 8), SFXP(SBV(-20361, 16), 8)), SFXP(SBV(30669, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5519, 16), 8), SFXP(SBV(11335, 16), 8)), SFXP(SBV(-17778, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13283, 16), 8), SFXP(SBV(-18883, 16), 8)), SFXP(SBV(-5600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48000, 16), 8), UFXP(BV(24678, 16), 8)), UFXP(BV(23322, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19980, 16), 8), UFXP(BV(63790, 16), 8)), UFXP(BV(21726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31855, 16), 8), SFXP(SBV(22908, 16), 8)), SFXP(SBV(-10773, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-3607, 16), 8), SFXP(SBV(28207, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31024, 16), 8), SFXP(SBV(-14992, 16), 8)), SFXP(SBV(19520, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1683, 16), 8), SFXP(SBV(18281, 16), 8)), SFXP(SBV(16598, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29701, 16), 8), UFXP(BV(34320, 16), 8)), UFXP(BV(60917, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52931, 16), 8), UFXP(BV(60385, 16), 8)), UFXP(BV(58082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56720, 16), 8), UFXP(BV(35224, 16), 8)), UFXP(BV(5533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11051, 16), 8), SFXP(SBV(-22498, 16), 8)), SFXP(SBV(11447, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6629, 16), 8), UFXP(BV(19572, 16), 8)), UFXP(BV(52593, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29169, 16), 8), SFXP(SBV(-22666, 16), 8)), SFXP(SBV(-6503, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40292, 16), 8), UFXP(BV(60031, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-9774, 16), 8), SFXP(SBV(-15805, 16), 8)), SFXP(SBV(13606, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28735, 16), 8), SFXP(SBV(22399, 16), 8)), SFXP(SBV(6336, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17662, 16), 8), SFXP(SBV(-3388, 16), 8)), SFXP(SBV(14274, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18309, 16), 8), UFXP(BV(60645, 16), 8)), UFXP(BV(11926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55328, 16), 8), UFXP(BV(35098, 16), 8)), UFXP(BV(20230, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25125, 16), 8), SFXP(SBV(22877, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15367, 16), 8), SFXP(SBV(-32397, 16), 8)), SFXP(SBV(17772, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49280, 16), 8), UFXP(BV(44905, 16), 8)), UFXP(BV(4375, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12119, 16), 8), SFXP(SBV(27101, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40431, 16), 8), UFXP(BV(34000, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33054, 16), 8), UFXP(BV(15863, 16), 8)), UFXP(BV(17191, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55983, 16), 8), UFXP(BV(543, 16), 8)), UFXP(BV(56526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17280, 16), 8), SFXP(SBV(-23700, 16), 8)), SFXP(SBV(26886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32540, 16), 8), SFXP(SBV(30009, 16), 8)), SFXP(SBV(-2531, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30086, 16), 8), SFXP(SBV(-14076, 16), 8)), SFXP(SBV(15860, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16726, 16), 8), SFXP(SBV(-13259, 16), 8)), SFXP(SBV(3467, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29019, 16), 8), UFXP(BV(64705, 16), 8)), UFXP(BV(60169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48982, 16), 8), UFXP(BV(21991, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22834, 16), 8), SFXP(SBV(-12630, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(27730, 16), 8), SFXP(SBV(-9616, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-23589, 16), 8), SFXP(SBV(-5145, 16), 8)), SFXP(SBV(15331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24621, 16), 8), SFXP(SBV(-18342, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13638, 16), 8), UFXP(BV(1020, 16), 8)), UFXP(BV(14658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9038, 16), 8), SFXP(SBV(-29327, 16), 8)), SFXP(SBV(-13196, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19773, 16), 8), SFXP(SBV(19000, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19058, 16), 8), SFXP(SBV(24096, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23917, 16), 8), SFXP(SBV(-4060, 16), 8)), SFXP(SBV(13907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33253, 16), 8), UFXP(BV(53489, 16), 8)), UFXP(BV(21206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21182, 16), 8), SFXP(SBV(-31183, 16), 8)), SFXP(SBV(-10001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28968, 16), 8), SFXP(SBV(19417, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33839, 16), 8), UFXP(BV(15506, 16), 8)), UFXP(BV(49345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12525, 16), 8), UFXP(BV(15527, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3311, 16), 8), SFXP(SBV(643, 16), 8)), SFXP(SBV(8316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27570, 16), 8), SFXP(SBV(19713, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7319, 16), 8), SFXP(SBV(30437, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53830, 16), 8), UFXP(BV(26742, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1707, 16), 8), SFXP(SBV(5958, 16), 8)), SFXP(SBV(4251, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35250, 16), 8), UFXP(BV(44698, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31374, 16), 8), SFXP(SBV(26547, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25272, 16), 8), UFXP(BV(37183, 16), 8)), UFXP(BV(53625, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17955, 16), 8), SFXP(SBV(-32266, 16), 8)), SFXP(SBV(30729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27149, 16), 8), SFXP(SBV(32237, 16), 8)), SFXP(SBV(-10887, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18369, 16), 8), SFXP(SBV(-19260, 16), 8)), SFXP(SBV(5724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22509, 16), 8), SFXP(SBV(-26486, 16), 8)), SFXP(SBV(30493, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8112, 16), 8), UFXP(BV(47912, 16), 8)), UFXP(BV(25736, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26425, 16), 8), UFXP(BV(17381, 16), 8)), UFXP(BV(43806, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35860, 16), 8), UFXP(BV(60573, 16), 8)), UFXP(BV(30809, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22682, 16), 8), SFXP(SBV(-3636, 16), 8)), SFXP(SBV(-19046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21672, 16), 8), SFXP(SBV(-4306, 16), 8)), SFXP(SBV(-17366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26976, 16), 8), SFXP(SBV(-23798, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49925, 16), 8), UFXP(BV(36161, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15292, 16), 8), SFXP(SBV(-10242, 16), 8)), SFXP(SBV(-25534, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22592, 16), 8), SFXP(SBV(-22932, 16), 8)), SFXP(SBV(340, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28931, 16), 8), UFXP(BV(3033, 16), 8)), UFXP(BV(15085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30182, 16), 8), SFXP(SBV(-8078, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28155, 16), 8), SFXP(SBV(6274, 16), 8)), SFXP(SBV(30878, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5677, 16), 8), UFXP(BV(21996, 16), 8)), UFXP(BV(29027, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(32704, 16), 8), SFXP(SBV(17146, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22331, 16), 8), SFXP(SBV(-12602, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16143, 16), 8), SFXP(SBV(4064, 16), 8)), SFXP(SBV(12079, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5970, 16), 8), SFXP(SBV(-13924, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24065, 16), 8), SFXP(SBV(32376, 16), 8)), SFXP(SBV(8311, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2801, 16), 8), SFXP(SBV(9752, 16), 8)), SFXP(SBV(-24372, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23660, 16), 8), SFXP(SBV(-17427, 16), 8)), SFXP(SBV(-24449, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14113, 16), 8), SFXP(SBV(-12670, 16), 8)), SFXP(SBV(-1443, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33070, 16), 8), UFXP(BV(28032, 16), 8)), UFXP(BV(61102, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44509, 16), 8), UFXP(BV(46155, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8536, 16), 8), UFXP(BV(24292, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13627, 16), 8), SFXP(SBV(-18512, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34013, 16), 8), UFXP(BV(19346, 16), 8)), UFXP(BV(14667, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12124, 16), 8), SFXP(SBV(3714, 16), 8)), SFXP(SBV(15838, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2127, 16), 8), UFXP(BV(29197, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-25371, 16), 8), SFXP(SBV(-29985, 16), 8)), SFXP(SBV(22558, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8156, 16), 8), UFXP(BV(8175, 16), 8)), UFXP(BV(16331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33982, 16), 8), UFXP(BV(4993, 16), 8)), UFXP(BV(28989, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6205, 16), 8), SFXP(SBV(2694, 16), 8)), SFXP(SBV(-3511, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26840, 16), 8), UFXP(BV(50793, 16), 8)), UFXP(BV(16913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(1038, 16), 8), SFXP(SBV(-30784, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19903, 16), 8), SFXP(SBV(-26396, 16), 8)), SFXP(SBV(19237, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25403, 16), 8), UFXP(BV(56367, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3757, 16), 8), SFXP(SBV(-27141, 16), 8)), SFXP(SBV(-30898, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(32332, 16), 8), SFXP(SBV(15294, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20515, 16), 8), SFXP(SBV(17124, 16), 8)), SFXP(SBV(3995, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1029, 16), 8), SFXP(SBV(-22443, 16), 8)), SFXP(SBV(21414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53762, 16), 8), UFXP(BV(11004, 16), 8)), UFXP(BV(42758, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11219, 16), 8), SFXP(SBV(27573, 16), 8)), SFXP(SBV(16354, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28680, 16), 8), SFXP(SBV(17434, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28946, 16), 8), SFXP(SBV(-9683, 16), 8)), SFXP(SBV(26907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2742, 16), 8), SFXP(SBV(-25327, 16), 8)), SFXP(SBV(-22585, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44999, 16), 8), UFXP(BV(38229, 16), 8)), UFXP(BV(6770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5049, 16), 8), SFXP(SBV(-20778, 16), 8)), SFXP(SBV(15729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13682, 16), 8), SFXP(SBV(6030, 16), 8)), SFXP(SBV(19712, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14199, 16), 8), SFXP(SBV(11443, 16), 8)), SFXP(SBV(-2756, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6522, 16), 8), UFXP(BV(38210, 16), 8)), UFXP(BV(44732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21356, 16), 8), UFXP(BV(64362, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9352, 16), 8), UFXP(BV(45208, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12583, 16), 8), UFXP(BV(14310, 16), 8)), UFXP(BV(26893, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20689, 16), 8), SFXP(SBV(-23371, 16), 8)), SFXP(SBV(-2682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37344, 16), 8), UFXP(BV(42187, 16), 8)), UFXP(BV(13995, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18368, 16), 8), SFXP(SBV(-8091, 16), 8)), SFXP(SBV(26459, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15671, 16), 8), SFXP(SBV(28698, 16), 8)), SFXP(SBV(-13027, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5883, 16), 8), UFXP(BV(11877, 16), 8)), UFXP(BV(17760, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25337, 16), 8), SFXP(SBV(-2023, 16), 8)), SFXP(SBV(23314, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3418, 16), 8), UFXP(BV(25957, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21472, 16), 8), SFXP(SBV(-25701, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59871, 16), 8), UFXP(BV(13870, 16), 8)), UFXP(BV(46001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10859, 16), 8), SFXP(SBV(26417, 16), 8)), SFXP(SBV(-15558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26109, 16), 8), SFXP(SBV(31812, 16), 8)), SFXP(SBV(32349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53511, 16), 8), UFXP(BV(15160, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27418, 16), 8), UFXP(BV(19003, 16), 8)), UFXP(BV(46421, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11771, 16), 8), UFXP(BV(20475, 16), 8)), UFXP(BV(23946, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12394, 16), 8), UFXP(BV(10973, 16), 8)), UFXP(BV(6959, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15711, 16), 8), SFXP(SBV(24804, 16), 8)), SFXP(SBV(25021, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31900, 16), 8), UFXP(BV(28330, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18872, 16), 8), UFXP(BV(49837, 16), 8)), UFXP(BV(3173, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45285, 16), 8), UFXP(BV(35169, 16), 8)), UFXP(BV(14918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51062, 16), 8), UFXP(BV(64415, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14028, 16), 8), SFXP(SBV(-30182, 16), 8)), SFXP(SBV(21326, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39677, 16), 8), UFXP(BV(9612, 16), 8)), UFXP(BV(30065, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31208, 16), 8), UFXP(BV(10525, 16), 8)), UFXP(BV(20683, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36820, 16), 8), UFXP(BV(774, 16), 8)), UFXP(BV(36046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1870, 16), 8), SFXP(SBV(-23129, 16), 8)), SFXP(SBV(24999, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17441, 16), 8), UFXP(BV(16885, 16), 8)), UFXP(BV(34326, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(7463, 16), 8), UFXP(BV(13879, 16), 8)), UFXP(BV(11389, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47319, 16), 8), UFXP(BV(41786, 16), 8)), UFXP(BV(5533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20594, 16), 8), SFXP(SBV(6280, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19497, 16), 8), SFXP(SBV(-15501, 16), 8)), SFXP(SBV(-3996, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26846, 16), 8), UFXP(BV(56227, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12683, 16), 8), UFXP(BV(52001, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44132, 16), 8), UFXP(BV(22982, 16), 8)), UFXP(BV(1578, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23896, 16), 8), UFXP(BV(29642, 16), 8)), UFXP(BV(14384, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4845, 16), 8), SFXP(SBV(267, 16), 8)), SFXP(SBV(-4578, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10588, 16), 8), SFXP(SBV(15516, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55441, 16), 8), UFXP(BV(54635, 16), 8)), UFXP(BV(806, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25488, 16), 8), SFXP(SBV(-8646, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30131, 16), 8), SFXP(SBV(32462, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20808, 16), 8), UFXP(BV(56724, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25669, 16), 8), SFXP(SBV(16523, 16), 8)), SFXP(SBV(-9146, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58588, 16), 8), UFXP(BV(13793, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(28743, 16), 8), SFXP(SBV(401, 16), 8)), SFXP(SBV(-20512, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28557, 16), 8), SFXP(SBV(-30850, 16), 8)), SFXP(SBV(-2293, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22062, 16), 8), SFXP(SBV(-27609, 16), 8)), SFXP(SBV(15865, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3619, 16), 8), SFXP(SBV(-10457, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22965, 16), 8), SFXP(SBV(-30492, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23419, 16), 8), UFXP(BV(54036, 16), 8)), UFXP(BV(28038, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42602, 16), 8), UFXP(BV(43715, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17490, 16), 8), SFXP(SBV(376, 16), 8)), SFXP(SBV(17866, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31188, 16), 8), UFXP(BV(3130, 16), 8)), UFXP(BV(53643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25643, 16), 8), SFXP(SBV(1298, 16), 8)), SFXP(SBV(-24345, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10598, 16), 8), SFXP(SBV(31582, 16), 8)), SFXP(SBV(3274, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23899, 16), 8), SFXP(SBV(13994, 16), 8)), SFXP(SBV(9905, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26376, 16), 8), SFXP(SBV(28546, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46221, 16), 8), UFXP(BV(19255, 16), 8)), UFXP(BV(65476, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10180, 16), 8), SFXP(SBV(14419, 16), 8)), SFXP(SBV(16443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13610, 16), 8), SFXP(SBV(4233, 16), 8)), SFXP(SBV(17843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15946, 16), 8), SFXP(SBV(-29433, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61380, 16), 8), UFXP(BV(34946, 16), 8)), UFXP(BV(26434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26690, 16), 8), SFXP(SBV(-27055, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24747, 16), 8), UFXP(BV(37271, 16), 8)), UFXP(BV(62018, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(1788, 16), 8), SFXP(SBV(29523, 16), 8)), SFXP(SBV(9592, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3976, 16), 8), SFXP(SBV(27785, 16), 8)), SFXP(SBV(31761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1512, 16), 8), SFXP(SBV(30398, 16), 8)), SFXP(SBV(28886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23460, 16), 8), SFXP(SBV(17053, 16), 8)), SFXP(SBV(-6407, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6322, 16), 8), SFXP(SBV(-14308, 16), 8)), SFXP(SBV(-25660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53609, 16), 8), UFXP(BV(12939, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24737, 16), 8), UFXP(BV(21552, 16), 8)), UFXP(BV(3185, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11408, 16), 8), SFXP(SBV(1955, 16), 8)), SFXP(SBV(21583, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9697, 16), 8), UFXP(BV(38001, 16), 8)), UFXP(BV(47698, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9601, 16), 8), UFXP(BV(36772, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40917, 16), 8), UFXP(BV(24808, 16), 8)), UFXP(BV(189, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22393, 16), 8), SFXP(SBV(13311, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4794, 16), 8), SFXP(SBV(16715, 16), 8)), SFXP(SBV(-21509, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(502, 16), 8), SFXP(SBV(-8106, 16), 8)), SFXP(SBV(-15896, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26160, 16), 8), SFXP(SBV(-21845, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5146, 16), 8), SFXP(SBV(10582, 16), 8)), SFXP(SBV(15728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8688, 16), 8), SFXP(SBV(19023, 16), 8)), SFXP(SBV(-27711, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17336, 16), 8), SFXP(SBV(-29493, 16), 8)), SFXP(SBV(12157, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21727, 16), 8), SFXP(SBV(-2928, 16), 8)), SFXP(SBV(18799, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6529, 16), 8), SFXP(SBV(13983, 16), 8)), SFXP(SBV(-7454, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45745, 16), 8), UFXP(BV(9924, 16), 8)), UFXP(BV(55669, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(7669, 16), 8), UFXP(BV(32629, 16), 8)), UFXP(BV(59963, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11486, 16), 8), SFXP(SBV(-19720, 16), 8)), SFXP(SBV(-31206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9860, 16), 8), SFXP(SBV(15030, 16), 8)), SFXP(SBV(5170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24330, 16), 8), SFXP(SBV(-31544, 16), 8)), SFXP(SBV(7214, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(1686, 16), 8), SFXP(SBV(26227, 16), 8)), SFXP(SBV(-23878, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4134, 16), 8), UFXP(BV(3979, 16), 8)), UFXP(BV(8113, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31029, 16), 8), SFXP(SBV(-12920, 16), 8)), SFXP(SBV(18109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15404, 16), 8), SFXP(SBV(-27473, 16), 8)), SFXP(SBV(-12069, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31691, 16), 8), SFXP(SBV(-29896, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23416, 16), 8), UFXP(BV(27233, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3828, 16), 8), SFXP(SBV(-16511, 16), 8)), SFXP(SBV(20339, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59622, 16), 8), UFXP(BV(64443, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14490, 16), 8), SFXP(SBV(-149, 16), 8)), SFXP(SBV(14341, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14298, 16), 8), SFXP(SBV(-12771, 16), 8)), SFXP(SBV(1527, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55457, 16), 8), UFXP(BV(56344, 16), 8)), UFXP(BV(64649, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(16793, 16), 8), SFXP(SBV(-15715, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33299, 16), 8), UFXP(BV(44282, 16), 8)), UFXP(BV(54553, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59708, 16), 8), UFXP(BV(16405, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-114, 16), 8), SFXP(SBV(-18041, 16), 8)), SFXP(SBV(17927, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-24053, 16), 8), SFXP(SBV(26005, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46890, 16), 8), UFXP(BV(50575, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23422, 16), 8), SFXP(SBV(-25184, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3214, 16), 8), UFXP(BV(8468, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27918, 16), 8), UFXP(BV(58894, 16), 8)), UFXP(BV(21276, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7658, 16), 8), UFXP(BV(61029, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21401, 16), 8), SFXP(SBV(-26733, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7843, 16), 8), SFXP(SBV(-25693, 16), 8)), SFXP(SBV(17850, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37336, 16), 8), UFXP(BV(65216, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50224, 16), 8), UFXP(BV(177, 16), 8)), UFXP(BV(34725, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32169, 16), 8), UFXP(BV(39831, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13513, 16), 8), UFXP(BV(40705, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23710, 16), 8), UFXP(BV(3706, 16), 8)), UFXP(BV(15559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59744, 16), 8), UFXP(BV(37437, 16), 8)), UFXP(BV(22307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5743, 16), 8), SFXP(SBV(27864, 16), 8)), SFXP(SBV(-22121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27231, 16), 8), SFXP(SBV(29314, 16), 8)), SFXP(SBV(2083, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29078, 16), 8), SFXP(SBV(10386, 16), 8)), SFXP(SBV(-26072, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(439, 16), 8), UFXP(BV(45281, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28707, 16), 8), SFXP(SBV(-19584, 16), 8)), SFXP(SBV(17245, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18386, 16), 8), SFXP(SBV(31857, 16), 8)), SFXP(SBV(5781, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2390, 16), 8), SFXP(SBV(11964, 16), 8)), SFXP(SBV(-9574, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1897, 16), 8), SFXP(SBV(18487, 16), 8)), SFXP(SBV(-5919, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8396, 16), 8), UFXP(BV(20275, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22376, 16), 8), UFXP(BV(25398, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(20573, 16), 8), UFXP(BV(13136, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53229, 16), 8), UFXP(BV(65126, 16), 8)), UFXP(BV(52819, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22474, 16), 8), SFXP(SBV(-17365, 16), 8)), SFXP(SBV(25697, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31833, 16), 8), SFXP(SBV(-2916, 16), 8)), SFXP(SBV(28917, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16808, 16), 8), SFXP(SBV(-12825, 16), 8)), SFXP(SBV(-29633, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15935, 16), 8), SFXP(SBV(31836, 16), 8)), SFXP(SBV(-15901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26543, 16), 8), SFXP(SBV(-17741, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48760, 16), 8), UFXP(BV(34576, 16), 8)), UFXP(BV(32047, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6822, 16), 8), SFXP(SBV(-4657, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1181, 16), 8), SFXP(SBV(-19089, 16), 8)), SFXP(SBV(20270, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51476, 16), 8), UFXP(BV(58113, 16), 8)), UFXP(BV(44053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27808, 16), 8), UFXP(BV(4103, 16), 8)), UFXP(BV(31911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5508, 16), 8), SFXP(SBV(-1110, 16), 8)), SFXP(SBV(-23882, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18065, 16), 8), SFXP(SBV(-7285, 16), 8)), SFXP(SBV(10780, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27242, 16), 8), SFXP(SBV(8908, 16), 8)), SFXP(SBV(29386, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17022, 16), 8), SFXP(SBV(-25554, 16), 8)), SFXP(SBV(8532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12373, 16), 8), SFXP(SBV(-11891, 16), 8)), SFXP(SBV(-482, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14799, 16), 8), SFXP(SBV(10319, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10626, 16), 8), SFXP(SBV(3018, 16), 8)), SFXP(SBV(7608, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27885, 16), 8), UFXP(BV(1573, 16), 8)), UFXP(BV(26312, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25058, 16), 8), UFXP(BV(52589, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5325, 16), 8), SFXP(SBV(-27417, 16), 8)), SFXP(SBV(-32742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18189, 16), 8), UFXP(BV(12149, 16), 8)), UFXP(BV(30338, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48522, 16), 8), UFXP(BV(15863, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24942, 16), 8), SFXP(SBV(-29166, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22489, 16), 8), SFXP(SBV(6687, 16), 8)), SFXP(SBV(-29176, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21361, 16), 8), UFXP(BV(1991, 16), 8)), UFXP(BV(23352, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5687, 16), 8), SFXP(SBV(-18989, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19932, 16), 8), SFXP(SBV(-12096, 16), 8)), SFXP(SBV(-32028, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35553, 16), 8), UFXP(BV(20451, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15740, 16), 8), SFXP(SBV(-7736, 16), 8)), SFXP(SBV(23476, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30650, 16), 8), SFXP(SBV(24597, 16), 8)), SFXP(SBV(4206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16677, 16), 8), SFXP(SBV(31922, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7628, 16), 8), SFXP(SBV(-15244, 16), 8)), SFXP(SBV(7616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30805, 16), 8), SFXP(SBV(11557, 16), 8)), SFXP(SBV(-19248, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24242, 16), 8), SFXP(SBV(-4451, 16), 8)), SFXP(SBV(28693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25087, 16), 8), UFXP(BV(44863, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49692, 16), 8), UFXP(BV(62042, 16), 8)), UFXP(BV(46198, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38049, 16), 8), UFXP(BV(21908, 16), 8)), UFXP(BV(59957, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41802, 16), 8), UFXP(BV(37466, 16), 8)), UFXP(BV(13732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36580, 16), 8), UFXP(BV(36548, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5847, 16), 8), SFXP(SBV(28792, 16), 8)), SFXP(SBV(22945, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6286, 16), 8), SFXP(SBV(-240, 16), 8)), SFXP(SBV(-6526, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19839, 16), 8), UFXP(BV(12216, 16), 8)), UFXP(BV(7623, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31799, 16), 8), SFXP(SBV(-4383, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27365, 16), 8), SFXP(SBV(7762, 16), 8)), SFXP(SBV(-30409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17811, 16), 8), SFXP(SBV(15157, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10079, 16), 8), UFXP(BV(37712, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24752, 16), 8), SFXP(SBV(-16200, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20763, 16), 8), UFXP(BV(12303, 16), 8)), UFXP(BV(33066, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6406, 16), 8), SFXP(SBV(8067, 16), 8)), SFXP(SBV(-5256, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32271, 16), 8), SFXP(SBV(-28320, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24053, 16), 8), SFXP(SBV(-6081, 16), 8)), SFXP(SBV(17972, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2735, 16), 8), SFXP(SBV(-32303, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15039, 16), 8), SFXP(SBV(29602, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53361, 16), 8), UFXP(BV(33073, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18357, 16), 8), SFXP(SBV(-9153, 16), 8)), SFXP(SBV(9204, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35115, 16), 8), UFXP(BV(43787, 16), 8)), UFXP(BV(42398, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1846, 16), 8), SFXP(SBV(-17956, 16), 8)), SFXP(SBV(-19802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14168, 16), 8), SFXP(SBV(-8514, 16), 8)), SFXP(SBV(-12444, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29547, 16), 8), SFXP(SBV(15374, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10254, 16), 8), SFXP(SBV(23371, 16), 8)), SFXP(SBV(-31911, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15259, 16), 8), UFXP(BV(56579, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9720, 16), 8), SFXP(SBV(9918, 16), 8)), SFXP(SBV(-198, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43366, 16), 8), UFXP(BV(56139, 16), 8)), UFXP(BV(7139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10579, 16), 8), SFXP(SBV(6396, 16), 8)), SFXP(SBV(16975, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23587, 16), 8), SFXP(SBV(29554, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30784, 16), 8), SFXP(SBV(-1941, 16), 8)), SFXP(SBV(-28843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27598, 16), 8), SFXP(SBV(-11846, 16), 8)), SFXP(SBV(26092, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10400, 16), 8), UFXP(BV(52810, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45590, 16), 8), UFXP(BV(15413, 16), 8)), UFXP(BV(30177, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(160, 16), 8), UFXP(BV(46767, 16), 8)), UFXP(BV(18929, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22908, 16), 8), UFXP(BV(28963, 16), 8)), UFXP(BV(59481, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16773, 16), 8), UFXP(BV(9264, 16), 8)), UFXP(BV(17148, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29965, 16), 8), SFXP(SBV(4885, 16), 8)), SFXP(SBV(25080, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1853, 16), 8), SFXP(SBV(-18106, 16), 8)), SFXP(SBV(16253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37312, 16), 8), UFXP(BV(46610, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31266, 16), 8), SFXP(SBV(31095, 16), 8)), SFXP(SBV(171, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58047, 16), 8), UFXP(BV(61035, 16), 8)), UFXP(BV(53546, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26868, 16), 8), SFXP(SBV(12924, 16), 8)), SFXP(SBV(13944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36198, 16), 8), UFXP(BV(53297, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16397, 16), 8), SFXP(SBV(19001, 16), 8)), SFXP(SBV(28156, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62356, 16), 8), UFXP(BV(42166, 16), 8)), UFXP(BV(20190, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26454, 16), 8), UFXP(BV(56341, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15252, 16), 8), UFXP(BV(51673, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12027, 16), 8), SFXP(SBV(-5212, 16), 8)), SFXP(SBV(6815, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4648, 16), 8), SFXP(SBV(24694, 16), 8)), SFXP(SBV(20046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6435, 16), 8), UFXP(BV(47623, 16), 8)), UFXP(BV(17438, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-5124, 16), 8), SFXP(SBV(30123, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4151, 16), 8), SFXP(SBV(10973, 16), 8)), SFXP(SBV(-18682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4624, 16), 8), SFXP(SBV(-21423, 16), 8)), SFXP(SBV(-6264, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63879, 16), 8), UFXP(BV(64870, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28830, 16), 8), SFXP(SBV(-20677, 16), 8)), SFXP(SBV(-16029, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2667, 16), 8), SFXP(SBV(-1367, 16), 8)), SFXP(SBV(-1300, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4630, 16), 8), UFXP(BV(6320, 16), 8)), UFXP(BV(10950, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23987, 16), 8), SFXP(SBV(-23871, 16), 8)), SFXP(SBV(116, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44650, 16), 8), UFXP(BV(10474, 16), 8)), UFXP(BV(55124, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17067, 16), 8), SFXP(SBV(18139, 16), 8)), SFXP(SBV(-1072, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15653, 16), 8), UFXP(BV(27124, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21223, 16), 8), SFXP(SBV(26601, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1869, 16), 8), UFXP(BV(5390, 16), 8)), UFXP(BV(39352, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1829, 16), 8), SFXP(SBV(19953, 16), 8)), SFXP(SBV(-21782, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27158, 16), 8), SFXP(SBV(31193, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16738, 16), 8), SFXP(SBV(6840, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9121, 16), 8), UFXP(BV(44370, 16), 8)), UFXP(BV(7990, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27347, 16), 8), UFXP(BV(59907, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11799, 16), 8), UFXP(BV(64187, 16), 8)), UFXP(BV(9249, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25171, 16), 8), SFXP(SBV(27354, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6503, 16), 8), SFXP(SBV(26800, 16), 8)), SFXP(SBV(-20297, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31911, 16), 8), UFXP(BV(46224, 16), 8)), UFXP(BV(12599, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9241, 16), 8), SFXP(SBV(-28159, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51112, 16), 8), UFXP(BV(20561, 16), 8)), UFXP(BV(41900, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16669, 16), 8), SFXP(SBV(24656, 16), 8)), SFXP(SBV(24211, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2237, 16), 8), SFXP(SBV(1388, 16), 8)), SFXP(SBV(-849, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30394, 16), 8), SFXP(SBV(29707, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34398, 16), 8), UFXP(BV(11500, 16), 8)), UFXP(BV(22898, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1271, 16), 8), SFXP(SBV(19844, 16), 8)), SFXP(SBV(32550, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13785, 16), 8), UFXP(BV(32270, 16), 8)), UFXP(BV(47051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-24499, 16), 8), SFXP(SBV(-8465, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57705, 16), 8), UFXP(BV(49915, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10846, 16), 8), SFXP(SBV(-15961, 16), 8)), SFXP(SBV(-20863, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14758, 16), 8), SFXP(SBV(3202, 16), 8)), SFXP(SBV(12018, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48832, 16), 8), UFXP(BV(52892, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8450, 16), 8), SFXP(SBV(32236, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39888, 16), 8), UFXP(BV(3742, 16), 8)), UFXP(BV(36146, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31106, 16), 8), UFXP(BV(11012, 16), 8)), UFXP(BV(42118, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4580, 16), 8), UFXP(BV(20026, 16), 8)), UFXP(BV(24606, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58596, 16), 8), UFXP(BV(6468, 16), 8)), UFXP(BV(65064, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2772, 16), 8), SFXP(SBV(-18254, 16), 8)), SFXP(SBV(-15482, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30313, 16), 8), UFXP(BV(61827, 16), 8)), UFXP(BV(26604, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42603, 16), 8), UFXP(BV(831, 16), 8)), UFXP(BV(7222, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2467, 16), 8), SFXP(SBV(-16833, 16), 8)), SFXP(SBV(19300, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32215, 16), 8), SFXP(SBV(1014, 16), 8)), SFXP(SBV(-32307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6647, 16), 8), SFXP(SBV(12221, 16), 8)), SFXP(SBV(-5574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62627, 16), 8), UFXP(BV(28551, 16), 8)), UFXP(BV(25642, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30952, 16), 8), SFXP(SBV(-4889, 16), 8)), SFXP(SBV(1286, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23226, 16), 8), SFXP(SBV(-26308, 16), 8)), SFXP(SBV(3082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54950, 16), 8), UFXP(BV(33621, 16), 8)), UFXP(BV(7736, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2138, 16), 8), SFXP(SBV(3057, 16), 8)), SFXP(SBV(-919, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55052, 16), 8), UFXP(BV(42530, 16), 8)), UFXP(BV(32046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46917, 16), 8), UFXP(BV(20724, 16), 8)), UFXP(BV(62525, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46962, 16), 8), UFXP(BV(8886, 16), 8)), UFXP(BV(38076, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12370, 16), 8), SFXP(SBV(4156, 16), 8)), SFXP(SBV(16526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22831, 16), 8), SFXP(SBV(-24303, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28830, 16), 8), SFXP(SBV(-20782, 16), 8)), SFXP(SBV(-8048, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22548, 16), 8), SFXP(SBV(27680, 16), 8)), SFXP(SBV(-13170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8924, 16), 8), SFXP(SBV(-1953, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38908, 16), 8), UFXP(BV(60568, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18538, 16), 8), UFXP(BV(56205, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28302, 16), 8), SFXP(SBV(18275, 16), 8)), SFXP(SBV(-18959, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4257, 16), 8), SFXP(SBV(32764, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3182, 16), 8), UFXP(BV(46342, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20443, 16), 8), SFXP(SBV(-1525, 16), 8)), SFXP(SBV(-21968, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15663, 16), 8), SFXP(SBV(-526, 16), 8)), SFXP(SBV(-32182, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13377, 16), 8), SFXP(SBV(-4498, 16), 8)), SFXP(SBV(17875, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2648, 16), 8), SFXP(SBV(6573, 16), 8)), SFXP(SBV(9221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11100, 16), 8), UFXP(BV(5682, 16), 8)), UFXP(BV(49760, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34261, 16), 8), UFXP(BV(59447, 16), 8)), UFXP(BV(40350, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50958, 16), 8), UFXP(BV(7227, 16), 8)), UFXP(BV(43731, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26029, 16), 8), SFXP(SBV(15748, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10055, 16), 8), UFXP(BV(60209, 16), 8)), UFXP(BV(15382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23323, 16), 8), SFXP(SBV(-20021, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40860, 16), 8), UFXP(BV(15196, 16), 8)), UFXP(BV(56056, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42938, 16), 8), UFXP(BV(54116, 16), 8)), UFXP(BV(32722, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61861, 16), 8), UFXP(BV(21559, 16), 8)), UFXP(BV(32271, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13857, 16), 8), SFXP(SBV(-12851, 16), 8)), SFXP(SBV(1006, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57546, 16), 8), UFXP(BV(65255, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42128, 16), 8), UFXP(BV(36553, 16), 8)), UFXP(BV(5575, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43610, 16), 8), UFXP(BV(51678, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3754, 16), 8), SFXP(SBV(-15002, 16), 8)), SFXP(SBV(11248, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24603, 16), 8), UFXP(BV(55817, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27744, 16), 8), SFXP(SBV(15515, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13787, 16), 8), SFXP(SBV(18163, 16), 8)), SFXP(SBV(4376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29798, 16), 8), SFXP(SBV(-18443, 16), 8)), SFXP(SBV(15952, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12699, 16), 8), SFXP(SBV(31690, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28184, 16), 8), SFXP(SBV(-14941, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21458, 16), 8), UFXP(BV(16730, 16), 8)), UFXP(BV(4728, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38097, 16), 8), UFXP(BV(24038, 16), 8)), UFXP(BV(38304, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7183, 16), 8), SFXP(SBV(-18870, 16), 8)), SFXP(SBV(-11687, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20171, 16), 8), SFXP(SBV(32032, 16), 8)), SFXP(SBV(11861, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19858, 16), 8), SFXP(SBV(6999, 16), 8)), SFXP(SBV(-12859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7693, 16), 8), SFXP(SBV(-8771, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31805, 16), 8), SFXP(SBV(26587, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10899, 16), 8), UFXP(BV(12499, 16), 8)), UFXP(BV(63936, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-786, 16), 8), SFXP(SBV(21730, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17925, 16), 8), SFXP(SBV(-23794, 16), 8)), SFXP(SBV(-5869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19791, 16), 8), SFXP(SBV(26778, 16), 8)), SFXP(SBV(-6987, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8093, 16), 8), SFXP(SBV(-546, 16), 8)), SFXP(SBV(-7547, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18581, 16), 8), SFXP(SBV(-23895, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16965, 16), 8), SFXP(SBV(23029, 16), 8)), SFXP(SBV(-6064, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58556, 16), 8), UFXP(BV(45399, 16), 8)), UFXP(BV(29624, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(296, 16), 8), SFXP(SBV(8075, 16), 8)), SFXP(SBV(-7779, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-13344, 16), 8), SFXP(SBV(25845, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26888, 16), 8), SFXP(SBV(31603, 16), 8)), SFXP(SBV(4715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32018, 16), 8), SFXP(SBV(17215, 16), 8)), SFXP(SBV(14803, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1095, 16), 8), UFXP(BV(12776, 16), 8)), UFXP(BV(13871, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13024, 16), 8), UFXP(BV(2747, 16), 8)), UFXP(BV(15771, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37261, 16), 8), UFXP(BV(51491, 16), 8)), UFXP(BV(23216, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4428, 16), 8), SFXP(SBV(-9581, 16), 8)), SFXP(SBV(14009, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30126, 16), 8), SFXP(SBV(-16545, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62687, 16), 8), UFXP(BV(20718, 16), 8)), UFXP(BV(17869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14801, 16), 8), SFXP(SBV(30620, 16), 8)), SFXP(SBV(-15819, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15706, 16), 8), SFXP(SBV(-26364, 16), 8)), SFXP(SBV(-23466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31482, 16), 8), UFXP(BV(4270, 16), 8)), UFXP(BV(35752, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31273, 16), 8), SFXP(SBV(-17999, 16), 8)), SFXP(SBV(16264, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31896, 16), 8), SFXP(SBV(-5856, 16), 8)), SFXP(SBV(-26040, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21930, 16), 8), SFXP(SBV(-29, 16), 8)), SFXP(SBV(21901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12836, 16), 8), SFXP(SBV(-15149, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9642, 16), 8), SFXP(SBV(-10439, 16), 8)), SFXP(SBV(797, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21252, 16), 8), UFXP(BV(12661, 16), 8)), UFXP(BV(8591, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10012, 16), 8), UFXP(BV(16063, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19093, 16), 8), SFXP(SBV(4452, 16), 8)), SFXP(SBV(-14641, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12558, 16), 8), UFXP(BV(42882, 16), 8)), UFXP(BV(55440, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17696, 16), 8), SFXP(SBV(17893, 16), 8)), SFXP(SBV(-197, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12682, 16), 8), UFXP(BV(57265, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13075, 16), 8), UFXP(BV(24869, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64668, 16), 8), UFXP(BV(63479, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18252, 16), 8), UFXP(BV(11435, 16), 8)), UFXP(BV(28847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4184, 16), 8), SFXP(SBV(-21993, 16), 8)), SFXP(SBV(31768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7011, 16), 8), SFXP(SBV(3415, 16), 8)), SFXP(SBV(-10426, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16617, 16), 8), SFXP(SBV(9725, 16), 8)), SFXP(SBV(24109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25781, 16), 8), SFXP(SBV(26967, 16), 8)), SFXP(SBV(-28791, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63086, 16), 8), UFXP(BV(44973, 16), 8)), UFXP(BV(42523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15425, 16), 8), SFXP(SBV(20592, 16), 8)), SFXP(SBV(-29519, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3484, 16), 8), SFXP(SBV(13545, 16), 8)), SFXP(SBV(17029, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29325, 16), 8), SFXP(SBV(-24416, 16), 8)), SFXP(SBV(4909, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11551, 16), 8), SFXP(SBV(10098, 16), 8)), SFXP(SBV(-21649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49444, 16), 8), UFXP(BV(37573, 16), 8)), UFXP(BV(47912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6476, 16), 8), SFXP(SBV(28344, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30337, 16), 8), SFXP(SBV(24758, 16), 8)), SFXP(SBV(-5579, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36256, 16), 8), UFXP(BV(38036, 16), 8)), UFXP(BV(8756, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1169, 16), 8), UFXP(BV(39202, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58837, 16), 8), UFXP(BV(5064, 16), 8)), UFXP(BV(63901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15396, 16), 8), SFXP(SBV(-5930, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47262, 16), 8), UFXP(BV(56706, 16), 8)), UFXP(BV(56092, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4840, 16), 8), UFXP(BV(43421, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12991, 16), 8), SFXP(SBV(-1121, 16), 8)), SFXP(SBV(-14112, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3507, 16), 8), UFXP(BV(15105, 16), 8)), UFXP(BV(53938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61249, 16), 8), UFXP(BV(56603, 16), 8)), UFXP(BV(4646, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41008, 16), 8), UFXP(BV(35830, 16), 8)), UFXP(BV(11302, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2767, 16), 8), SFXP(SBV(8090, 16), 8)), SFXP(SBV(-10857, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40408, 16), 8), UFXP(BV(36135, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6856, 16), 8), UFXP(BV(63385, 16), 8)), UFXP(BV(4705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55408, 16), 8), UFXP(BV(5051, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25558, 16), 8), UFXP(BV(35779, 16), 8)), UFXP(BV(55315, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64219, 16), 8), UFXP(BV(30378, 16), 8)), UFXP(BV(33841, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52185, 16), 8), UFXP(BV(36171, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29990, 16), 8), SFXP(SBV(6713, 16), 8)), SFXP(SBV(23277, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48642, 16), 8), UFXP(BV(49877, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28382, 16), 8), SFXP(SBV(-22442, 16), 8)), SFXP(SBV(5940, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10344, 16), 8), SFXP(SBV(2496, 16), 8)), SFXP(SBV(12840, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25007, 16), 8), UFXP(BV(52030, 16), 8)), UFXP(BV(36206, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39710, 16), 8), UFXP(BV(46146, 16), 8)), UFXP(BV(59100, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50474, 16), 8), UFXP(BV(43559, 16), 8)), UFXP(BV(6915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19766, 16), 8), UFXP(BV(51318, 16), 8)), UFXP(BV(33984, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63318, 16), 8), UFXP(BV(27064, 16), 8)), UFXP(BV(9227, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19634, 16), 8), UFXP(BV(15263, 16), 8)), UFXP(BV(34897, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49762, 16), 8), UFXP(BV(64160, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(183, 16), 8), UFXP(BV(24906, 16), 8)), UFXP(BV(17803, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14477, 16), 8), UFXP(BV(56917, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60003, 16), 8), UFXP(BV(45484, 16), 8)), UFXP(BV(39951, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(34236, 16), 8), UFXP(BV(8223, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10231, 16), 8), UFXP(BV(27417, 16), 8)), UFXP(BV(37648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2015, 16), 8), SFXP(SBV(23897, 16), 8)), SFXP(SBV(-25912, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62430, 16), 8), UFXP(BV(44201, 16), 8)), UFXP(BV(18229, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2262, 16), 8), UFXP(BV(61894, 16), 8)), UFXP(BV(5904, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-864, 16), 8), SFXP(SBV(20614, 16), 8)), SFXP(SBV(19750, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23091, 16), 8), UFXP(BV(13169, 16), 8)), UFXP(BV(8185, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15778, 16), 8), SFXP(SBV(-32590, 16), 8)), SFXP(SBV(-23003, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28807, 16), 8), SFXP(SBV(30789, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27448, 16), 8), UFXP(BV(45245, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39140, 16), 8), UFXP(BV(57218, 16), 8)), UFXP(BV(30822, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1916, 16), 8), UFXP(BV(15984, 16), 8)), UFXP(BV(51468, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1163, 16), 8), SFXP(SBV(10238, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21805, 16), 8), SFXP(SBV(9917, 16), 8)), SFXP(SBV(11888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19884, 16), 8), UFXP(BV(28934, 16), 8)), UFXP(BV(48818, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17019, 16), 8), SFXP(SBV(-26323, 16), 8)), SFXP(SBV(9304, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12122, 16), 8), UFXP(BV(43545, 16), 8)), UFXP(BV(55667, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18653, 16), 8), SFXP(SBV(6687, 16), 8)), SFXP(SBV(-11966, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31707, 16), 8), SFXP(SBV(-18513, 16), 8)), SFXP(SBV(-823, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15005, 16), 8), SFXP(SBV(-10910, 16), 8)), SFXP(SBV(25915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47957, 16), 8), UFXP(BV(33622, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56917, 16), 8), UFXP(BV(10978, 16), 8)), UFXP(BV(45939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47929, 16), 8), UFXP(BV(44841, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40686, 16), 8), UFXP(BV(43784, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30271, 16), 8), SFXP(SBV(17561, 16), 8)), SFXP(SBV(20633, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21865, 16), 8), SFXP(SBV(-21272, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33932, 16), 8), UFXP(BV(20273, 16), 8)), UFXP(BV(54205, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22711, 16), 8), SFXP(SBV(-26637, 16), 8)), SFXP(SBV(-3801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19731, 16), 8), SFXP(SBV(-25274, 16), 8)), SFXP(SBV(5543, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57220, 16), 8), UFXP(BV(46253, 16), 8)), UFXP(BV(10967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21112, 16), 8), SFXP(SBV(-15734, 16), 8)), SFXP(SBV(-5378, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11260, 16), 8), UFXP(BV(26609, 16), 8)), UFXP(BV(56268, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15425, 16), 8), SFXP(SBV(-5866, 16), 8)), SFXP(SBV(-25770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49812, 16), 8), UFXP(BV(60005, 16), 8)), UFXP(BV(55343, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29019, 16), 8), SFXP(SBV(-27753, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9747, 16), 8), SFXP(SBV(-7560, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16184, 16), 8), UFXP(BV(44912, 16), 8)), UFXP(BV(61096, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37773, 16), 8), UFXP(BV(10350, 16), 8)), UFXP(BV(19823, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59060, 16), 8), UFXP(BV(35558, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11488, 16), 8), SFXP(SBV(-2373, 16), 8)), SFXP(SBV(-24584, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27921, 16), 8), SFXP(SBV(-14933, 16), 8)), SFXP(SBV(22682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14436, 16), 8), SFXP(SBV(-8320, 16), 8)), SFXP(SBV(22756, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7237, 16), 8), SFXP(SBV(-29905, 16), 8)), SFXP(SBV(-22668, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30654, 16), 8), SFXP(SBV(3208, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11833, 16), 8), SFXP(SBV(-6480, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3352, 16), 8), UFXP(BV(8813, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23261, 16), 8), SFXP(SBV(17406, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20426, 16), 8), SFXP(SBV(13284, 16), 8)), SFXP(SBV(11341, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37724, 16), 8), UFXP(BV(19069, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28640, 16), 8), UFXP(BV(1377, 16), 8)), UFXP(BV(30017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8710, 16), 8), SFXP(SBV(2686, 16), 8)), SFXP(SBV(-6024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(625, 16), 8), SFXP(SBV(-26886, 16), 8)), SFXP(SBV(-26261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7623, 16), 8), SFXP(SBV(30058, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63934, 16), 8), UFXP(BV(34769, 16), 8)), UFXP(BV(32535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12527, 16), 8), UFXP(BV(40093, 16), 8)), UFXP(BV(52620, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23460, 16), 8), UFXP(BV(32094, 16), 8)), UFXP(BV(56902, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21959, 16), 8), UFXP(BV(15867, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15250, 16), 8), UFXP(BV(26803, 16), 8)), UFXP(BV(23799, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31828, 16), 8), UFXP(BV(31517, 16), 8)), UFXP(BV(63345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28726, 16), 8), UFXP(BV(27959, 16), 8)), UFXP(BV(767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19801, 16), 8), SFXP(SBV(-23067, 16), 8)), SFXP(SBV(-14707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32050, 16), 8), SFXP(SBV(8761, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24692, 16), 8), SFXP(SBV(4854, 16), 8)), SFXP(SBV(-29546, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6360, 16), 8), UFXP(BV(10320, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13114, 16), 8), SFXP(SBV(-31232, 16), 8)), SFXP(SBV(-18118, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59188, 16), 8), UFXP(BV(2830, 16), 8)), UFXP(BV(64480, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54334, 16), 8), UFXP(BV(324, 16), 8)), UFXP(BV(54658, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(26467, 16), 8), SFXP(SBV(-11527, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18908, 16), 8), SFXP(SBV(-11952, 16), 8)), SFXP(SBV(6956, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10445, 16), 8), SFXP(SBV(30539, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4925, 16), 8), SFXP(SBV(-13442, 16), 8)), SFXP(SBV(-8517, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25038, 16), 8), SFXP(SBV(-30565, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44020, 16), 8), UFXP(BV(44697, 16), 8)), UFXP(BV(64859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37531, 16), 8), UFXP(BV(49433, 16), 8)), UFXP(BV(53634, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13046, 16), 8), SFXP(SBV(23272, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21074, 16), 8), SFXP(SBV(1647, 16), 8)), SFXP(SBV(22721, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37368, 16), 8), UFXP(BV(40318, 16), 8)), UFXP(BV(12150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48265, 16), 8), UFXP(BV(50507, 16), 8)), UFXP(BV(19625, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3463, 16), 8), UFXP(BV(7124, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39491, 16), 8), UFXP(BV(2875, 16), 8)), UFXP(BV(36616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18010, 16), 8), SFXP(SBV(382, 16), 8)), SFXP(SBV(17628, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24930, 16), 8), UFXP(BV(21019, 16), 8)), UFXP(BV(45949, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23973, 16), 8), SFXP(SBV(-27598, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16892, 16), 8), SFXP(SBV(27374, 16), 8)), SFXP(SBV(21270, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18049, 16), 8), UFXP(BV(24779, 16), 8)), UFXP(BV(42828, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42632, 16), 8), UFXP(BV(20059, 16), 8)), UFXP(BV(62691, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25666, 16), 8), SFXP(SBV(6864, 16), 8)), SFXP(SBV(18802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15055, 16), 8), SFXP(SBV(29879, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32672, 16), 8), SFXP(SBV(-15448, 16), 8)), SFXP(SBV(17416, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57442, 16), 8), UFXP(BV(39054, 16), 8)), UFXP(BV(30960, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64561, 16), 8), UFXP(BV(56407, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8809, 16), 8), UFXP(BV(42389, 16), 8)), UFXP(BV(16821, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19350, 16), 8), UFXP(BV(36014, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22960, 16), 8), SFXP(SBV(28085, 16), 8)), SFXP(SBV(-5125, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9103, 16), 8), UFXP(BV(51939, 16), 8)), UFXP(BV(11869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23141, 16), 8), SFXP(SBV(-26333, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4290, 16), 8), UFXP(BV(21606, 16), 8)), UFXP(BV(48220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10873, 16), 8), UFXP(BV(17462, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46391, 16), 8), UFXP(BV(13597, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9039, 16), 8), SFXP(SBV(-28483, 16), 8)), SFXP(SBV(22654, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37417, 16), 8), UFXP(BV(53216, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-32619, 16), 8), SFXP(SBV(-19423, 16), 8)), SFXP(SBV(-15528, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9471, 16), 8), SFXP(SBV(478, 16), 8)), SFXP(SBV(8993, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38188, 16), 8), UFXP(BV(2978, 16), 8)), UFXP(BV(35210, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5947, 16), 8), SFXP(SBV(-1924, 16), 8)), SFXP(SBV(-4023, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29601, 16), 8), SFXP(SBV(-12436, 16), 8)), SFXP(SBV(-3831, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22843, 16), 8), UFXP(BV(29697, 16), 8)), UFXP(BV(52540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24236, 16), 8), SFXP(SBV(-18535, 16), 8)), SFXP(SBV(5701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61214, 16), 8), UFXP(BV(47221, 16), 8)), UFXP(BV(19160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31880, 16), 8), SFXP(SBV(18114, 16), 8)), SFXP(SBV(-13766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55815, 16), 8), UFXP(BV(37876, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17396, 16), 8), SFXP(SBV(-9262, 16), 8)), SFXP(SBV(-8134, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50248, 16), 8), UFXP(BV(23596, 16), 8)), UFXP(BV(43933, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44050, 16), 8), UFXP(BV(40800, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26848, 16), 8), UFXP(BV(13894, 16), 8)), UFXP(BV(40742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59494, 16), 8), UFXP(BV(19897, 16), 8)), UFXP(BV(39597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53168, 16), 8), UFXP(BV(50697, 16), 8)), UFXP(BV(38329, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32435, 16), 8), UFXP(BV(46133, 16), 8)), UFXP(BV(13032, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29364, 16), 8), UFXP(BV(41198, 16), 8)), UFXP(BV(6947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25933, 16), 8), SFXP(SBV(-14042, 16), 8)), SFXP(SBV(11891, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(520, 16), 8), UFXP(BV(451, 16), 8)), UFXP(BV(917, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32359, 16), 8), SFXP(SBV(18115, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45698, 16), 8), UFXP(BV(25329, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19506, 16), 8), SFXP(SBV(13821, 16), 8)), SFXP(SBV(-5685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65402, 16), 8), UFXP(BV(63730, 16), 8)), UFXP(BV(1672, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14529, 16), 8), SFXP(SBV(-26659, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13648, 16), 8), SFXP(SBV(16216, 16), 8)), SFXP(SBV(-29864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51024, 16), 8), UFXP(BV(59010, 16), 8)), UFXP(BV(57550, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59649, 16), 8), UFXP(BV(51532, 16), 8)), UFXP(BV(8117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64445, 16), 8), UFXP(BV(501, 16), 8)), UFXP(BV(64946, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11081, 16), 8), SFXP(SBV(-12226, 16), 8)), SFXP(SBV(-23307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19968, 16), 8), SFXP(SBV(-11724, 16), 8)), SFXP(SBV(-31692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21896, 16), 8), SFXP(SBV(21926, 16), 8)), SFXP(SBV(-30, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4533, 16), 8), SFXP(SBV(-3714, 16), 8)), SFXP(SBV(8247, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16790, 16), 8), SFXP(SBV(-7975, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57531, 16), 8), UFXP(BV(29582, 16), 8)), UFXP(BV(27949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16441, 16), 8), UFXP(BV(50086, 16), 8)), UFXP(BV(31891, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3563, 16), 8), UFXP(BV(5374, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4615, 16), 8), UFXP(BV(12642, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62735, 16), 8), UFXP(BV(20155, 16), 8)), UFXP(BV(17354, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28826, 16), 8), UFXP(BV(58592, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46882, 16), 8), UFXP(BV(40104, 16), 8)), UFXP(BV(4327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1885, 16), 8), UFXP(BV(45119, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20536, 16), 8), SFXP(SBV(-8979, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17073, 16), 8), SFXP(SBV(15865, 16), 8)), SFXP(SBV(-9484, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9286, 16), 8), UFXP(BV(2257, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59360, 16), 8), UFXP(BV(53156, 16), 8)), UFXP(BV(46980, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2321, 16), 8), UFXP(BV(43787, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2050, 16), 8), SFXP(SBV(26680, 16), 8)), SFXP(SBV(24630, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30111, 16), 8), UFXP(BV(10682, 16), 8)), UFXP(BV(40793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63190, 16), 8), UFXP(BV(49964, 16), 8)), UFXP(BV(47618, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-12342, 16), 8), SFXP(SBV(26722, 16), 8)), SFXP(SBV(22428, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8098, 16), 8), UFXP(BV(35136, 16), 8)), UFXP(BV(38498, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6048, 16), 8), UFXP(BV(62639, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15861, 16), 8), UFXP(BV(51942, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20674, 16), 8), SFXP(SBV(-16963, 16), 8)), SFXP(SBV(-3711, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28739, 16), 8), UFXP(BV(14585, 16), 8)), UFXP(BV(64473, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7760, 16), 8), SFXP(SBV(-6547, 16), 8)), SFXP(SBV(-1848, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33520, 16), 8), UFXP(BV(61084, 16), 8)), UFXP(BV(29068, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6871, 16), 8), UFXP(BV(56070, 16), 8)), UFXP(BV(62941, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30662, 16), 8), UFXP(BV(20689, 16), 8)), UFXP(BV(51351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40735, 16), 8), UFXP(BV(975, 16), 8)), UFXP(BV(39760, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6435, 16), 8), SFXP(SBV(15728, 16), 8)), SFXP(SBV(9293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14140, 16), 8), UFXP(BV(585, 16), 8)), UFXP(BV(13555, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30336, 16), 8), UFXP(BV(49813, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21803, 16), 8), SFXP(SBV(6668, 16), 8)), SFXP(SBV(28471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9368, 16), 8), SFXP(SBV(-29994, 16), 8)), SFXP(SBV(26174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30806, 16), 8), SFXP(SBV(30397, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15043, 16), 8), SFXP(SBV(2107, 16), 8)), SFXP(SBV(17150, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10925, 16), 8), SFXP(SBV(16683, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30936, 16), 8), UFXP(BV(17638, 16), 8)), UFXP(BV(34290, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8599, 16), 8), SFXP(SBV(31244, 16), 8)), SFXP(SBV(-25693, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25599, 16), 8), SFXP(SBV(-32755, 16), 8)), SFXP(SBV(-7156, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7989, 16), 8), UFXP(BV(28677, 16), 8)), UFXP(BV(42957, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9130, 16), 8), SFXP(SBV(21522, 16), 8)), SFXP(SBV(-30652, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9459, 16), 8), UFXP(BV(60065, 16), 8)), UFXP(BV(3988, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45995, 16), 8), UFXP(BV(45177, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55145, 16), 8), UFXP(BV(9452, 16), 8)), UFXP(BV(64597, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29640, 16), 8), SFXP(SBV(9368, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13010, 16), 8), UFXP(BV(42083, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6558, 16), 8), UFXP(BV(56858, 16), 8)), UFXP(BV(15236, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2407, 16), 8), UFXP(BV(58353, 16), 8)), UFXP(BV(60760, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8653, 16), 8), SFXP(SBV(10062, 16), 8)), SFXP(SBV(1409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19969, 16), 8), SFXP(SBV(4425, 16), 8)), SFXP(SBV(24394, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33728, 16), 8), UFXP(BV(46988, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54278, 16), 8), UFXP(BV(53782, 16), 8)), UFXP(BV(42524, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18695, 16), 8), SFXP(SBV(-32758, 16), 8)), SFXP(SBV(-32603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14943, 16), 8), SFXP(SBV(3727, 16), 8)), SFXP(SBV(-18670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25180, 16), 8), SFXP(SBV(-16479, 16), 8)), SFXP(SBV(-8701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8522, 16), 8), SFXP(SBV(12614, 16), 8)), SFXP(SBV(21136, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32265, 16), 8), SFXP(SBV(19536, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11145, 16), 8), SFXP(SBV(26726, 16), 8)), SFXP(SBV(-16127, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17083, 16), 8), SFXP(SBV(-4730, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(27929, 16), 8), SFXP(SBV(-9040, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28722, 16), 8), SFXP(SBV(-14666, 16), 8)), SFXP(SBV(22148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61445, 16), 8), UFXP(BV(36090, 16), 8)), UFXP(BV(31999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12370, 16), 8), SFXP(SBV(12186, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62507, 16), 8), UFXP(BV(27496, 16), 8)), UFXP(BV(35011, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26098, 16), 8), UFXP(BV(19337, 16), 8)), UFXP(BV(45435, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2593, 16), 8), SFXP(SBV(157, 16), 8)), SFXP(SBV(2436, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25900, 16), 8), SFXP(SBV(-23340, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26521, 16), 8), SFXP(SBV(-10448, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10952, 16), 8), SFXP(SBV(-28402, 16), 8)), SFXP(SBV(-17450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33802, 16), 8), UFXP(BV(33493, 16), 8)), UFXP(BV(1759, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54578, 16), 8), UFXP(BV(65477, 16), 8)), UFXP(BV(54637, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22381, 16), 8), SFXP(SBV(-14697, 16), 8)), SFXP(SBV(-25824, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28792, 16), 8), SFXP(SBV(11053, 16), 8)), SFXP(SBV(-17739, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17559, 16), 8), SFXP(SBV(-26457, 16), 8)), SFXP(SBV(-20327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3926, 16), 8), UFXP(BV(12095, 16), 8)), UFXP(BV(54417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52336, 16), 8), UFXP(BV(30307, 16), 8)), UFXP(BV(35504, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7644, 16), 8), UFXP(BV(11169, 16), 8)), UFXP(BV(18813, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(746, 16), 8), SFXP(SBV(-25714, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28252, 16), 8), SFXP(SBV(-23672, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4214, 16), 8), SFXP(SBV(23425, 16), 8)), SFXP(SBV(27639, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29288, 16), 8), SFXP(SBV(21548, 16), 8)), SFXP(SBV(-7740, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52768, 16), 8), UFXP(BV(30714, 16), 8)), UFXP(BV(39468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(62911, 16), 8), UFXP(BV(45842, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9209, 16), 8), SFXP(SBV(-13802, 16), 8)), SFXP(SBV(23011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30349, 16), 8), SFXP(SBV(-21022, 16), 8)), SFXP(SBV(-1807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30406, 16), 8), SFXP(SBV(-30919, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2223, 16), 8), UFXP(BV(28812, 16), 8)), UFXP(BV(31035, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-983, 16), 8), SFXP(SBV(13142, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29998, 16), 8), SFXP(SBV(-3607, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5846, 16), 8), SFXP(SBV(-9162, 16), 8)), SFXP(SBV(15008, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11005, 16), 8), SFXP(SBV(-27537, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3744, 16), 8), SFXP(SBV(-24335, 16), 8)), SFXP(SBV(-20591, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16749, 16), 8), SFXP(SBV(-24655, 16), 8)), SFXP(SBV(-7906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51922, 16), 8), UFXP(BV(48946, 16), 8)), UFXP(BV(2976, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8809, 16), 8), SFXP(SBV(-15308, 16), 8)), SFXP(SBV(24117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20784, 16), 8), UFXP(BV(60861, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13408, 16), 8), SFXP(SBV(-22167, 16), 8)), SFXP(SBV(-18651, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24553, 16), 8), UFXP(BV(29938, 16), 8)), UFXP(BV(54491, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49143, 16), 8), UFXP(BV(42624, 16), 8)), UFXP(BV(6519, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35189, 16), 8), UFXP(BV(35023, 16), 8)), UFXP(BV(30030, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33541, 16), 8), UFXP(BV(60498, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60295, 16), 8), UFXP(BV(16422, 16), 8)), UFXP(BV(11181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15490, 16), 8), SFXP(SBV(3675, 16), 8)), SFXP(SBV(11815, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4648, 16), 8), SFXP(SBV(15155, 16), 8)), SFXP(SBV(19803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28716, 16), 8), SFXP(SBV(-2436, 16), 8)), SFXP(SBV(11106, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51476, 16), 8), UFXP(BV(40465, 16), 8)), UFXP(BV(11011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21935, 16), 8), SFXP(SBV(24728, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52293, 16), 8), UFXP(BV(5588, 16), 8)), UFXP(BV(57881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14912, 16), 8), SFXP(SBV(29147, 16), 8)), SFXP(SBV(-14235, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11124, 16), 8), SFXP(SBV(21407, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55155, 16), 8), UFXP(BV(17469, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64202, 16), 8), UFXP(BV(5590, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(60676, 16), 8), UFXP(BV(22591, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18547, 16), 8), UFXP(BV(18004, 16), 8)), UFXP(BV(59192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30707, 16), 8), SFXP(SBV(-28870, 16), 8)), SFXP(SBV(-5959, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24079, 16), 8), SFXP(SBV(4435, 16), 8)), SFXP(SBV(-23934, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6934, 16), 8), UFXP(BV(39646, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2154, 16), 8), SFXP(SBV(-3550, 16), 8)), SFXP(SBV(-29869, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44238, 16), 8), UFXP(BV(7192, 16), 8)), UFXP(BV(37046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20345, 16), 8), SFXP(SBV(15621, 16), 8)), SFXP(SBV(4724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30181, 16), 8), SFXP(SBV(-5562, 16), 8)), SFXP(SBV(-29793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50487, 16), 8), UFXP(BV(34745, 16), 8)), UFXP(BV(36486, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62698, 16), 8), UFXP(BV(51863, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3648, 16), 8), SFXP(SBV(4310, 16), 8)), SFXP(SBV(7958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14233, 16), 8), SFXP(SBV(-4449, 16), 8)), SFXP(SBV(-9784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49958, 16), 8), UFXP(BV(7361, 16), 8)), UFXP(BV(60232, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4767, 16), 8), SFXP(SBV(-27812, 16), 8)), SFXP(SBV(6399, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18874, 16), 8), SFXP(SBV(-15404, 16), 8)), SFXP(SBV(3470, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33048, 16), 8), UFXP(BV(22936, 16), 8)), UFXP(BV(10112, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65412, 16), 8), UFXP(BV(9724, 16), 8)), UFXP(BV(55688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22077, 16), 8), SFXP(SBV(-6007, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8770, 16), 8), UFXP(BV(54334, 16), 8)), UFXP(BV(19972, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11986, 16), 8), SFXP(SBV(542, 16), 8)), SFXP(SBV(-12528, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17646, 16), 8), SFXP(SBV(-28031, 16), 8)), SFXP(SBV(10385, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15205, 16), 8), UFXP(BV(28388, 16), 8)), UFXP(BV(43593, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8958, 16), 8), SFXP(SBV(2954, 16), 8)), SFXP(SBV(11912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9081, 16), 8), SFXP(SBV(-23023, 16), 8)), SFXP(SBV(-32104, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33993, 16), 8), UFXP(BV(38510, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23528, 16), 8), UFXP(BV(34149, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49130, 16), 8), UFXP(BV(29749, 16), 8)), UFXP(BV(7619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65513, 16), 8), UFXP(BV(35724, 16), 8)), UFXP(BV(35701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64453, 16), 8), UFXP(BV(33632, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7674, 16), 8), SFXP(SBV(28593, 16), 8)), SFXP(SBV(20919, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12783, 16), 8), UFXP(BV(30825, 16), 8)), UFXP(BV(47494, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56014, 16), 8), UFXP(BV(17037, 16), 8)), UFXP(BV(7515, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7201, 16), 8), SFXP(SBV(27933, 16), 8)), SFXP(SBV(-20732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21983, 16), 8), UFXP(BV(50962, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50338, 16), 8), UFXP(BV(62694, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18035, 16), 8), SFXP(SBV(-20002, 16), 8)), SFXP(SBV(32667, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5690, 16), 8), SFXP(SBV(9816, 16), 8)), SFXP(SBV(-21568, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25782, 16), 8), UFXP(BV(27756, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13252, 16), 8), SFXP(SBV(19192, 16), 8)), SFXP(SBV(10446, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19064, 16), 8), UFXP(BV(59827, 16), 8)), UFXP(BV(64330, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4668, 16), 8), SFXP(SBV(23725, 16), 8)), SFXP(SBV(19057, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20773, 16), 8), UFXP(BV(44133, 16), 8)), UFXP(BV(64906, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5409, 16), 8), SFXP(SBV(28646, 16), 8)), SFXP(SBV(23237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10132, 16), 8), SFXP(SBV(15864, 16), 8)), SFXP(SBV(27493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15574, 16), 8), SFXP(SBV(-8213, 16), 8)), SFXP(SBV(-7361, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18277, 16), 8), SFXP(SBV(-22976, 16), 8)), SFXP(SBV(4699, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48392, 16), 8), UFXP(BV(24635, 16), 8)), UFXP(BV(23757, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29479, 16), 8), SFXP(SBV(1685, 16), 8)), SFXP(SBV(-27794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32103, 16), 8), UFXP(BV(210, 16), 8)), UFXP(BV(26335, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17127, 16), 8), UFXP(BV(23321, 16), 8)), UFXP(BV(52901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12817, 16), 8), SFXP(SBV(-22843, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11924, 16), 8), SFXP(SBV(7419, 16), 8)), SFXP(SBV(-4505, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27524, 16), 8), SFXP(SBV(10491, 16), 8)), SFXP(SBV(-17033, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34051, 16), 8), UFXP(BV(58849, 16), 8)), UFXP(BV(40738, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48343, 16), 8), UFXP(BV(37040, 16), 8)), UFXP(BV(47812, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17299, 16), 8), UFXP(BV(31303, 16), 8)), UFXP(BV(48602, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38476, 16), 8), UFXP(BV(38735, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4749, 16), 8), SFXP(SBV(-12807, 16), 8)), SFXP(SBV(-17556, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1285, 16), 8), SFXP(SBV(-19021, 16), 8)), SFXP(SBV(-20306, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15310, 16), 8), UFXP(BV(23753, 16), 8)), UFXP(BV(44284, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16611, 16), 8), SFXP(SBV(19654, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33646, 16), 8), UFXP(BV(24337, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41054, 16), 8), UFXP(BV(9194, 16), 8)), UFXP(BV(31860, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10069, 16), 8), SFXP(SBV(-4203, 16), 8)), SFXP(SBV(14272, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25628, 16), 8), SFXP(SBV(-17844, 16), 8)), SFXP(SBV(7784, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29343, 16), 8), SFXP(SBV(-7898, 16), 8)), SFXP(SBV(28295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13952, 16), 8), SFXP(SBV(-4997, 16), 8)), SFXP(SBV(-18949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39080, 16), 8), UFXP(BV(19744, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9314, 16), 8), SFXP(SBV(24340, 16), 8)), SFXP(SBV(15026, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1421, 16), 8), UFXP(BV(2732, 16), 8)), UFXP(BV(4153, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40308, 16), 8), UFXP(BV(17840, 16), 8)), UFXP(BV(22468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32185, 16), 8), UFXP(BV(30910, 16), 8)), UFXP(BV(1275, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3268, 16), 8), UFXP(BV(1551, 16), 8)), UFXP(BV(1717, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2940, 16), 8), SFXP(SBV(28734, 16), 8)), SFXP(SBV(31674, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39481, 16), 8), UFXP(BV(12055, 16), 8)), UFXP(BV(27426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26833, 16), 8), UFXP(BV(60282, 16), 8)), UFXP(BV(32087, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26776, 16), 8), UFXP(BV(48481, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49828, 16), 8), UFXP(BV(22127, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7778, 16), 8), SFXP(SBV(-10360, 16), 8)), SFXP(SBV(-12914, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(27137, 16), 8), SFXP(SBV(-30037, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58396, 16), 8), UFXP(BV(46991, 16), 8)), UFXP(BV(11405, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8607, 16), 8), SFXP(SBV(16896, 16), 8)), SFXP(SBV(21762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5307, 16), 8), SFXP(SBV(-10864, 16), 8)), SFXP(SBV(-16171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19751, 16), 8), SFXP(SBV(-24800, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3814, 16), 8), SFXP(SBV(10393, 16), 8)), SFXP(SBV(-14207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13342, 16), 8), SFXP(SBV(-15253, 16), 8)), SFXP(SBV(28595, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(34842, 16), 8), UFXP(BV(45838, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6721, 16), 8), SFXP(SBV(-6828, 16), 8)), SFXP(SBV(13549, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65489, 16), 8), UFXP(BV(684, 16), 8)), UFXP(BV(64805, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59740, 16), 8), UFXP(BV(62414, 16), 8)), UFXP(BV(15900, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2584, 16), 8), UFXP(BV(35633, 16), 8)), UFXP(BV(38217, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12622, 16), 8), SFXP(SBV(12645, 16), 8)), SFXP(SBV(-23, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21751, 16), 8), SFXP(SBV(-3422, 16), 8)), SFXP(SBV(-18329, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64027, 16), 8), UFXP(BV(26186, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32914, 16), 8), UFXP(BV(30500, 16), 8)), UFXP(BV(2414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6080, 16), 8), SFXP(SBV(-5804, 16), 8)), SFXP(SBV(-11884, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22821, 16), 8), UFXP(BV(46084, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23820, 16), 8), UFXP(BV(29420, 16), 8)), UFXP(BV(50463, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28427, 16), 8), SFXP(SBV(-14422, 16), 8)), SFXP(SBV(-22687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12157, 16), 8), UFXP(BV(55631, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30977, 16), 8), SFXP(SBV(-17599, 16), 8)), SFXP(SBV(-13378, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52301, 16), 8), UFXP(BV(41363, 16), 8)), UFXP(BV(10938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39198, 16), 8), UFXP(BV(13019, 16), 8)), UFXP(BV(26179, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4500, 16), 8), UFXP(BV(29833, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62429, 16), 8), UFXP(BV(22085, 16), 8)), UFXP(BV(40344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24159, 16), 8), SFXP(SBV(7826, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26450, 16), 8), SFXP(SBV(14833, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11167, 16), 8), SFXP(SBV(23766, 16), 8)), SFXP(SBV(12599, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17259, 16), 8), SFXP(SBV(26470, 16), 8)), SFXP(SBV(15081, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1001, 16), 8), UFXP(BV(16941, 16), 8)), UFXP(BV(49596, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32797, 16), 8), UFXP(BV(53925, 16), 8)), UFXP(BV(27228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7246, 16), 8), SFXP(SBV(827, 16), 8)), SFXP(SBV(-6419, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22112, 16), 8), SFXP(SBV(16023, 16), 8)), SFXP(SBV(6089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51746, 16), 8), UFXP(BV(50410, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3170, 16), 8), SFXP(SBV(-23080, 16), 8)), SFXP(SBV(-19910, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3545, 16), 8), SFXP(SBV(20533, 16), 8)), SFXP(SBV(-16988, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22468, 16), 8), SFXP(SBV(-15504, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1461, 16), 8), SFXP(SBV(18909, 16), 8)), SFXP(SBV(-17448, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15719, 16), 8), UFXP(BV(1141, 16), 8)), UFXP(BV(16860, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6791, 16), 8), SFXP(SBV(-20585, 16), 8)), SFXP(SBV(-13794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51986, 16), 8), UFXP(BV(47654, 16), 8)), UFXP(BV(4332, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29728, 16), 8), SFXP(SBV(8170, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46054, 16), 8), UFXP(BV(28338, 16), 8)), UFXP(BV(17716, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4578, 16), 8), SFXP(SBV(211, 16), 8)), SFXP(SBV(4789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3422, 16), 8), SFXP(SBV(-143, 16), 8)), SFXP(SBV(3279, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4265, 16), 8), UFXP(BV(21016, 16), 8)), UFXP(BV(25281, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32427, 16), 8), UFXP(BV(55396, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21865, 16), 8), SFXP(SBV(10092, 16), 8)), SFXP(SBV(9991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27698, 16), 8), UFXP(BV(35999, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20905, 16), 8), SFXP(SBV(-5505, 16), 8)), SFXP(SBV(9212, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46332, 16), 8), UFXP(BV(42799, 16), 8)), UFXP(BV(3533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1996, 16), 8), UFXP(BV(63879, 16), 8)), UFXP(BV(339, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54579, 16), 8), UFXP(BV(63391, 16), 8)), UFXP(BV(52434, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64178, 16), 8), UFXP(BV(22220, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28499, 16), 8), SFXP(SBV(-3615, 16), 8)), SFXP(SBV(-32114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(11585, 16), 8), SFXP(SBV(8017, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22420, 16), 8), UFXP(BV(22933, 16), 8)), UFXP(BV(45353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39146, 16), 8), UFXP(BV(58284, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47452, 16), 8), UFXP(BV(49172, 16), 8)), UFXP(BV(31088, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58047, 16), 8), UFXP(BV(14373, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2052, 16), 8), SFXP(SBV(-4385, 16), 8)), SFXP(SBV(6437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28248, 16), 8), UFXP(BV(24469, 16), 8)), UFXP(BV(3779, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45341, 16), 8), UFXP(BV(17467, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24928, 16), 8), SFXP(SBV(-1212, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27400, 16), 8), SFXP(SBV(-32312, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51125, 16), 8), UFXP(BV(19828, 16), 8)), UFXP(BV(5417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43352, 16), 8), UFXP(BV(49153, 16), 8)), UFXP(BV(26969, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1490, 16), 8), SFXP(SBV(8445, 16), 8)), SFXP(SBV(-9935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28044, 16), 8), UFXP(BV(12923, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10020, 16), 8), SFXP(SBV(18351, 16), 8)), SFXP(SBV(8331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(123, 16), 8), SFXP(SBV(-29681, 16), 8)), SFXP(SBV(-29558, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15482, 16), 8), UFXP(BV(657, 16), 8)), UFXP(BV(39733, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8210, 16), 8), SFXP(SBV(24160, 16), 8)), SFXP(SBV(11613, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4573, 16), 8), SFXP(SBV(3138, 16), 8)), SFXP(SBV(9481, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4132, 16), 8), SFXP(SBV(32578, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3641, 16), 8), UFXP(BV(33232, 16), 8)), UFXP(BV(36873, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20328, 16), 8), SFXP(SBV(2548, 16), 8)), SFXP(SBV(22876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(369, 16), 8), UFXP(BV(9670, 16), 8)), UFXP(BV(10039, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14291, 16), 8), SFXP(SBV(28834, 16), 8)), SFXP(SBV(14543, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31502, 16), 8), SFXP(SBV(21137, 16), 8)), SFXP(SBV(10365, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33656, 16), 8), UFXP(BV(21947, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24658, 16), 8), SFXP(SBV(-3926, 16), 8)), SFXP(SBV(20732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32401, 16), 8), UFXP(BV(19551, 16), 8)), UFXP(BV(49667, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57789, 16), 8), UFXP(BV(530, 16), 8)), UFXP(BV(58319, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32010, 16), 8), UFXP(BV(496, 16), 8)), UFXP(BV(31514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40860, 16), 8), UFXP(BV(10190, 16), 8)), UFXP(BV(30670, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19399, 16), 8), UFXP(BV(9605, 16), 8)), UFXP(BV(29004, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64814, 16), 8), UFXP(BV(45683, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29429, 16), 8), UFXP(BV(51458, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10058, 16), 8), SFXP(SBV(22433, 16), 8)), SFXP(SBV(12375, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28305, 16), 8), UFXP(BV(51372, 16), 8)), UFXP(BV(42469, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8238, 16), 8), SFXP(SBV(-30839, 16), 8)), SFXP(SBV(-26459, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28448, 16), 8), SFXP(SBV(31855, 16), 8)), SFXP(SBV(5233, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42534, 16), 8), UFXP(BV(62362, 16), 8)), UFXP(BV(45708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10391, 16), 8), UFXP(BV(7592, 16), 8)), UFXP(BV(2799, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27612, 16), 8), SFXP(SBV(-27863, 16), 8)), SFXP(SBV(-10061, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-694, 16), 8), SFXP(SBV(-14612, 16), 8)), SFXP(SBV(-15306, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15009, 16), 8), SFXP(SBV(-26283, 16), 8)), SFXP(SBV(-31921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42042, 16), 8), UFXP(BV(31668, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31577, 16), 8), UFXP(BV(65281, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9516, 16), 8), SFXP(SBV(-10475, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18881, 16), 8), SFXP(SBV(-12189, 16), 8)), SFXP(SBV(6692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7066, 16), 8), SFXP(SBV(18709, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3643, 16), 8), SFXP(SBV(-3326, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36475, 16), 8), UFXP(BV(24130, 16), 8)), UFXP(BV(30181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9446, 16), 8), SFXP(SBV(-15284, 16), 8)), SFXP(SBV(5838, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6062, 16), 8), SFXP(SBV(-13146, 16), 8)), SFXP(SBV(19208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20619, 16), 8), SFXP(SBV(808, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44073, 16), 8), UFXP(BV(59812, 16), 8)), UFXP(BV(8092, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18350, 16), 8), SFXP(SBV(32018, 16), 8)), SFXP(SBV(1280, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10733, 16), 8), SFXP(SBV(-9090, 16), 8)), SFXP(SBV(19823, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3277, 16), 8), SFXP(SBV(10710, 16), 8)), SFXP(SBV(-7433, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50052, 16), 8), UFXP(BV(25291, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25714, 16), 8), SFXP(SBV(-32715, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14086, 16), 8), UFXP(BV(20611, 16), 8)), UFXP(BV(34697, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15949, 16), 8), SFXP(SBV(27118, 16), 8)), SFXP(SBV(-14464, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17483, 16), 8), SFXP(SBV(-26327, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3156, 16), 8), SFXP(SBV(8963, 16), 8)), SFXP(SBV(-20576, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9202, 16), 8), UFXP(BV(38826, 16), 8)), UFXP(BV(19357, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33015, 16), 8), UFXP(BV(26144, 16), 8)), UFXP(BV(29320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52806, 16), 8), UFXP(BV(55681, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3825, 16), 8), SFXP(SBV(22428, 16), 8)), SFXP(SBV(-18603, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13869, 16), 8), UFXP(BV(43763, 16), 8)), UFXP(BV(35642, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41502, 16), 8), UFXP(BV(55538, 16), 8)), UFXP(BV(31504, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4657, 16), 8), SFXP(SBV(26883, 16), 8)), SFXP(SBV(-22226, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2365, 16), 8), SFXP(SBV(-10368, 16), 8)), SFXP(SBV(8003, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6623, 16), 8), SFXP(SBV(-21239, 16), 8)), SFXP(SBV(-14616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35774, 16), 8), UFXP(BV(35815, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14012, 16), 8), SFXP(SBV(-9007, 16), 8)), SFXP(SBV(-23019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31548, 16), 8), SFXP(SBV(-7200, 16), 8)), SFXP(SBV(30217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31319, 16), 8), UFXP(BV(20844, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37779, 16), 8), UFXP(BV(61258, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15178, 16), 8), UFXP(BV(64667, 16), 8)), UFXP(BV(16047, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58835, 16), 8), UFXP(BV(50659, 16), 8)), UFXP(BV(43958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3345, 16), 8), SFXP(SBV(-10073, 16), 8)), SFXP(SBV(6728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1628, 16), 8), SFXP(SBV(24529, 16), 8)), SFXP(SBV(-26157, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14528, 16), 8), SFXP(SBV(3705, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18656, 16), 8), SFXP(SBV(-25938, 16), 8)), SFXP(SBV(10312, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20629, 16), 8), SFXP(SBV(19842, 16), 8)), SFXP(SBV(-26044, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1644, 16), 8), UFXP(BV(40644, 16), 8)), UFXP(BV(64403, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7927, 16), 8), UFXP(BV(14848, 16), 8)), UFXP(BV(22775, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-32567, 16), 8), SFXP(SBV(-28211, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48660, 16), 8), UFXP(BV(49517, 16), 8)), UFXP(BV(64679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64769, 16), 8), UFXP(BV(11455, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50144, 16), 8), UFXP(BV(58467, 16), 8)), UFXP(BV(48960, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31434, 16), 8), UFXP(BV(24464, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20690, 16), 8), UFXP(BV(56474, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50217, 16), 8), UFXP(BV(34885, 16), 8)), UFXP(BV(15332, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23351, 16), 8), SFXP(SBV(-28751, 16), 8)), SFXP(SBV(-5400, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26120, 16), 8), SFXP(SBV(-24385, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19484, 16), 8), UFXP(BV(12954, 16), 8)), UFXP(BV(6530, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30478, 16), 8), UFXP(BV(33224, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31338, 16), 8), SFXP(SBV(20108, 16), 8)), SFXP(SBV(-11230, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20300, 16), 8), SFXP(SBV(-16681, 16), 8)), SFXP(SBV(12031, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49105, 16), 8), UFXP(BV(54975, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4586, 16), 8), UFXP(BV(28955, 16), 8)), UFXP(BV(59949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15969, 16), 8), UFXP(BV(29264, 16), 8)), UFXP(BV(55984, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26265, 16), 8), SFXP(SBV(-30302, 16), 8)), SFXP(SBV(4037, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6052, 16), 8), SFXP(SBV(8132, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25790, 16), 8), SFXP(SBV(-11646, 16), 8)), SFXP(SBV(6404, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7259, 16), 8), UFXP(BV(55798, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2618, 16), 8), SFXP(SBV(19635, 16), 8)), SFXP(SBV(-22253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21672, 16), 8), UFXP(BV(3636, 16), 8)), UFXP(BV(25308, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34878, 16), 8), UFXP(BV(54120, 16), 8)), UFXP(BV(46294, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30174, 16), 8), SFXP(SBV(-14571, 16), 8)), SFXP(SBV(-15603, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61094, 16), 8), UFXP(BV(42726, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2015, 16), 8), SFXP(SBV(24793, 16), 8)), SFXP(SBV(26808, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3694, 16), 8), SFXP(SBV(13759, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29723, 16), 8), SFXP(SBV(-5564, 16), 8)), SFXP(SBV(30249, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27740, 16), 8), SFXP(SBV(-25820, 16), 8)), SFXP(SBV(-1920, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22097, 16), 8), SFXP(SBV(18726, 16), 8)), SFXP(SBV(-22039, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10038, 16), 8), SFXP(SBV(-24790, 16), 8)), SFXP(SBV(14752, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32085, 16), 8), SFXP(SBV(-26700, 16), 8)), SFXP(SBV(-5385, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35464, 16), 8), UFXP(BV(7705, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22335, 16), 8), SFXP(SBV(-29386, 16), 8)), SFXP(SBV(7051, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35310, 16), 8), UFXP(BV(5284, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15070, 16), 8), UFXP(BV(56986, 16), 8)), UFXP(BV(12270, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27869, 16), 8), SFXP(SBV(-29424, 16), 8)), SFXP(SBV(1555, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11353, 16), 8), SFXP(SBV(-26497, 16), 8)), SFXP(SBV(15144, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25623, 16), 8), SFXP(SBV(-15442, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18750, 16), 8), SFXP(SBV(24782, 16), 8)), SFXP(SBV(6032, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28621, 16), 8), SFXP(SBV(-32602, 16), 8)), SFXP(SBV(3981, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62275, 16), 8), UFXP(BV(22799, 16), 8)), UFXP(BV(19538, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6874, 16), 8), UFXP(BV(34821, 16), 8)), UFXP(BV(41695, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17539, 16), 8), SFXP(SBV(28978, 16), 8)), SFXP(SBV(11439, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31486, 16), 8), SFXP(SBV(13167, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64019, 16), 8), UFXP(BV(9034, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61393, 16), 8), UFXP(BV(20734, 16), 8)), UFXP(BV(57154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24380, 16), 8), SFXP(SBV(7585, 16), 8)), SFXP(SBV(-1457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12434, 16), 8), UFXP(BV(9193, 16), 8)), UFXP(BV(3241, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10248, 16), 8), SFXP(SBV(-32270, 16), 8)), SFXP(SBV(-22022, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-6009, 16), 8), SFXP(SBV(-5869, 16), 8)), SFXP(SBV(6689, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(2189, 16), 8), SFXP(SBV(-24152, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42478, 16), 8), UFXP(BV(49853, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32316, 16), 8), SFXP(SBV(-2502, 16), 8)), SFXP(SBV(-29814, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1614, 16), 8), SFXP(SBV(-16750, 16), 8)), SFXP(SBV(-25468, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2463, 16), 8), SFXP(SBV(-23946, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30225, 16), 8), SFXP(SBV(17029, 16), 8)), SFXP(SBV(-13196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23800, 16), 8), UFXP(BV(39151, 16), 8)), UFXP(BV(62951, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(41330, 16), 8), UFXP(BV(54906, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27872, 16), 8), UFXP(BV(45797, 16), 8)), UFXP(BV(8133, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47449, 16), 8), UFXP(BV(11240, 16), 8)), UFXP(BV(36209, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12138, 16), 8), SFXP(SBV(8828, 16), 8)), SFXP(SBV(20966, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(427, 16), 8), UFXP(BV(41836, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62212, 16), 8), UFXP(BV(36514, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60836, 16), 8), UFXP(BV(28721, 16), 8)), UFXP(BV(9533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28451, 16), 8), SFXP(SBV(31315, 16), 8)), SFXP(SBV(5770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24967, 16), 8), SFXP(SBV(3650, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49485, 16), 8), UFXP(BV(43717, 16), 8)), UFXP(BV(27666, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19504, 16), 8), SFXP(SBV(27821, 16), 8)), SFXP(SBV(-8317, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11945, 16), 8), SFXP(SBV(-32200, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13387, 16), 8), SFXP(SBV(-13024, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26342, 16), 8), UFXP(BV(35089, 16), 8)), UFXP(BV(56789, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53268, 16), 8), UFXP(BV(9872, 16), 8)), UFXP(BV(43396, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(348, 16), 8), UFXP(BV(22850, 16), 8)), UFXP(BV(31061, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19642, 16), 8), UFXP(BV(49314, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20684, 16), 8), UFXP(BV(10945, 16), 8)), UFXP(BV(31629, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30902, 16), 8), SFXP(SBV(-23414, 16), 8)), SFXP(SBV(-7488, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28625, 16), 8), SFXP(SBV(-948, 16), 8)), SFXP(SBV(25070, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30736, 16), 8), SFXP(SBV(-28247, 16), 8)), SFXP(SBV(16466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39500, 16), 8), UFXP(BV(17951, 16), 8)), UFXP(BV(57451, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48869, 16), 8), UFXP(BV(48687, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26386, 16), 8), SFXP(SBV(-20217, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5926, 16), 8), SFXP(SBV(-840, 16), 8)), SFXP(SBV(5086, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15086, 16), 8), SFXP(SBV(-16466, 16), 8)), SFXP(SBV(-1380, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16618, 16), 8), SFXP(SBV(-8237, 16), 8)), SFXP(SBV(10409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-883, 16), 8), SFXP(SBV(-12050, 16), 8)), SFXP(SBV(-23972, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3421, 16), 8), SFXP(SBV(-8034, 16), 8)), SFXP(SBV(-4613, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2060, 16), 8), SFXP(SBV(6992, 16), 8)), SFXP(SBV(9052, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38998, 16), 8), UFXP(BV(58122, 16), 8)), UFXP(BV(46412, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22215, 16), 8), SFXP(SBV(-11482, 16), 8)), SFXP(SBV(10733, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11601, 16), 8), SFXP(SBV(24056, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15903, 16), 8), SFXP(SBV(-30897, 16), 8)), SFXP(SBV(-18812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18779, 16), 8), SFXP(SBV(-5981, 16), 8)), SFXP(SBV(-12798, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30217, 16), 8), SFXP(SBV(12352, 16), 8)), SFXP(SBV(-16179, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57402, 16), 8), UFXP(BV(35928, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36323, 16), 8), UFXP(BV(29717, 16), 8)), UFXP(BV(22143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3093, 16), 8), SFXP(SBV(3582, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3225, 16), 8), UFXP(BV(5615, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58031, 16), 8), UFXP(BV(25355, 16), 8)), UFXP(BV(32676, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12552, 16), 8), UFXP(BV(25816, 16), 8)), UFXP(BV(38368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29929, 16), 8), UFXP(BV(35699, 16), 8)), UFXP(BV(59766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22186, 16), 8), UFXP(BV(55420, 16), 8)), UFXP(BV(32302, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35745, 16), 8), UFXP(BV(13651, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25026, 16), 8), UFXP(BV(31220, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7749, 16), 8), SFXP(SBV(28006, 16), 8)), SFXP(SBV(29781, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1326, 16), 8), SFXP(SBV(-12599, 16), 8)), SFXP(SBV(-278, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36545, 16), 8), UFXP(BV(51842, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16672, 16), 8), UFXP(BV(28525, 16), 8)), UFXP(BV(53683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-686, 16), 8), SFXP(SBV(1995, 16), 8)), SFXP(SBV(-5345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49722, 16), 8), UFXP(BV(58394, 16), 8)), UFXP(BV(3937, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11253, 16), 8), SFXP(SBV(15754, 16), 8)), SFXP(SBV(-4501, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23113, 16), 8), SFXP(SBV(28536, 16), 8)), SFXP(SBV(5423, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14464, 16), 8), SFXP(SBV(-7291, 16), 8)), SFXP(SBV(-7173, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4150, 16), 8), UFXP(BV(18235, 16), 8)), UFXP(BV(51451, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18067, 16), 8), SFXP(SBV(5060, 16), 8)), SFXP(SBV(-29425, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22902, 16), 8), SFXP(SBV(17292, 16), 8)), SFXP(SBV(-5610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59334, 16), 8), UFXP(BV(12771, 16), 8)), UFXP(BV(46563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10653, 16), 8), SFXP(SBV(-17430, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27059, 16), 8), UFXP(BV(22287, 16), 8)), UFXP(BV(4772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16377, 16), 8), SFXP(SBV(7542, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10449, 16), 8), UFXP(BV(11106, 16), 8)), UFXP(BV(60092, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12088, 16), 8), SFXP(SBV(623, 16), 8)), SFXP(SBV(11465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8515, 16), 8), SFXP(SBV(-6614, 16), 8)), SFXP(SBV(15129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-23321, 16), 8), SFXP(SBV(-14040, 16), 8)), SFXP(SBV(-31709, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(645, 16), 8), UFXP(BV(3753, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57055, 16), 8), UFXP(BV(45451, 16), 8)), UFXP(BV(36970, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8201, 16), 8), UFXP(BV(45797, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23169, 16), 8), UFXP(BV(54214, 16), 8)), UFXP(BV(34491, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1443, 16), 8), SFXP(SBV(-26058, 16), 8)), SFXP(SBV(-27501, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21128, 16), 8), SFXP(SBV(7195, 16), 8)), SFXP(SBV(13933, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50459, 16), 8), UFXP(BV(28565, 16), 8)), UFXP(BV(21894, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44128, 16), 8), UFXP(BV(29785, 16), 8)), UFXP(BV(14343, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10304, 16), 8), SFXP(SBV(-1489, 16), 8)), SFXP(SBV(11793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50800, 16), 8), UFXP(BV(34693, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59508, 16), 8), UFXP(BV(64730, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3018, 16), 8), SFXP(SBV(-6272, 16), 8)), SFXP(SBV(-3254, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29049, 16), 8), SFXP(SBV(-4214, 16), 8)), SFXP(SBV(24835, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10450, 16), 8), SFXP(SBV(15324, 16), 8)), SFXP(SBV(4874, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15475, 16), 8), SFXP(SBV(-29426, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11052, 16), 8), SFXP(SBV(24909, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5157, 16), 8), SFXP(SBV(26226, 16), 8)), SFXP(SBV(-21069, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38861, 16), 8), UFXP(BV(53623, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19333, 16), 8), SFXP(SBV(-20866, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19164, 16), 8), UFXP(BV(8087, 16), 8)), UFXP(BV(27251, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7575, 16), 8), SFXP(SBV(-25011, 16), 8)), SFXP(SBV(17436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35974, 16), 8), UFXP(BV(16217, 16), 8)), UFXP(BV(52191, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50388, 16), 8), UFXP(BV(56798, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13524, 16), 8), SFXP(SBV(5759, 16), 8)), SFXP(SBV(19283, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12038, 16), 8), SFXP(SBV(15954, 16), 8)), SFXP(SBV(-27992, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12030, 16), 8), SFXP(SBV(25250, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(4942, 16), 8), UFXP(BV(58230, 16), 8)), UFXP(BV(10000, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21364, 16), 8), SFXP(SBV(7358, 16), 8)), SFXP(SBV(-14006, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25508, 16), 8), UFXP(BV(60804, 16), 8)), UFXP(BV(29237, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64075, 16), 8), UFXP(BV(44152, 16), 8)), UFXP(BV(19923, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56224, 16), 8), UFXP(BV(34224, 16), 8)), UFXP(BV(45342, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47562, 16), 8), UFXP(BV(6091, 16), 8)), UFXP(BV(53653, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21612, 16), 8), SFXP(SBV(-12784, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(47867, 16), 8), UFXP(BV(21066, 16), 8)), UFXP(BV(6771, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11324, 16), 8), UFXP(BV(45357, 16), 8)), UFXP(BV(56681, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(26977, 16), 8), SFXP(SBV(-28374, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29974, 16), 8), SFXP(SBV(29318, 16), 8)), SFXP(SBV(-6244, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43252, 16), 8), UFXP(BV(61050, 16), 8)), UFXP(BV(47738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30851, 16), 8), SFXP(SBV(-422, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49486, 16), 8), UFXP(BV(28336, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30046, 16), 8), SFXP(SBV(29808, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12513, 16), 8), SFXP(SBV(31137, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21946, 16), 8), SFXP(SBV(-10426, 16), 8)), SFXP(SBV(-32372, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25476, 16), 8), SFXP(SBV(3930, 16), 8)), SFXP(SBV(-21546, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58540, 16), 8), UFXP(BV(43798, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6612, 16), 8), SFXP(SBV(1572, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2588, 16), 8), UFXP(BV(2088, 16), 8)), UFXP(BV(21108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28452, 16), 8), UFXP(BV(51279, 16), 8)), UFXP(BV(42709, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37746, 16), 8), UFXP(BV(50285, 16), 8)), UFXP(BV(22495, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14636, 16), 8), SFXP(SBV(-20384, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41114, 16), 8), UFXP(BV(11123, 16), 8)), UFXP(BV(52237, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46980, 16), 8), UFXP(BV(16259, 16), 8)), UFXP(BV(63239, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60067, 16), 8), UFXP(BV(53796, 16), 8)), UFXP(BV(6271, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21650, 16), 8), SFXP(SBV(-3810, 16), 8)), SFXP(SBV(-5467, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36553, 16), 8), UFXP(BV(39565, 16), 8)), UFXP(BV(62524, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49865, 16), 8), UFXP(BV(14217, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5250, 16), 8), SFXP(SBV(11044, 16), 8)), SFXP(SBV(16294, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27241, 16), 8), UFXP(BV(43824, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-316, 16), 8), SFXP(SBV(22528, 16), 8)), SFXP(SBV(-22844, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19694, 16), 8), UFXP(BV(9602, 16), 8)), UFXP(BV(29296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14518, 16), 8), UFXP(BV(17403, 16), 8)), UFXP(BV(31921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64063, 16), 8), UFXP(BV(3625, 16), 8)), UFXP(BV(60438, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38952, 16), 8), UFXP(BV(20477, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20431, 16), 8), UFXP(BV(52819, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8125, 16), 8), SFXP(SBV(8485, 16), 8)), SFXP(SBV(-16610, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21695, 16), 8), SFXP(SBV(-2800, 16), 8)), SFXP(SBV(18895, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13375, 16), 8), SFXP(SBV(26714, 16), 8)), SFXP(SBV(19447, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41509, 16), 8), UFXP(BV(59187, 16), 8)), UFXP(BV(47858, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4118, 16), 8), SFXP(SBV(-16345, 16), 8)), SFXP(SBV(-20463, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5513, 16), 8), SFXP(SBV(-21832, 16), 8)), SFXP(SBV(-16319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1293, 16), 8), SFXP(SBV(6505, 16), 8)), SFXP(SBV(5212, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65480, 16), 8), UFXP(BV(38051, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29063, 16), 8), SFXP(SBV(-11224, 16), 8)), SFXP(SBV(-17839, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(9322, 16), 8), SFXP(SBV(-24406, 16), 8)), SFXP(SBV(28782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12126, 16), 8), UFXP(BV(54773, 16), 8)), UFXP(BV(1363, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22375, 16), 8), SFXP(SBV(2145, 16), 8)), SFXP(SBV(9129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14835, 16), 8), SFXP(SBV(-7648, 16), 8)), SFXP(SBV(22483, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21532, 16), 8), SFXP(SBV(-13498, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65301, 16), 8), UFXP(BV(10158, 16), 8)), UFXP(BV(55143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10934, 16), 8), UFXP(BV(44988, 16), 8)), UFXP(BV(20936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47052, 16), 8), UFXP(BV(48148, 16), 8)), UFXP(BV(2091, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9392, 16), 8), UFXP(BV(12237, 16), 8)), UFXP(BV(55728, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52555, 16), 8), UFXP(BV(38771, 16), 8)), UFXP(BV(29558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7343, 16), 8), SFXP(SBV(-20717, 16), 8)), SFXP(SBV(-13374, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(800, 16), 8), UFXP(BV(7340, 16), 8)), UFXP(BV(8140, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34263, 16), 8), UFXP(BV(28724, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(274, 16), 8), UFXP(BV(36172, 16), 8)), UFXP(BV(29638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26620, 16), 8), UFXP(BV(26757, 16), 8)), UFXP(BV(53377, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52113, 16), 8), UFXP(BV(6776, 16), 8)), UFXP(BV(3109, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3044, 16), 8), UFXP(BV(18082, 16), 8)), UFXP(BV(18398, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18283, 16), 8), UFXP(BV(23297, 16), 8)), UFXP(BV(60522, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8990, 16), 8), SFXP(SBV(-17864, 16), 8)), SFXP(SBV(26854, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40498, 16), 8), UFXP(BV(17040, 16), 8)), UFXP(BV(23458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40059, 16), 8), UFXP(BV(23581, 16), 8)), UFXP(BV(16478, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13919, 16), 8), SFXP(SBV(-27893, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46373, 16), 8), UFXP(BV(3567, 16), 8)), UFXP(BV(42806, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15924, 16), 8), UFXP(BV(41287, 16), 8)), UFXP(BV(57211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55072, 16), 8), UFXP(BV(13053, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28960, 16), 8), SFXP(SBV(17640, 16), 8)), SFXP(SBV(11320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42257, 16), 8), UFXP(BV(60229, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21353, 16), 8), UFXP(BV(49281, 16), 8)), UFXP(BV(5098, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48044, 16), 8), UFXP(BV(30290, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23712, 16), 8), SFXP(SBV(-19743, 16), 8)), SFXP(SBV(22081, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3681, 16), 8), SFXP(SBV(-22417, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5637, 16), 8), SFXP(SBV(-13351, 16), 8)), SFXP(SBV(-7714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44748, 16), 8), UFXP(BV(4101, 16), 8)), UFXP(BV(40647, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11269, 16), 8), SFXP(SBV(-25249, 16), 8)), SFXP(SBV(29018, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26878, 16), 8), SFXP(SBV(-8470, 16), 8)), SFXP(SBV(28220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5776, 16), 8), SFXP(SBV(-32136, 16), 8)), SFXP(SBV(27624, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(60124, 16), 8), UFXP(BV(45253, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(409, 16), 8), UFXP(BV(13444, 16), 8)), UFXP(BV(13853, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35603, 16), 8), UFXP(BV(9980, 16), 8)), UFXP(BV(45583, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55966, 16), 8), UFXP(BV(46753, 16), 8)), UFXP(BV(9213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15714, 16), 8), UFXP(BV(3189, 16), 8)), UFXP(BV(64678, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19334, 16), 8), SFXP(SBV(-29739, 16), 8)), SFXP(SBV(16463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3429, 16), 8), UFXP(BV(39806, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13551, 16), 8), UFXP(BV(56026, 16), 8)), UFXP(BV(23061, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1890, 16), 8), UFXP(BV(28715, 16), 8)), UFXP(BV(30605, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6672, 16), 8), SFXP(SBV(-421, 16), 8)), SFXP(SBV(7093, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12110, 16), 8), UFXP(BV(37140, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30754, 16), 8), SFXP(SBV(854, 16), 8)), SFXP(SBV(-29900, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63379, 16), 8), UFXP(BV(23579, 16), 8)), UFXP(BV(21422, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6736, 16), 8), UFXP(BV(40114, 16), 8)), UFXP(BV(46850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27489, 16), 8), SFXP(SBV(-9782, 16), 8)), SFXP(SBV(17707, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63398, 16), 8), UFXP(BV(44518, 16), 8)), UFXP(BV(18880, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8530, 16), 8), SFXP(SBV(-1583, 16), 8)), SFXP(SBV(-6947, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11098, 16), 8), UFXP(BV(65153, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31386, 16), 8), SFXP(SBV(-21452, 16), 8)), SFXP(SBV(-8609, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58848, 16), 8), UFXP(BV(21496, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15055, 16), 8), UFXP(BV(38862, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13435, 16), 8), SFXP(SBV(-9803, 16), 8)), SFXP(SBV(-23238, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31163, 16), 8), SFXP(SBV(16931, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29825, 16), 8), UFXP(BV(58343, 16), 8)), UFXP(BV(22632, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58665, 16), 8), UFXP(BV(910, 16), 8)), UFXP(BV(59575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28014, 16), 8), SFXP(SBV(13330, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27947, 16), 8), SFXP(SBV(19737, 16), 8)), SFXP(SBV(8210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23292, 16), 8), UFXP(BV(54246, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21995, 16), 8), SFXP(SBV(-4399, 16), 8)), SFXP(SBV(-15262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-660, 16), 8), SFXP(SBV(20952, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6722, 16), 8), SFXP(SBV(15840, 16), 8)), SFXP(SBV(9118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29605, 16), 8), SFXP(SBV(7659, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39294, 16), 8), UFXP(BV(31087, 16), 8)), UFXP(BV(4845, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1221, 16), 8), SFXP(SBV(-25337, 16), 8)), SFXP(SBV(-26558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9806, 16), 8), SFXP(SBV(-14441, 16), 8)), SFXP(SBV(24247, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12191, 16), 8), UFXP(BV(699, 16), 8)), UFXP(BV(11492, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19857, 16), 8), SFXP(SBV(-9816, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22672, 16), 8), SFXP(SBV(-31044, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28083, 16), 8), UFXP(BV(15546, 16), 8)), UFXP(BV(43629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21812, 16), 8), UFXP(BV(8169, 16), 8)), UFXP(BV(13643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25640, 16), 8), SFXP(SBV(28302, 16), 8)), SFXP(SBV(-16575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24662, 16), 8), SFXP(SBV(25618, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5305, 16), 8), UFXP(BV(21032, 16), 8)), UFXP(BV(26337, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49051, 16), 8), UFXP(BV(2449, 16), 8)), UFXP(BV(51500, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48904, 16), 8), UFXP(BV(8473, 16), 8)), UFXP(BV(57377, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25911, 16), 8), UFXP(BV(64638, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52287, 16), 8), UFXP(BV(1530, 16), 8)), UFXP(BV(50757, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27362, 16), 8), UFXP(BV(25457, 16), 8)), UFXP(BV(52819, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29932, 16), 8), SFXP(SBV(-16553, 16), 8)), SFXP(SBV(13379, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9972, 16), 8), SFXP(SBV(-101, 16), 8)), SFXP(SBV(9871, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13679, 16), 8), SFXP(SBV(-4719, 16), 8)), SFXP(SBV(18398, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5685, 16), 8), UFXP(BV(26587, 16), 8)), UFXP(BV(44634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42704, 16), 8), UFXP(BV(15316, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14090, 16), 8), SFXP(SBV(27047, 16), 8)), SFXP(SBV(18687, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31690, 16), 8), SFXP(SBV(17354, 16), 8)), SFXP(SBV(-16492, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21192, 16), 8), SFXP(SBV(-13809, 16), 8)), SFXP(SBV(7383, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57336, 16), 8), UFXP(BV(13856, 16), 8)), UFXP(BV(43480, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8356, 16), 8), SFXP(SBV(22211, 16), 8)), SFXP(SBV(4085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9114, 16), 8), SFXP(SBV(23990, 16), 8)), SFXP(SBV(-14876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25747, 16), 8), UFXP(BV(37712, 16), 8)), UFXP(BV(63459, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31350, 16), 8), SFXP(SBV(28861, 16), 8)), SFXP(SBV(4599, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44965, 16), 8), UFXP(BV(36314, 16), 8)), UFXP(BV(8651, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3298, 16), 8), UFXP(BV(20771, 16), 8)), UFXP(BV(5445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56139, 16), 8), UFXP(BV(28570, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26376, 16), 8), UFXP(BV(32813, 16), 8)), UFXP(BV(59189, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35199, 16), 8), UFXP(BV(45316, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53265, 16), 8), UFXP(BV(48005, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4490, 16), 8), SFXP(SBV(10445, 16), 8)), SFXP(SBV(5955, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11318, 16), 8), UFXP(BV(49330, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22029, 16), 8), SFXP(SBV(-28466, 16), 8)), SFXP(SBV(-24690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58599, 16), 8), UFXP(BV(57046, 16), 8)), UFXP(BV(50109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30848, 16), 8), SFXP(SBV(942, 16), 8)), SFXP(SBV(-31790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33205, 16), 8), UFXP(BV(56273, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34757, 16), 8), UFXP(BV(15220, 16), 8)), UFXP(BV(19537, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27751, 16), 8), SFXP(SBV(-26098, 16), 8)), SFXP(SBV(-11687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20119, 16), 8), UFXP(BV(5375, 16), 8)), UFXP(BV(14744, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10311, 16), 8), SFXP(SBV(-10628, 16), 8)), SFXP(SBV(20939, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18499, 16), 8), SFXP(SBV(15483, 16), 8)), SFXP(SBV(-3016, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8379, 16), 8), SFXP(SBV(8540, 16), 8)), SFXP(SBV(-16919, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29511, 16), 8), SFXP(SBV(-29588, 16), 8)), SFXP(SBV(2955, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42801, 16), 8), UFXP(BV(14165, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18634, 16), 8), SFXP(SBV(-15596, 16), 8)), SFXP(SBV(21107, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3970, 16), 8), SFXP(SBV(-18577, 16), 8)), SFXP(SBV(14607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11231, 16), 8), SFXP(SBV(17745, 16), 8)), SFXP(SBV(-28976, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38155, 16), 8), UFXP(BV(17847, 16), 8)), UFXP(BV(20308, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19611, 16), 8), UFXP(BV(8209, 16), 8)), UFXP(BV(27820, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25679, 16), 8), SFXP(SBV(-25405, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9646, 16), 8), SFXP(SBV(819, 16), 8)), SFXP(SBV(10465, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5202, 16), 8), UFXP(BV(27128, 16), 8)), UFXP(BV(32330, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32446, 16), 8), SFXP(SBV(2516, 16), 8)), SFXP(SBV(29930, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11848, 16), 8), SFXP(SBV(-27767, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59038, 16), 8), UFXP(BV(62325, 16), 8)), UFXP(BV(55827, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28267, 16), 8), SFXP(SBV(31785, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6179, 16), 8), UFXP(BV(42701, 16), 8)), UFXP(BV(47623, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14524, 16), 8), SFXP(SBV(28090, 16), 8)), SFXP(SBV(13566, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3599, 16), 8), SFXP(SBV(-4374, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25917, 16), 8), SFXP(SBV(-15065, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(6407, 16), 8), SFXP(SBV(-23795, 16), 8)), SFXP(SBV(-5702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5030, 16), 8), UFXP(BV(8006, 16), 8)), UFXP(BV(62560, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13155, 16), 8), SFXP(SBV(-30139, 16), 8)), SFXP(SBV(24120, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(26244, 16), 8), SFXP(SBV(-31362, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39307, 16), 8), UFXP(BV(53874, 16), 8)), UFXP(BV(50969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26555, 16), 8), UFXP(BV(58591, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29958, 16), 8), SFXP(SBV(-27684, 16), 8)), SFXP(SBV(2274, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27968, 16), 8), SFXP(SBV(4257, 16), 8)), SFXP(SBV(-32225, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2617, 16), 8), UFXP(BV(16620, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65284, 16), 8), UFXP(BV(43434, 16), 8)), UFXP(BV(21850, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63984, 16), 8), UFXP(BV(9341, 16), 8)), UFXP(BV(54643, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28991, 16), 8), UFXP(BV(51261, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31514, 16), 8), SFXP(SBV(20119, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8561, 16), 8), UFXP(BV(9055, 16), 8)), UFXP(BV(40667, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14379, 16), 8), SFXP(SBV(-7244, 16), 8)), SFXP(SBV(-21623, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30928, 16), 8), SFXP(SBV(-25525, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9889, 16), 8), SFXP(SBV(15932, 16), 8)), SFXP(SBV(6043, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60102, 16), 8), UFXP(BV(23304, 16), 8)), UFXP(BV(36798, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33995, 16), 8), UFXP(BV(4177, 16), 8)), UFXP(BV(29818, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19493, 16), 8), SFXP(SBV(29381, 16), 8)), SFXP(SBV(-9888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28482, 16), 8), SFXP(SBV(15687, 16), 8)), SFXP(SBV(-12795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26738, 16), 8), UFXP(BV(33837, 16), 8)), UFXP(BV(60708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43642, 16), 8), UFXP(BV(34186, 16), 8)), UFXP(BV(9456, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31741, 16), 8), UFXP(BV(20352, 16), 8)), UFXP(BV(33041, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19877, 16), 8), SFXP(SBV(-19892, 16), 8)), SFXP(SBV(-25767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58128, 16), 8), UFXP(BV(12541, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22924, 16), 8), UFXP(BV(29478, 16), 8)), UFXP(BV(18222, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6726, 16), 8), UFXP(BV(62559, 16), 8)), UFXP(BV(9703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17403, 16), 8), SFXP(SBV(21310, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22773, 16), 8), SFXP(SBV(-21396, 16), 8)), SFXP(SBV(21367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23316, 16), 8), SFXP(SBV(-7940, 16), 8)), SFXP(SBV(-15376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16833, 16), 8), SFXP(SBV(31619, 16), 8)), SFXP(SBV(18080, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61616, 16), 8), UFXP(BV(25072, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12327, 16), 8), UFXP(BV(11766, 16), 8)), UFXP(BV(561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55380, 16), 8), UFXP(BV(51053, 16), 8)), UFXP(BV(40897, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36387, 16), 8), UFXP(BV(8461, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1280, 16), 8), UFXP(BV(51819, 16), 8)), UFXP(BV(53099, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25041, 16), 8), UFXP(BV(63687, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6519, 16), 8), UFXP(BV(7724, 16), 8)), UFXP(BV(64331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47412, 16), 8), UFXP(BV(45260, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29928, 16), 8), SFXP(SBV(5305, 16), 8)), SFXP(SBV(30303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24101, 16), 8), SFXP(SBV(24300, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33338, 16), 8), UFXP(BV(22123, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19321, 16), 8), SFXP(SBV(-27390, 16), 8)), SFXP(SBV(-18825, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28391, 16), 8), SFXP(SBV(19147, 16), 8)), SFXP(SBV(-9244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29792, 16), 8), SFXP(SBV(19420, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14218, 16), 8), SFXP(SBV(27657, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23151, 16), 8), UFXP(BV(32488, 16), 8)), UFXP(BV(56199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4308, 16), 8), SFXP(SBV(-32408, 16), 8)), SFXP(SBV(21078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1595, 16), 8), SFXP(SBV(19711, 16), 8)), SFXP(SBV(21306, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7191, 16), 8), SFXP(SBV(-7468, 16), 8)), SFXP(SBV(-14659, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4943, 16), 8), SFXP(SBV(-5393, 16), 8)), SFXP(SBV(450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63286, 16), 8), UFXP(BV(36084, 16), 8)), UFXP(BV(27202, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9303, 16), 8), UFXP(BV(6673, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29151, 16), 8), UFXP(BV(24021, 16), 8)), UFXP(BV(5130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46315, 16), 8), UFXP(BV(65397, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49129, 16), 8), UFXP(BV(20086, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(337, 16), 8), UFXP(BV(476, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21340, 16), 8), SFXP(SBV(16527, 16), 8)), SFXP(SBV(-4813, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30896, 16), 8), SFXP(SBV(-27107, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57844, 16), 8), UFXP(BV(14396, 16), 8)), UFXP(BV(6704, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7726, 16), 8), SFXP(SBV(-1970, 16), 8)), SFXP(SBV(-9696, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(24412, 16), 8), UFXP(BV(37892, 16), 8)), UFXP(BV(8877, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54335, 16), 8), UFXP(BV(23700, 16), 8)), UFXP(BV(12499, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57106, 16), 8), UFXP(BV(29405, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26587, 16), 8), SFXP(SBV(425, 16), 8)), SFXP(SBV(-21397, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7546, 16), 8), SFXP(SBV(-27732, 16), 8)), SFXP(SBV(20186, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14497, 16), 8), SFXP(SBV(10500, 16), 8)), SFXP(SBV(3997, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13149, 16), 8), SFXP(SBV(19804, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58373, 16), 8), UFXP(BV(14234, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58527, 16), 8), UFXP(BV(28, 16), 8)), UFXP(BV(6402, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20292, 16), 8), SFXP(SBV(29256, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5026, 16), 8), SFXP(SBV(7673, 16), 8)), SFXP(SBV(19571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27513, 16), 8), SFXP(SBV(3405, 16), 8)), SFXP(SBV(30918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34167, 16), 8), UFXP(BV(21920, 16), 8)), UFXP(BV(56087, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2805, 16), 8), SFXP(SBV(4190, 16), 8)), SFXP(SBV(-19627, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36757, 16), 8), UFXP(BV(58017, 16), 8)), UFXP(BV(7126, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34998, 16), 8), UFXP(BV(53564, 16), 8)), UFXP(BV(48288, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18304, 16), 8), SFXP(SBV(17190, 16), 8)), SFXP(SBV(-1114, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41243, 16), 8), UFXP(BV(52711, 16), 8)), UFXP(BV(28418, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31923, 16), 8), UFXP(BV(45729, 16), 8)), UFXP(BV(51730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8986, 16), 8), SFXP(SBV(3108, 16), 8)), SFXP(SBV(5878, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23637, 16), 8), UFXP(BV(33279, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28192, 16), 8), SFXP(SBV(27008, 16), 8)), SFXP(SBV(1184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22839, 16), 8), SFXP(SBV(-17380, 16), 8)), SFXP(SBV(25317, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8700, 16), 8), SFXP(SBV(-11226, 16), 8)), SFXP(SBV(2526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30397, 16), 8), SFXP(SBV(8797, 16), 8)), SFXP(SBV(26342, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49802, 16), 8), UFXP(BV(61426, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18565, 16), 8), SFXP(SBV(-28742, 16), 8)), SFXP(SBV(18229, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57131, 16), 8), UFXP(BV(50250, 16), 8)), UFXP(BV(7534, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30268, 16), 8), SFXP(SBV(17909, 16), 8)), SFXP(SBV(12359, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30686, 16), 8), UFXP(BV(34071, 16), 8)), UFXP(BV(62151, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25940, 16), 8), SFXP(SBV(17566, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4397, 16), 8), SFXP(SBV(-26454, 16), 8)), SFXP(SBV(-4383, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28861, 16), 8), SFXP(SBV(24799, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53709, 16), 8), UFXP(BV(9438, 16), 8)), UFXP(BV(14020, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39948, 16), 8), UFXP(BV(10001, 16), 8)), UFXP(BV(29947, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13811, 16), 8), UFXP(BV(58450, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21870, 16), 8), SFXP(SBV(5645, 16), 8)), SFXP(SBV(-27515, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18666, 16), 8), SFXP(SBV(39, 16), 8)), SFXP(SBV(-18705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37518, 16), 8), UFXP(BV(25310, 16), 8)), UFXP(BV(12208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32180, 16), 8), SFXP(SBV(-2933, 16), 8)), SFXP(SBV(29247, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12963, 16), 8), UFXP(BV(42217, 16), 8)), UFXP(BV(55180, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22895, 16), 8), UFXP(BV(23777, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22660, 16), 8), SFXP(SBV(32603, 16), 8)), SFXP(SBV(-9943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5720, 16), 8), UFXP(BV(11205, 16), 8)), UFXP(BV(60051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18081, 16), 8), SFXP(SBV(-523, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56844, 16), 8), UFXP(BV(34238, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37416, 16), 8), UFXP(BV(60236, 16), 8)), UFXP(BV(22044, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(315, 16), 8), SFXP(SBV(-21411, 16), 8)), SFXP(SBV(-21096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28036, 16), 8), SFXP(SBV(-7579, 16), 8)), SFXP(SBV(21949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18529, 16), 8), UFXP(BV(54260, 16), 8)), UFXP(BV(29805, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30740, 16), 8), SFXP(SBV(1825, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9190, 16), 8), UFXP(BV(20865, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16566, 16), 8), SFXP(SBV(-28614, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5756, 16), 8), SFXP(SBV(-26546, 16), 8)), SFXP(SBV(-20790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43955, 16), 8), UFXP(BV(61504, 16), 8)), UFXP(BV(39923, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53566, 16), 8), UFXP(BV(24125, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44918, 16), 8), UFXP(BV(1922, 16), 8)), UFXP(BV(46840, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-6152, 16), 8), SFXP(SBV(-25983, 16), 8)), SFXP(SBV(-30957, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3897, 16), 8), SFXP(SBV(-15372, 16), 8)), SFXP(SBV(28142, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3915, 16), 8), SFXP(SBV(1417, 16), 8)), SFXP(SBV(5332, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49387, 16), 8), UFXP(BV(32592, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58003, 16), 8), UFXP(BV(34127, 16), 8)), UFXP(BV(23876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49411, 16), 8), UFXP(BV(26638, 16), 8)), UFXP(BV(22773, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40327, 16), 8), UFXP(BV(23335, 16), 8)), UFXP(BV(63662, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34472, 16), 8), UFXP(BV(38322, 16), 8)), UFXP(BV(48488, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48472, 16), 8), UFXP(BV(12463, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(8243, 16), 8), SFXP(SBV(-14400, 16), 8)), SFXP(SBV(-4917, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10317, 16), 8), SFXP(SBV(17189, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59334, 16), 8), UFXP(BV(37051, 16), 8)), UFXP(BV(22283, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55010, 16), 8), UFXP(BV(11845, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38033, 16), 8), UFXP(BV(57229, 16), 8)), UFXP(BV(48162, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(64851, 16), 8), UFXP(BV(29815, 16), 8)), UFXP(BV(16221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9667, 16), 8), UFXP(BV(50973, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16426, 16), 8), SFXP(SBV(-18706, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9557, 16), 8), UFXP(BV(6917, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60349, 16), 8), UFXP(BV(40259, 16), 8)), UFXP(BV(53404, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9157, 16), 8), SFXP(SBV(-1549, 16), 8)), SFXP(SBV(7608, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8904, 16), 8), SFXP(SBV(-27410, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8471, 16), 8), SFXP(SBV(1144, 16), 8)), SFXP(SBV(7327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47256, 16), 8), UFXP(BV(27528, 16), 8)), UFXP(BV(9248, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29436, 16), 8), UFXP(BV(55389, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32349, 16), 8), SFXP(SBV(26443, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15773, 16), 8), SFXP(SBV(29961, 16), 8)), SFXP(SBV(-10987, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42659, 16), 8), UFXP(BV(1218, 16), 8)), UFXP(BV(41441, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50836, 16), 8), UFXP(BV(32049, 16), 8)), UFXP(BV(18787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13288, 16), 8), UFXP(BV(13153, 16), 8)), UFXP(BV(26441, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20324, 16), 8), SFXP(SBV(10165, 16), 8)), SFXP(SBV(-10159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1272, 16), 8), SFXP(SBV(-7407, 16), 8)), SFXP(SBV(-8679, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17508, 16), 8), SFXP(SBV(-20264, 16), 8)), SFXP(SBV(2756, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44280, 16), 8), UFXP(BV(56007, 16), 8)), UFXP(BV(53809, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(29485, 16), 8), UFXP(BV(53798, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12573, 16), 8), UFXP(BV(38423, 16), 8)), UFXP(BV(50996, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21289, 16), 8), SFXP(SBV(4685, 16), 8)), SFXP(SBV(-25974, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40474, 16), 8), UFXP(BV(50531, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24846, 16), 8), SFXP(SBV(-1369, 16), 8)), SFXP(SBV(23477, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34889, 16), 8), UFXP(BV(30017, 16), 8)), UFXP(BV(27639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40150, 16), 8), UFXP(BV(25911, 16), 8)), UFXP(BV(14239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4545, 16), 8), SFXP(SBV(31555, 16), 8)), SFXP(SBV(-29599, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16351, 16), 8), SFXP(SBV(8376, 16), 8)), SFXP(SBV(24727, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7041, 16), 8), SFXP(SBV(26387, 16), 8)), SFXP(SBV(-19346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44416, 16), 8), UFXP(BV(8115, 16), 8)), UFXP(BV(52531, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23128, 16), 8), UFXP(BV(5294, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53638, 16), 8), UFXP(BV(17862, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1118, 16), 8), UFXP(BV(25598, 16), 8)), UFXP(BV(46255, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11720, 16), 8), UFXP(BV(53679, 16), 8)), UFXP(BV(65399, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56050, 16), 8), UFXP(BV(31028, 16), 8)), UFXP(BV(21542, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18161, 16), 8), SFXP(SBV(9517, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26370, 16), 8), SFXP(SBV(-25778, 16), 8)), SFXP(SBV(-31640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2647, 16), 8), SFXP(SBV(-28352, 16), 8)), SFXP(SBV(25705, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31083, 16), 8), SFXP(SBV(17658, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13925, 16), 8), UFXP(BV(10813, 16), 8)), UFXP(BV(63881, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2272, 16), 8), UFXP(BV(59177, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8959, 16), 8), UFXP(BV(33317, 16), 8)), UFXP(BV(41178, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27207, 16), 8), SFXP(SBV(-2364, 16), 8)), SFXP(SBV(29571, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59004, 16), 8), UFXP(BV(44208, 16), 8)), UFXP(BV(14796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10385, 16), 8), SFXP(SBV(23703, 16), 8)), SFXP(SBV(21494, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23827, 16), 8), SFXP(SBV(-19734, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23887, 16), 8), UFXP(BV(51858, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9152, 16), 8), SFXP(SBV(4238, 16), 8)), SFXP(SBV(4914, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1199, 16), 8), SFXP(SBV(20219, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7039, 16), 8), UFXP(BV(22956, 16), 8)), UFXP(BV(41377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12983, 16), 8), SFXP(SBV(-4919, 16), 8)), SFXP(SBV(8064, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12962, 16), 8), SFXP(SBV(12423, 16), 8)), SFXP(SBV(539, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2605, 16), 8), SFXP(SBV(17384, 16), 8)), SFXP(SBV(-19713, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25007, 16), 8), SFXP(SBV(18415, 16), 8)), SFXP(SBV(-6592, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3900, 16), 8), SFXP(SBV(24638, 16), 8)), SFXP(SBV(-20738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13430, 16), 8), SFXP(SBV(-15052, 16), 8)), SFXP(SBV(-1622, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20929, 16), 8), SFXP(SBV(4991, 16), 8)), SFXP(SBV(-25920, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8021, 16), 8), SFXP(SBV(32765, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16128, 16), 8), UFXP(BV(58, 16), 8)), UFXP(BV(16070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5180, 16), 8), UFXP(BV(7268, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55979, 16), 8), UFXP(BV(34479, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15565, 16), 8), UFXP(BV(36805, 16), 8)), UFXP(BV(44296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37743, 16), 8), UFXP(BV(1693, 16), 8)), UFXP(BV(36050, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17126, 16), 8), UFXP(BV(42261, 16), 8)), UFXP(BV(40401, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58734, 16), 8), UFXP(BV(24270, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31482, 16), 8), UFXP(BV(41483, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63856, 16), 8), UFXP(BV(53541, 16), 8)), UFXP(BV(10315, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62719, 16), 8), UFXP(BV(34292, 16), 8)), UFXP(BV(12799, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-986, 16), 8), SFXP(SBV(23874, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53727, 16), 8), UFXP(BV(6948, 16), 8)), UFXP(BV(60675, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-3917, 16), 8), SFXP(SBV(-18310, 16), 8)), SFXP(SBV(18013, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15390, 16), 8), SFXP(SBV(-29429, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(181, 16), 8), UFXP(BV(35042, 16), 8)), UFXP(BV(35223, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25770, 16), 8), SFXP(SBV(12198, 16), 8)), SFXP(SBV(-17284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1490, 16), 8), UFXP(BV(63367, 16), 8)), UFXP(BV(64857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32369, 16), 8), SFXP(SBV(-15788, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64494, 16), 8), UFXP(BV(55674, 16), 8)), UFXP(BV(8820, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36465, 16), 8), UFXP(BV(65074, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-4297, 16), 8), SFXP(SBV(1955, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21844, 16), 8), UFXP(BV(55329, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27371, 16), 8), UFXP(BV(15502, 16), 8)), UFXP(BV(11869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19977, 16), 8), SFXP(SBV(28298, 16), 8)), SFXP(SBV(-8321, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53140, 16), 8), UFXP(BV(10514, 16), 8)), UFXP(BV(42626, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16548, 16), 8), SFXP(SBV(9565, 16), 8)), SFXP(SBV(-6983, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14955, 16), 8), SFXP(SBV(20829, 16), 8)), SFXP(SBV(5874, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28834, 16), 8), SFXP(SBV(12827, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51563, 16), 8), UFXP(BV(51726, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12281, 16), 8), SFXP(SBV(5899, 16), 8)), SFXP(SBV(-18180, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28146, 16), 8), UFXP(BV(29832, 16), 8)), UFXP(BV(63850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4452, 16), 8), SFXP(SBV(6184, 16), 8)), SFXP(SBV(-1732, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32037, 16), 8), SFXP(SBV(25271, 16), 8)), SFXP(SBV(8228, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53711, 16), 8), UFXP(BV(17380, 16), 8)), UFXP(BV(41993, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34008, 16), 8), UFXP(BV(2411, 16), 8)), UFXP(BV(36419, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26899, 16), 8), SFXP(SBV(-19954, 16), 8)), SFXP(SBV(-502, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11201, 16), 8), SFXP(SBV(-23680, 16), 8)), SFXP(SBV(12479, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53616, 16), 8), UFXP(BV(44923, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15245, 16), 8), UFXP(BV(4419, 16), 8)), UFXP(BV(1011, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52260, 16), 8), UFXP(BV(6371, 16), 8)), UFXP(BV(58631, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63970, 16), 8), UFXP(BV(54038, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1242, 16), 8), SFXP(SBV(-9233, 16), 8)), SFXP(SBV(-7991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8875, 16), 8), UFXP(BV(39016, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8135, 16), 8), UFXP(BV(5043, 16), 8)), UFXP(BV(13178, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60706, 16), 8), UFXP(BV(21883, 16), 8)), UFXP(BV(17053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62154, 16), 8), UFXP(BV(60621, 16), 8)), UFXP(BV(1533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36402, 16), 8), UFXP(BV(41006, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18803, 16), 8), UFXP(BV(46320, 16), 8)), UFXP(BV(65123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2696, 16), 8), SFXP(SBV(27890, 16), 8)), SFXP(SBV(-30586, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15488, 16), 8), SFXP(SBV(-19351, 16), 8)), SFXP(SBV(-3863, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14645, 16), 8), UFXP(BV(31623, 16), 8)), UFXP(BV(48558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30132, 16), 8), SFXP(SBV(-27033, 16), 8)), SFXP(SBV(3099, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39101, 16), 8), UFXP(BV(63221, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27725, 16), 8), UFXP(BV(27318, 16), 8)), UFXP(BV(55043, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5559, 16), 8), UFXP(BV(31294, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58756, 16), 8), UFXP(BV(63356, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6425, 16), 8), SFXP(SBV(-8676, 16), 8)), SFXP(SBV(-2251, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26536, 16), 8), SFXP(SBV(18690, 16), 8)), SFXP(SBV(28744, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27071, 16), 8), SFXP(SBV(27617, 16), 8)), SFXP(SBV(10848, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56540, 16), 8), UFXP(BV(10698, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3177, 16), 8), SFXP(SBV(6820, 16), 8)), SFXP(SBV(9997, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5709, 16), 8), UFXP(BV(21841, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13538, 16), 8), UFXP(BV(25690, 16), 8)), UFXP(BV(53384, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(45185, 16), 8), UFXP(BV(5364, 16), 8)), UFXP(BV(29263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39031, 16), 8), UFXP(BV(17215, 16), 8)), UFXP(BV(21816, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59505, 16), 8), UFXP(BV(15857, 16), 8)), UFXP(BV(15808, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21145, 16), 8), SFXP(SBV(-23951, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16357, 16), 8), SFXP(SBV(-2157, 16), 8)), SFXP(SBV(-18514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49051, 16), 8), UFXP(BV(25741, 16), 8)), UFXP(BV(23310, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14410, 16), 8), SFXP(SBV(-14054, 16), 8)), SFXP(SBV(4655, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2263, 16), 8), UFXP(BV(16420, 16), 8)), UFXP(BV(18683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24417, 16), 8), SFXP(SBV(-6952, 16), 8)), SFXP(SBV(31369, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17201, 16), 8), UFXP(BV(43963, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17358, 16), 8), SFXP(SBV(5957, 16), 8)), SFXP(SBV(-23315, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9151, 16), 8), SFXP(SBV(10157, 16), 8)), SFXP(SBV(1006, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6128, 16), 8), SFXP(SBV(1, 16), 8)), SFXP(SBV(-23, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1119, 16), 8), SFXP(SBV(22896, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48773, 16), 8), UFXP(BV(47405, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26921, 16), 8), SFXP(SBV(-5340, 16), 8)), SFXP(SBV(32261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16582, 16), 8), SFXP(SBV(9895, 16), 8)), SFXP(SBV(14427, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31483, 16), 8), SFXP(SBV(28136, 16), 8)), SFXP(SBV(-5917, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31368, 16), 8), SFXP(SBV(-17562, 16), 8)), SFXP(SBV(-13806, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14202, 16), 8), SFXP(SBV(21982, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22461, 16), 8), SFXP(SBV(-20470, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20099, 16), 8), SFXP(SBV(-9641, 16), 8)), SFXP(SBV(-29501, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19549, 16), 8), SFXP(SBV(-16900, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26414, 16), 8), UFXP(BV(47033, 16), 8)), UFXP(BV(44917, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28940, 16), 8), SFXP(SBV(4084, 16), 8)), SFXP(SBV(-24856, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27795, 16), 8), SFXP(SBV(24775, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-12532, 16), 8), SFXP(SBV(-29252, 16), 8)), SFXP(SBV(-9815, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53477, 16), 8), UFXP(BV(31093, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8673, 16), 8), UFXP(BV(40109, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56460, 16), 8), UFXP(BV(30815, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45110, 16), 8), UFXP(BV(20368, 16), 8)), UFXP(BV(24742, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20030, 16), 8), SFXP(SBV(-30146, 16), 8)), SFXP(SBV(-10116, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53225, 16), 8), UFXP(BV(18913, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19873, 16), 8), SFXP(SBV(-5603, 16), 8)), SFXP(SBV(-23797, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8357, 16), 8), SFXP(SBV(14423, 16), 8)), SFXP(SBV(6066, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(769, 16), 8), SFXP(SBV(16780, 16), 8)), SFXP(SBV(-16011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21311, 16), 8), SFXP(SBV(-19372, 16), 8)), SFXP(SBV(-25757, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-316, 16), 8), SFXP(SBV(29588, 16), 8)), SFXP(SBV(-29904, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20855, 16), 8), SFXP(SBV(356, 16), 8)), SFXP(SBV(21211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(4027, 16), 8), UFXP(BV(51658, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29758, 16), 8), SFXP(SBV(-6662, 16), 8)), SFXP(SBV(-23096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21363, 16), 8), SFXP(SBV(20044, 16), 8)), SFXP(SBV(-31279, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24904, 16), 8), UFXP(BV(62355, 16), 8)), UFXP(BV(28085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19678, 16), 8), SFXP(SBV(18344, 16), 8)), SFXP(SBV(1334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16252, 16), 8), UFXP(BV(16233, 16), 8)), UFXP(BV(32485, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16024, 16), 8), SFXP(SBV(-17943, 16), 8)), SFXP(SBV(-1919, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64248, 16), 8), UFXP(BV(27291, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8384, 16), 8), SFXP(SBV(-2469, 16), 8)), SFXP(SBV(-5915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4107, 16), 8), UFXP(BV(7392, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55331, 16), 8), UFXP(BV(21405, 16), 8)), UFXP(BV(11200, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13809, 16), 8), SFXP(SBV(-13152, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28454, 16), 8), UFXP(BV(17516, 16), 8)), UFXP(BV(46333, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38932, 16), 8), UFXP(BV(57873, 16), 8)), UFXP(BV(46595, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3247, 16), 8), SFXP(SBV(-22254, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26261, 16), 8), UFXP(BV(18074, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21380, 16), 8), UFXP(BV(59798, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18032, 16), 8), UFXP(BV(36210, 16), 8)), UFXP(BV(47358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21436, 16), 8), SFXP(SBV(-5403, 16), 8)), SFXP(SBV(-26839, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15434, 16), 8), SFXP(SBV(25127, 16), 8)), SFXP(SBV(-24975, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7930, 16), 8), SFXP(SBV(-9139, 16), 8)), SFXP(SBV(-1209, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4016, 16), 8), UFXP(BV(5009, 16), 8)), UFXP(BV(9025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8423, 16), 8), UFXP(BV(3829, 16), 8)), UFXP(BV(4594, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11686, 16), 8), UFXP(BV(63671, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40160, 16), 8), UFXP(BV(53403, 16), 8)), UFXP(BV(54524, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39454, 16), 8), UFXP(BV(45898, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53570, 16), 8), UFXP(BV(35845, 16), 8)), UFXP(BV(29742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(15018, 16), 8), UFXP(BV(29269, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26056, 16), 8), SFXP(SBV(-27823, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30771, 16), 8), UFXP(BV(63633, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20172, 16), 8), SFXP(SBV(-9198, 16), 8)), SFXP(SBV(-29370, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22250, 16), 8), SFXP(SBV(-32194, 16), 8)), SFXP(SBV(-19937, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57056, 16), 8), UFXP(BV(4132, 16), 8)), UFXP(BV(61188, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23241, 16), 8), UFXP(BV(13485, 16), 8)), UFXP(BV(36726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4575, 16), 8), SFXP(SBV(7940, 16), 8)), SFXP(SBV(3365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8912, 16), 8), SFXP(SBV(-31764, 16), 8)), SFXP(SBV(22852, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27769, 16), 8), SFXP(SBV(14776, 16), 8)), SFXP(SBV(12993, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7948, 16), 8), SFXP(SBV(-24811, 16), 8)), SFXP(SBV(16863, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-798, 16), 8), SFXP(SBV(-26260, 16), 8)), SFXP(SBV(25462, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22661, 16), 8), SFXP(SBV(10349, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32587, 16), 8), UFXP(BV(23184, 16), 8)), UFXP(BV(9403, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32335, 16), 8), SFXP(SBV(-27357, 16), 8)), SFXP(SBV(-5844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18667, 16), 8), SFXP(SBV(-12762, 16), 8)), SFXP(SBV(-5905, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59438, 16), 8), UFXP(BV(11322, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12571, 16), 8), SFXP(SBV(-11465, 16), 8)), SFXP(SBV(24036, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12830, 16), 8), SFXP(SBV(27818, 16), 8)), SFXP(SBV(-24888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60106, 16), 8), UFXP(BV(25015, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25535, 16), 8), SFXP(SBV(-32511, 16), 8)), SFXP(SBV(-6976, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8994, 16), 8), UFXP(BV(846, 16), 8)), UFXP(BV(9840, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4705, 16), 8), SFXP(SBV(-13543, 16), 8)), SFXP(SBV(8838, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45699, 16), 8), UFXP(BV(15060, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14306, 16), 8), SFXP(SBV(27590, 16), 8)), SFXP(SBV(-13284, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2668, 16), 8), SFXP(SBV(19837, 16), 8)), SFXP(SBV(-22505, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54008, 16), 8), UFXP(BV(56934, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23694, 16), 8), SFXP(SBV(-12607, 16), 8)), SFXP(SBV(-12811, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17258, 16), 8), SFXP(SBV(-26607, 16), 8)), SFXP(SBV(-21671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23592, 16), 8), SFXP(SBV(-26992, 16), 8)), SFXP(SBV(2886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45301, 16), 8), UFXP(BV(59348, 16), 8)), UFXP(BV(39113, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4200, 16), 8), UFXP(BV(44061, 16), 8)), UFXP(BV(48261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19765, 16), 8), SFXP(SBV(28257, 16), 8)), SFXP(SBV(8492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61197, 16), 8), UFXP(BV(42838, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24205, 16), 8), SFXP(SBV(-10434, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51350, 16), 8), UFXP(BV(31668, 16), 8)), UFXP(BV(60699, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11116, 16), 8), UFXP(BV(27423, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8368, 16), 8), SFXP(SBV(-5079, 16), 8)), SFXP(SBV(30589, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44368, 16), 8), UFXP(BV(24292, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1090, 16), 8), SFXP(SBV(9499, 16), 8)), SFXP(SBV(10589, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24058, 16), 8), SFXP(SBV(22849, 16), 8)), SFXP(SBV(-1209, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10017, 16), 8), SFXP(SBV(-2558, 16), 8)), SFXP(SBV(12575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12295, 16), 8), SFXP(SBV(-32440, 16), 8)), SFXP(SBV(20145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54363, 16), 8), UFXP(BV(44324, 16), 8)), UFXP(BV(40795, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6062, 16), 8), SFXP(SBV(-30953, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56483, 16), 8), UFXP(BV(31832, 16), 8)), UFXP(BV(10956, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22796, 16), 8), UFXP(BV(33009, 16), 8)), UFXP(BV(55805, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15839, 16), 8), SFXP(SBV(-7205, 16), 8)), SFXP(SBV(-23044, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18032, 16), 8), UFXP(BV(56125, 16), 8)), UFXP(BV(21145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59603, 16), 8), UFXP(BV(36659, 16), 8)), UFXP(BV(22944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-3003, 16), 8), SFXP(SBV(21162, 16), 8)), SFXP(SBV(13904, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64995, 16), 8), UFXP(BV(9081, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19654, 16), 8), SFXP(SBV(31120, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31114, 16), 8), SFXP(SBV(-20297, 16), 8)), SFXP(SBV(-10817, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5587, 16), 8), SFXP(SBV(-11272, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25118, 16), 8), SFXP(SBV(-20052, 16), 8)), SFXP(SBV(-20366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19305, 16), 8), SFXP(SBV(-28376, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15656, 16), 8), SFXP(SBV(8124, 16), 8)), SFXP(SBV(27454, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58377, 16), 8), UFXP(BV(178, 16), 8)), UFXP(BV(58199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20452, 16), 8), SFXP(SBV(11702, 16), 8)), SFXP(SBV(-32154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7583, 16), 8), SFXP(SBV(3448, 16), 8)), SFXP(SBV(-4135, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14257, 16), 8), SFXP(SBV(-8968, 16), 8)), SFXP(SBV(24847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8811, 16), 8), SFXP(SBV(23775, 16), 8)), SFXP(SBV(-32586, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14764, 16), 8), SFXP(SBV(11567, 16), 8)), SFXP(SBV(-3197, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56769, 16), 8), UFXP(BV(50970, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25772, 16), 8), SFXP(SBV(-15305, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42760, 16), 8), UFXP(BV(10290, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24343, 16), 8), SFXP(SBV(9335, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16016, 16), 8), SFXP(SBV(-5291, 16), 8)), SFXP(SBV(21307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17949, 16), 8), SFXP(SBV(-9704, 16), 8)), SFXP(SBV(-27653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8647, 16), 8), UFXP(BV(55599, 16), 8)), UFXP(BV(42979, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3543, 16), 8), UFXP(BV(23732, 16), 8)), UFXP(BV(45347, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23666, 16), 8), SFXP(SBV(24344, 16), 8)), SFXP(SBV(-22264, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44735, 16), 8), UFXP(BV(21026, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43511, 16), 8), UFXP(BV(13047, 16), 8)), UFXP(BV(56558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28028, 16), 8), SFXP(SBV(-4216, 16), 8)), SFXP(SBV(23812, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64134, 16), 8), UFXP(BV(47036, 16), 8)), UFXP(BV(17098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2360, 16), 8), SFXP(SBV(-5951, 16), 8)), SFXP(SBV(8311, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(4638, 16), 8), SFXP(SBV(11361, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31486, 16), 8), SFXP(SBV(7575, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26195, 16), 8), UFXP(BV(8315, 16), 8)), UFXP(BV(34510, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29828, 16), 8), UFXP(BV(47636, 16), 8)), UFXP(BV(47728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20663, 16), 8), SFXP(SBV(24404, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32199, 16), 8), SFXP(SBV(10718, 16), 8)), SFXP(SBV(-21481, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46904, 16), 8), UFXP(BV(52478, 16), 8)), UFXP(BV(46698, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19694, 16), 8), SFXP(SBV(-4797, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15621, 16), 8), UFXP(BV(7238, 16), 8)), UFXP(BV(48443, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64240, 16), 8), UFXP(BV(30913, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62802, 16), 8), UFXP(BV(58366, 16), 8)), UFXP(BV(55632, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5167, 16), 8), SFXP(SBV(-32580, 16), 8)), SFXP(SBV(27413, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42977, 16), 8), UFXP(BV(24763, 16), 8)), UFXP(BV(18214, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4428, 16), 8), UFXP(BV(36219, 16), 8)), UFXP(BV(40647, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4156, 16), 8), UFXP(BV(42269, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33773, 16), 8), UFXP(BV(22772, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19140, 16), 8), SFXP(SBV(-14027, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13176, 16), 8), SFXP(SBV(-27052, 16), 8)), SFXP(SBV(13876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28998, 16), 8), SFXP(SBV(5040, 16), 8)), SFXP(SBV(18926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28213, 16), 8), UFXP(BV(5953, 16), 8)), UFXP(BV(22260, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52550, 16), 8), UFXP(BV(6961, 16), 8)), UFXP(BV(59511, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63865, 16), 8), UFXP(BV(29717, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20633, 16), 8), UFXP(BV(6950, 16), 8)), UFXP(BV(27583, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26025, 16), 8), SFXP(SBV(-16804, 16), 8)), SFXP(SBV(-9221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10084, 16), 8), UFXP(BV(20030, 16), 8)), UFXP(BV(30114, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32421, 16), 8), UFXP(BV(14746, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65299, 16), 8), UFXP(BV(56884, 16), 8)), UFXP(BV(56647, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21336, 16), 8), UFXP(BV(23155, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11198, 16), 8), SFXP(SBV(-21669, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58192, 16), 8), UFXP(BV(10656, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15766, 16), 8), UFXP(BV(6347, 16), 8)), UFXP(BV(22113, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56163, 16), 8), UFXP(BV(7973, 16), 8)), UFXP(BV(48190, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1087, 16), 8), UFXP(BV(25871, 16), 8)), UFXP(BV(26958, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40208, 16), 8), UFXP(BV(49245, 16), 8)), UFXP(BV(56499, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7867, 16), 8), SFXP(SBV(24518, 16), 8)), SFXP(SBV(-16651, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26152, 16), 8), UFXP(BV(19538, 16), 8)), UFXP(BV(45690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37840, 16), 8), UFXP(BV(35156, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62177, 16), 8), UFXP(BV(37875, 16), 8)), UFXP(BV(24302, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63849, 16), 8), UFXP(BV(45377, 16), 8)), UFXP(BV(43690, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3765, 16), 8), SFXP(SBV(19962, 16), 8)), SFXP(SBV(16197, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52439, 16), 8), UFXP(BV(26775, 16), 8)), UFXP(BV(45099, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6003, 16), 8), SFXP(SBV(24143, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12864, 16), 8), UFXP(BV(18084, 16), 8)), UFXP(BV(30948, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53710, 16), 8), UFXP(BV(47019, 16), 8)), UFXP(BV(6691, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20610, 16), 8), UFXP(BV(1609, 16), 8)), UFXP(BV(19001, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63600, 16), 8), UFXP(BV(62873, 16), 8)), UFXP(BV(727, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53101, 16), 8), UFXP(BV(60850, 16), 8)), UFXP(BV(57787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25675, 16), 8), UFXP(BV(62716, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3419, 16), 8), SFXP(SBV(6491, 16), 8)), SFXP(SBV(9910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1301, 16), 8), UFXP(BV(51482, 16), 8)), UFXP(BV(52783, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26337, 16), 8), SFXP(SBV(-20217, 16), 8)), SFXP(SBV(-6120, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27174, 16), 8), SFXP(SBV(30175, 16), 8)), SFXP(SBV(3001, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26752, 16), 8), UFXP(BV(5263, 16), 8)), UFXP(BV(21489, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31415, 16), 8), UFXP(BV(672, 16), 8)), UFXP(BV(16929, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29761, 16), 8), UFXP(BV(19672, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59556, 16), 8), UFXP(BV(19780, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12835, 16), 8), UFXP(BV(27275, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19755, 16), 8), UFXP(BV(46395, 16), 8)), UFXP(BV(614, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17225, 16), 8), SFXP(SBV(-25846, 16), 8)), SFXP(SBV(8621, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55239, 16), 8), UFXP(BV(26563, 16), 8)), UFXP(BV(16266, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1270, 16), 8), UFXP(BV(7358, 16), 8)), UFXP(BV(8628, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12495, 16), 8), SFXP(SBV(13669, 16), 8)), SFXP(SBV(26164, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19188, 16), 8), SFXP(SBV(2112, 16), 8)), SFXP(SBV(21300, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12897, 16), 8), SFXP(SBV(-20696, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1733, 16), 8), UFXP(BV(23811, 16), 8)), UFXP(BV(25544, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7850, 16), 8), SFXP(SBV(23472, 16), 8)), SFXP(SBV(31322, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46390, 16), 8), UFXP(BV(29021, 16), 8)), UFXP(BV(16042, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51383, 16), 8), UFXP(BV(52065, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17182, 16), 8), SFXP(SBV(17960, 16), 8)), SFXP(SBV(25777, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35299, 16), 8), UFXP(BV(50556, 16), 8)), UFXP(BV(24185, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56213, 16), 8), UFXP(BV(35385, 16), 8)), UFXP(BV(36662, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28397, 16), 8), SFXP(SBV(-22883, 16), 8)), SFXP(SBV(5514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20250, 16), 8), UFXP(BV(16959, 16), 8)), UFXP(BV(37209, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38314, 16), 8), UFXP(BV(15108, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22866, 16), 8), SFXP(SBV(-15423, 16), 8)), SFXP(SBV(-7443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2790, 16), 8), SFXP(SBV(-26009, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28497, 16), 8), UFXP(BV(48269, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(26080, 16), 8), UFXP(BV(29263, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21274, 16), 8), UFXP(BV(64560, 16), 8)), UFXP(BV(56620, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54907, 16), 8), UFXP(BV(45553, 16), 8)), UFXP(BV(34924, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59710, 16), 8), UFXP(BV(3483, 16), 8)), UFXP(BV(56227, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22040, 16), 8), SFXP(SBV(-24503, 16), 8)), SFXP(SBV(18993, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27932, 16), 8), SFXP(SBV(-16289, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17481, 16), 8), SFXP(SBV(4841, 16), 8)), SFXP(SBV(12640, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51737, 16), 8), UFXP(BV(18652, 16), 8)), UFXP(BV(33085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27332, 16), 8), SFXP(SBV(5349, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14134, 16), 8), SFXP(SBV(18187, 16), 8)), SFXP(SBV(-4053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3647, 16), 8), UFXP(BV(60871, 16), 8)), UFXP(BV(64518, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10372, 16), 8), UFXP(BV(35255, 16), 8)), UFXP(BV(45627, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49253, 16), 8), UFXP(BV(16411, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61054, 16), 8), UFXP(BV(49247, 16), 8)), UFXP(BV(11807, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9541, 16), 8), UFXP(BV(44624, 16), 8)), UFXP(BV(30453, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63828, 16), 8), UFXP(BV(30360, 16), 8)), UFXP(BV(33468, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5494, 16), 8), SFXP(SBV(-21543, 16), 8)), SFXP(SBV(27037, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-397, 16), 8), SFXP(SBV(-29117, 16), 8)), SFXP(SBV(28720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43956, 16), 8), UFXP(BV(44828, 16), 8)), UFXP(BV(23248, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27944, 16), 8), SFXP(SBV(-23095, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7785, 16), 8), SFXP(SBV(3208, 16), 8)), SFXP(SBV(-10993, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26525, 16), 8), SFXP(SBV(7809, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8225, 16), 8), SFXP(SBV(25012, 16), 8)), SFXP(SBV(16787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53972, 16), 8), UFXP(BV(16555, 16), 8)), UFXP(BV(4991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61121, 16), 8), UFXP(BV(49371, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13721, 16), 8), SFXP(SBV(-29114, 16), 8)), SFXP(SBV(-22701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30082, 16), 8), UFXP(BV(18207, 16), 8)), UFXP(BV(11875, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23556, 16), 8), UFXP(BV(28898, 16), 8)), UFXP(BV(52454, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33370, 16), 8), UFXP(BV(4156, 16), 8)), UFXP(BV(37526, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37383, 16), 8), UFXP(BV(590, 16), 8)), UFXP(BV(37973, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53372, 16), 8), UFXP(BV(40996, 16), 8)), UFXP(BV(28832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43136, 16), 8), UFXP(BV(31532, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55042, 16), 8), UFXP(BV(34484, 16), 8)), UFXP(BV(20558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21226, 16), 8), SFXP(SBV(17422, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(692, 16), 8), UFXP(BV(40944, 16), 8)), UFXP(BV(41636, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16010, 16), 8), UFXP(BV(54546, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15250, 16), 8), SFXP(SBV(-14312, 16), 8)), SFXP(SBV(29562, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4892, 16), 8), SFXP(SBV(-7979, 16), 8)), SFXP(SBV(3087, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8356, 16), 8), SFXP(SBV(14334, 16), 8)), SFXP(SBV(-9119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14847, 16), 8), UFXP(BV(45595, 16), 8)), UFXP(BV(34788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11661, 16), 8), UFXP(BV(62953, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16967, 16), 8), SFXP(SBV(6464, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17965, 16), 8), SFXP(SBV(-16324, 16), 8)), SFXP(SBV(1641, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9394, 16), 8), SFXP(SBV(-12202, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17400, 16), 8), UFXP(BV(24544, 16), 8)), UFXP(BV(41944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18844, 16), 8), SFXP(SBV(29629, 16), 8)), SFXP(SBV(10785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9693, 16), 8), SFXP(SBV(-21217, 16), 8)), SFXP(SBV(-30910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27692, 16), 8), UFXP(BV(36601, 16), 8)), UFXP(BV(27038, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18658, 16), 8), UFXP(BV(25536, 16), 8)), UFXP(BV(44194, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25516, 16), 8), SFXP(SBV(11683, 16), 8)), SFXP(SBV(-28337, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14410, 16), 8), SFXP(SBV(-5243, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28672, 16), 8), UFXP(BV(24299, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28888, 16), 8), UFXP(BV(38387, 16), 8)), UFXP(BV(1739, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15016, 16), 8), UFXP(BV(26040, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46724, 16), 8), UFXP(BV(42338, 16), 8)), UFXP(BV(59635, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47826, 16), 8), UFXP(BV(36481, 16), 8)), UFXP(BV(11345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1963, 16), 8), UFXP(BV(9160, 16), 8)), UFXP(BV(58339, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16472, 16), 8), SFXP(SBV(6500, 16), 8)), SFXP(SBV(9972, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31508, 16), 8), UFXP(BV(39709, 16), 8)), UFXP(BV(37646, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22091, 16), 8), UFXP(BV(29531, 16), 8)), UFXP(BV(57950, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19497, 16), 8), UFXP(BV(27560, 16), 8)), UFXP(BV(47057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11126, 16), 8), SFXP(SBV(4096, 16), 8)), SFXP(SBV(-18592, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55477, 16), 8), UFXP(BV(35740, 16), 8)), UFXP(BV(19737, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46953, 16), 8), UFXP(BV(12295, 16), 8)), UFXP(BV(26803, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6066, 16), 8), UFXP(BV(15395, 16), 8)), UFXP(BV(56207, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31843, 16), 8), SFXP(SBV(17573, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28099, 16), 8), UFXP(BV(50524, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7319, 16), 8), SFXP(SBV(-2361, 16), 8)), SFXP(SBV(-1964, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12041, 16), 8), SFXP(SBV(-19708, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10948, 16), 8), SFXP(SBV(-16575, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47040, 16), 8), UFXP(BV(49393, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59515, 16), 8), UFXP(BV(18856, 16), 8)), UFXP(BV(40659, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27017, 16), 8), UFXP(BV(50705, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-7096, 16), 8), SFXP(SBV(-28821, 16), 8)), SFXP(SBV(12450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27989, 16), 8), UFXP(BV(3039, 16), 8)), UFXP(BV(24950, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51075, 16), 8), UFXP(BV(6472, 16), 8)), UFXP(BV(57547, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24287, 16), 8), SFXP(SBV(27705, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10752, 16), 8), SFXP(SBV(20264, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19894, 16), 8), SFXP(SBV(-17319, 16), 8)), SFXP(SBV(28323, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63436, 16), 8), UFXP(BV(35558, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3060, 16), 8), UFXP(BV(63908, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10243, 16), 8), UFXP(BV(51048, 16), 8)), UFXP(BV(10903, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63148, 16), 8), UFXP(BV(49571, 16), 8)), UFXP(BV(13577, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15643, 16), 8), SFXP(SBV(-6991, 16), 8)), SFXP(SBV(31563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17087, 16), 8), SFXP(SBV(-17693, 16), 8)), SFXP(SBV(606, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6221, 16), 8), SFXP(SBV(-15707, 16), 8)), SFXP(SBV(9486, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21134, 16), 8), SFXP(SBV(-22338, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20739, 16), 8), UFXP(BV(54786, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13224, 16), 8), UFXP(BV(49659, 16), 8)), UFXP(BV(62883, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26276, 16), 8), SFXP(SBV(-9056, 16), 8)), SFXP(SBV(-17220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9625, 16), 8), SFXP(SBV(-19706, 16), 8)), SFXP(SBV(-29331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44953, 16), 8), UFXP(BV(28267, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28298, 16), 8), SFXP(SBV(-5680, 16), 8)), SFXP(SBV(-22618, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31168, 16), 8), SFXP(SBV(29221, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16697, 16), 8), SFXP(SBV(24425, 16), 8)), SFXP(SBV(24414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19181, 16), 8), SFXP(SBV(-2724, 16), 8)), SFXP(SBV(-16457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4349, 16), 8), UFXP(BV(50992, 16), 8)), UFXP(BV(55341, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58217, 16), 8), UFXP(BV(23722, 16), 8)), UFXP(BV(20671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5536, 16), 8), SFXP(SBV(439, 16), 8)), SFXP(SBV(5975, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63461, 16), 8), UFXP(BV(29536, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8689, 16), 8), UFXP(BV(38006, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26057, 16), 8), SFXP(SBV(4900, 16), 8)), SFXP(SBV(25540, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14059, 16), 8), UFXP(BV(13030, 16), 8)), UFXP(BV(27089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8042, 16), 8), UFXP(BV(16865, 16), 8)), UFXP(BV(56713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62263, 16), 8), UFXP(BV(63504, 16), 8)), UFXP(BV(60231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9627, 16), 8), SFXP(SBV(-24329, 16), 8)), SFXP(SBV(14702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5745, 16), 8), SFXP(SBV(-14376, 16), 8)), SFXP(SBV(-8631, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1618, 16), 8), UFXP(BV(16544, 16), 8)), UFXP(BV(18162, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13052, 16), 8), SFXP(SBV(-21030, 16), 8)), SFXP(SBV(-23626, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22584, 16), 8), UFXP(BV(16289, 16), 8)), UFXP(BV(6295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21591, 16), 8), SFXP(SBV(-19209, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13593, 16), 8), UFXP(BV(33433, 16), 8)), UFXP(BV(47026, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24812, 16), 8), SFXP(SBV(2682, 16), 8)), SFXP(SBV(-2199, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52384, 16), 8), UFXP(BV(32460, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26137, 16), 8), UFXP(BV(49079, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18520, 16), 8), UFXP(BV(8758, 16), 8)), UFXP(BV(27278, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54566, 16), 8), UFXP(BV(32048, 16), 8)), UFXP(BV(15238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22516, 16), 8), UFXP(BV(51766, 16), 8)), UFXP(BV(8746, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32193, 16), 8), SFXP(SBV(7563, 16), 8)), SFXP(SBV(-25780, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31922, 16), 8), SFXP(SBV(22440, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60389, 16), 8), UFXP(BV(45275, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2527, 16), 8), UFXP(BV(20127, 16), 8)), UFXP(BV(2067, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57511, 16), 8), UFXP(BV(12579, 16), 8)), UFXP(BV(7853, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28854, 16), 8), UFXP(BV(51411, 16), 8)), UFXP(BV(42979, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35785, 16), 8), UFXP(BV(2265, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26408, 16), 8), SFXP(SBV(-14511, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28045, 16), 8), UFXP(BV(62176, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47119, 16), 8), UFXP(BV(42756, 16), 8)), UFXP(BV(4363, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29864, 16), 8), UFXP(BV(31228, 16), 8)), UFXP(BV(64172, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14679, 16), 8), SFXP(SBV(-4639, 16), 8)), SFXP(SBV(10040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5126, 16), 8), UFXP(BV(3996, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6357, 16), 8), UFXP(BV(39649, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34839, 16), 8), UFXP(BV(54223, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37873, 16), 8), UFXP(BV(11629, 16), 8)), UFXP(BV(26244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4856, 16), 8), SFXP(SBV(-11348, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26338, 16), 8), SFXP(SBV(12813, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44024, 16), 8), UFXP(BV(15299, 16), 8)), UFXP(BV(28725, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21342, 16), 8), SFXP(SBV(8139, 16), 8)), SFXP(SBV(-29481, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26423, 16), 8), UFXP(BV(53722, 16), 8)), UFXP(BV(38237, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43012, 16), 8), UFXP(BV(5197, 16), 8)), UFXP(BV(21209, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55918, 16), 8), UFXP(BV(19133, 16), 8)), UFXP(BV(9515, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23647, 16), 8), SFXP(SBV(-32681, 16), 8)), SFXP(SBV(4124, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26892, 16), 8), SFXP(SBV(-4880, 16), 8)), SFXP(SBV(11660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39674, 16), 8), UFXP(BV(18368, 16), 8)), UFXP(BV(21306, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40485, 16), 8), UFXP(BV(11543, 16), 8)), UFXP(BV(55990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7828, 16), 8), SFXP(SBV(-2089, 16), 8)), SFXP(SBV(-9917, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13843, 16), 8), UFXP(BV(63540, 16), 8)), UFXP(BV(15839, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24717, 16), 8), SFXP(SBV(-19703, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9467, 16), 8), SFXP(SBV(-8686, 16), 8)), SFXP(SBV(-781, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22663, 16), 8), SFXP(SBV(18940, 16), 8)), SFXP(SBV(3723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23282, 16), 8), SFXP(SBV(-31332, 16), 8)), SFXP(SBV(-10922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4038, 16), 8), SFXP(SBV(16934, 16), 8)), SFXP(SBV(4964, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25987, 16), 8), SFXP(SBV(29234, 16), 8)), SFXP(SBV(-3247, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62176, 16), 8), UFXP(BV(13230, 16), 8)), UFXP(BV(48946, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6395, 16), 8), SFXP(SBV(18735, 16), 8)), SFXP(SBV(25130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52481, 16), 8), UFXP(BV(35964, 16), 8)), UFXP(BV(22909, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13497, 16), 8), SFXP(SBV(-31305, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22011, 16), 8), SFXP(SBV(11356, 16), 8)), SFXP(SBV(32169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59393, 16), 8), UFXP(BV(21964, 16), 8)), UFXP(BV(49462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2093, 16), 8), UFXP(BV(53390, 16), 8)), UFXP(BV(55483, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2455, 16), 8), SFXP(SBV(25786, 16), 8)), SFXP(SBV(-23331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26090, 16), 8), UFXP(BV(39233, 16), 8)), UFXP(BV(52393, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29062, 16), 8), UFXP(BV(16585, 16), 8)), UFXP(BV(47779, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15499, 16), 8), SFXP(SBV(-28420, 16), 8)), SFXP(SBV(16695, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14027, 16), 8), UFXP(BV(15033, 16), 8)), UFXP(BV(37270, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13898, 16), 8), SFXP(SBV(-28659, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12262, 16), 8), SFXP(SBV(3920, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54216, 16), 8), UFXP(BV(6972, 16), 8)), UFXP(BV(61188, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-911, 16), 8), SFXP(SBV(-16956, 16), 8)), SFXP(SBV(16045, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10918, 16), 8), SFXP(SBV(2337, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47885, 16), 8), UFXP(BV(29847, 16), 8)), UFXP(BV(18038, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(32709, 16), 8), SFXP(SBV(-20868, 16), 8)), SFXP(SBV(20682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1209, 16), 8), SFXP(SBV(-11434, 16), 8)), SFXP(SBV(10225, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21464, 16), 8), SFXP(SBV(-27641, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27446, 16), 8), UFXP(BV(4151, 16), 8)), UFXP(BV(51817, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21968, 16), 8), UFXP(BV(10375, 16), 8)), UFXP(BV(11593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43414, 16), 8), UFXP(BV(31916, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26314, 16), 8), SFXP(SBV(13396, 16), 8)), SFXP(SBV(12918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63973, 16), 8), UFXP(BV(27563, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1149, 16), 8), SFXP(SBV(14990, 16), 8)), SFXP(SBV(13841, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25054, 16), 8), UFXP(BV(39668, 16), 8)), UFXP(BV(64722, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28639, 16), 8), SFXP(SBV(-11946, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35354, 16), 8), UFXP(BV(63052, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11106, 16), 8), SFXP(SBV(-24799, 16), 8)), SFXP(SBV(-13693, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22596, 16), 8), SFXP(SBV(23095, 16), 8)), SFXP(SBV(499, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10396, 16), 8), SFXP(SBV(-28288, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18303, 16), 8), UFXP(BV(25475, 16), 8)), UFXP(BV(43778, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26611, 16), 8), UFXP(BV(42951, 16), 8)), UFXP(BV(49196, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26730, 16), 8), SFXP(SBV(-7861, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11665, 16), 8), UFXP(BV(21308, 16), 8)), UFXP(BV(32973, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28406, 16), 8), SFXP(SBV(21738, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27526, 16), 8), SFXP(SBV(-13899, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7706, 16), 8), SFXP(SBV(24343, 16), 8)), SFXP(SBV(16637, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59180, 16), 8), UFXP(BV(42142, 16), 8)), UFXP(BV(17038, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2158, 16), 8), UFXP(BV(49210, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6598, 16), 8), UFXP(BV(43245, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8295, 16), 8), UFXP(BV(62481, 16), 8)), UFXP(BV(58451, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16652, 16), 8), SFXP(SBV(-22121, 16), 8)), SFXP(SBV(-5469, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32427, 16), 8), SFXP(SBV(-11831, 16), 8)), SFXP(SBV(20596, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34056, 16), 8), UFXP(BV(52728, 16), 8)), UFXP(BV(2119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8491, 16), 8), UFXP(BV(3651, 16), 8)), UFXP(BV(12142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12666, 16), 8), UFXP(BV(5822, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19994, 16), 8), UFXP(BV(1094, 16), 8)), UFXP(BV(19908, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22398, 16), 8), SFXP(SBV(-664, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7021, 16), 8), UFXP(BV(300, 16), 8)), UFXP(BV(7321, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46356, 16), 8), UFXP(BV(55378, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(46387, 16), 8), UFXP(BV(51088, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5360, 16), 8), SFXP(SBV(15173, 16), 8)), SFXP(SBV(20533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17847, 16), 8), SFXP(SBV(-5344, 16), 8)), SFXP(SBV(23191, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62131, 16), 8), UFXP(BV(18388, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23259, 16), 8), SFXP(SBV(25033, 16), 8)), SFXP(SBV(-19376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32572, 16), 8), SFXP(SBV(-9546, 16), 8)), SFXP(SBV(-23026, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39377, 16), 8), UFXP(BV(1141, 16), 8)), UFXP(BV(40518, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2626, 16), 8), SFXP(SBV(-11248, 16), 8)), SFXP(SBV(13874, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27919, 16), 8), UFXP(BV(63805, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10122, 16), 8), SFXP(SBV(1913, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16855, 16), 8), UFXP(BV(5730, 16), 8)), UFXP(BV(49582, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27517, 16), 8), UFXP(BV(10880, 16), 8)), UFXP(BV(55360, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1860, 16), 8), SFXP(SBV(23249, 16), 8)), SFXP(SBV(-25109, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2157, 16), 8), UFXP(BV(59288, 16), 8)), UFXP(BV(40795, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31143, 16), 8), SFXP(SBV(13837, 16), 8)), SFXP(SBV(-20556, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26582, 16), 8), SFXP(SBV(5066, 16), 8)), SFXP(SBV(-21516, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7022, 16), 8), SFXP(SBV(18157, 16), 8)), SFXP(SBV(-11135, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11519, 16), 8), UFXP(BV(26620, 16), 8)), UFXP(BV(38139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32273, 16), 8), SFXP(SBV(5366, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30908, 16), 8), UFXP(BV(56461, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16614, 16), 8), SFXP(SBV(16174, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46550, 16), 8), UFXP(BV(3911, 16), 8)), UFXP(BV(55800, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18190, 16), 8), SFXP(SBV(26232, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4220, 16), 8), SFXP(SBV(-20157, 16), 8)), SFXP(SBV(-4595, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25226, 16), 8), SFXP(SBV(-24856, 16), 8)), SFXP(SBV(15454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-19602, 16), 8), SFXP(SBV(6511, 16), 8)), SFXP(SBV(25738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27825, 16), 8), SFXP(SBV(23727, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-25555, 16), 8), SFXP(SBV(12041, 16), 8)), SFXP(SBV(-22335, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(808, 16), 8), UFXP(BV(22098, 16), 8)), UFXP(BV(4210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36935, 16), 8), UFXP(BV(6245, 16), 8)), UFXP(BV(49044, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11688, 16), 8), SFXP(SBV(5656, 16), 8)), SFXP(SBV(3912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10952, 16), 8), SFXP(SBV(19344, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44470, 16), 8), UFXP(BV(19736, 16), 8)), UFXP(BV(20488, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(826, 16), 8), SFXP(SBV(-8289, 16), 8)), SFXP(SBV(9115, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28565, 16), 8), SFXP(SBV(-12550, 16), 8)), SFXP(SBV(-16015, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23584, 16), 8), SFXP(SBV(24124, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26727, 16), 8), UFXP(BV(62966, 16), 8)), UFXP(BV(29297, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27930, 16), 8), SFXP(SBV(-11861, 16), 8)), SFXP(SBV(25745, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57824, 16), 8), UFXP(BV(50529, 16), 8)), UFXP(BV(9973, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2412, 16), 8), UFXP(BV(40348, 16), 8)), UFXP(BV(27600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7673, 16), 8), UFXP(BV(16616, 16), 8)), UFXP(BV(24289, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23467, 16), 8), SFXP(SBV(30614, 16), 8)), SFXP(SBV(-7147, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(487, 16), 8), SFXP(SBV(21544, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2611, 16), 8), UFXP(BV(8804, 16), 8)), UFXP(BV(11415, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52470, 16), 8), UFXP(BV(27994, 16), 8)), UFXP(BV(24476, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24376, 16), 8), SFXP(SBV(8606, 16), 8)), SFXP(SBV(-15770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(634, 16), 8), SFXP(SBV(-20505, 16), 8)), SFXP(SBV(21139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4083, 16), 8), SFXP(SBV(28994, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9429, 16), 8), SFXP(SBV(-14696, 16), 8)), SFXP(SBV(5267, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33008, 16), 8), UFXP(BV(24925, 16), 8)), UFXP(BV(8083, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11245, 16), 8), SFXP(SBV(3824, 16), 8)), SFXP(SBV(-7421, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26991, 16), 8), SFXP(SBV(-3034, 16), 8)), SFXP(SBV(7795, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(9097, 16), 8), SFXP(SBV(-507, 16), 8)), SFXP(SBV(-18017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10500, 16), 8), SFXP(SBV(-8895, 16), 8)), SFXP(SBV(1605, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38664, 16), 8), UFXP(BV(9531, 16), 8)), UFXP(BV(63222, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11778, 16), 8), UFXP(BV(14692, 16), 8)), UFXP(BV(62622, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1519, 16), 8), SFXP(SBV(-317, 16), 8)), SFXP(SBV(-1202, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45433, 16), 8), UFXP(BV(43469, 16), 8)), UFXP(BV(1964, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-24516, 16), 8), SFXP(SBV(-25429, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1803, 16), 8), SFXP(SBV(-14810, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5286, 16), 8), UFXP(BV(42816, 16), 8)), UFXP(BV(32115, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16825, 16), 8), SFXP(SBV(-20999, 16), 8)), SFXP(SBV(-4174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6551, 16), 8), UFXP(BV(20393, 16), 8)), UFXP(BV(63101, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20862, 16), 8), SFXP(SBV(25658, 16), 8)), SFXP(SBV(4796, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33721, 16), 8), UFXP(BV(134, 16), 8)), UFXP(BV(33587, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20029, 16), 8), SFXP(SBV(-27337, 16), 8)), SFXP(SBV(-18170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13458, 16), 8), SFXP(SBV(30000, 16), 8)), SFXP(SBV(-16542, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45421, 16), 8), UFXP(BV(14297, 16), 8)), UFXP(BV(59718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29860, 16), 8), SFXP(SBV(-8214, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20183, 16), 8), SFXP(SBV(-2151, 16), 8)), SFXP(SBV(-22334, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11792, 16), 8), SFXP(SBV(6631, 16), 8)), SFXP(SBV(18423, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13419, 16), 8), UFXP(BV(56765, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10094, 16), 8), SFXP(SBV(21000, 16), 8)), SFXP(SBV(-10906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27518, 16), 8), UFXP(BV(56442, 16), 8)), UFXP(BV(18424, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21079, 16), 8), UFXP(BV(11508, 16), 8)), UFXP(BV(9571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21266, 16), 8), SFXP(SBV(22477, 16), 8)), SFXP(SBV(21793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48089, 16), 8), UFXP(BV(52098, 16), 8)), UFXP(BV(61527, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1904, 16), 8), UFXP(BV(29082, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26247, 16), 8), SFXP(SBV(20512, 16), 8)), SFXP(SBV(-5735, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47657, 16), 8), UFXP(BV(4602, 16), 8)), UFXP(BV(43055, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7332, 16), 8), UFXP(BV(15410, 16), 8)), UFXP(BV(22742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7246, 16), 8), UFXP(BV(41630, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26988, 16), 8), UFXP(BV(6581, 16), 8)), UFXP(BV(20407, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38096, 16), 8), UFXP(BV(46971, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4744, 16), 8), SFXP(SBV(-8604, 16), 8)), SFXP(SBV(3860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48570, 16), 8), UFXP(BV(63590, 16), 8)), UFXP(BV(46624, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(27752, 16), 8), SFXP(SBV(-12260, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27922, 16), 8), SFXP(SBV(-8928, 16), 8)), SFXP(SBV(-28686, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9887, 16), 8), SFXP(SBV(12230, 16), 8)), SFXP(SBV(-13584, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3604, 16), 8), SFXP(SBV(8786, 16), 8)), SFXP(SBV(12390, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11855, 16), 8), SFXP(SBV(18424, 16), 8)), SFXP(SBV(-30279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31083, 16), 8), SFXP(SBV(9808, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41987, 16), 8), UFXP(BV(46233, 16), 8)), UFXP(BV(22684, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16142, 16), 8), UFXP(BV(12343, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27820, 16), 8), SFXP(SBV(-12868, 16), 8)), SFXP(SBV(24848, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30253, 16), 8), SFXP(SBV(-20871, 16), 8)), SFXP(SBV(-9382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19292, 16), 8), UFXP(BV(14451, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46331, 16), 8), UFXP(BV(29614, 16), 8)), UFXP(BV(51140, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4693, 16), 8), SFXP(SBV(28687, 16), 8)), SFXP(SBV(1602, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31877, 16), 8), SFXP(SBV(-1918, 16), 8)), SFXP(SBV(-29959, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56977, 16), 8), UFXP(BV(43785, 16), 8)), UFXP(BV(45742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59920, 16), 8), UFXP(BV(8054, 16), 8)), UFXP(BV(51866, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(39023, 16), 8), UFXP(BV(44607, 16), 8)), UFXP(BV(49397, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7223, 16), 8), UFXP(BV(17785, 16), 8)), UFXP(BV(54974, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26813, 16), 8), UFXP(BV(64504, 16), 8)), UFXP(BV(27845, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26078, 16), 8), SFXP(SBV(12084, 16), 8)), SFXP(SBV(14220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23256, 16), 8), SFXP(SBV(27580, 16), 8)), SFXP(SBV(14700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13454, 16), 8), SFXP(SBV(-11676, 16), 8)), SFXP(SBV(-23805, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40749, 16), 8), UFXP(BV(43596, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41301, 16), 8), UFXP(BV(23402, 16), 8)), UFXP(BV(17899, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5834, 16), 8), SFXP(SBV(19399, 16), 8)), SFXP(SBV(13565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5460, 16), 8), SFXP(SBV(-24076, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15971, 16), 8), SFXP(SBV(9192, 16), 8)), SFXP(SBV(6779, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27570, 16), 8), UFXP(BV(39950, 16), 8)), UFXP(BV(53156, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24200, 16), 8), SFXP(SBV(-4879, 16), 8)), SFXP(SBV(2466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35864, 16), 8), UFXP(BV(18158, 16), 8)), UFXP(BV(17706, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63031, 16), 8), UFXP(BV(60495, 16), 8)), UFXP(BV(2536, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7621, 16), 8), SFXP(SBV(-10495, 16), 8)), SFXP(SBV(-2874, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5045, 16), 8), SFXP(SBV(2946, 16), 8)), SFXP(SBV(7991, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24087, 16), 8), SFXP(SBV(3593, 16), 8)), SFXP(SBV(-20494, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59013, 16), 8), UFXP(BV(41828, 16), 8)), UFXP(BV(8378, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15821, 16), 8), SFXP(SBV(1005, 16), 8)), SFXP(SBV(14816, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11524, 16), 8), SFXP(SBV(16428, 16), 8)), SFXP(SBV(27952, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24488, 16), 8), SFXP(SBV(-18853, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10475, 16), 8), SFXP(SBV(-15008, 16), 8)), SFXP(SBV(4533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59771, 16), 8), UFXP(BV(49162, 16), 8)), UFXP(BV(10609, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58120, 16), 8), UFXP(BV(10448, 16), 8)), UFXP(BV(47672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15866, 16), 8), UFXP(BV(61185, 16), 8)), UFXP(BV(20217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46637, 16), 8), UFXP(BV(14553, 16), 8)), UFXP(BV(32084, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15465, 16), 8), SFXP(SBV(22495, 16), 8)), SFXP(SBV(17330, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23797, 16), 8), SFXP(SBV(22374, 16), 8)), SFXP(SBV(-17331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21088, 16), 8), SFXP(SBV(-32531, 16), 8)), SFXP(SBV(-11443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1028, 16), 8), SFXP(SBV(-14585, 16), 8)), SFXP(SBV(-6969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20405, 16), 8), UFXP(BV(12639, 16), 8)), UFXP(BV(7766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59388, 16), 8), UFXP(BV(25073, 16), 8)), UFXP(BV(49377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23425, 16), 8), SFXP(SBV(-15323, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27787, 16), 8), SFXP(SBV(-14500, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29627, 16), 8), SFXP(SBV(-30021, 16), 8)), SFXP(SBV(394, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8657, 16), 8), SFXP(SBV(251, 16), 8)), SFXP(SBV(-8406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2611, 16), 8), SFXP(SBV(-29852, 16), 8)), SFXP(SBV(23212, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(719, 16), 8), SFXP(SBV(-10752, 16), 8)), SFXP(SBV(-30198, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14845, 16), 8), UFXP(BV(50284, 16), 8)), UFXP(BV(65129, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19510, 16), 8), UFXP(BV(58919, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13094, 16), 8), SFXP(SBV(6519, 16), 8)), SFXP(SBV(-19613, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(27287, 16), 8), UFXP(BV(46664, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32494, 16), 8), SFXP(SBV(-11952, 16), 8)), SFXP(SBV(9735, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29950, 16), 8), SFXP(SBV(-10515, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12449, 16), 8), SFXP(SBV(-14744, 16), 8)), SFXP(SBV(2295, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44574, 16), 8), UFXP(BV(23385, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14263, 16), 8), SFXP(SBV(19767, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41102, 16), 8), UFXP(BV(6160, 16), 8)), UFXP(BV(34942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63751, 16), 8), UFXP(BV(15435, 16), 8)), UFXP(BV(48316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35961, 16), 8), UFXP(BV(9830, 16), 8)), UFXP(BV(26131, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8603, 16), 8), UFXP(BV(24916, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49219, 16), 8), UFXP(BV(21491, 16), 8)), UFXP(BV(27728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22526, 16), 8), SFXP(SBV(16957, 16), 8)), SFXP(SBV(-5569, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13500, 16), 8), UFXP(BV(36179, 16), 8)), UFXP(BV(49679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27248, 16), 8), UFXP(BV(62470, 16), 8)), UFXP(BV(30314, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28546, 16), 8), UFXP(BV(48752, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18665, 16), 8), SFXP(SBV(6599, 16), 8)), SFXP(SBV(22382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(20367, 16), 8), UFXP(BV(47979, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22238, 16), 8), UFXP(BV(52965, 16), 8)), UFXP(BV(9667, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28457, 16), 8), SFXP(SBV(-9516, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21210, 16), 8), SFXP(SBV(-27896, 16), 8)), SFXP(SBV(-6686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30248, 16), 8), UFXP(BV(48667, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40479, 16), 8), UFXP(BV(2810, 16), 8)), UFXP(BV(43289, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63619, 16), 8), UFXP(BV(56964, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10038, 16), 8), SFXP(SBV(15741, 16), 8)), SFXP(SBV(5703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18206, 16), 8), SFXP(SBV(-21514, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18427, 16), 8), SFXP(SBV(25937, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10829, 16), 8), SFXP(SBV(-12766, 16), 8)), SFXP(SBV(1937, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32048, 16), 8), SFXP(SBV(18612, 16), 8)), SFXP(SBV(13436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53303, 16), 8), UFXP(BV(33608, 16), 8)), UFXP(BV(21375, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2434, 16), 8), UFXP(BV(3432, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7084, 16), 8), UFXP(BV(55127, 16), 8)), UFXP(BV(17493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7880, 16), 8), SFXP(SBV(-31029, 16), 8)), SFXP(SBV(-23149, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29103, 16), 8), SFXP(SBV(13650, 16), 8)), SFXP(SBV(15453, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37798, 16), 8), UFXP(BV(30481, 16), 8)), UFXP(BV(44024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19019, 16), 8), SFXP(SBV(26036, 16), 8)), SFXP(SBV(20481, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41846, 16), 8), UFXP(BV(32227, 16), 8)), UFXP(BV(8537, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30932, 16), 8), SFXP(SBV(506, 16), 8)), SFXP(SBV(30426, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24146, 16), 8), SFXP(SBV(-375, 16), 8)), SFXP(SBV(30165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(899, 16), 8), SFXP(SBV(30611, 16), 8)), SFXP(SBV(31510, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6292, 16), 8), SFXP(SBV(23252, 16), 8)), SFXP(SBV(16960, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59322, 16), 8), UFXP(BV(19461, 16), 8)), UFXP(BV(39861, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32000, 16), 8), SFXP(SBV(-18094, 16), 8)), SFXP(SBV(-13906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13156, 16), 8), UFXP(BV(8439, 16), 8)), UFXP(BV(21595, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14560, 16), 8), UFXP(BV(5336, 16), 8)), UFXP(BV(19896, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3724, 16), 8), SFXP(SBV(4504, 16), 8)), SFXP(SBV(-780, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9686, 16), 8), SFXP(SBV(-19846, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53541, 16), 8), UFXP(BV(55185, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7473, 16), 8), UFXP(BV(23013, 16), 8)), UFXP(BV(30486, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15595, 16), 8), UFXP(BV(4701, 16), 8)), UFXP(BV(20296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6037, 16), 8), UFXP(BV(56713, 16), 8)), UFXP(BV(62750, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43086, 16), 8), UFXP(BV(43502, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3679, 16), 8), SFXP(SBV(-1043, 16), 8)), SFXP(SBV(2636, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12019, 16), 8), SFXP(SBV(19625, 16), 8)), SFXP(SBV(-31644, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25367, 16), 8), UFXP(BV(48088, 16), 8)), UFXP(BV(42815, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49531, 16), 8), UFXP(BV(16347, 16), 8)), UFXP(BV(33184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(402, 16), 8), SFXP(SBV(-10813, 16), 8)), SFXP(SBV(11215, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20941, 16), 8), SFXP(SBV(-4979, 16), 8)), SFXP(SBV(15962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5387, 16), 8), SFXP(SBV(2644, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27163, 16), 8), SFXP(SBV(4371, 16), 8)), SFXP(SBV(-22792, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25631, 16), 8), SFXP(SBV(-16690, 16), 8)), SFXP(SBV(8941, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17087, 16), 8), SFXP(SBV(-15680, 16), 8)), SFXP(SBV(1997, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26194, 16), 8), SFXP(SBV(-6465, 16), 8)), SFXP(SBV(19729, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51357, 16), 8), UFXP(BV(12549, 16), 8)), UFXP(BV(38808, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1409, 16), 8), SFXP(SBV(11866, 16), 8)), SFXP(SBV(-10457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52939, 16), 8), UFXP(BV(4218, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37228, 16), 8), UFXP(BV(40390, 16), 8)), UFXP(BV(12082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24028, 16), 8), UFXP(BV(57387, 16), 8)), UFXP(BV(15879, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10568, 16), 8), UFXP(BV(4519, 16), 8)), UFXP(BV(15087, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(29176, 16), 8), UFXP(BV(17282, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56057, 16), 8), UFXP(BV(64435, 16), 8)), UFXP(BV(19264, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30410, 16), 8), SFXP(SBV(17026, 16), 8)), SFXP(SBV(9114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23259, 16), 8), SFXP(SBV(-19867, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52780, 16), 8), UFXP(BV(21218, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14372, 16), 8), UFXP(BV(26098, 16), 8)), UFXP(BV(23366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11918, 16), 8), SFXP(SBV(2233, 16), 8)), SFXP(SBV(-9685, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15254, 16), 8), SFXP(SBV(-29673, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8347, 16), 8), SFXP(SBV(16501, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16125, 16), 8), SFXP(SBV(23485, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16326, 16), 8), UFXP(BV(28290, 16), 8)), UFXP(BV(44616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19161, 16), 8), UFXP(BV(43873, 16), 8)), UFXP(BV(63034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26334, 16), 8), SFXP(SBV(-5136, 16), 8)), SFXP(SBV(-31470, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16654, 16), 8), SFXP(SBV(28531, 16), 8)), SFXP(SBV(21068, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26486, 16), 8), SFXP(SBV(-8977, 16), 8)), SFXP(SBV(17509, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44751, 16), 8), UFXP(BV(13156, 16), 8)), UFXP(BV(31595, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62697, 16), 8), UFXP(BV(21258, 16), 8)), UFXP(BV(28957, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14486, 16), 8), SFXP(SBV(-10857, 16), 8)), SFXP(SBV(3629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64694, 16), 8), UFXP(BV(1636, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37390, 16), 8), UFXP(BV(5014, 16), 8)), UFXP(BV(32376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12130, 16), 8), SFXP(SBV(-18216, 16), 8)), SFXP(SBV(30346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36108, 16), 8), UFXP(BV(60762, 16), 8)), UFXP(BV(31334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8935, 16), 8), UFXP(BV(5138, 16), 8)), UFXP(BV(14073, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10350, 16), 8), UFXP(BV(60601, 16), 8)), UFXP(BV(5415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10708, 16), 8), SFXP(SBV(8205, 16), 8)), SFXP(SBV(-18913, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20091, 16), 8), UFXP(BV(19062, 16), 8)), UFXP(BV(1029, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28703, 16), 8), UFXP(BV(3801, 16), 8)), UFXP(BV(24902, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18592, 16), 8), SFXP(SBV(809, 16), 8)), SFXP(SBV(-17783, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8519, 16), 8), SFXP(SBV(9021, 16), 8)), SFXP(SBV(-27485, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23190, 16), 8), UFXP(BV(29283, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59242, 16), 8), UFXP(BV(34195, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21633, 16), 8), SFXP(SBV(-3045, 16), 8)), SFXP(SBV(18588, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23779, 16), 8), UFXP(BV(39208, 16), 8)), UFXP(BV(50107, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17352, 16), 8), SFXP(SBV(12900, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27634, 16), 8), SFXP(SBV(1115, 16), 8)), SFXP(SBV(26519, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54205, 16), 8), UFXP(BV(45207, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3620, 16), 8), SFXP(SBV(-20081, 16), 8)), SFXP(SBV(-21813, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34085, 16), 8), UFXP(BV(26354, 16), 8)), UFXP(BV(60439, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16195, 16), 8), SFXP(SBV(-23656, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1221, 16), 8), SFXP(SBV(5449, 16), 8)), SFXP(SBV(-4228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4740, 16), 8), SFXP(SBV(1038, 16), 8)), SFXP(SBV(-19220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17245, 16), 8), UFXP(BV(501, 16), 8)), UFXP(BV(33749, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31128, 16), 8), UFXP(BV(26906, 16), 8)), UFXP(BV(4222, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10122, 16), 8), SFXP(SBV(-23691, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15525, 16), 8), SFXP(SBV(-23068, 16), 8)), SFXP(SBV(-26943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12016, 16), 8), UFXP(BV(62027, 16), 8)), UFXP(BV(27809, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19344, 16), 8), SFXP(SBV(7604, 16), 8)), SFXP(SBV(11740, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8286, 16), 8), UFXP(BV(55664, 16), 8)), UFXP(BV(18158, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44925, 16), 8), UFXP(BV(16484, 16), 8)), UFXP(BV(61409, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31489, 16), 8), UFXP(BV(5359, 16), 8)), UFXP(BV(36848, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2193, 16), 8), UFXP(BV(40525, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26508, 16), 8), UFXP(BV(13676, 16), 8)), UFXP(BV(40184, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22355, 16), 8), UFXP(BV(58161, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15046, 16), 8), SFXP(SBV(7291, 16), 8)), SFXP(SBV(-7755, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8411, 16), 8), UFXP(BV(56671, 16), 8)), UFXP(BV(65082, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(27326, 16), 8), SFXP(SBV(9857, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35374, 16), 8), UFXP(BV(17093, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15314, 16), 8), SFXP(SBV(12995, 16), 8)), SFXP(SBV(28309, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57598, 16), 8), UFXP(BV(63556, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51277, 16), 8), UFXP(BV(21512, 16), 8)), UFXP(BV(29765, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13024, 16), 8), UFXP(BV(3197, 16), 8)), UFXP(BV(16221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3058, 16), 8), UFXP(BV(6002, 16), 8)), UFXP(BV(9060, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24029, 16), 8), SFXP(SBV(32082, 16), 8)), SFXP(SBV(-3334, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23955, 16), 8), SFXP(SBV(-2161, 16), 8)), SFXP(SBV(21794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57511, 16), 8), UFXP(BV(47598, 16), 8)), UFXP(BV(9913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27312, 16), 8), SFXP(SBV(-2725, 16), 8)), SFXP(SBV(24587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20231, 16), 8), UFXP(BV(61692, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21366, 16), 8), SFXP(SBV(-9274, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47764, 16), 8), UFXP(BV(8096, 16), 8)), UFXP(BV(55860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36116, 16), 8), UFXP(BV(14737, 16), 8)), UFXP(BV(21379, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10183, 16), 8), SFXP(SBV(-22154, 16), 8)), SFXP(SBV(-32337, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26158, 16), 8), SFXP(SBV(25369, 16), 8)), SFXP(SBV(789, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22617, 16), 8), UFXP(BV(48336, 16), 8)), UFXP(BV(39817, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15810, 16), 8), SFXP(SBV(-20255, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24839, 16), 8), SFXP(SBV(-4780, 16), 8)), SFXP(SBV(-29619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6475, 16), 8), UFXP(BV(35151, 16), 8)), UFXP(BV(36860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48490, 16), 8), UFXP(BV(32141, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1238, 16), 8), SFXP(SBV(16510, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37648, 16), 8), UFXP(BV(25211, 16), 8)), UFXP(BV(37576, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26482, 16), 8), SFXP(SBV(-26254, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6029, 16), 8), SFXP(SBV(5924, 16), 8)), SFXP(SBV(8443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31233, 16), 8), SFXP(SBV(-23726, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13629, 16), 8), UFXP(BV(44504, 16), 8)), UFXP(BV(58133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(294, 16), 8), SFXP(SBV(8582, 16), 8)), SFXP(SBV(-8288, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31009, 16), 8), SFXP(SBV(23025, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28471, 16), 8), UFXP(BV(61596, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16646, 16), 8), SFXP(SBV(-31609, 16), 8)), SFXP(SBV(14963, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59023, 16), 8), UFXP(BV(23480, 16), 8)), UFXP(BV(35543, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15054, 16), 8), SFXP(SBV(2706, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16665, 16), 8), SFXP(SBV(-28956, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7587, 16), 8), UFXP(BV(31989, 16), 8)), UFXP(BV(41134, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16598, 16), 8), SFXP(SBV(28532, 16), 8)), SFXP(SBV(-11934, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19548, 16), 8), SFXP(SBV(16876, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25144, 16), 8), SFXP(SBV(-8669, 16), 8)), SFXP(SBV(31723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20559, 16), 8), SFXP(SBV(12675, 16), 8)), SFXP(SBV(7884, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50628, 16), 8), UFXP(BV(6698, 16), 8)), UFXP(BV(57326, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8091, 16), 8), SFXP(SBV(31251, 16), 8)), SFXP(SBV(4663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37843, 16), 8), UFXP(BV(16954, 16), 8)), UFXP(BV(54797, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11759, 16), 8), UFXP(BV(64416, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12913, 16), 8), UFXP(BV(46711, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29222, 16), 8), SFXP(SBV(-27611, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16783, 16), 8), SFXP(SBV(-11400, 16), 8)), SFXP(SBV(28183, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30873, 16), 8), SFXP(SBV(28604, 16), 8)), SFXP(SBV(6059, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21621, 16), 8), SFXP(SBV(17908, 16), 8)), SFXP(SBV(3713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57675, 16), 8), UFXP(BV(4241, 16), 8)), UFXP(BV(53434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23465, 16), 8), SFXP(SBV(17804, 16), 8)), SFXP(SBV(-24267, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24346, 16), 8), SFXP(SBV(4542, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21500, 16), 8), UFXP(BV(30748, 16), 8)), UFXP(BV(56288, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57567, 16), 8), UFXP(BV(28923, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44466, 16), 8), UFXP(BV(44039, 16), 8)), UFXP(BV(427, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58143, 16), 8), UFXP(BV(49468, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1473, 16), 8), SFXP(SBV(-647, 16), 8)), SFXP(SBV(826, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15853, 16), 8), SFXP(SBV(12685, 16), 8)), SFXP(SBV(28538, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7793, 16), 8), SFXP(SBV(21395, 16), 8)), SFXP(SBV(-4067, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13046, 16), 8), SFXP(SBV(-15237, 16), 8)), SFXP(SBV(2191, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14656, 16), 8), SFXP(SBV(13875, 16), 8)), SFXP(SBV(-28531, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54737, 16), 8), UFXP(BV(11362, 16), 8)), UFXP(BV(4551, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28838, 16), 8), UFXP(BV(48175, 16), 8)), UFXP(BV(46199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20960, 16), 8), SFXP(SBV(-24886, 16), 8)), SFXP(SBV(-3926, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24517, 16), 8), SFXP(SBV(15808, 16), 8)), SFXP(SBV(-8709, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(8125, 16), 8), UFXP(BV(44966, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65513, 16), 8), UFXP(BV(40765, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6576, 16), 8), SFXP(SBV(-12437, 16), 8)), SFXP(SBV(-19013, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22566, 16), 8), UFXP(BV(31492, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8750, 16), 8), SFXP(SBV(-3485, 16), 8)), SFXP(SBV(12235, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26989, 16), 8), SFXP(SBV(2047, 16), 8)), SFXP(SBV(-24942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63851, 16), 8), UFXP(BV(7633, 16), 8)), UFXP(BV(56218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16247, 16), 8), SFXP(SBV(-4901, 16), 8)), SFXP(SBV(-21148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12487, 16), 8), UFXP(BV(40080, 16), 8)), UFXP(BV(52567, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23020, 16), 8), UFXP(BV(60774, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11677, 16), 8), SFXP(SBV(-24917, 16), 8)), SFXP(SBV(-13240, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19819, 16), 8), SFXP(SBV(29732, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24212, 16), 8), SFXP(SBV(27504, 16), 8)), SFXP(SBV(-3292, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22694, 16), 8), SFXP(SBV(5678, 16), 8)), SFXP(SBV(-17016, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62043, 16), 8), UFXP(BV(56702, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24497, 16), 8), UFXP(BV(21487, 16), 8)), UFXP(BV(3010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10124, 16), 8), SFXP(SBV(-22874, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4588, 16), 8), SFXP(SBV(12249, 16), 8)), SFXP(SBV(-16837, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15369, 16), 8), SFXP(SBV(-26112, 16), 8)), SFXP(SBV(5226, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25186, 16), 8), SFXP(SBV(-973, 16), 8)), SFXP(SBV(26159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8980, 16), 8), SFXP(SBV(-26284, 16), 8)), SFXP(SBV(17304, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1483, 16), 8), UFXP(BV(38308, 16), 8)), UFXP(BV(39791, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29801, 16), 8), SFXP(SBV(23828, 16), 8)), SFXP(SBV(-5973, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34516, 16), 8), UFXP(BV(40999, 16), 8)), UFXP(BV(59053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17061, 16), 8), UFXP(BV(14817, 16), 8)), UFXP(BV(31878, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17855, 16), 8), SFXP(SBV(-8590, 16), 8)), SFXP(SBV(-26445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13111, 16), 8), UFXP(BV(54807, 16), 8)), UFXP(BV(23840, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28965, 16), 8), UFXP(BV(2278, 16), 8)), UFXP(BV(26687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18271, 16), 8), UFXP(BV(6371, 16), 8)), UFXP(BV(24642, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6949, 16), 8), UFXP(BV(11345, 16), 8)), UFXP(BV(61140, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(27919, 16), 8), SFXP(SBV(846, 16), 8)), SFXP(SBV(26727, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26483, 16), 8), UFXP(BV(59574, 16), 8)), UFXP(BV(2500, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28938, 16), 8), SFXP(SBV(5835, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30550, 16), 8), UFXP(BV(46408, 16), 8)), UFXP(BV(49678, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58852, 16), 8), UFXP(BV(24512, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9682, 16), 8), SFXP(SBV(8693, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40998, 16), 8), UFXP(BV(22464, 16), 8)), UFXP(BV(58630, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14726, 16), 8), SFXP(SBV(-3980, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31515, 16), 8), SFXP(SBV(31100, 16), 8)), SFXP(SBV(2921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23140, 16), 8), UFXP(BV(1776, 16), 8)), UFXP(BV(21364, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6536, 16), 8), UFXP(BV(9420, 16), 8)), UFXP(BV(15956, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3668, 16), 8), UFXP(BV(43377, 16), 8)), UFXP(BV(47045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24144, 16), 8), UFXP(BV(12545, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(658, 16), 8), UFXP(BV(45840, 16), 8)), UFXP(BV(20354, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50888, 16), 8), UFXP(BV(41538, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28075, 16), 8), UFXP(BV(54254, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19706, 16), 8), UFXP(BV(64989, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58007, 16), 8), UFXP(BV(42687, 16), 8)), UFXP(BV(15320, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14922, 16), 8), SFXP(SBV(19702, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29330, 16), 8), SFXP(SBV(-21326, 16), 8)), SFXP(SBV(18494, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15468, 16), 8), SFXP(SBV(17221, 16), 8)), SFXP(SBV(1753, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11716, 16), 8), SFXP(SBV(10004, 16), 8)), SFXP(SBV(-21720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2679, 16), 8), UFXP(BV(17855, 16), 8)), UFXP(BV(50360, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4194, 16), 8), SFXP(SBV(-21314, 16), 8)), SFXP(SBV(-25508, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14457, 16), 8), UFXP(BV(28994, 16), 8)), UFXP(BV(43451, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23032, 16), 8), SFXP(SBV(28181, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23691, 16), 8), UFXP(BV(43548, 16), 8)), UFXP(BV(1703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(32274, 16), 8), SFXP(SBV(8932, 16), 8)), SFXP(SBV(11948, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60822, 16), 8), UFXP(BV(38039, 16), 8)), UFXP(BV(33325, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53688, 16), 8), UFXP(BV(31382, 16), 8)), UFXP(BV(27793, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27198, 16), 8), SFXP(SBV(24279, 16), 8)), SFXP(SBV(-14059, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10615, 16), 8), SFXP(SBV(22314, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38914, 16), 8), UFXP(BV(30220, 16), 8)), UFXP(BV(6157, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23628, 16), 8), SFXP(SBV(-6609, 16), 8)), SFXP(SBV(-20166, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10123, 16), 8), UFXP(BV(18457, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38618, 16), 8), UFXP(BV(25042, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25351, 16), 8), UFXP(BV(23043, 16), 8)), UFXP(BV(48394, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33564, 16), 8), UFXP(BV(13042, 16), 8)), UFXP(BV(5993, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14040, 16), 8), SFXP(SBV(22892, 16), 8)), SFXP(SBV(8852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33150, 16), 8), UFXP(BV(59698, 16), 8)), UFXP(BV(27312, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45784, 16), 8), UFXP(BV(29240, 16), 8)), UFXP(BV(16544, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6409, 16), 8), SFXP(SBV(-15249, 16), 8)), SFXP(SBV(-21658, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35653, 16), 8), UFXP(BV(51399, 16), 8)), UFXP(BV(49790, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6341, 16), 8), SFXP(SBV(-20260, 16), 8)), SFXP(SBV(26601, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8930, 16), 8), SFXP(SBV(-13612, 16), 8)), SFXP(SBV(4682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45872, 16), 8), UFXP(BV(16520, 16), 8)), UFXP(BV(62392, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10637, 16), 8), SFXP(SBV(13492, 16), 8)), SFXP(SBV(24129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3097, 16), 8), SFXP(SBV(-9125, 16), 8)), SFXP(SBV(-12222, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22448, 16), 8), SFXP(SBV(28288, 16), 8)), SFXP(SBV(-9864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31161, 16), 8), UFXP(BV(28539, 16), 8)), UFXP(BV(2622, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27000, 16), 8), SFXP(SBV(-12834, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(60535, 16), 8), UFXP(BV(35722, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56825, 16), 8), UFXP(BV(34652, 16), 8)), UFXP(BV(22173, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8563, 16), 8), SFXP(SBV(8105, 16), 8)), SFXP(SBV(-458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29573, 16), 8), UFXP(BV(54802, 16), 8)), UFXP(BV(40307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25427, 16), 8), SFXP(SBV(-15105, 16), 8)), SFXP(SBV(-7036, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28447, 16), 8), SFXP(SBV(577, 16), 8)), SFXP(SBV(27870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43281, 16), 8), UFXP(BV(32816, 16), 8)), UFXP(BV(10561, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64761, 16), 8), UFXP(BV(3361, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32264, 16), 8), UFXP(BV(64194, 16), 8)), UFXP(BV(29523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15269, 16), 8), SFXP(SBV(15103, 16), 8)), SFXP(SBV(-166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31242, 16), 8), SFXP(SBV(26474, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18722, 16), 8), UFXP(BV(5052, 16), 8)), UFXP(BV(13670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-693, 16), 8), SFXP(SBV(-23723, 16), 8)), SFXP(SBV(23030, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58536, 16), 8), UFXP(BV(21624, 16), 8)), UFXP(BV(36912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31630, 16), 8), SFXP(SBV(-31074, 16), 8)), SFXP(SBV(27285, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17013, 16), 8), UFXP(BV(284, 16), 8)), UFXP(BV(17297, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20261, 16), 8), UFXP(BV(3339, 16), 8)), UFXP(BV(2120, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6337, 16), 8), SFXP(SBV(17910, 16), 8)), SFXP(SBV(-15409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18838, 16), 8), SFXP(SBV(-1477, 16), 8)), SFXP(SBV(20315, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26018, 16), 8), SFXP(SBV(9862, 16), 8)), SFXP(SBV(-16156, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7965, 16), 8), SFXP(SBV(-1705, 16), 8)), SFXP(SBV(6260, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20676, 16), 8), UFXP(BV(51027, 16), 8)), UFXP(BV(35185, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18960, 16), 8), SFXP(SBV(-24961, 16), 8)), SFXP(SBV(6001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17066, 16), 8), SFXP(SBV(2276, 16), 8)), SFXP(SBV(-19342, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8355, 16), 8), SFXP(SBV(-21696, 16), 8)), SFXP(SBV(13341, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27401, 16), 8), SFXP(SBV(27806, 16), 8)), SFXP(SBV(10329, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14842, 16), 8), SFXP(SBV(-29277, 16), 8)), SFXP(SBV(6556, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1855, 16), 8), UFXP(BV(52176, 16), 8)), UFXP(BV(54031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25758, 16), 8), SFXP(SBV(-5936, 16), 8)), SFXP(SBV(-31694, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2862, 16), 8), SFXP(SBV(-13472, 16), 8)), SFXP(SBV(10610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8878, 16), 8), UFXP(BV(49245, 16), 8)), UFXP(BV(3866, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44712, 16), 8), UFXP(BV(23788, 16), 8)), UFXP(BV(2964, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29905, 16), 8), SFXP(SBV(-8938, 16), 8)), SFXP(SBV(20967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2100, 16), 8), SFXP(SBV(-10202, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19948, 16), 8), UFXP(BV(41049, 16), 8)), UFXP(BV(60997, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26876, 16), 8), SFXP(SBV(-10439, 16), 8)), SFXP(SBV(28221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16177, 16), 8), UFXP(BV(40365, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50648, 16), 8), UFXP(BV(24155, 16), 8)), UFXP(BV(26493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1144, 16), 8), SFXP(SBV(-8454, 16), 8)), SFXP(SBV(7310, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51229, 16), 8), UFXP(BV(19000, 16), 8)), UFXP(BV(4693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25373, 16), 8), UFXP(BV(27768, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13899, 16), 8), UFXP(BV(4554, 16), 8)), UFXP(BV(18453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30658, 16), 8), SFXP(SBV(-6958, 16), 8)), SFXP(SBV(23700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25240, 16), 8), SFXP(SBV(19193, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9564, 16), 8), SFXP(SBV(19009, 16), 8)), SFXP(SBV(-10731, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-10605, 16), 8), SFXP(SBV(10734, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10457, 16), 8), SFXP(SBV(17532, 16), 8)), SFXP(SBV(7075, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13880, 16), 8), UFXP(BV(65067, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16270, 16), 8), SFXP(SBV(29988, 16), 8)), SFXP(SBV(-5333, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25623, 16), 8), SFXP(SBV(-24337, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30733, 16), 8), UFXP(BV(44378, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52618, 16), 8), UFXP(BV(44355, 16), 8)), UFXP(BV(31437, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19280, 16), 8), SFXP(SBV(28768, 16), 8)), SFXP(SBV(17488, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38030, 16), 8), UFXP(BV(60672, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40847, 16), 8), UFXP(BV(36823, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26159, 16), 8), UFXP(BV(9552, 16), 8)), UFXP(BV(16607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(32024, 16), 8), SFXP(SBV(-16597, 16), 8)), SFXP(SBV(20972, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(62070, 16), 8), UFXP(BV(48786, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6217, 16), 8), SFXP(SBV(1443, 16), 8)), SFXP(SBV(-7660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34861, 16), 8), UFXP(BV(13886, 16), 8)), UFXP(BV(20975, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-11747, 16), 8), SFXP(SBV(5299, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16339, 16), 8), UFXP(BV(5247, 16), 8)), UFXP(BV(7205, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56105, 16), 8), UFXP(BV(203, 16), 8)), UFXP(BV(44490, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25137, 16), 8), SFXP(SBV(-1801, 16), 8)), SFXP(SBV(19765, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16974, 16), 8), SFXP(SBV(20138, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25658, 16), 8), UFXP(BV(49439, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53579, 16), 8), UFXP(BV(62956, 16), 8)), UFXP(BV(56159, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39525, 16), 8), UFXP(BV(44627, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12473, 16), 8), UFXP(BV(63840, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16525, 16), 8), SFXP(SBV(20750, 16), 8)), SFXP(SBV(28261, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1344, 16), 8), UFXP(BV(63765, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45668, 16), 8), UFXP(BV(45523, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32252, 16), 8), UFXP(BV(5886, 16), 8)), UFXP(BV(20649, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8522, 16), 8), SFXP(SBV(-19945, 16), 8)), SFXP(SBV(-28467, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11165, 16), 8), SFXP(SBV(-26458, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47122, 16), 8), UFXP(BV(49380, 16), 8)), UFXP(BV(63278, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28766, 16), 8), SFXP(SBV(-17106, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50326, 16), 8), UFXP(BV(52358, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23202, 16), 8), SFXP(SBV(-1051, 16), 8)), SFXP(SBV(22151, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1638, 16), 8), SFXP(SBV(-3415, 16), 8)), SFXP(SBV(1777, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23026, 16), 8), SFXP(SBV(-6991, 16), 8)), SFXP(SBV(30017, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49820, 16), 8), UFXP(BV(56007, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1669, 16), 8), SFXP(SBV(-15652, 16), 8)), SFXP(SBV(-13983, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17785, 16), 8), SFXP(SBV(12074, 16), 8)), SFXP(SBV(-29859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58549, 16), 8), UFXP(BV(44959, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7089, 16), 8), UFXP(BV(26753, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24690, 16), 8), UFXP(BV(20018, 16), 8)), UFXP(BV(4672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63122, 16), 8), UFXP(BV(60519, 16), 8)), UFXP(BV(2603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17373, 16), 8), SFXP(SBV(-32444, 16), 8)), SFXP(SBV(-15071, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17279, 16), 8), UFXP(BV(14717, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25058, 16), 8), SFXP(SBV(2048, 16), 8)), SFXP(SBV(-27106, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5566, 16), 8), SFXP(SBV(16111, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(334, 16), 8), SFXP(SBV(6001, 16), 8)), SFXP(SBV(7829, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1115, 16), 8), SFXP(SBV(15473, 16), 8)), SFXP(SBV(-1857, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50553, 16), 8), UFXP(BV(36514, 16), 8)), UFXP(BV(21531, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1151, 16), 8), UFXP(BV(18477, 16), 8)), UFXP(BV(48210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64391, 16), 8), UFXP(BV(27195, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4001, 16), 8), SFXP(SBV(-18126, 16), 8)), SFXP(SBV(14125, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3848, 16), 8), UFXP(BV(32700, 16), 8)), UFXP(BV(36684, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37880, 16), 8), UFXP(BV(63869, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54227, 16), 8), UFXP(BV(8203, 16), 8)), UFXP(BV(33659, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7872, 16), 8), UFXP(BV(25918, 16), 8)), UFXP(BV(33790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12449, 16), 8), UFXP(BV(32201, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5545, 16), 8), SFXP(SBV(31027, 16), 8)), SFXP(SBV(-25482, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15895, 16), 8), UFXP(BV(7901, 16), 8)), UFXP(BV(7994, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5863, 16), 8), SFXP(SBV(16841, 16), 8)), SFXP(SBV(-10978, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11802, 16), 8), SFXP(SBV(27758, 16), 8)), SFXP(SBV(25976, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26535, 16), 8), SFXP(SBV(-17604, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58876, 16), 8), UFXP(BV(19290, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18771, 16), 8), UFXP(BV(37671, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24665, 16), 8), UFXP(BV(15910, 16), 8)), UFXP(BV(8755, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25900, 16), 8), SFXP(SBV(-25114, 16), 8)), SFXP(SBV(-786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34945, 16), 8), UFXP(BV(38784, 16), 8)), UFXP(BV(8193, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5772, 16), 8), SFXP(SBV(-30213, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1714, 16), 8), UFXP(BV(49470, 16), 8)), UFXP(BV(3537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64052, 16), 8), UFXP(BV(651, 16), 8)), UFXP(BV(63401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12334, 16), 8), SFXP(SBV(-10210, 16), 8)), SFXP(SBV(-22544, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41135, 16), 8), UFXP(BV(28763, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53516, 16), 8), UFXP(BV(28772, 16), 8)), UFXP(BV(24744, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(24900, 16), 8), UFXP(BV(24502, 16), 8)), UFXP(BV(23906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27380, 16), 8), UFXP(BV(65323, 16), 8)), UFXP(BV(27593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51995, 16), 8), UFXP(BV(32497, 16), 8)), UFXP(BV(19498, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12136, 16), 8), UFXP(BV(61538, 16), 8)), UFXP(BV(16134, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29361, 16), 8), SFXP(SBV(-12697, 16), 8)), SFXP(SBV(-14444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19216, 16), 8), UFXP(BV(60997, 16), 8)), UFXP(BV(14677, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30573, 16), 8), SFXP(SBV(18709, 16), 8)), SFXP(SBV(16254, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28099, 16), 8), UFXP(BV(37826, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32018, 16), 8), SFXP(SBV(28480, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25922, 16), 8), UFXP(BV(37456, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5037, 16), 8), SFXP(SBV(-15522, 16), 8)), SFXP(SBV(-10485, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24578, 16), 8), SFXP(SBV(-31848, 16), 8)), SFXP(SBV(-22535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-808, 16), 8), SFXP(SBV(-1300, 16), 8)), SFXP(SBV(4104, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46091, 16), 8), UFXP(BV(24200, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21663, 16), 8), SFXP(SBV(-23386, 16), 8)), SFXP(SBV(20487, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10772, 16), 8), SFXP(SBV(26766, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17199, 16), 8), UFXP(BV(56490, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14825, 16), 8), UFXP(BV(5412, 16), 8)), UFXP(BV(20237, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27393, 16), 8), UFXP(BV(21243, 16), 8)), UFXP(BV(44860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29843, 16), 8), UFXP(BV(24584, 16), 8)), UFXP(BV(5259, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8733, 16), 8), UFXP(BV(59022, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28754, 16), 8), SFXP(SBV(31189, 16), 8)), SFXP(SBV(-29750, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13221, 16), 8), SFXP(SBV(-14915, 16), 8)), SFXP(SBV(-28136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15086, 16), 8), UFXP(BV(46197, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57217, 16), 8), UFXP(BV(53150, 16), 8)), UFXP(BV(17216, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35198, 16), 8), UFXP(BV(44881, 16), 8)), UFXP(BV(55853, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13898, 16), 8), UFXP(BV(13256, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8366, 16), 8), SFXP(SBV(6859, 16), 8)), SFXP(SBV(-27541, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24253, 16), 8), UFXP(BV(799, 16), 8)), UFXP(BV(23454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12395, 16), 8), SFXP(SBV(-26333, 16), 8)), SFXP(SBV(-26808, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24436, 16), 8), SFXP(SBV(-22235, 16), 8)), SFXP(SBV(2201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27456, 16), 8), SFXP(SBV(-439, 16), 8)), SFXP(SBV(-27895, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59274, 16), 8), UFXP(BV(16895, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52992, 16), 8), UFXP(BV(15298, 16), 8)), UFXP(BV(20958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25361, 16), 8), SFXP(SBV(28628, 16), 8)), SFXP(SBV(-11547, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1606, 16), 8), SFXP(SBV(-31160, 16), 8)), SFXP(SBV(-32766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29422, 16), 8), UFXP(BV(48532, 16), 8)), UFXP(BV(46426, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25147, 16), 8), SFXP(SBV(-29203, 16), 8)), SFXP(SBV(4056, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32722, 16), 8), SFXP(SBV(30427, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27784, 16), 8), UFXP(BV(49894, 16), 8)), UFXP(BV(43426, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2731, 16), 8), SFXP(SBV(20626, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38184, 16), 8), UFXP(BV(16485, 16), 8)), UFXP(BV(21699, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3550, 16), 8), UFXP(BV(38825, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30492, 16), 8), SFXP(SBV(-10816, 16), 8)), SFXP(SBV(19676, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18846, 16), 8), UFXP(BV(7635, 16), 8)), UFXP(BV(11211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55594, 16), 8), UFXP(BV(10341, 16), 8)), UFXP(BV(45253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32909, 16), 8), UFXP(BV(17301, 16), 8)), UFXP(BV(50210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5161, 16), 8), UFXP(BV(52233, 16), 8)), UFXP(BV(57394, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3234, 16), 8), SFXP(SBV(-30551, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13553, 16), 8), SFXP(SBV(-23144, 16), 8)), SFXP(SBV(19908, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40979, 16), 8), UFXP(BV(39491, 16), 8)), UFXP(BV(1488, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11138, 16), 8), UFXP(BV(32016, 16), 8)), UFXP(BV(43154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43570, 16), 8), UFXP(BV(21853, 16), 8)), UFXP(BV(21717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28547, 16), 8), UFXP(BV(58389, 16), 8)), UFXP(BV(21400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41570, 16), 8), UFXP(BV(46329, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62060, 16), 8), UFXP(BV(16125, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34603, 16), 8), UFXP(BV(56356, 16), 8)), UFXP(BV(43783, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9692, 16), 8), UFXP(BV(34470, 16), 8)), UFXP(BV(44162, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46228, 16), 8), UFXP(BV(12596, 16), 8)), UFXP(BV(58824, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4181, 16), 8), SFXP(SBV(7033, 16), 8)), SFXP(SBV(-2852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29893, 16), 8), UFXP(BV(21948, 16), 8)), UFXP(BV(51841, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11842, 16), 8), SFXP(SBV(32675, 16), 8)), SFXP(SBV(-20833, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25847, 16), 8), UFXP(BV(44250, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21019, 16), 8), UFXP(BV(21204, 16), 8)), UFXP(BV(42223, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18009, 16), 8), SFXP(SBV(-17330, 16), 8)), SFXP(SBV(-679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55944, 16), 8), UFXP(BV(55503, 16), 8)), UFXP(BV(45911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1969, 16), 8), SFXP(SBV(-3248, 16), 8)), SFXP(SBV(-5217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33922, 16), 8), UFXP(BV(5530, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1273, 16), 8), UFXP(BV(31780, 16), 8)), UFXP(BV(33053, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20148, 16), 8), SFXP(SBV(-6764, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32686, 16), 8), SFXP(SBV(16340, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6675, 16), 8), UFXP(BV(34490, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6773, 16), 8), UFXP(BV(60604, 16), 8)), UFXP(BV(1841, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15671, 16), 8), UFXP(BV(5113, 16), 8)), UFXP(BV(10558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12324, 16), 8), SFXP(SBV(-10374, 16), 8)), SFXP(SBV(-22698, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31979, 16), 8), SFXP(SBV(9348, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61504, 16), 8), UFXP(BV(63981, 16), 8)), UFXP(BV(59949, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22861, 16), 8), SFXP(SBV(-11254, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13210, 16), 8), UFXP(BV(40644, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11492, 16), 8), SFXP(SBV(-1150, 16), 8)), SFXP(SBV(10342, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17352, 16), 8), UFXP(BV(5189, 16), 8)), UFXP(BV(22541, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17419, 16), 8), SFXP(SBV(-11478, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1743, 16), 8), UFXP(BV(14752, 16), 8)), UFXP(BV(16495, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(8891, 16), 8), UFXP(BV(17508, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30100, 16), 8), UFXP(BV(19019, 16), 8)), UFXP(BV(49119, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9741, 16), 8), SFXP(SBV(28553, 16), 8)), SFXP(SBV(-18812, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9267, 16), 8), UFXP(BV(16704, 16), 8)), UFXP(BV(25971, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27543, 16), 8), UFXP(BV(14636, 16), 8)), UFXP(BV(42179, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15672, 16), 8), SFXP(SBV(15047, 16), 8)), SFXP(SBV(3654, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18915, 16), 8), UFXP(BV(53568, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62092, 16), 8), UFXP(BV(51215, 16), 8)), UFXP(BV(35734, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56647, 16), 8), UFXP(BV(7042, 16), 8)), UFXP(BV(50907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31915, 16), 8), SFXP(SBV(21713, 16), 8)), SFXP(SBV(-11908, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3744, 16), 8), SFXP(SBV(-24736, 16), 8)), SFXP(SBV(28480, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5814, 16), 8), SFXP(SBV(32651, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24946, 16), 8), UFXP(BV(44569, 16), 8)), UFXP(BV(17665, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25609, 16), 8), SFXP(SBV(-20185, 16), 8)), SFXP(SBV(-19742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26475, 16), 8), UFXP(BV(54417, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13473, 16), 8), SFXP(SBV(-24902, 16), 8)), SFXP(SBV(-27161, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22038, 16), 8), UFXP(BV(58309, 16), 8)), UFXP(BV(38849, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25309, 16), 8), SFXP(SBV(-11947, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8911, 16), 8), SFXP(SBV(-21801, 16), 8)), SFXP(SBV(-12890, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49450, 16), 8), UFXP(BV(29649, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14009, 16), 8), UFXP(BV(16368, 16), 8)), UFXP(BV(63177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29440, 16), 8), SFXP(SBV(-29737, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12577, 16), 8), UFXP(BV(25907, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33644, 16), 8), UFXP(BV(51660, 16), 8)), UFXP(BV(39046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52822, 16), 8), UFXP(BV(49997, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25548, 16), 8), UFXP(BV(18721, 16), 8)), UFXP(BV(44269, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20612, 16), 8), UFXP(BV(41898, 16), 8)), UFXP(BV(31108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64628, 16), 8), UFXP(BV(35645, 16), 8)), UFXP(BV(28983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25532, 16), 8), UFXP(BV(17777, 16), 8)), UFXP(BV(3505, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13455, 16), 8), SFXP(SBV(25498, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6513, 16), 8), SFXP(SBV(28175, 16), 8)), SFXP(SBV(-21662, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46530, 16), 8), UFXP(BV(21804, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18138, 16), 8), UFXP(BV(59333, 16), 8)), UFXP(BV(24341, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30359, 16), 8), SFXP(SBV(23318, 16), 8)), SFXP(SBV(12766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13321, 16), 8), UFXP(BV(38622, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8613, 16), 8), UFXP(BV(47223, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10908, 16), 8), SFXP(SBV(29595, 16), 8)), SFXP(SBV(-18687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13836, 16), 8), UFXP(BV(44401, 16), 8)), UFXP(BV(40440, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9589, 16), 8), UFXP(BV(3398, 16), 8)), UFXP(BV(6191, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12104, 16), 8), SFXP(SBV(26274, 16), 8)), SFXP(SBV(27158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13213, 16), 8), SFXP(SBV(25466, 16), 8)), SFXP(SBV(3663, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12047, 16), 8), SFXP(SBV(7814, 16), 8)), SFXP(SBV(-4233, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15485, 16), 8), SFXP(SBV(-29626, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50269, 16), 8), UFXP(BV(40008, 16), 8)), UFXP(BV(10261, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39053, 16), 8), UFXP(BV(13029, 16), 8)), UFXP(BV(26024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10171, 16), 8), SFXP(SBV(18599, 16), 8)), SFXP(SBV(-28770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46449, 16), 8), UFXP(BV(20449, 16), 8)), UFXP(BV(26000, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22541, 16), 8), UFXP(BV(27897, 16), 8)), UFXP(BV(50438, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63231, 16), 8), UFXP(BV(729, 16), 8)), UFXP(BV(62502, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1820, 16), 8), SFXP(SBV(-17613, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22425, 16), 8), UFXP(BV(13054, 16), 8)), UFXP(BV(35479, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22106, 16), 8), UFXP(BV(41847, 16), 8)), UFXP(BV(9074, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13887, 16), 8), SFXP(SBV(26795, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26350, 16), 8), SFXP(SBV(7474, 16), 8)), SFXP(SBV(-18876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19749, 16), 8), SFXP(SBV(16873, 16), 8)), SFXP(SBV(2876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29608, 16), 8), UFXP(BV(28154, 16), 8)), UFXP(BV(1454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31672, 16), 8), SFXP(SBV(24413, 16), 8)), SFXP(SBV(-7259, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7243, 16), 8), SFXP(SBV(29808, 16), 8)), SFXP(SBV(-8612, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6611, 16), 8), UFXP(BV(36644, 16), 8)), UFXP(BV(43255, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26260, 16), 8), SFXP(SBV(-9887, 16), 8)), SFXP(SBV(31149, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27598, 16), 8), SFXP(SBV(23378, 16), 8)), SFXP(SBV(-14560, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27734, 16), 8), SFXP(SBV(-9563, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10726, 16), 8), UFXP(BV(45847, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1581, 16), 8), UFXP(BV(30435, 16), 8)), UFXP(BV(32016, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57882, 16), 8), UFXP(BV(30963, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7621, 16), 8), SFXP(SBV(-23560, 16), 8)), SFXP(SBV(19525, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11004, 16), 8), UFXP(BV(31871, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18877, 16), 8), SFXP(SBV(26060, 16), 8)), SFXP(SBV(-7183, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(82, 16), 8), SFXP(SBV(-25542, 16), 8)), SFXP(SBV(-25460, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27611, 16), 8), SFXP(SBV(30905, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37866, 16), 8), UFXP(BV(28143, 16), 8)), UFXP(BV(9723, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10882, 16), 8), UFXP(BV(9891, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13972, 16), 8), SFXP(SBV(-4746, 16), 8)), SFXP(SBV(-3116, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12534, 16), 8), UFXP(BV(5476, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5350, 16), 8), UFXP(BV(42214, 16), 8)), UFXP(BV(28672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47842, 16), 8), UFXP(BV(42013, 16), 8)), UFXP(BV(24319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29114, 16), 8), SFXP(SBV(21693, 16), 8)), SFXP(SBV(-23298, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37122, 16), 8), UFXP(BV(43190, 16), 8)), UFXP(BV(14776, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50082, 16), 8), UFXP(BV(39482, 16), 8)), UFXP(BV(10600, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60388, 16), 8), UFXP(BV(12706, 16), 8)), UFXP(BV(47682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38597, 16), 8), UFXP(BV(39852, 16), 8)), UFXP(BV(12913, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26611, 16), 8), UFXP(BV(21934, 16), 8)), UFXP(BV(48545, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47821, 16), 8), UFXP(BV(53085, 16), 8)), UFXP(BV(60272, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44919, 16), 8), UFXP(BV(9003, 16), 8)), UFXP(BV(6846, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54891, 16), 8), UFXP(BV(46595, 16), 8)), UFXP(BV(8296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43561, 16), 8), UFXP(BV(32541, 16), 8)), UFXP(BV(32158, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44425, 16), 8), UFXP(BV(36645, 16), 8)), UFXP(BV(2204, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26093, 16), 8), SFXP(SBV(29652, 16), 8)), SFXP(SBV(9791, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37172, 16), 8), UFXP(BV(65205, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32722, 16), 8), SFXP(SBV(-27711, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15853, 16), 8), UFXP(BV(55969, 16), 8)), UFXP(BV(58053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32844, 16), 8), UFXP(BV(57076, 16), 8)), UFXP(BV(48176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13479, 16), 8), SFXP(SBV(29285, 16), 8)), SFXP(SBV(-15806, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13794, 16), 8), UFXP(BV(53105, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8041, 16), 8), SFXP(SBV(15354, 16), 8)), SFXP(SBV(-7313, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13118, 16), 8), UFXP(BV(52629, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12642, 16), 8), UFXP(BV(5650, 16), 8)), UFXP(BV(16868, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6051, 16), 8), SFXP(SBV(-18218, 16), 8)), SFXP(SBV(-12167, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58589, 16), 8), UFXP(BV(15013, 16), 8)), UFXP(BV(28053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23986, 16), 8), UFXP(BV(48105, 16), 8)), UFXP(BV(41417, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5182, 16), 8), SFXP(SBV(20504, 16), 8)), SFXP(SBV(-15322, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44259, 16), 8), UFXP(BV(20739, 16), 8)), UFXP(BV(64998, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5253, 16), 8), SFXP(SBV(27888, 16), 8)), SFXP(SBV(22635, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18501, 16), 8), SFXP(SBV(-21265, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31191, 16), 8), SFXP(SBV(-7921, 16), 8)), SFXP(SBV(-17947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17569, 16), 8), SFXP(SBV(3005, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2786, 16), 8), SFXP(SBV(-8527, 16), 8)), SFXP(SBV(11313, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65213, 16), 8), UFXP(BV(7924, 16), 8)), UFXP(BV(7601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26793, 16), 8), UFXP(BV(48739, 16), 8)), UFXP(BV(9996, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7448, 16), 8), SFXP(SBV(-30235, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56881, 16), 8), UFXP(BV(23014, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64423, 16), 8), UFXP(BV(19527, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44775, 16), 8), UFXP(BV(64724, 16), 8)), UFXP(BV(43963, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4755, 16), 8), SFXP(SBV(31219, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59037, 16), 8), UFXP(BV(43999, 16), 8)), UFXP(BV(15038, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30133, 16), 8), UFXP(BV(50058, 16), 8)), UFXP(BV(14655, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6288, 16), 8), SFXP(SBV(-28448, 16), 8)), SFXP(SBV(-30800, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20296, 16), 8), UFXP(BV(31010, 16), 8)), UFXP(BV(51306, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5846, 16), 8), UFXP(BV(44840, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10154, 16), 8), SFXP(SBV(-7331, 16), 8)), SFXP(SBV(2823, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12176, 16), 8), UFXP(BV(16252, 16), 8)), UFXP(BV(52090, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7665, 16), 8), UFXP(BV(24770, 16), 8)), UFXP(BV(32435, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50011, 16), 8), UFXP(BV(46580, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5813, 16), 8), UFXP(BV(14619, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62409, 16), 8), UFXP(BV(45059, 16), 8)), UFXP(BV(17350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8999, 16), 8), SFXP(SBV(-9304, 16), 8)), SFXP(SBV(623, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3221, 16), 8), SFXP(SBV(27355, 16), 8)), SFXP(SBV(30576, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31188, 16), 8), SFXP(SBV(3113, 16), 8)), SFXP(SBV(-31235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11668, 16), 8), UFXP(BV(5131, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30947, 16), 8), UFXP(BV(22786, 16), 8)), UFXP(BV(53733, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8957, 16), 8), SFXP(SBV(-9390, 16), 8)), SFXP(SBV(-18347, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10391, 16), 8), SFXP(SBV(3765, 16), 8)), SFXP(SBV(6626, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31678, 16), 8), SFXP(SBV(19466, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61833, 16), 8), UFXP(BV(60128, 16), 8)), UFXP(BV(39570, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3297, 16), 8), UFXP(BV(28510, 16), 8)), UFXP(BV(31807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9817, 16), 8), SFXP(SBV(-28172, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(264, 16), 8), SFXP(SBV(31667, 16), 8)), SFXP(SBV(-31403, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8182, 16), 8), UFXP(BV(54021, 16), 8)), UFXP(BV(62203, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11367, 16), 8), SFXP(SBV(-13056, 16), 8)), SFXP(SBV(-24423, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3515, 16), 8), UFXP(BV(13827, 16), 8)), UFXP(BV(55224, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8342, 16), 8), UFXP(BV(32711, 16), 8)), UFXP(BV(41053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5626, 16), 8), UFXP(BV(28643, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43368, 16), 8), UFXP(BV(39008, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21483, 16), 8), UFXP(BV(53952, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57403, 16), 8), UFXP(BV(41318, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18660, 16), 8), SFXP(SBV(24020, 16), 8)), SFXP(SBV(-5360, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14053, 16), 8), SFXP(SBV(25761, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-260, 16), 8), SFXP(SBV(8408, 16), 8)), SFXP(SBV(-8539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58025, 16), 8), UFXP(BV(61442, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4180, 16), 8), UFXP(BV(29865, 16), 8)), UFXP(BV(34045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60123, 16), 8), UFXP(BV(59320, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20408, 16), 8), UFXP(BV(52961, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26478, 16), 8), UFXP(BV(26487, 16), 8)), UFXP(BV(65527, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18254, 16), 8), UFXP(BV(51410, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39621, 16), 8), UFXP(BV(8800, 16), 8)), UFXP(BV(48421, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20557, 16), 8), SFXP(SBV(-126, 16), 8)), SFXP(SBV(-10118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2917, 16), 8), SFXP(SBV(-30768, 16), 8)), SFXP(SBV(22907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24289, 16), 8), SFXP(SBV(15356, 16), 8)), SFXP(SBV(25891, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53160, 16), 8), UFXP(BV(1655, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55783, 16), 8), UFXP(BV(32994, 16), 8)), UFXP(BV(22789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21585, 16), 8), SFXP(SBV(24434, 16), 8)), SFXP(SBV(-28571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18742, 16), 8), SFXP(SBV(-7545, 16), 8)), SFXP(SBV(11197, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35590, 16), 8), UFXP(BV(11679, 16), 8)), UFXP(BV(23911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16829, 16), 8), SFXP(SBV(-11780, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23152, 16), 8), SFXP(SBV(-4944, 16), 8)), SFXP(SBV(28096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27069, 16), 8), SFXP(SBV(8492, 16), 8)), SFXP(SBV(19574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21630, 16), 8), UFXP(BV(42477, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41981, 16), 8), UFXP(BV(6269, 16), 8)), UFXP(BV(48250, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16393, 16), 8), SFXP(SBV(-3091, 16), 8)), SFXP(SBV(19484, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52660, 16), 8), UFXP(BV(55400, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38114, 16), 8), UFXP(BV(41754, 16), 8)), UFXP(BV(56069, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57905, 16), 8), UFXP(BV(14780, 16), 8)), UFXP(BV(772, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(46141, 16), 8), UFXP(BV(21869, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9336, 16), 8), UFXP(BV(56880, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22491, 16), 8), SFXP(SBV(5502, 16), 8)), SFXP(SBV(16989, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28933, 16), 8), SFXP(SBV(-15274, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4431, 16), 8), SFXP(SBV(17003, 16), 8)), SFXP(SBV(12572, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41402, 16), 8), UFXP(BV(33401, 16), 8)), UFXP(BV(27876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5725, 16), 8), UFXP(BV(20806, 16), 8)), UFXP(BV(26531, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18232, 16), 8), SFXP(SBV(17680, 16), 8)), SFXP(SBV(552, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3061, 16), 8), UFXP(BV(39469, 16), 8)), UFXP(BV(13181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5385, 16), 8), UFXP(BV(52910, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35684, 16), 8), UFXP(BV(9973, 16), 8)), UFXP(BV(25711, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24895, 16), 8), SFXP(SBV(1448, 16), 8)), SFXP(SBV(23447, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6130, 16), 8), SFXP(SBV(173, 16), 8)), SFXP(SBV(5957, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8938, 16), 8), SFXP(SBV(18118, 16), 8)), SFXP(SBV(27056, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46866, 16), 8), UFXP(BV(27836, 16), 8)), UFXP(BV(49673, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3686, 16), 8), SFXP(SBV(26542, 16), 8)), SFXP(SBV(22856, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32928, 16), 8), UFXP(BV(59494, 16), 8)), UFXP(BV(50239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7981, 16), 8), SFXP(SBV(25649, 16), 8)), SFXP(SBV(13196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25215, 16), 8), UFXP(BV(28932, 16), 8)), UFXP(BV(54147, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6534, 16), 8), SFXP(SBV(-5093, 16), 8)), SFXP(SBV(-1441, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11208, 16), 8), UFXP(BV(24482, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3492, 16), 8), SFXP(SBV(-6350, 16), 8)), SFXP(SBV(9842, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33337, 16), 8), UFXP(BV(9144, 16), 8)), UFXP(BV(24193, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28303, 16), 8), UFXP(BV(19177, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62448, 16), 8), UFXP(BV(18967, 16), 8)), UFXP(BV(15879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27880, 16), 8), SFXP(SBV(17422, 16), 8)), SFXP(SBV(-10458, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27381, 16), 8), SFXP(SBV(-8760, 16), 8)), SFXP(SBV(18621, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12934, 16), 8), SFXP(SBV(13871, 16), 8)), SFXP(SBV(26805, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11926, 16), 8), SFXP(SBV(19563, 16), 8)), SFXP(SBV(7637, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7512, 16), 8), SFXP(SBV(-17049, 16), 8)), SFXP(SBV(24006, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(27320, 16), 8), SFXP(SBV(10342, 16), 8)), SFXP(SBV(-10427, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20171, 16), 8), SFXP(SBV(-16021, 16), 8)), SFXP(SBV(17159, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59181, 16), 8), UFXP(BV(61601, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42285, 16), 8), UFXP(BV(7110, 16), 8)), UFXP(BV(35175, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32992, 16), 8), UFXP(BV(40700, 16), 8)), UFXP(BV(8156, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25914, 16), 8), SFXP(SBV(9032, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32233, 16), 8), UFXP(BV(59351, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64246, 16), 8), UFXP(BV(56504, 16), 8)), UFXP(BV(7742, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18220, 16), 8), SFXP(SBV(16258, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44900, 16), 8), UFXP(BV(41921, 16), 8)), UFXP(BV(2979, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16437, 16), 8), UFXP(BV(3934, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18546, 16), 8), UFXP(BV(36334, 16), 8)), UFXP(BV(47748, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1575, 16), 8), SFXP(SBV(19067, 16), 8)), SFXP(SBV(-17492, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2792, 16), 8), SFXP(SBV(-2681, 16), 8)), SFXP(SBV(29240, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47353, 16), 8), UFXP(BV(45214, 16), 8)), UFXP(BV(27031, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52005, 16), 8), UFXP(BV(37254, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17670, 16), 8), UFXP(BV(19597, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51120, 16), 8), UFXP(BV(52245, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19101, 16), 8), SFXP(SBV(25817, 16), 8)), SFXP(SBV(20618, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30264, 16), 8), SFXP(SBV(-31115, 16), 8)), SFXP(SBV(-8361, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45925, 16), 8), UFXP(BV(19460, 16), 8)), UFXP(BV(26465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29205, 16), 8), SFXP(SBV(-3181, 16), 8)), SFXP(SBV(-30321, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6292, 16), 8), UFXP(BV(27343, 16), 8)), UFXP(BV(33635, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59813, 16), 8), UFXP(BV(56635, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10756, 16), 8), SFXP(SBV(-11477, 16), 8)), SFXP(SBV(-23462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33988, 16), 8), UFXP(BV(31290, 16), 8)), UFXP(BV(2698, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1068, 16), 8), UFXP(BV(14169, 16), 8)), UFXP(BV(15237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28008, 16), 8), SFXP(SBV(8675, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31896, 16), 8), SFXP(SBV(13255, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11374, 16), 8), SFXP(SBV(19987, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57080, 16), 8), UFXP(BV(18532, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23323, 16), 8), SFXP(SBV(24985, 16), 8)), SFXP(SBV(-17489, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24402, 16), 8), SFXP(SBV(11332, 16), 8)), SFXP(SBV(-13070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6357, 16), 8), UFXP(BV(2435, 16), 8)), UFXP(BV(3922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11623, 16), 8), SFXP(SBV(-19373, 16), 8)), SFXP(SBV(27611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58747, 16), 8), UFXP(BV(3196, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1608, 16), 8), SFXP(SBV(-4601, 16), 8)), SFXP(SBV(28900, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24797, 16), 8), UFXP(BV(13859, 16), 8)), UFXP(BV(10938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-17026, 16), 8), SFXP(SBV(15018, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14405, 16), 8), SFXP(SBV(-1794, 16), 8)), SFXP(SBV(-16199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19336, 16), 8), SFXP(SBV(-2168, 16), 8)), SFXP(SBV(21504, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58342, 16), 8), UFXP(BV(61009, 16), 8)), UFXP(BV(62869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14504, 16), 8), SFXP(SBV(16952, 16), 8)), SFXP(SBV(22603, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6645, 16), 8), UFXP(BV(35662, 16), 8)), UFXP(BV(42307, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58885, 16), 8), UFXP(BV(8120, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42183, 16), 8), UFXP(BV(36658, 16), 8)), UFXP(BV(5525, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32075, 16), 8), SFXP(SBV(-5104, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3719, 16), 8), UFXP(BV(48794, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12575, 16), 8), SFXP(SBV(-26759, 16), 8)), SFXP(SBV(-26202, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50049, 16), 8), UFXP(BV(15870, 16), 8)), UFXP(BV(22454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31294, 16), 8), SFXP(SBV(-23349, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15899, 16), 8), SFXP(SBV(-29000, 16), 8)), SFXP(SBV(-20637, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25846, 16), 8), SFXP(SBV(-3525, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13858, 16), 8), UFXP(BV(12336, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2161, 16), 8), SFXP(SBV(-6044, 16), 8)), SFXP(SBV(14516, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25104, 16), 8), SFXP(SBV(-30299, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(29651, 16), 8), UFXP(BV(41054, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31908, 16), 8), UFXP(BV(55846, 16), 8)), UFXP(BV(41598, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26329, 16), 8), SFXP(SBV(932, 16), 8)), SFXP(SBV(27261, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28482, 16), 8), UFXP(BV(1834, 16), 8)), UFXP(BV(26648, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48765, 16), 8), UFXP(BV(63460, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31613, 16), 8), SFXP(SBV(21648, 16), 8)), SFXP(SBV(-9965, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39067, 16), 8), UFXP(BV(23912, 16), 8)), UFXP(BV(15155, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17567, 16), 8), SFXP(SBV(-20838, 16), 8)), SFXP(SBV(11865, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19845, 16), 8), UFXP(BV(60894, 16), 8)), UFXP(BV(15203, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28514, 16), 8), SFXP(SBV(29678, 16), 8)), SFXP(SBV(1164, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11338, 16), 8), UFXP(BV(53860, 16), 8)), UFXP(BV(26112, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58391, 16), 8), UFXP(BV(18608, 16), 8)), UFXP(BV(11463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41040, 16), 8), UFXP(BV(22953, 16), 8)), UFXP(BV(63993, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18403, 16), 8), UFXP(BV(54344, 16), 8)), UFXP(BV(29595, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58350, 16), 8), UFXP(BV(20415, 16), 8)), UFXP(BV(37935, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5576, 16), 8), SFXP(SBV(-6869, 16), 8)), SFXP(SBV(-12445, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12268, 16), 8), SFXP(SBV(6659, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43849, 16), 8), UFXP(BV(3670, 16), 8)), UFXP(BV(47519, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2495, 16), 8), SFXP(SBV(5771, 16), 8)), SFXP(SBV(-9291, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33321, 16), 8), UFXP(BV(15529, 16), 8)), UFXP(BV(55178, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53209, 16), 8), UFXP(BV(11376, 16), 8)), UFXP(BV(41833, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30745, 16), 8), UFXP(BV(58748, 16), 8)), UFXP(BV(37533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20732, 16), 8), SFXP(SBV(-8782, 16), 8)), SFXP(SBV(-9691, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54793, 16), 8), UFXP(BV(63241, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63050, 16), 8), UFXP(BV(17931, 16), 8)), UFXP(BV(45119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7734, 16), 8), UFXP(BV(63502, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53209, 16), 8), UFXP(BV(44800, 16), 8)), UFXP(BV(32473, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30576, 16), 8), SFXP(SBV(5786, 16), 8)), SFXP(SBV(24790, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25106, 16), 8), SFXP(SBV(-18101, 16), 8)), SFXP(SBV(7005, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19076, 16), 8), SFXP(SBV(-23913, 16), 8)), SFXP(SBV(22547, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7868, 16), 8), SFXP(SBV(17717, 16), 8)), SFXP(SBV(25585, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23462, 16), 8), SFXP(SBV(-21666, 16), 8)), SFXP(SBV(-1796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28865, 16), 8), SFXP(SBV(-4857, 16), 8)), SFXP(SBV(-24008, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9536, 16), 8), SFXP(SBV(176, 16), 8)), SFXP(SBV(9360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12236, 16), 8), UFXP(BV(62095, 16), 8)), UFXP(BV(15677, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29233, 16), 8), SFXP(SBV(24045, 16), 8)), SFXP(SBV(5188, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50260, 16), 8), UFXP(BV(16708, 16), 8)), UFXP(BV(33552, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13734, 16), 8), UFXP(BV(60491, 16), 8)), UFXP(BV(8689, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3712, 16), 8), SFXP(SBV(17110, 16), 8)), SFXP(SBV(20822, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55161, 16), 8), UFXP(BV(59587, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15562, 16), 8), SFXP(SBV(25653, 16), 8)), SFXP(SBV(13443, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11540, 16), 8), SFXP(SBV(-9410, 16), 8)), SFXP(SBV(-2130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10559, 16), 8), UFXP(BV(59798, 16), 8)), UFXP(BV(41601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28166, 16), 8), UFXP(BV(64881, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52938, 16), 8), UFXP(BV(13440, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1120, 16), 8), SFXP(SBV(-23833, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10536, 16), 8), UFXP(BV(49010, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25168, 16), 8), UFXP(BV(56565, 16), 8)), UFXP(BV(34139, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25938, 16), 8), UFXP(BV(13629, 16), 8)), UFXP(BV(39567, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23516, 16), 8), SFXP(SBV(-7445, 16), 8)), SFXP(SBV(-28534, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12187, 16), 8), UFXP(BV(20152, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-13720, 16), 8), SFXP(SBV(14510, 16), 8)), SFXP(SBV(8786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36334, 16), 8), UFXP(BV(55785, 16), 8)), UFXP(BV(26583, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4732, 16), 8), SFXP(SBV(-32148, 16), 8)), SFXP(SBV(28656, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9311, 16), 8), SFXP(SBV(-24275, 16), 8)), SFXP(SBV(-14964, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13287, 16), 8), SFXP(SBV(9126, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27927, 16), 8), UFXP(BV(37757, 16), 8)), UFXP(BV(55674, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19157, 16), 8), UFXP(BV(13723, 16), 8)), UFXP(BV(32880, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-364, 16), 8), SFXP(SBV(32585, 16), 8)), SFXP(SBV(32221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56641, 16), 8), UFXP(BV(17812, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47820, 16), 8), UFXP(BV(52447, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23840, 16), 8), SFXP(SBV(-20482, 16), 8)), SFXP(SBV(3358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49917, 16), 8), UFXP(BV(50287, 16), 8)), UFXP(BV(65166, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28736, 16), 8), UFXP(BV(51600, 16), 8)), UFXP(BV(24932, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28031, 16), 8), UFXP(BV(46299, 16), 8)), UFXP(BV(23288, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32992, 16), 8), UFXP(BV(65106, 16), 8)), UFXP(BV(1927, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16084, 16), 8), SFXP(SBV(-30817, 16), 8)), SFXP(SBV(-18635, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17711, 16), 8), SFXP(SBV(22142, 16), 8)), SFXP(SBV(-25683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8820, 16), 8), SFXP(SBV(-30172, 16), 8)), SFXP(SBV(21352, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21569, 16), 8), SFXP(SBV(8878, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18724, 16), 8), SFXP(SBV(24387, 16), 8)), SFXP(SBV(5663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27934, 16), 8), UFXP(BV(2188, 16), 8)), UFXP(BV(42141, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48416, 16), 8), UFXP(BV(48551, 16), 8)), UFXP(BV(7167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24985, 16), 8), SFXP(SBV(-17123, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29547, 16), 8), UFXP(BV(565, 16), 8)), UFXP(BV(28982, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15274, 16), 8), SFXP(SBV(-17539, 16), 8)), SFXP(SBV(32723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27354, 16), 8), SFXP(SBV(8474, 16), 8)), SFXP(SBV(-29708, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17132, 16), 8), SFXP(SBV(30385, 16), 8)), SFXP(SBV(-13253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43666, 16), 8), UFXP(BV(50062, 16), 8)), UFXP(BV(59140, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16409, 16), 8), UFXP(BV(13308, 16), 8)), UFXP(BV(29717, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15213, 16), 8), SFXP(SBV(30336, 16), 8)), SFXP(SBV(15123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6803, 16), 8), SFXP(SBV(19162, 16), 8)), SFXP(SBV(-12359, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16762, 16), 8), SFXP(SBV(-9151, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63786, 16), 8), UFXP(BV(21048, 16), 8)), UFXP(BV(1526, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40012, 16), 8), UFXP(BV(32854, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11019, 16), 8), UFXP(BV(9534, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16900, 16), 8), SFXP(SBV(22942, 16), 8)), SFXP(SBV(-7203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63248, 16), 8), UFXP(BV(46697, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41639, 16), 8), UFXP(BV(36525, 16), 8)), UFXP(BV(12628, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22134, 16), 8), SFXP(SBV(10079, 16), 8)), SFXP(SBV(32213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20442, 16), 8), UFXP(BV(19589, 16), 8)), UFXP(BV(853, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58846, 16), 8), UFXP(BV(25129, 16), 8)), UFXP(BV(33717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28762, 16), 8), UFXP(BV(42798, 16), 8)), UFXP(BV(6024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31838, 16), 8), SFXP(SBV(13477, 16), 8)), SFXP(SBV(20221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36236, 16), 8), UFXP(BV(236, 16), 8)), UFXP(BV(36472, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21224, 16), 8), UFXP(BV(48191, 16), 8)), UFXP(BV(3879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32068, 16), 8), SFXP(SBV(19230, 16), 8)), SFXP(SBV(-12838, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27979, 16), 8), SFXP(SBV(-9007, 16), 8)), SFXP(SBV(18972, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55251, 16), 8), UFXP(BV(48591, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61365, 16), 8), UFXP(BV(53974, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57589, 16), 8), UFXP(BV(47051, 16), 8)), UFXP(BV(39104, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41657, 16), 8), UFXP(BV(63445, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58141, 16), 8), UFXP(BV(12244, 16), 8)), UFXP(BV(4849, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43226, 16), 8), UFXP(BV(11696, 16), 8)), UFXP(BV(8808, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-789, 16), 8), SFXP(SBV(-17876, 16), 8)), SFXP(SBV(-18665, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21644, 16), 8), UFXP(BV(4381, 16), 8)), UFXP(BV(26025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5754, 16), 8), UFXP(BV(4780, 16), 8)), UFXP(BV(974, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6479, 16), 8), SFXP(SBV(8416, 16), 8)), SFXP(SBV(14895, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6380, 16), 8), UFXP(BV(23727, 16), 8)), UFXP(BV(30107, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27745, 16), 8), SFXP(SBV(14811, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(24444, 16), 8), UFXP(BV(14957, 16), 8)), UFXP(BV(51903, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4266, 16), 8), UFXP(BV(2505, 16), 8)), UFXP(BV(1761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14651, 16), 8), SFXP(SBV(-32204, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24777, 16), 8), SFXP(SBV(5765, 16), 8)), SFXP(SBV(30542, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1289, 16), 8), SFXP(SBV(22099, 16), 8)), SFXP(SBV(19801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22859, 16), 8), SFXP(SBV(-25558, 16), 8)), SFXP(SBV(-2699, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51948, 16), 8), UFXP(BV(9826, 16), 8)), UFXP(BV(61774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26588, 16), 8), UFXP(BV(62377, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17995, 16), 8), SFXP(SBV(-27327, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20764, 16), 8), SFXP(SBV(-3583, 16), 8)), SFXP(SBV(24347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5048, 16), 8), UFXP(BV(3362, 16), 8)), UFXP(BV(8410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13379, 16), 8), SFXP(SBV(-1277, 16), 8)), SFXP(SBV(-12102, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2416, 16), 8), UFXP(BV(56457, 16), 8)), UFXP(BV(11495, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17920, 16), 8), SFXP(SBV(-4190, 16), 8)), SFXP(SBV(13730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2273, 16), 8), SFXP(SBV(-15510, 16), 8)), SFXP(SBV(-17783, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39921, 16), 8), UFXP(BV(39730, 16), 8)), UFXP(BV(191, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29319, 16), 8), SFXP(SBV(29273, 16), 8)), SFXP(SBV(-46, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15648, 16), 8), SFXP(SBV(-21332, 16), 8)), SFXP(SBV(5684, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26401, 16), 8), SFXP(SBV(32648, 16), 8)), SFXP(SBV(-24617, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54196, 16), 8), UFXP(BV(23544, 16), 8)), UFXP(BV(3603, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46145, 16), 8), UFXP(BV(36924, 16), 8)), UFXP(BV(9221, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14751, 16), 8), SFXP(SBV(-26539, 16), 8)), SFXP(SBV(11788, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14502, 16), 8), SFXP(SBV(3598, 16), 8)), SFXP(SBV(-7214, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21827, 16), 8), SFXP(SBV(12026, 16), 8)), SFXP(SBV(9801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30063, 16), 8), SFXP(SBV(-14886, 16), 8)), SFXP(SBV(-15177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26328, 16), 8), SFXP(SBV(17613, 16), 8)), SFXP(SBV(8715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20512, 16), 8), SFXP(SBV(-18060, 16), 8)), SFXP(SBV(-2452, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30167, 16), 8), SFXP(SBV(8180, 16), 8)), SFXP(SBV(-19111, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28174, 16), 8), UFXP(BV(32411, 16), 8)), UFXP(BV(28039, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14342, 16), 8), SFXP(SBV(-29867, 16), 8)), SFXP(SBV(-15525, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30895, 16), 8), UFXP(BV(31652, 16), 8)), UFXP(BV(18789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26821, 16), 8), SFXP(SBV(7270, 16), 8)), SFXP(SBV(-24758, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7816, 16), 8), SFXP(SBV(-31688, 16), 8)), SFXP(SBV(23872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40055, 16), 8), UFXP(BV(2869, 16), 8)), UFXP(BV(37186, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24444, 16), 8), SFXP(SBV(-6650, 16), 8)), SFXP(SBV(17794, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6404, 16), 8), SFXP(SBV(26115, 16), 8)), SFXP(SBV(32519, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18849, 16), 8), SFXP(SBV(-2563, 16), 8)), SFXP(SBV(-21412, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57438, 16), 8), UFXP(BV(61080, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30120, 16), 8), UFXP(BV(52026, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57256, 16), 8), UFXP(BV(52707, 16), 8)), UFXP(BV(44427, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1902, 16), 8), UFXP(BV(12463, 16), 8)), UFXP(BV(14365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30094, 16), 8), SFXP(SBV(17329, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58337, 16), 8), UFXP(BV(64099, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23312, 16), 8), UFXP(BV(35178, 16), 8)), UFXP(BV(53670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14378, 16), 8), SFXP(SBV(-4518, 16), 8)), SFXP(SBV(-18896, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5950, 16), 8), SFXP(SBV(14402, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12309, 16), 8), SFXP(SBV(-1862, 16), 8)), SFXP(SBV(10447, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16454, 16), 8), UFXP(BV(29097, 16), 8)), UFXP(BV(45551, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3502, 16), 8), SFXP(SBV(1925, 16), 8)), SFXP(SBV(5427, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43382, 16), 8), UFXP(BV(31171, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(32415, 16), 8), SFXP(SBV(-25974, 16), 8)), SFXP(SBV(-12056, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21971, 16), 8), SFXP(SBV(2723, 16), 8)), SFXP(SBV(-28444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31655, 16), 8), UFXP(BV(18343, 16), 8)), UFXP(BV(39930, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33362, 16), 8), UFXP(BV(20585, 16), 8)), UFXP(BV(53947, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24370, 16), 8), UFXP(BV(45309, 16), 8)), UFXP(BV(4143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58695, 16), 8), UFXP(BV(37272, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18287, 16), 8), SFXP(SBV(10348, 16), 8)), SFXP(SBV(28635, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2124, 16), 8), UFXP(BV(21532, 16), 8)), UFXP(BV(23656, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12587, 16), 8), UFXP(BV(61561, 16), 8)), UFXP(BV(16562, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48694, 16), 8), UFXP(BV(28636, 16), 8)), UFXP(BV(20058, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9989, 16), 8), UFXP(BV(847, 16), 8)), UFXP(BV(33049, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22613, 16), 8), UFXP(BV(8166, 16), 8)), UFXP(BV(14447, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4755, 16), 8), SFXP(SBV(8462, 16), 8)), SFXP(SBV(13217, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18438, 16), 8), SFXP(SBV(16597, 16), 8)), SFXP(SBV(-1841, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19319, 16), 8), SFXP(SBV(23212, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8217, 16), 8), SFXP(SBV(14309, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16235, 16), 8), SFXP(SBV(32671, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63041, 16), 8), UFXP(BV(18225, 16), 8)), UFXP(BV(15730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-768, 16), 8), SFXP(SBV(7602, 16), 8)), SFXP(SBV(6834, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24195, 16), 8), UFXP(BV(64989, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7588, 16), 8), UFXP(BV(613, 16), 8)), UFXP(BV(18170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16521, 16), 8), SFXP(SBV(11673, 16), 8)), SFXP(SBV(-28194, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30238, 16), 8), UFXP(BV(1461, 16), 8)), UFXP(BV(41497, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12003, 16), 8), UFXP(BV(32599, 16), 8)), UFXP(BV(44940, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10493, 16), 8), SFXP(SBV(13921, 16), 8)), SFXP(SBV(24414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43419, 16), 8), UFXP(BV(62062, 16), 8)), UFXP(BV(39945, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(805, 16), 8), UFXP(BV(49061, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34670, 16), 8), UFXP(BV(10641, 16), 8)), UFXP(BV(45311, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12178, 16), 8), SFXP(SBV(12862, 16), 8)), SFXP(SBV(-25040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21145, 16), 8), UFXP(BV(13334, 16), 8)), UFXP(BV(7811, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33516, 16), 8), UFXP(BV(38609, 16), 8)), UFXP(BV(6589, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19469, 16), 8), UFXP(BV(17479, 16), 8)), UFXP(BV(36948, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7965, 16), 8), UFXP(BV(46624, 16), 8)), UFXP(BV(26877, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(15756, 16), 8), SFXP(SBV(-18685, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27328, 16), 8), UFXP(BV(38894, 16), 8)), UFXP(BV(53970, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(20723, 16), 8), UFXP(BV(8590, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17230, 16), 8), SFXP(SBV(29079, 16), 8)), SFXP(SBV(-8926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3369, 16), 8), UFXP(BV(5200, 16), 8)), UFXP(BV(2897, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60588, 16), 8), UFXP(BV(52864, 16), 8)), UFXP(BV(7724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3288, 16), 8), SFXP(SBV(26102, 16), 8)), SFXP(SBV(-29390, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51, 16), 8), UFXP(BV(42449, 16), 8)), UFXP(BV(8457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58720, 16), 8), UFXP(BV(32003, 16), 8)), UFXP(BV(26717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(29126, 16), 8), UFXP(BV(3648, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28957, 16), 8), SFXP(SBV(-8598, 16), 8)), SFXP(SBV(27981, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32175, 16), 8), SFXP(SBV(-29228, 16), 8)), SFXP(SBV(-4133, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32682, 16), 8), UFXP(BV(31284, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62297, 16), 8), UFXP(BV(41678, 16), 8)), UFXP(BV(20619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8276, 16), 8), SFXP(SBV(-16143, 16), 8)), SFXP(SBV(7867, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42637, 16), 8), UFXP(BV(3844, 16), 8)), UFXP(BV(50397, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34535, 16), 8), UFXP(BV(24553, 16), 8)), UFXP(BV(35457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28693, 16), 8), UFXP(BV(40087, 16), 8)), UFXP(BV(54142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30462, 16), 8), UFXP(BV(29541, 16), 8)), UFXP(BV(41740, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20607, 16), 8), SFXP(SBV(666, 16), 8)), SFXP(SBV(21273, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5306, 16), 8), SFXP(SBV(11725, 16), 8)), SFXP(SBV(17031, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16947, 16), 8), UFXP(BV(20587, 16), 8)), UFXP(BV(37534, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25263, 16), 8), UFXP(BV(9215, 16), 8)), UFXP(BV(16048, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10741, 16), 8), UFXP(BV(41747, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14979, 16), 8), SFXP(SBV(27795, 16), 8)), SFXP(SBV(-12067, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47597, 16), 8), UFXP(BV(24436, 16), 8)), UFXP(BV(21298, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18824, 16), 8), SFXP(SBV(290, 16), 8)), SFXP(SBV(-19114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19255, 16), 8), SFXP(SBV(28471, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29032, 16), 8), SFXP(SBV(8929, 16), 8)), SFXP(SBV(27575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30088, 16), 8), SFXP(SBV(-12769, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27856, 16), 8), SFXP(SBV(31836, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42968, 16), 8), UFXP(BV(1480, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26788, 16), 8), SFXP(SBV(-8990, 16), 8)), SFXP(SBV(-23215, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61179, 16), 8), UFXP(BV(28769, 16), 8)), UFXP(BV(32410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8685, 16), 8), SFXP(SBV(-5278, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12915, 16), 8), UFXP(BV(57575, 16), 8)), UFXP(BV(20876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38322, 16), 8), UFXP(BV(5705, 16), 8)), UFXP(BV(44027, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29158, 16), 8), UFXP(BV(14815, 16), 8)), UFXP(BV(49005, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7335, 16), 8), SFXP(SBV(-30417, 16), 8)), SFXP(SBV(-23082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36837, 16), 8), UFXP(BV(10440, 16), 8)), UFXP(BV(47277, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3127, 16), 8), SFXP(SBV(-7585, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9764, 16), 8), UFXP(BV(7415, 16), 8)), UFXP(BV(17179, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30025, 16), 8), SFXP(SBV(27976, 16), 8)), SFXP(SBV(-7535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26392, 16), 8), SFXP(SBV(-21136, 16), 8)), SFXP(SBV(-5256, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1305, 16), 8), SFXP(SBV(-19273, 16), 8)), SFXP(SBV(32712, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17887, 16), 8), SFXP(SBV(30482, 16), 8)), SFXP(SBV(17167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3759, 16), 8), SFXP(SBV(-26147, 16), 8)), SFXP(SBV(-29906, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8894, 16), 8), SFXP(SBV(6184, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48871, 16), 8), UFXP(BV(14571, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9198, 16), 8), SFXP(SBV(7609, 16), 8)), SFXP(SBV(16807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28239, 16), 8), SFXP(SBV(17635, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41697, 16), 8), UFXP(BV(23529, 16), 8)), UFXP(BV(65226, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-23442, 16), 8), SFXP(SBV(-15425, 16), 8)), SFXP(SBV(-29320, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4359, 16), 8), SFXP(SBV(30411, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6551, 16), 8), SFXP(SBV(648, 16), 8)), SFXP(SBV(-5903, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3893, 16), 8), SFXP(SBV(23014, 16), 8)), SFXP(SBV(-19121, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45856, 16), 8), UFXP(BV(51401, 16), 8)), UFXP(BV(32164, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4319, 16), 8), SFXP(SBV(-28826, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24067, 16), 8), SFXP(SBV(-16594, 16), 8)), SFXP(SBV(7473, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42392, 16), 8), UFXP(BV(43350, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-26109, 16), 8), SFXP(SBV(-10815, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50588, 16), 8), UFXP(BV(43879, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12851, 16), 8), SFXP(SBV(-23952, 16), 8)), SFXP(SBV(-28733, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20033, 16), 8), SFXP(SBV(-9225, 16), 8)), SFXP(SBV(-29258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10453, 16), 8), SFXP(SBV(-28004, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43402, 16), 8), UFXP(BV(47787, 16), 8)), UFXP(BV(61151, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48129, 16), 8), UFXP(BV(33068, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10308, 16), 8), SFXP(SBV(-28304, 16), 8)), SFXP(SBV(17996, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23663, 16), 8), SFXP(SBV(-21958, 16), 8)), SFXP(SBV(-1705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39234, 16), 8), UFXP(BV(63048, 16), 8)), UFXP(BV(36746, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2762, 16), 8), SFXP(SBV(11994, 16), 8)), SFXP(SBV(9232, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16049, 16), 8), SFXP(SBV(11021, 16), 8)), SFXP(SBV(5028, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10942, 16), 8), UFXP(BV(39968, 16), 8)), UFXP(BV(4384, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42518, 16), 8), UFXP(BV(41551, 16), 8)), UFXP(BV(18533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29649, 16), 8), SFXP(SBV(29832, 16), 8)), SFXP(SBV(18373, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30146, 16), 8), UFXP(BV(52497, 16), 8)), UFXP(BV(43185, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4032, 16), 8), UFXP(BV(19372, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3667, 16), 8), SFXP(SBV(10373, 16), 8)), SFXP(SBV(14040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20743, 16), 8), UFXP(BV(12611, 16), 8)), UFXP(BV(8132, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9108, 16), 8), SFXP(SBV(29474, 16), 8)), SFXP(SBV(-26954, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24746, 16), 8), SFXP(SBV(-29361, 16), 8)), SFXP(SBV(-11429, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25256, 16), 8), SFXP(SBV(5295, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11612, 16), 8), SFXP(SBV(4238, 16), 8)), SFXP(SBV(-4374, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35389, 16), 8), UFXP(BV(61507, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18813, 16), 8), SFXP(SBV(28512, 16), 8)), SFXP(SBV(-9699, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55399, 16), 8), UFXP(BV(51470, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36834, 16), 8), UFXP(BV(50731, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21334, 16), 8), UFXP(BV(16946, 16), 8)), UFXP(BV(4388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20592, 16), 8), SFXP(SBV(21621, 16), 8)), SFXP(SBV(-23323, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13055, 16), 8), UFXP(BV(58372, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60364, 16), 8), UFXP(BV(54413, 16), 8)), UFXP(BV(50896, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23383, 16), 8), UFXP(BV(37761, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52881, 16), 8), UFXP(BV(11501, 16), 8)), UFXP(BV(64382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-3126, 16), 8), SFXP(SBV(5797, 16), 8)), SFXP(SBV(-5250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22594, 16), 8), UFXP(BV(23024, 16), 8)), UFXP(BV(432, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43382, 16), 8), UFXP(BV(40657, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31133, 16), 8), SFXP(SBV(-26187, 16), 8)), SFXP(SBV(-26578, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17509, 16), 8), UFXP(BV(18298, 16), 8)), UFXP(BV(64747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46356, 16), 8), UFXP(BV(51131, 16), 8)), UFXP(BV(18130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52319, 16), 8), UFXP(BV(35783, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(987, 16), 8), SFXP(SBV(17251, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3291, 16), 8), UFXP(BV(8910, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18578, 16), 8), SFXP(SBV(10332, 16), 8)), SFXP(SBV(-8246, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26953, 16), 8), SFXP(SBV(4289, 16), 8)), SFXP(SBV(-7183, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9151, 16), 8), SFXP(SBV(-21302, 16), 8)), SFXP(SBV(-30453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17495, 16), 8), SFXP(SBV(-22472, 16), 8)), SFXP(SBV(25569, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9366, 16), 8), SFXP(SBV(18450, 16), 8)), SFXP(SBV(-27816, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51018, 16), 8), UFXP(BV(3347, 16), 8)), UFXP(BV(54365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10978, 16), 8), SFXP(SBV(4972, 16), 8)), SFXP(SBV(15950, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3079, 16), 8), UFXP(BV(1910, 16), 8)), UFXP(BV(1169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63454, 16), 8), UFXP(BV(31434, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11797, 16), 8), SFXP(SBV(18168, 16), 8)), SFXP(SBV(6371, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42565, 16), 8), UFXP(BV(19034, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29111, 16), 8), SFXP(SBV(13950, 16), 8)), SFXP(SBV(13458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15989, 16), 8), UFXP(BV(35061, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53514, 16), 8), UFXP(BV(40576, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17577, 16), 8), SFXP(SBV(-14098, 16), 8)), SFXP(SBV(3479, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54503, 16), 8), UFXP(BV(9057, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2729, 16), 8), SFXP(SBV(12324, 16), 8)), SFXP(SBV(15053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63688, 16), 8), UFXP(BV(30937, 16), 8)), UFXP(BV(28833, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53302, 16), 8), UFXP(BV(640, 16), 8)), UFXP(BV(53942, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13005, 16), 8), UFXP(BV(21873, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60602, 16), 8), UFXP(BV(18231, 16), 8)), UFXP(BV(55921, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3956, 16), 8), SFXP(SBV(25191, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(26289, 16), 8), UFXP(BV(24277, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12790, 16), 8), UFXP(BV(33415, 16), 8)), UFXP(BV(46205, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2899, 16), 8), SFXP(SBV(31914, 16), 8)), SFXP(SBV(30723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12264, 16), 8), SFXP(SBV(22208, 16), 8)), SFXP(SBV(-31064, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56984, 16), 8), UFXP(BV(4308, 16), 8)), UFXP(BV(52676, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28203, 16), 8), SFXP(SBV(11781, 16), 8)), SFXP(SBV(-16422, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4424, 16), 8), SFXP(SBV(-18334, 16), 8)), SFXP(SBV(22758, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27455, 16), 8), SFXP(SBV(-26230, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38228, 16), 8), UFXP(BV(15187, 16), 8)), UFXP(BV(53415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31039, 16), 8), SFXP(SBV(16652, 16), 8)), SFXP(SBV(14387, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4360, 16), 8), SFXP(SBV(21934, 16), 8)), SFXP(SBV(-17574, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17725, 16), 8), SFXP(SBV(2162, 16), 8)), SFXP(SBV(-15563, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59320, 16), 8), UFXP(BV(13340, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17201, 16), 8), UFXP(BV(34008, 16), 8)), UFXP(BV(51209, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58747, 16), 8), UFXP(BV(42078, 16), 8)), UFXP(BV(35289, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14710, 16), 8), SFXP(SBV(15776, 16), 8)), SFXP(SBV(30486, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27560, 16), 8), SFXP(SBV(25910, 16), 8)), SFXP(SBV(28674, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39962, 16), 8), UFXP(BV(8480, 16), 8)), UFXP(BV(31482, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2933, 16), 8), SFXP(SBV(-21536, 16), 8)), SFXP(SBV(-24469, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65508, 16), 8), UFXP(BV(36135, 16), 8)), UFXP(BV(29373, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32522, 16), 8), SFXP(SBV(-22306, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25761, 16), 8), UFXP(BV(36124, 16), 8)), UFXP(BV(30638, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32459, 16), 8), SFXP(SBV(-22831, 16), 8)), SFXP(SBV(11226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21128, 16), 8), UFXP(BV(60236, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8145, 16), 8), SFXP(SBV(-10443, 16), 8)), SFXP(SBV(18588, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29750, 16), 8), SFXP(SBV(1016, 16), 8)), SFXP(SBV(30766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21327, 16), 8), UFXP(BV(64949, 16), 8)), UFXP(BV(36858, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44971, 16), 8), UFXP(BV(51404, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60778, 16), 8), UFXP(BV(59557, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(20303, 16), 8), SFXP(SBV(-26612, 16), 8)), SFXP(SBV(-13408, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24662, 16), 8), SFXP(SBV(5381, 16), 8)), SFXP(SBV(-19281, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4119, 16), 8), UFXP(BV(27924, 16), 8)), UFXP(BV(41731, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29735, 16), 8), SFXP(SBV(8860, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6371, 16), 8), SFXP(SBV(18183, 16), 8)), SFXP(SBV(-11812, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1607, 16), 8), UFXP(BV(26959, 16), 8)), UFXP(BV(28566, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24734, 16), 8), SFXP(SBV(-3782, 16), 8)), SFXP(SBV(-27810, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31670, 16), 8), UFXP(BV(23710, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12483, 16), 8), UFXP(BV(30242, 16), 8)), UFXP(BV(42725, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14909, 16), 8), SFXP(SBV(-16858, 16), 8)), SFXP(SBV(31767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5007, 16), 8), SFXP(SBV(-3939, 16), 8)), SFXP(SBV(-1068, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29538, 16), 8), SFXP(SBV(-12980, 16), 8)), SFXP(SBV(9659, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11448, 16), 8), SFXP(SBV(30172, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27183, 16), 8), UFXP(BV(60603, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16574, 16), 8), SFXP(SBV(-19053, 16), 8)), SFXP(SBV(2479, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2148, 16), 8), SFXP(SBV(-10745, 16), 8)), SFXP(SBV(-8597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64335, 16), 8), UFXP(BV(14148, 16), 8)), UFXP(BV(50187, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24568, 16), 8), SFXP(SBV(-17047, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19914, 16), 8), SFXP(SBV(3096, 16), 8)), SFXP(SBV(-23010, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33273, 16), 8), UFXP(BV(17004, 16), 8)), UFXP(BV(16269, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18031, 16), 8), SFXP(SBV(-17315, 16), 8)), SFXP(SBV(30190, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25971, 16), 8), SFXP(SBV(-25424, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34469, 16), 8), UFXP(BV(14993, 16), 8)), UFXP(BV(52645, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-23627, 16), 8), SFXP(SBV(2358, 16), 8)), SFXP(SBV(-21019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28057, 16), 8), SFXP(SBV(-7878, 16), 8)), SFXP(SBV(29601, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13871, 16), 8), SFXP(SBV(-31050, 16), 8)), SFXP(SBV(17179, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28690, 16), 8), SFXP(SBV(-26071, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13900, 16), 8), UFXP(BV(50958, 16), 8)), UFXP(BV(28478, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14501, 16), 8), UFXP(BV(44907, 16), 8)), UFXP(BV(35130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62531, 16), 8), UFXP(BV(31932, 16), 8)), UFXP(BV(28927, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33005, 16), 8), UFXP(BV(44023, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55724, 16), 8), UFXP(BV(26356, 16), 8)), UFXP(BV(29368, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27157, 16), 8), SFXP(SBV(14771, 16), 8)), SFXP(SBV(-5926, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4604, 16), 8), SFXP(SBV(-32196, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19777, 16), 8), SFXP(SBV(11629, 16), 8)), SFXP(SBV(8148, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15049, 16), 8), SFXP(SBV(15978, 16), 8)), SFXP(SBV(-21765, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9275, 16), 8), UFXP(BV(57620, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9852, 16), 8), SFXP(SBV(-15398, 16), 8)), SFXP(SBV(25250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10508, 16), 8), UFXP(BV(65255, 16), 8)), UFXP(BV(10227, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5585, 16), 8), SFXP(SBV(12837, 16), 8)), SFXP(SBV(-18422, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34874, 16), 8), UFXP(BV(38953, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3612, 16), 8), UFXP(BV(3931, 16), 8)), UFXP(BV(7543, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40070, 16), 8), UFXP(BV(26924, 16), 8)), UFXP(BV(13146, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36988, 16), 8), UFXP(BV(45395, 16), 8)), UFXP(BV(57129, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28715, 16), 8), SFXP(SBV(-186, 16), 8)), SFXP(SBV(-20863, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11711, 16), 8), SFXP(SBV(3925, 16), 8)), SFXP(SBV(17054, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12341, 16), 8), SFXP(SBV(-7641, 16), 8)), SFXP(SBV(19982, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7767, 16), 8), SFXP(SBV(28829, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4845, 16), 8), UFXP(BV(46902, 16), 8)), UFXP(BV(23479, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16263, 16), 8), UFXP(BV(20761, 16), 8)), UFXP(BV(8171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21619, 16), 8), SFXP(SBV(-19400, 16), 8)), SFXP(SBV(-2219, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9773, 16), 8), SFXP(SBV(-23930, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60629, 16), 8), UFXP(BV(5904, 16), 8)), UFXP(BV(997, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37935, 16), 8), UFXP(BV(62446, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15102, 16), 8), SFXP(SBV(1230, 16), 8)), SFXP(SBV(16332, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31891, 16), 8), SFXP(SBV(-12106, 16), 8)), SFXP(SBV(-21539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38219, 16), 8), UFXP(BV(54435, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33147, 16), 8), UFXP(BV(25094, 16), 8)), UFXP(BV(8053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28082, 16), 8), UFXP(BV(23468, 16), 8)), UFXP(BV(4614, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26209, 16), 8), SFXP(SBV(8212, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1053, 16), 8), SFXP(SBV(30950, 16), 8)), SFXP(SBV(-3766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27860, 16), 8), UFXP(BV(25259, 16), 8)), UFXP(BV(2601, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31154, 16), 8), SFXP(SBV(254, 16), 8)), SFXP(SBV(30911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18162, 16), 8), SFXP(SBV(689, 16), 8)), SFXP(SBV(-16654, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17719, 16), 8), SFXP(SBV(27101, 16), 8)), SFXP(SBV(-24753, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8696, 16), 8), UFXP(BV(37013, 16), 8)), UFXP(BV(37219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(623, 16), 8), UFXP(BV(13245, 16), 8)), UFXP(BV(32233, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9919, 16), 8), SFXP(SBV(-2550, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20706, 16), 8), UFXP(BV(16096, 16), 8)), UFXP(BV(36802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8128, 16), 8), SFXP(SBV(13482, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1502, 16), 8), SFXP(SBV(-17739, 16), 8)), SFXP(SBV(16237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18071, 16), 8), SFXP(SBV(-14580, 16), 8)), SFXP(SBV(32651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4940, 16), 8), SFXP(SBV(910, 16), 8)), SFXP(SBV(-5850, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51718, 16), 8), UFXP(BV(27525, 16), 8)), UFXP(BV(24193, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60551, 16), 8), UFXP(BV(16794, 16), 8)), UFXP(BV(11809, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58798, 16), 8), UFXP(BV(22780, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12223, 16), 8), SFXP(SBV(-17343, 16), 8)), SFXP(SBV(29566, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15292, 16), 8), SFXP(SBV(-8719, 16), 8)), SFXP(SBV(24011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30566, 16), 8), SFXP(SBV(15178, 16), 8)), SFXP(SBV(15388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10945, 16), 8), SFXP(SBV(-12060, 16), 8)), SFXP(SBV(1115, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12481, 16), 8), UFXP(BV(3901, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16256, 16), 8), SFXP(SBV(11781, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3847, 16), 8), SFXP(SBV(-24179, 16), 8)), SFXP(SBV(-20332, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24772, 16), 8), SFXP(SBV(30014, 16), 8)), SFXP(SBV(5242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56748, 16), 8), UFXP(BV(65527, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41130, 16), 8), UFXP(BV(20550, 16), 8)), UFXP(BV(61680, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54768, 16), 8), UFXP(BV(38119, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22194, 16), 8), SFXP(SBV(17802, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15032, 16), 8), SFXP(SBV(22460, 16), 8)), SFXP(SBV(-7428, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4354, 16), 8), UFXP(BV(48586, 16), 8)), UFXP(BV(52940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24211, 16), 8), UFXP(BV(7563, 16), 8)), UFXP(BV(16648, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36943, 16), 8), UFXP(BV(45713, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28036, 16), 8), SFXP(SBV(5871, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61505, 16), 8), UFXP(BV(32764, 16), 8)), UFXP(BV(7358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52967, 16), 8), UFXP(BV(61225, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35173, 16), 8), UFXP(BV(1812, 16), 8)), UFXP(BV(33361, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33425, 16), 8), UFXP(BV(14607, 16), 8)), UFXP(BV(18818, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60793, 16), 8), UFXP(BV(24179, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50076, 16), 8), UFXP(BV(29064, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13890, 16), 8), SFXP(SBV(-9502, 16), 8)), SFXP(SBV(-4388, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58215, 16), 8), UFXP(BV(35610, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29126, 16), 8), UFXP(BV(45100, 16), 8)), UFXP(BV(49562, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23688, 16), 8), UFXP(BV(21974, 16), 8)), UFXP(BV(45662, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4150, 16), 8), SFXP(SBV(10030, 16), 8)), SFXP(SBV(31523, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9869, 16), 8), UFXP(BV(20251, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10742, 16), 8), SFXP(SBV(-21668, 16), 8)), SFXP(SBV(-8294, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28436, 16), 8), UFXP(BV(42389, 16), 8)), UFXP(BV(5289, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7914, 16), 8), SFXP(SBV(-11611, 16), 8)), SFXP(SBV(3697, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20322, 16), 8), UFXP(BV(44873, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-3884, 16), 8), SFXP(SBV(25664, 16), 8)), SFXP(SBV(3845, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37990, 16), 8), UFXP(BV(15691, 16), 8)), UFXP(BV(22299, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32207, 16), 8), UFXP(BV(38206, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12215, 16), 8), UFXP(BV(36983, 16), 8)), UFXP(BV(49198, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64230, 16), 8), UFXP(BV(50125, 16), 8)), UFXP(BV(48819, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1554, 16), 8), SFXP(SBV(4402, 16), 8)), SFXP(SBV(2848, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36197, 16), 8), UFXP(BV(34491, 16), 8)), UFXP(BV(1706, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10501, 16), 8), SFXP(SBV(-18070, 16), 8)), SFXP(SBV(7569, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39724, 16), 8), UFXP(BV(21647, 16), 8)), UFXP(BV(18077, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60216, 16), 8), UFXP(BV(27257, 16), 8)), UFXP(BV(21937, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57823, 16), 8), UFXP(BV(39143, 16), 8)), UFXP(BV(31430, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-971, 16), 8), SFXP(SBV(-28658, 16), 8)), SFXP(SBV(-29629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24074, 16), 8), UFXP(BV(42374, 16), 8)), UFXP(BV(52652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29642, 16), 8), SFXP(SBV(10261, 16), 8)), SFXP(SBV(19381, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28143, 16), 8), SFXP(SBV(-10387, 16), 8)), SFXP(SBV(-17756, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51496, 16), 8), UFXP(BV(11738, 16), 8)), UFXP(BV(1876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2896, 16), 8), SFXP(SBV(28659, 16), 8)), SFXP(SBV(-25763, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53772, 16), 8), UFXP(BV(60041, 16), 8)), UFXP(BV(28513, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8428, 16), 8), SFXP(SBV(30814, 16), 8)), SFXP(SBV(-26294, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47585, 16), 8), UFXP(BV(46257, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53022, 16), 8), UFXP(BV(8447, 16), 8)), UFXP(BV(44575, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24965, 16), 8), UFXP(BV(45993, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21382, 16), 8), UFXP(BV(43686, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8408, 16), 8), UFXP(BV(44257, 16), 8)), UFXP(BV(29687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49344, 16), 8), UFXP(BV(1575, 16), 8)), UFXP(BV(47769, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3195, 16), 8), UFXP(BV(4115, 16), 8)), UFXP(BV(51357, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45040, 16), 8), UFXP(BV(498, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36450, 16), 8), UFXP(BV(46310, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(11511, 16), 8), SFXP(SBV(-8988, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24980, 16), 8), SFXP(SBV(-10226, 16), 8)), SFXP(SBV(30330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14887, 16), 8), UFXP(BV(57218, 16), 8)), UFXP(BV(6569, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28252, 16), 8), UFXP(BV(32293, 16), 8)), UFXP(BV(60545, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24936, 16), 8), SFXP(SBV(31896, 16), 8)), SFXP(SBV(6960, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40432, 16), 8), UFXP(BV(63926, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19451, 16), 8), UFXP(BV(30151, 16), 8)), UFXP(BV(54836, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6911, 16), 8), SFXP(SBV(30826, 16), 8)), SFXP(SBV(-19786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37038, 16), 8), UFXP(BV(13202, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4102, 16), 8), SFXP(SBV(-14122, 16), 8)), SFXP(SBV(-10020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10216, 16), 8), SFXP(SBV(21171, 16), 8)), SFXP(SBV(-10955, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1283, 16), 8), UFXP(BV(41211, 16), 8)), UFXP(BV(25608, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34621, 16), 8), UFXP(BV(48689, 16), 8)), UFXP(BV(31017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9441, 16), 8), SFXP(SBV(19637, 16), 8)), SFXP(SBV(-3296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14736, 16), 8), SFXP(SBV(20033, 16), 8)), SFXP(SBV(5297, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16494, 16), 8), UFXP(BV(44856, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(4680, 16), 8), SFXP(SBV(-1819, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8631, 16), 8), SFXP(SBV(16278, 16), 8)), SFXP(SBV(-24523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14802, 16), 8), SFXP(SBV(-3552, 16), 8)), SFXP(SBV(-8770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14316, 16), 8), SFXP(SBV(-16641, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3576, 16), 8), SFXP(SBV(-739, 16), 8)), SFXP(SBV(-10322, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23147, 16), 8), SFXP(SBV(17752, 16), 8)), SFXP(SBV(32236, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44592, 16), 8), UFXP(BV(19353, 16), 8)), UFXP(BV(25239, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4153, 16), 8), UFXP(BV(31181, 16), 8)), UFXP(BV(35334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41046, 16), 8), UFXP(BV(51290, 16), 8)), UFXP(BV(31630, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56810, 16), 8), UFXP(BV(46446, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31219, 16), 8), SFXP(SBV(-17729, 16), 8)), SFXP(SBV(-651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24800, 16), 8), SFXP(SBV(-17729, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52537, 16), 8), UFXP(BV(33404, 16), 8)), UFXP(BV(19133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30495, 16), 8), SFXP(SBV(24919, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2455, 16), 8), SFXP(SBV(-9004, 16), 8)), SFXP(SBV(11459, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(7487, 16), 8), UFXP(BV(15503, 16), 8)), UFXP(BV(60186, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3506, 16), 8), SFXP(SBV(11298, 16), 8)), SFXP(SBV(-7792, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52573, 16), 8), UFXP(BV(24082, 16), 8)), UFXP(BV(30358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53995, 16), 8), UFXP(BV(4526, 16), 8)), UFXP(BV(58521, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54187, 16), 8), UFXP(BV(5520, 16), 8)), UFXP(BV(59707, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21873, 16), 8), UFXP(BV(517, 16), 8)), UFXP(BV(44174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14199, 16), 8), SFXP(SBV(-2111, 16), 8)), SFXP(SBV(16310, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24747, 16), 8), UFXP(BV(49428, 16), 8)), UFXP(BV(8639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56149, 16), 8), UFXP(BV(48466, 16), 8)), UFXP(BV(13315, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1432, 16), 8), SFXP(SBV(8222, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8531, 16), 8), SFXP(SBV(-22055, 16), 8)), SFXP(SBV(13524, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28573, 16), 8), UFXP(BV(37823, 16), 8)), UFXP(BV(27246, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(278, 16), 8), UFXP(BV(50374, 16), 8)), UFXP(BV(54703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3967, 16), 8), SFXP(SBV(16007, 16), 8)), SFXP(SBV(12040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34055, 16), 8), UFXP(BV(22634, 16), 8)), UFXP(BV(56689, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35375, 16), 8), UFXP(BV(52840, 16), 8)), UFXP(BV(22679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47354, 16), 8), UFXP(BV(55174, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12774, 16), 8), UFXP(BV(45405, 16), 8)), UFXP(BV(37415, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61382, 16), 8), UFXP(BV(42709, 16), 8)), UFXP(BV(38555, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3179, 16), 8), SFXP(SBV(9441, 16), 8)), SFXP(SBV(12620, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24797, 16), 8), SFXP(SBV(-14961, 16), 8)), SFXP(SBV(9836, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-26347, 16), 8), SFXP(SBV(25587, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6170, 16), 8), UFXP(BV(47617, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25337, 16), 8), SFXP(SBV(4107, 16), 8)), SFXP(SBV(13264, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20094, 16), 8), SFXP(SBV(-13581, 16), 8)), SFXP(SBV(6513, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9528, 16), 8), SFXP(SBV(-19702, 16), 8)), SFXP(SBV(29230, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3, 16), 8), UFXP(BV(6093, 16), 8)), UFXP(BV(71, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21247, 16), 8), SFXP(SBV(20267, 16), 8)), SFXP(SBV(-24022, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25283, 16), 8), SFXP(SBV(-11943, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39735, 16), 8), UFXP(BV(55131, 16), 8)), UFXP(BV(37470, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2534, 16), 8), SFXP(SBV(20675, 16), 8)), SFXP(SBV(-8042, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41402, 16), 8), UFXP(BV(38970, 16), 8)), UFXP(BV(11028, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30801, 16), 8), SFXP(SBV(-24464, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20204, 16), 8), SFXP(SBV(2285, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17358, 16), 8), UFXP(BV(14192, 16), 8)), UFXP(BV(31550, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7502, 16), 8), SFXP(SBV(16336, 16), 8)), SFXP(SBV(19969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37415, 16), 8), UFXP(BV(20616, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24721, 16), 8), UFXP(BV(25220, 16), 8)), UFXP(BV(49941, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30330, 16), 8), UFXP(BV(5911, 16), 8)), UFXP(BV(36241, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31171, 16), 8), UFXP(BV(6733, 16), 8)), UFXP(BV(37904, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10709, 16), 8), SFXP(SBV(-13217, 16), 8)), SFXP(SBV(-2508, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15915, 16), 8), UFXP(BV(56570, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43039, 16), 8), UFXP(BV(59365, 16), 8)), UFXP(BV(19037, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57808, 16), 8), UFXP(BV(12399, 16), 8)), UFXP(BV(45409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7011, 16), 8), SFXP(SBV(16954, 16), 8)), SFXP(SBV(9943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6115, 16), 8), UFXP(BV(6811, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32155, 16), 8), UFXP(BV(56745, 16), 8)), UFXP(BV(40946, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26447, 16), 8), SFXP(SBV(4529, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15274, 16), 8), UFXP(BV(29764, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44406, 16), 8), UFXP(BV(48481, 16), 8)), UFXP(BV(27351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16603, 16), 8), UFXP(BV(52834, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18329, 16), 8), SFXP(SBV(9322, 16), 8)), SFXP(SBV(9007, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10893, 16), 8), SFXP(SBV(1441, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19987, 16), 8), UFXP(BV(52195, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30645, 16), 8), UFXP(BV(9605, 16), 8)), UFXP(BV(40250, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19220, 16), 8), SFXP(SBV(26763, 16), 8)), SFXP(SBV(-7543, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27921, 16), 8), SFXP(SBV(-18482, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12644, 16), 8), SFXP(SBV(24252, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24591, 16), 8), UFXP(BV(36044, 16), 8)), UFXP(BV(60635, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6490, 16), 8), SFXP(SBV(1692, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23610, 16), 8), SFXP(SBV(9016, 16), 8)), SFXP(SBV(14594, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28244, 16), 8), SFXP(SBV(18787, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31852, 16), 8), SFXP(SBV(31864, 16), 8)), SFXP(SBV(1820, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64153, 16), 8), UFXP(BV(44253, 16), 8)), UFXP(BV(19900, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18631, 16), 8), UFXP(BV(39392, 16), 8)), UFXP(BV(48798, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23946, 16), 8), UFXP(BV(36766, 16), 8)), UFXP(BV(60712, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7912, 16), 8), SFXP(SBV(7332, 16), 8)), SFXP(SBV(-580, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43312, 16), 8), UFXP(BV(62177, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16238, 16), 8), UFXP(BV(33743, 16), 8)), UFXP(BV(48031, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61348, 16), 8), UFXP(BV(3226, 16), 8)), UFXP(BV(64574, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29716, 16), 8), SFXP(SBV(-25928, 16), 8)), SFXP(SBV(9892, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-229, 16), 8), SFXP(SBV(-2441, 16), 8)), SFXP(SBV(2212, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22360, 16), 8), UFXP(BV(4764, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13214, 16), 8), SFXP(SBV(2639, 16), 8)), SFXP(SBV(-15853, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(20308, 16), 8), UFXP(BV(31185, 16), 8)), UFXP(BV(49015, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10839, 16), 8), SFXP(SBV(-9415, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18017, 16), 8), SFXP(SBV(-23490, 16), 8)), SFXP(SBV(14801, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22740, 16), 8), UFXP(BV(36325, 16), 8)), UFXP(BV(59065, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-3458, 16), 8), SFXP(SBV(-27278, 16), 8)), SFXP(SBV(-24749, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11734, 16), 8), UFXP(BV(36920, 16), 8)), UFXP(BV(53862, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29863, 16), 8), UFXP(BV(65163, 16), 8)), UFXP(BV(30236, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29906, 16), 8), SFXP(SBV(28488, 16), 8)), SFXP(SBV(7142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14923, 16), 8), UFXP(BV(48137, 16), 8)), UFXP(BV(53536, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9071, 16), 8), SFXP(SBV(11066, 16), 8)), SFXP(SBV(20137, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55771, 16), 8), UFXP(BV(41886, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2801, 16), 8), UFXP(BV(44299, 16), 8)), UFXP(BV(47100, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28638, 16), 8), SFXP(SBV(29529, 16), 8)), SFXP(SBV(891, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44764, 16), 8), UFXP(BV(11521, 16), 8)), UFXP(BV(56285, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24135, 16), 8), SFXP(SBV(21448, 16), 8)), SFXP(SBV(9555, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7468, 16), 8), SFXP(SBV(-13234, 16), 8)), SFXP(SBV(-20702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9522, 16), 8), SFXP(SBV(27652, 16), 8)), SFXP(SBV(18130, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20463, 16), 8), SFXP(SBV(-28565, 16), 8)), SFXP(SBV(-8102, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15494, 16), 8), UFXP(BV(28520, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18232, 16), 8), UFXP(BV(2116, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30163, 16), 8), UFXP(BV(449, 16), 8)), UFXP(BV(30612, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28747, 16), 8), SFXP(SBV(-31880, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7871, 16), 8), UFXP(BV(30826, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50980, 16), 8), UFXP(BV(65438, 16), 8)), UFXP(BV(51078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32330, 16), 8), SFXP(SBV(27557, 16), 8)), SFXP(SBV(5649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57942, 16), 8), UFXP(BV(2671, 16), 8)), UFXP(BV(60613, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22398, 16), 8), UFXP(BV(21582, 16), 8)), UFXP(BV(43980, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16173, 16), 8), UFXP(BV(62561, 16), 8)), UFXP(BV(19148, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5658, 16), 8), SFXP(SBV(488, 16), 8)), SFXP(SBV(-6146, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39418, 16), 8), UFXP(BV(15661, 16), 8)), UFXP(BV(55079, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41789, 16), 8), UFXP(BV(39467, 16), 8)), UFXP(BV(15720, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18730, 16), 8), SFXP(SBV(25638, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21358, 16), 8), UFXP(BV(26770, 16), 8)), UFXP(BV(48128, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14975, 16), 8), UFXP(BV(6244, 16), 8)), UFXP(BV(21219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34544, 16), 8), UFXP(BV(27375, 16), 8)), UFXP(BV(7169, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15105, 16), 8), SFXP(SBV(-26411, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15859, 16), 8), SFXP(SBV(-21871, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22291, 16), 8), SFXP(SBV(9913, 16), 8)), SFXP(SBV(-32204, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33660, 16), 8), UFXP(BV(22058, 16), 8)), UFXP(BV(55718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22444, 16), 8), SFXP(SBV(-20652, 16), 8)), SFXP(SBV(1792, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22658, 16), 8), SFXP(SBV(-19139, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18442, 16), 8), SFXP(SBV(24718, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34517, 16), 8), UFXP(BV(51195, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25268, 16), 8), SFXP(SBV(-2045, 16), 8)), SFXP(SBV(-23223, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11127, 16), 8), SFXP(SBV(11364, 16), 8)), SFXP(SBV(22491, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43230, 16), 8), UFXP(BV(16561, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(733, 16), 8), UFXP(BV(4580, 16), 8)), UFXP(BV(5313, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5654, 16), 8), SFXP(SBV(-12900, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15341, 16), 8), SFXP(SBV(-9406, 16), 8)), SFXP(SBV(24747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36032, 16), 8), UFXP(BV(24667, 16), 8)), UFXP(BV(64009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5143, 16), 8), UFXP(BV(25932, 16), 8)), UFXP(BV(62217, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18374, 16), 8), SFXP(SBV(3255, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12895, 16), 8), SFXP(SBV(-6078, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32301, 16), 8), UFXP(BV(40150, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4242, 16), 8), SFXP(SBV(21805, 16), 8)), SFXP(SBV(-31901, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26921, 16), 8), UFXP(BV(63365, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20336, 16), 8), UFXP(BV(61461, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26836, 16), 8), UFXP(BV(6342, 16), 8)), UFXP(BV(9459, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(29331, 16), 8), UFXP(BV(64462, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42698, 16), 8), UFXP(BV(20476, 16), 8)), UFXP(BV(63174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21574, 16), 8), SFXP(SBV(27505, 16), 8)), SFXP(SBV(-5931, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22460, 16), 8), SFXP(SBV(23963, 16), 8)), SFXP(SBV(19113, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12431, 16), 8), SFXP(SBV(28066, 16), 8)), SFXP(SBV(-13410, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(64026, 16), 8), UFXP(BV(11980, 16), 8)), UFXP(BV(47096, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13627, 16), 8), UFXP(BV(61347, 16), 8)), UFXP(BV(54266, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11562, 16), 8), SFXP(SBV(32227, 16), 8)), SFXP(SBV(20665, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14400, 16), 8), SFXP(SBV(11959, 16), 8)), SFXP(SBV(17334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45089, 16), 8), UFXP(BV(19216, 16), 8)), UFXP(BV(25873, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26217, 16), 8), UFXP(BV(4365, 16), 8)), UFXP(BV(30582, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10282, 16), 8), SFXP(SBV(-8831, 16), 8)), SFXP(SBV(-19113, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3347, 16), 8), SFXP(SBV(7995, 16), 8)), SFXP(SBV(-4648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15598, 16), 8), SFXP(SBV(32675, 16), 8)), SFXP(SBV(24797, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30219, 16), 8), SFXP(SBV(-12314, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(47166, 16), 8), UFXP(BV(8673, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61785, 16), 8), UFXP(BV(3499, 16), 8)), UFXP(BV(65284, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16457, 16), 8), SFXP(SBV(14347, 16), 8)), SFXP(SBV(-2110, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32678, 16), 8), SFXP(SBV(18043, 16), 8)), SFXP(SBV(-14635, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6461, 16), 8), UFXP(BV(27311, 16), 8)), UFXP(BV(44686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18902, 16), 8), UFXP(BV(59681, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17365, 16), 8), UFXP(BV(55907, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41235, 16), 8), UFXP(BV(27393, 16), 8)), UFXP(BV(13842, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52306, 16), 8), UFXP(BV(35792, 16), 8)), UFXP(BV(16514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(54697, 16), 8), UFXP(BV(21142, 16), 8)), UFXP(BV(60756, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61817, 16), 8), UFXP(BV(51023, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13131, 16), 8), SFXP(SBV(17348, 16), 8)), SFXP(SBV(-4217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51229, 16), 8), UFXP(BV(54542, 16), 8)), UFXP(BV(40235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41599, 16), 8), UFXP(BV(41249, 16), 8)), UFXP(BV(17312, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21970, 16), 8), SFXP(SBV(-24567, 16), 8)), SFXP(SBV(2597, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7861, 16), 8), SFXP(SBV(-11656, 16), 8)), SFXP(SBV(30242, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3118, 16), 8), SFXP(SBV(-10841, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24051, 16), 8), SFXP(SBV(-28645, 16), 8)), SFXP(SBV(4199, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6673, 16), 8), UFXP(BV(40107, 16), 8)), UFXP(BV(62406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44189, 16), 8), UFXP(BV(26816, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27008, 16), 8), SFXP(SBV(-25595, 16), 8)), SFXP(SBV(-1413, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2697, 16), 8), UFXP(BV(53891, 16), 8)), UFXP(BV(14342, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29782, 16), 8), UFXP(BV(62387, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8083, 16), 8), UFXP(BV(1230, 16), 8)), UFXP(BV(6853, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27936, 16), 8), UFXP(BV(51771, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27021, 16), 8), SFXP(SBV(24435, 16), 8)), SFXP(SBV(-2586, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6247, 16), 8), UFXP(BV(38748, 16), 8)), UFXP(BV(44995, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17207, 16), 8), SFXP(SBV(4544, 16), 8)), SFXP(SBV(-21751, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(47180, 16), 8), UFXP(BV(31433, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16028, 16), 8), SFXP(SBV(-547, 16), 8)), SFXP(SBV(15481, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29686, 16), 8), SFXP(SBV(-22998, 16), 8)), SFXP(SBV(-6688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14665, 16), 8), SFXP(SBV(-11287, 16), 8)), SFXP(SBV(3378, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5734, 16), 8), UFXP(BV(5153, 16), 8)), UFXP(BV(49884, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27209, 16), 8), SFXP(SBV(1741, 16), 8)), SFXP(SBV(25468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61821, 16), 8), UFXP(BV(46432, 16), 8)), UFXP(BV(15389, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3189, 16), 8), UFXP(BV(53937, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9841, 16), 8), UFXP(BV(8483, 16), 8)), UFXP(BV(18324, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13981, 16), 8), UFXP(BV(21391, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3255, 16), 8), SFXP(SBV(-592, 16), 8)), SFXP(SBV(2663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61701, 16), 8), UFXP(BV(52440, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11098, 16), 8), UFXP(BV(32609, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7238, 16), 8), UFXP(BV(42760, 16), 8)), UFXP(BV(49998, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47297, 16), 8), UFXP(BV(37134, 16), 8)), UFXP(BV(44907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18557, 16), 8), SFXP(SBV(-31082, 16), 8)), SFXP(SBV(12525, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30994, 16), 8), SFXP(SBV(8250, 16), 8)), SFXP(SBV(-15790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20028, 16), 8), UFXP(BV(25540, 16), 8)), UFXP(BV(45568, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5222, 16), 8), SFXP(SBV(13008, 16), 8)), SFXP(SBV(-18230, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8772, 16), 8), SFXP(SBV(-18622, 16), 8)), SFXP(SBV(-27394, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2090, 16), 8), SFXP(SBV(-8610, 16), 8)), SFXP(SBV(-10700, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1025, 16), 8), UFXP(BV(64587, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11736, 16), 8), SFXP(SBV(31900, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51827, 16), 8), UFXP(BV(34292, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16380, 16), 8), SFXP(SBV(-280, 16), 8)), SFXP(SBV(16660, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20655, 16), 8), SFXP(SBV(-8535, 16), 8)), SFXP(SBV(-32262, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52613, 16), 8), UFXP(BV(18933, 16), 8)), UFXP(BV(33680, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7499, 16), 8), SFXP(SBV(-17615, 16), 8)), SFXP(SBV(25114, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12412, 16), 8), UFXP(BV(51389, 16), 8)), UFXP(BV(1196, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5691, 16), 8), SFXP(SBV(-15226, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22947, 16), 8), UFXP(BV(32434, 16), 8)), UFXP(BV(23693, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5187, 16), 8), SFXP(SBV(-2308, 16), 8)), SFXP(SBV(-2879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5722, 16), 8), SFXP(SBV(-20823, 16), 8)), SFXP(SBV(26545, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10937, 16), 8), SFXP(SBV(16021, 16), 8)), SFXP(SBV(-5084, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1546, 16), 8), SFXP(SBV(12989, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9850, 16), 8), SFXP(SBV(26419, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-13509, 16), 8), SFXP(SBV(-14156, 16), 8)), SFXP(SBV(26109, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15646, 16), 8), UFXP(BV(18226, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55669, 16), 8), UFXP(BV(29085, 16), 8)), UFXP(BV(19218, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41185, 16), 8), UFXP(BV(57865, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23014, 16), 8), SFXP(SBV(-29244, 16), 8)), SFXP(SBV(-7549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10606, 16), 8), SFXP(SBV(-12142, 16), 8)), SFXP(SBV(22748, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(363, 16), 8), UFXP(BV(20609, 16), 8)), UFXP(BV(29222, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(41204, 16), 8), UFXP(BV(22133, 16), 8)), UFXP(BV(23432, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8385, 16), 8), UFXP(BV(30596, 16), 8)), UFXP(BV(38981, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19196, 16), 8), UFXP(BV(61906, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10052, 16), 8), SFXP(SBV(10502, 16), 8)), SFXP(SBV(-20554, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32093, 16), 8), UFXP(BV(855, 16), 8)), UFXP(BV(31238, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8400, 16), 8), SFXP(SBV(32534, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29661, 16), 8), UFXP(BV(3590, 16), 8)), UFXP(BV(33251, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48461, 16), 8), UFXP(BV(23357, 16), 8)), UFXP(BV(25104, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6226, 16), 8), SFXP(SBV(-21851, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29678, 16), 8), SFXP(SBV(-29146, 16), 8)), SFXP(SBV(532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6223, 16), 8), SFXP(SBV(-25364, 16), 8)), SFXP(SBV(-19141, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59287, 16), 8), UFXP(BV(59464, 16), 8)), UFXP(BV(53215, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8264, 16), 8), SFXP(SBV(-3693, 16), 8)), SFXP(SBV(4571, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48457, 16), 8), UFXP(BV(42386, 16), 8)), UFXP(BV(6071, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(968, 16), 8), SFXP(SBV(-12396, 16), 8)), SFXP(SBV(-11428, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58877, 16), 8), UFXP(BV(33353, 16), 8)), UFXP(BV(3087, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10734, 16), 8), SFXP(SBV(6302, 16), 8)), SFXP(SBV(4432, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23158, 16), 8), SFXP(SBV(-2415, 16), 8)), SFXP(SBV(-21856, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26565, 16), 8), SFXP(SBV(6311, 16), 8)), SFXP(SBV(-20254, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21269, 16), 8), SFXP(SBV(29395, 16), 8)), SFXP(SBV(8126, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31853, 16), 8), SFXP(SBV(-28203, 16), 8)), SFXP(SBV(-3650, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19585, 16), 8), SFXP(SBV(9678, 16), 8)), SFXP(SBV(-9907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32882, 16), 8), UFXP(BV(6704, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9865, 16), 8), SFXP(SBV(-14649, 16), 8)), SFXP(SBV(-24514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34210, 16), 8), UFXP(BV(50197, 16), 8)), UFXP(BV(23295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16582, 16), 8), SFXP(SBV(-9706, 16), 8)), SFXP(SBV(26670, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51692, 16), 8), UFXP(BV(43312, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26910, 16), 8), SFXP(SBV(-20260, 16), 8)), SFXP(SBV(-6650, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18100, 16), 8), SFXP(SBV(-30537, 16), 8)), SFXP(SBV(-16899, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51550, 16), 8), UFXP(BV(3992, 16), 8)), UFXP(BV(17425, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13297, 16), 8), SFXP(SBV(4319, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32054, 16), 8), SFXP(SBV(24172, 16), 8)), SFXP(SBV(-9310, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7756, 16), 8), UFXP(BV(37078, 16), 8)), UFXP(BV(44834, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5106, 16), 8), SFXP(SBV(-23928, 16), 8)), SFXP(SBV(-29034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19588, 16), 8), SFXP(SBV(-8178, 16), 8)), SFXP(SBV(11410, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28488, 16), 8), SFXP(SBV(10450, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23537, 16), 8), UFXP(BV(30386, 16), 8)), UFXP(BV(53923, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28864, 16), 8), SFXP(SBV(-9413, 16), 8)), SFXP(SBV(27259, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18486, 16), 8), SFXP(SBV(-32304, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44917, 16), 8), UFXP(BV(10844, 16), 8)), UFXP(BV(34073, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14197, 16), 8), SFXP(SBV(-25423, 16), 8)), SFXP(SBV(31907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32054, 16), 8), UFXP(BV(65456, 16), 8)), UFXP(BV(31974, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50175, 16), 8), UFXP(BV(719, 16), 8)), UFXP(BV(9850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25381, 16), 8), SFXP(SBV(6280, 16), 8)), SFXP(SBV(31661, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16942, 16), 8), UFXP(BV(57380, 16), 8)), UFXP(BV(8786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31914, 16), 8), UFXP(BV(27894, 16), 8)), UFXP(BV(4020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-295, 16), 8), SFXP(SBV(29053, 16), 8)), SFXP(SBV(28758, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23856, 16), 8), SFXP(SBV(7348, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32443, 16), 8), SFXP(SBV(4405, 16), 8)), SFXP(SBV(-28688, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12951, 16), 8), UFXP(BV(38226, 16), 8)), UFXP(BV(51177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10070, 16), 8), SFXP(SBV(-7501, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2245, 16), 8), SFXP(SBV(24474, 16), 8)), SFXP(SBV(-18018, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8188, 16), 8), SFXP(SBV(-13265, 16), 8)), SFXP(SBV(21453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27065, 16), 8), SFXP(SBV(16954, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60435, 16), 8), UFXP(BV(64024, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11784, 16), 8), SFXP(SBV(-6494, 16), 8)), SFXP(SBV(18278, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6207, 16), 8), SFXP(SBV(26208, 16), 8)), SFXP(SBV(32415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10015, 16), 8), SFXP(SBV(-5189, 16), 8)), SFXP(SBV(15204, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2322, 16), 8), UFXP(BV(31442, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29054, 16), 8), UFXP(BV(47688, 16), 8)), UFXP(BV(38263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14895, 16), 8), UFXP(BV(40577, 16), 8)), UFXP(BV(39854, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15328, 16), 8), SFXP(SBV(28817, 16), 8)), SFXP(SBV(13489, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24587, 16), 8), SFXP(SBV(27146, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(64618, 16), 8), UFXP(BV(56015, 16), 8)), UFXP(BV(48734, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7116, 16), 8), UFXP(BV(26826, 16), 8)), UFXP(BV(33942, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14451, 16), 8), SFXP(SBV(-10111, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21714, 16), 8), SFXP(SBV(19154, 16), 8)), SFXP(SBV(-2560, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(472, 16), 8), SFXP(SBV(-9253, 16), 8)), SFXP(SBV(9725, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24495, 16), 8), SFXP(SBV(1386, 16), 8)), SFXP(SBV(-23109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-32434, 16), 8), SFXP(SBV(3426, 16), 8)), SFXP(SBV(24694, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49101, 16), 8), UFXP(BV(50060, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9897, 16), 8), UFXP(BV(14009, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19806, 16), 8), SFXP(SBV(-16512, 16), 8)), SFXP(SBV(29218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17835, 16), 8), SFXP(SBV(613, 16), 8)), SFXP(SBV(-18448, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43439, 16), 8), UFXP(BV(59791, 16), 8)), UFXP(BV(37694, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54254, 16), 8), UFXP(BV(15077, 16), 8)), UFXP(BV(39177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19453, 16), 8), SFXP(SBV(22917, 16), 8)), SFXP(SBV(3464, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12156, 16), 8), SFXP(SBV(9710, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24628, 16), 8), UFXP(BV(32369, 16), 8)), UFXP(BV(57795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26374, 16), 8), UFXP(BV(4616, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58983, 16), 8), UFXP(BV(12306, 16), 8)), UFXP(BV(5753, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39928, 16), 8), UFXP(BV(62291, 16), 8)), UFXP(BV(16122, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47829, 16), 8), UFXP(BV(21571, 16), 8)), UFXP(BV(26258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20818, 16), 8), SFXP(SBV(-4945, 16), 8)), SFXP(SBV(8913, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31645, 16), 8), UFXP(BV(22095, 16), 8)), UFXP(BV(9550, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62288, 16), 8), UFXP(BV(17137, 16), 8)), UFXP(BV(40878, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26972, 16), 8), SFXP(SBV(-3075, 16), 8)), SFXP(SBV(-23897, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2661, 16), 8), SFXP(SBV(11664, 16), 8)), SFXP(SBV(-9003, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61734, 16), 8), UFXP(BV(24081, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33258, 16), 8), UFXP(BV(22025, 16), 8)), UFXP(BV(11233, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(21906, 16), 8), SFXP(SBV(-23028, 16), 8)), SFXP(SBV(-4434, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44234, 16), 8), UFXP(BV(12595, 16), 8)), UFXP(BV(13590, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19446, 16), 8), SFXP(SBV(17077, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(26760, 16), 8), UFXP(BV(40080, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22716, 16), 8), UFXP(BV(17013, 16), 8)), UFXP(BV(5703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10767, 16), 8), SFXP(SBV(-28074, 16), 8)), SFXP(SBV(17307, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-13094, 16), 8), SFXP(SBV(10263, 16), 8)), SFXP(SBV(-648, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53994, 16), 8), UFXP(BV(39244, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21478, 16), 8), UFXP(BV(35307, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28507, 16), 8), SFXP(SBV(20501, 16), 8)), SFXP(SBV(16528, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14069, 16), 8), SFXP(SBV(-4088, 16), 8)), SFXP(SBV(-28056, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32301, 16), 8), UFXP(BV(41518, 16), 8)), UFXP(BV(56319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29079, 16), 8), SFXP(SBV(28165, 16), 8)), SFXP(SBV(-914, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42529, 16), 8), UFXP(BV(12595, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57770, 16), 8), UFXP(BV(12189, 16), 8)), UFXP(BV(4423, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-23453, 16), 8), SFXP(SBV(25233, 16), 8)), SFXP(SBV(-17918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55458, 16), 8), UFXP(BV(50, 16), 8)), UFXP(BV(55508, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22559, 16), 8), SFXP(SBV(13003, 16), 8)), SFXP(SBV(29974, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17410, 16), 8), SFXP(SBV(-6328, 16), 8)), SFXP(SBV(-23738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15358, 16), 8), SFXP(SBV(-14766, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28958, 16), 8), SFXP(SBV(-20126, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16007, 16), 8), SFXP(SBV(21580, 16), 8)), SFXP(SBV(27949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25997, 16), 8), UFXP(BV(38522, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7235, 16), 8), SFXP(SBV(19852, 16), 8)), SFXP(SBV(-12617, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19524, 16), 8), SFXP(SBV(-15063, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21402, 16), 8), SFXP(SBV(-30186, 16), 8)), SFXP(SBV(-13948, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60321, 16), 8), UFXP(BV(29392, 16), 8)), UFXP(BV(30929, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13870, 16), 8), UFXP(BV(14597, 16), 8)), UFXP(BV(4429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8564, 16), 8), UFXP(BV(19239, 16), 8)), UFXP(BV(27803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5521, 16), 8), SFXP(SBV(8518, 16), 8)), SFXP(SBV(-2997, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53022, 16), 8), UFXP(BV(56049, 16), 8)), UFXP(BV(62509, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53913, 16), 8), UFXP(BV(36416, 16), 8)), UFXP(BV(24793, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23938, 16), 8), SFXP(SBV(-801, 16), 8)), SFXP(SBV(-24739, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27691, 16), 8), SFXP(SBV(-2580, 16), 8)), SFXP(SBV(25111, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16533, 16), 8), SFXP(SBV(8785, 16), 8)), SFXP(SBV(-25318, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19813, 16), 8), SFXP(SBV(-20685, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31006, 16), 8), SFXP(SBV(17821, 16), 8)), SFXP(SBV(-16709, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15009, 16), 8), UFXP(BV(13909, 16), 8)), UFXP(BV(29038, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21056, 16), 8), SFXP(SBV(-32340, 16), 8)), SFXP(SBV(11284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19259, 16), 8), UFXP(BV(52455, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6463, 16), 8), SFXP(SBV(19100, 16), 8)), SFXP(SBV(12637, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50807, 16), 8), UFXP(BV(4399, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7803, 16), 8), UFXP(BV(49393, 16), 8)), UFXP(BV(57196, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26660, 16), 8), SFXP(SBV(-1095, 16), 8)), SFXP(SBV(-27755, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27884, 16), 8), UFXP(BV(15224, 16), 8)), UFXP(BV(12660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59417, 16), 8), UFXP(BV(36643, 16), 8)), UFXP(BV(50610, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20881, 16), 8), SFXP(SBV(1205, 16), 8)), SFXP(SBV(-19676, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46063, 16), 8), UFXP(BV(10639, 16), 8)), UFXP(BV(56702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16998, 16), 8), SFXP(SBV(14936, 16), 8)), SFXP(SBV(-31934, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12290, 16), 8), SFXP(SBV(-19937, 16), 8)), SFXP(SBV(7647, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22574, 16), 8), SFXP(SBV(31093, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1317, 16), 8), SFXP(SBV(12117, 16), 8)), SFXP(SBV(13434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7125, 16), 8), SFXP(SBV(17384, 16), 8)), SFXP(SBV(-10259, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17944, 16), 8), SFXP(SBV(31446, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63490, 16), 8), UFXP(BV(35945, 16), 8)), UFXP(BV(1745, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13564, 16), 8), SFXP(SBV(23790, 16), 8)), SFXP(SBV(10226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36482, 16), 8), UFXP(BV(184, 16), 8)), UFXP(BV(36298, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14618, 16), 8), SFXP(SBV(-4750, 16), 8)), SFXP(SBV(19368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38519, 16), 8), UFXP(BV(19235, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41265, 16), 8), UFXP(BV(21412, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11771, 16), 8), UFXP(BV(26396, 16), 8)), UFXP(BV(38167, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46230, 16), 8), UFXP(BV(37855, 16), 8)), UFXP(BV(8375, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19731, 16), 8), UFXP(BV(26503, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14500, 16), 8), UFXP(BV(13576, 16), 8)), UFXP(BV(28076, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56069, 16), 8), UFXP(BV(8501, 16), 8)), UFXP(BV(47568, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57693, 16), 8), UFXP(BV(27270, 16), 8)), UFXP(BV(30423, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8661, 16), 8), UFXP(BV(52090, 16), 8)), UFXP(BV(60751, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14289, 16), 8), SFXP(SBV(4119, 16), 8)), SFXP(SBV(-10170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19797, 16), 8), SFXP(SBV(30066, 16), 8)), SFXP(SBV(10269, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(915, 16), 8), UFXP(BV(10550, 16), 8)), UFXP(BV(37709, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18369, 16), 8), SFXP(SBV(9751, 16), 8)), SFXP(SBV(-8618, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29879, 16), 8), SFXP(SBV(-4753, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3186, 16), 8), UFXP(BV(27765, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1281, 16), 8), UFXP(BV(23239, 16), 8)), UFXP(BV(24520, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14113, 16), 8), SFXP(SBV(26912, 16), 8)), SFXP(SBV(24511, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9903, 16), 8), SFXP(SBV(901, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45834, 16), 8), UFXP(BV(197, 16), 8)), UFXP(BV(46031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-6574, 16), 8), SFXP(SBV(-16065, 16), 8)), SFXP(SBV(19328, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15360, 16), 8), UFXP(BV(8867, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15564, 16), 8), UFXP(BV(7876, 16), 8)), UFXP(BV(7688, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49161, 16), 8), UFXP(BV(23484, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36121, 16), 8), UFXP(BV(54867, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12188, 16), 8), UFXP(BV(59080, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29694, 16), 8), UFXP(BV(38874, 16), 8)), UFXP(BV(3032, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22616, 16), 8), SFXP(SBV(1942, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29203, 16), 8), SFXP(SBV(31703, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9363, 16), 8), UFXP(BV(44519, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31517, 16), 8), SFXP(SBV(-16718, 16), 8)), SFXP(SBV(17301, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17456, 16), 8), SFXP(SBV(-12405, 16), 8)), SFXP(SBV(-6103, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9032, 16), 8), UFXP(BV(24271, 16), 8)), UFXP(BV(50297, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63613, 16), 8), UFXP(BV(20783, 16), 8)), UFXP(BV(18860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47155, 16), 8), UFXP(BV(16411, 16), 8)), UFXP(BV(30744, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31758, 16), 8), UFXP(BV(22717, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18326, 16), 8), UFXP(BV(46968, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14235, 16), 8), SFXP(SBV(29443, 16), 8)), SFXP(SBV(-15208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-500, 16), 8), SFXP(SBV(15315, 16), 8)), SFXP(SBV(-29912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8042, 16), 8), SFXP(SBV(836, 16), 8)), SFXP(SBV(7206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25096, 16), 8), SFXP(SBV(-24253, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20300, 16), 8), SFXP(SBV(15360, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22965, 16), 8), UFXP(BV(24989, 16), 8)), UFXP(BV(13465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27558, 16), 8), SFXP(SBV(10203, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30631, 16), 8), SFXP(SBV(20395, 16), 8)), SFXP(SBV(-15477, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18005, 16), 8), SFXP(SBV(-20219, 16), 8)), SFXP(SBV(27312, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11745, 16), 8), UFXP(BV(10375, 16), 8)), UFXP(BV(22120, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-326, 16), 8), SFXP(SBV(-4901, 16), 8)), SFXP(SBV(6242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26221, 16), 8), UFXP(BV(8271, 16), 8)), UFXP(BV(60732, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23970, 16), 8), SFXP(SBV(-9067, 16), 8)), SFXP(SBV(-14903, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29192, 16), 8), UFXP(BV(37574, 16), 8)), UFXP(BV(57154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26136, 16), 8), SFXP(SBV(92, 16), 8)), SFXP(SBV(-26044, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18231, 16), 8), UFXP(BV(58160, 16), 8)), UFXP(BV(25607, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42571, 16), 8), UFXP(BV(50895, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26331, 16), 8), UFXP(BV(3743, 16), 8)), UFXP(BV(22588, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24123, 16), 8), SFXP(SBV(23570, 16), 8)), SFXP(SBV(-7211, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30697, 16), 8), SFXP(SBV(28155, 16), 8)), SFXP(SBV(6684, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31942, 16), 8), SFXP(SBV(22943, 16), 8)), SFXP(SBV(-20907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20961, 16), 8), SFXP(SBV(30107, 16), 8)), SFXP(SBV(-9146, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29829, 16), 8), SFXP(SBV(-10600, 16), 8)), SFXP(SBV(-19229, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2230, 16), 8), SFXP(SBV(23160, 16), 8)), SFXP(SBV(-25390, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19741, 16), 8), SFXP(SBV(-26363, 16), 8)), SFXP(SBV(6622, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31503, 16), 8), SFXP(SBV(30870, 16), 8)), SFXP(SBV(633, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27576, 16), 8), UFXP(BV(55011, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9815, 16), 8), UFXP(BV(16462, 16), 8)), UFXP(BV(58889, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43082, 16), 8), UFXP(BV(36666, 16), 8)), UFXP(BV(6416, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4187, 16), 8), SFXP(SBV(4516, 16), 8)), SFXP(SBV(329, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2407, 16), 8), UFXP(BV(28788, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10481, 16), 8), UFXP(BV(49774, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6202, 16), 8), SFXP(SBV(-6952, 16), 8)), SFXP(SBV(-13154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54843, 16), 8), UFXP(BV(39591, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34888, 16), 8), UFXP(BV(44145, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14538, 16), 8), SFXP(SBV(18302, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56765, 16), 8), UFXP(BV(7792, 16), 8)), UFXP(BV(48973, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19073, 16), 8), SFXP(SBV(-19820, 16), 8)), SFXP(SBV(-747, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17593, 16), 8), SFXP(SBV(-12467, 16), 8)), SFXP(SBV(-30060, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27366, 16), 8), SFXP(SBV(-25483, 16), 8)), SFXP(SBV(-28419, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24332, 16), 8), SFXP(SBV(-22396, 16), 8)), SFXP(SBV(-18808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63888, 16), 8), UFXP(BV(17828, 16), 8)), UFXP(BV(58288, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52873, 16), 8), UFXP(BV(9890, 16), 8)), UFXP(BV(42983, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31121, 16), 8), SFXP(SBV(-19481, 16), 8)), SFXP(SBV(11640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32751, 16), 8), SFXP(SBV(-18282, 16), 8)), SFXP(SBV(-14469, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24524, 16), 8), UFXP(BV(40928, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20376, 16), 8), UFXP(BV(18105, 16), 8)), UFXP(BV(38481, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14537, 16), 8), SFXP(SBV(-2681, 16), 8)), SFXP(SBV(-17218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26885, 16), 8), SFXP(SBV(7148, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9301, 16), 8), SFXP(SBV(9093, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2613, 16), 8), UFXP(BV(61521, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26934, 16), 8), UFXP(BV(18492, 16), 8)), UFXP(BV(45017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28571, 16), 8), SFXP(SBV(-20960, 16), 8)), SFXP(SBV(7611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27393, 16), 8), UFXP(BV(38678, 16), 8)), UFXP(BV(535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22666, 16), 8), UFXP(BV(18665, 16), 8)), UFXP(BV(41331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25344, 16), 8), SFXP(SBV(-15277, 16), 8)), SFXP(SBV(-5095, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29912, 16), 8), SFXP(SBV(7354, 16), 8)), SFXP(SBV(-7300, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11177, 16), 8), SFXP(SBV(15683, 16), 8)), SFXP(SBV(-4506, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60568, 16), 8), UFXP(BV(33368, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32133, 16), 8), SFXP(SBV(24326, 16), 8)), SFXP(SBV(7807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13539, 16), 8), SFXP(SBV(-12656, 16), 8)), SFXP(SBV(-883, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6097, 16), 8), SFXP(SBV(8372, 16), 8)), SFXP(SBV(-2275, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50940, 16), 8), UFXP(BV(23292, 16), 8)), UFXP(BV(27648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15563, 16), 8), SFXP(SBV(22084, 16), 8)), SFXP(SBV(-31831, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19628, 16), 8), UFXP(BV(9721, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15386, 16), 8), SFXP(SBV(3726, 16), 8)), SFXP(SBV(-19112, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36446, 16), 8), UFXP(BV(58649, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50923, 16), 8), UFXP(BV(53835, 16), 8)), UFXP(BV(39222, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11544, 16), 8), UFXP(BV(37367, 16), 8)), UFXP(BV(39713, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5157, 16), 8), SFXP(SBV(6753, 16), 8)), SFXP(SBV(11910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13736, 16), 8), UFXP(BV(45422, 16), 8)), UFXP(BV(59158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8592, 16), 8), SFXP(SBV(7169, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30993, 16), 8), SFXP(SBV(-30987, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2637, 16), 8), SFXP(SBV(-31636, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60087, 16), 8), UFXP(BV(41686, 16), 8)), UFXP(BV(18401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17899, 16), 8), SFXP(SBV(23908, 16), 8)), SFXP(SBV(-6009, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15951, 16), 8), SFXP(SBV(-12577, 16), 8)), SFXP(SBV(28528, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35509, 16), 8), UFXP(BV(60050, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58862, 16), 8), UFXP(BV(32048, 16), 8)), UFXP(BV(26814, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19544, 16), 8), UFXP(BV(60498, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31644, 16), 8), UFXP(BV(52401, 16), 8)), UFXP(BV(18509, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26561, 16), 8), SFXP(SBV(10097, 16), 8)), SFXP(SBV(16464, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1065, 16), 8), UFXP(BV(15522, 16), 8)), UFXP(BV(64574, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22966, 16), 8), SFXP(SBV(26139, 16), 8)), SFXP(SBV(3173, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9969, 16), 8), UFXP(BV(48301, 16), 8)), UFXP(BV(45901, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63167, 16), 8), UFXP(BV(25033, 16), 8)), UFXP(BV(22664, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4677, 16), 8), SFXP(SBV(-32014, 16), 8)), SFXP(SBV(27337, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3862, 16), 8), SFXP(SBV(-18377, 16), 8)), SFXP(SBV(22239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16157, 16), 8), SFXP(SBV(21654, 16), 8)), SFXP(SBV(5497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8741, 16), 8), SFXP(SBV(11916, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44701, 16), 8), UFXP(BV(38257, 16), 8)), UFXP(BV(6444, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28808, 16), 8), SFXP(SBV(-16445, 16), 8)), SFXP(SBV(12363, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8160, 16), 8), SFXP(SBV(8955, 16), 8)), SFXP(SBV(-23296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(876, 16), 8), UFXP(BV(33182, 16), 8)), UFXP(BV(33230, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20418, 16), 8), SFXP(SBV(-10365, 16), 8)), SFXP(SBV(-30783, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35334, 16), 8), UFXP(BV(7131, 16), 8)), UFXP(BV(42465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27496, 16), 8), SFXP(SBV(31756, 16), 8)), SFXP(SBV(4260, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19410, 16), 8), UFXP(BV(30503, 16), 8)), UFXP(BV(18987, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18682, 16), 8), UFXP(BV(54619, 16), 8)), UFXP(BV(53747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48306, 16), 8), UFXP(BV(22912, 16), 8)), UFXP(BV(63547, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28940, 16), 8), SFXP(SBV(-15228, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33453, 16), 8), UFXP(BV(30751, 16), 8)), UFXP(BV(2702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12173, 16), 8), SFXP(SBV(28863, 16), 8)), SFXP(SBV(16690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58167, 16), 8), UFXP(BV(56013, 16), 8)), UFXP(BV(13002, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32460, 16), 8), SFXP(SBV(-25226, 16), 8)), SFXP(SBV(-12687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57074, 16), 8), UFXP(BV(47862, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18578, 16), 8), UFXP(BV(23977, 16), 8)), UFXP(BV(60137, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51796, 16), 8), UFXP(BV(7483, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28144, 16), 8), SFXP(SBV(-19151, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6055, 16), 8), SFXP(SBV(-2179, 16), 8)), SFXP(SBV(-3876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-25402, 16), 8), SFXP(SBV(-4766, 16), 8)), SFXP(SBV(14161, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43733, 16), 8), UFXP(BV(63913, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9128, 16), 8), UFXP(BV(24438, 16), 8)), UFXP(BV(33566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4322, 16), 8), UFXP(BV(42022, 16), 8)), UFXP(BV(27836, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8975, 16), 8), SFXP(SBV(8959, 16), 8)), SFXP(SBV(17934, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19926, 16), 8), SFXP(SBV(-10008, 16), 8)), SFXP(SBV(-29934, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30166, 16), 8), UFXP(BV(4012, 16), 8)), UFXP(BV(14005, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15113, 16), 8), UFXP(BV(20177, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46570, 16), 8), UFXP(BV(14411, 16), 8)), UFXP(BV(60981, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38988, 16), 8), UFXP(BV(17922, 16), 8)), UFXP(BV(42489, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3221, 16), 8), SFXP(SBV(31897, 16), 8)), SFXP(SBV(-28676, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4232, 16), 8), SFXP(SBV(-1101, 16), 8)), SFXP(SBV(-18201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(16235, 16), 8), SFXP(SBV(-29249, 16), 8)), SFXP(SBV(-19905, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5518, 16), 8), SFXP(SBV(30596, 16), 8)), SFXP(SBV(4128, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28231, 16), 8), SFXP(SBV(8512, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16599, 16), 8), UFXP(BV(25353, 16), 8)), UFXP(BV(56782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22195, 16), 8), UFXP(BV(25491, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9958, 16), 8), UFXP(BV(14835, 16), 8)), UFXP(BV(52770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59483, 16), 8), UFXP(BV(12941, 16), 8)), UFXP(BV(46542, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15310, 16), 8), UFXP(BV(53518, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34332, 16), 8), UFXP(BV(31335, 16), 8)), UFXP(BV(2997, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54897, 16), 8), UFXP(BV(49015, 16), 8)), UFXP(BV(5882, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(55402, 16), 8), UFXP(BV(10384, 16), 8)), UFXP(BV(19020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10737, 16), 8), SFXP(SBV(9695, 16), 8)), SFXP(SBV(-1042, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7707, 16), 8), UFXP(BV(33545, 16), 8)), UFXP(BV(26848, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21742, 16), 8), SFXP(SBV(-17920, 16), 8)), SFXP(SBV(-3822, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28874, 16), 8), UFXP(BV(14587, 16), 8)), UFXP(BV(14287, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8043, 16), 8), UFXP(BV(53303, 16), 8)), UFXP(BV(36271, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16330, 16), 8), SFXP(SBV(27647, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(4418, 16), 8), UFXP(BV(64458, 16), 8)), UFXP(BV(63829, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6738, 16), 8), SFXP(SBV(21750, 16), 8)), SFXP(SBV(15012, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10102, 16), 8), UFXP(BV(14746, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2609, 16), 8), SFXP(SBV(4329, 16), 8)), SFXP(SBV(-1720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29272, 16), 8), UFXP(BV(50832, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45123, 16), 8), UFXP(BV(24208, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43159, 16), 8), UFXP(BV(8214, 16), 8)), UFXP(BV(8540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12621, 16), 8), SFXP(SBV(-24134, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48445, 16), 8), UFXP(BV(26749, 16), 8)), UFXP(BV(15663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31302, 16), 8), UFXP(BV(14771, 16), 8)), UFXP(BV(46073, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27638, 16), 8), SFXP(SBV(-24587, 16), 8)), SFXP(SBV(3051, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18548, 16), 8), UFXP(BV(45432, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-950, 16), 8), SFXP(SBV(-6475, 16), 8)), SFXP(SBV(-7425, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13505, 16), 8), SFXP(SBV(1730, 16), 8)), SFXP(SBV(25729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25473, 16), 8), SFXP(SBV(-19788, 16), 8)), SFXP(SBV(5685, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18463, 16), 8), SFXP(SBV(2318, 16), 8)), SFXP(SBV(16145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39965, 16), 8), UFXP(BV(37490, 16), 8)), UFXP(BV(19983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(41747, 16), 8), UFXP(BV(476, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35986, 16), 8), UFXP(BV(33231, 16), 8)), UFXP(BV(3681, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12225, 16), 8), SFXP(SBV(-1323, 16), 8)), SFXP(SBV(-10902, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14443, 16), 8), UFXP(BV(34277, 16), 8)), UFXP(BV(48720, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12390, 16), 8), SFXP(SBV(-21236, 16), 8)), SFXP(SBV(31910, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24769, 16), 8), SFXP(SBV(-7806, 16), 8)), SFXP(SBV(-32575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22754, 16), 8), SFXP(SBV(-19060, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26361, 16), 8), UFXP(BV(40927, 16), 8)), UFXP(BV(20058, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-595, 16), 8), SFXP(SBV(-10189, 16), 8)), SFXP(SBV(23682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5095, 16), 8), SFXP(SBV(-16291, 16), 8)), SFXP(SBV(21386, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21434, 16), 8), SFXP(SBV(-18262, 16), 8)), SFXP(SBV(3172, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7864, 16), 8), SFXP(SBV(-28906, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6849, 16), 8), SFXP(SBV(12372, 16), 8)), SFXP(SBV(5523, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61603, 16), 8), UFXP(BV(3925, 16), 8)), UFXP(BV(57678, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24184, 16), 8), UFXP(BV(43272, 16), 8)), UFXP(BV(24620, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23814, 16), 8), SFXP(SBV(-3959, 16), 8)), SFXP(SBV(27773, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6497, 16), 8), UFXP(BV(30427, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19757, 16), 8), SFXP(SBV(2603, 16), 8)), SFXP(SBV(-22360, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11624, 16), 8), SFXP(SBV(-29779, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26314, 16), 8), SFXP(SBV(24230, 16), 8)), SFXP(SBV(2084, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22497, 16), 8), SFXP(SBV(19736, 16), 8)), SFXP(SBV(2761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6980, 16), 8), SFXP(SBV(5066, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26214, 16), 8), UFXP(BV(30272, 16), 8)), UFXP(BV(56486, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22586, 16), 8), UFXP(BV(51598, 16), 8)), UFXP(BV(36524, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47639, 16), 8), UFXP(BV(16671, 16), 8)), UFXP(BV(64310, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-11832, 16), 8), SFXP(SBV(-31722, 16), 8)), SFXP(SBV(24359, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63345, 16), 8), UFXP(BV(22438, 16), 8)), UFXP(BV(47066, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11083, 16), 8), SFXP(SBV(-4122, 16), 8)), SFXP(SBV(-15205, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18994, 16), 8), UFXP(BV(15395, 16), 8)), UFXP(BV(34389, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(24765, 16), 8), UFXP(BV(36777, 16), 8)), UFXP(BV(18799, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61761, 16), 8), UFXP(BV(57230, 16), 8)), UFXP(BV(4531, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8225, 16), 8), SFXP(SBV(12090, 16), 8)), SFXP(SBV(-4777, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55787, 16), 8), UFXP(BV(38366, 16), 8)), UFXP(BV(28617, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52477, 16), 8), UFXP(BV(5756, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20367, 16), 8), SFXP(SBV(-31384, 16), 8)), SFXP(SBV(-11017, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45446, 16), 8), UFXP(BV(36037, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4384, 16), 8), SFXP(SBV(-26479, 16), 8)), SFXP(SBV(30863, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8861, 16), 8), UFXP(BV(13713, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38111, 16), 8), UFXP(BV(59068, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44940, 16), 8), UFXP(BV(53426, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15427, 16), 8), UFXP(BV(58019, 16), 8)), UFXP(BV(22944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8495, 16), 8), SFXP(SBV(29125, 16), 8)), SFXP(SBV(-27916, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2287, 16), 8), SFXP(SBV(13796, 16), 8)), SFXP(SBV(16083, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51702, 16), 8), UFXP(BV(15594, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21896, 16), 8), SFXP(SBV(21304, 16), 8)), SFXP(SBV(12850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3836, 16), 8), SFXP(SBV(-14584, 16), 8)), SFXP(SBV(-10748, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60019, 16), 8), UFXP(BV(14644, 16), 8)), UFXP(BV(25403, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17205, 16), 8), SFXP(SBV(3635, 16), 8)), SFXP(SBV(13570, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31733, 16), 8), UFXP(BV(5888, 16), 8)), UFXP(BV(8963, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-26779, 16), 8), SFXP(SBV(3832, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10070, 16), 8), SFXP(SBV(-12005, 16), 8)), SFXP(SBV(-22075, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7932, 16), 8), UFXP(BV(25779, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19631, 16), 8), SFXP(SBV(26346, 16), 8)), SFXP(SBV(-6715, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34047, 16), 8), UFXP(BV(59732, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6758, 16), 8), UFXP(BV(36465, 16), 8)), UFXP(BV(43223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52513, 16), 8), UFXP(BV(20987, 16), 8)), UFXP(BV(31526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12466, 16), 8), SFXP(SBV(50, 16), 8)), SFXP(SBV(2434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6456, 16), 8), SFXP(SBV(-14646, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29584, 16), 8), SFXP(SBV(-9384, 16), 8)), SFXP(SBV(-26568, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14100, 16), 8), SFXP(SBV(13842, 16), 8)), SFXP(SBV(24041, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54573, 16), 8), UFXP(BV(8588, 16), 8)), UFXP(BV(45985, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1180, 16), 8), SFXP(SBV(32321, 16), 8)), SFXP(SBV(-17908, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27993, 16), 8), UFXP(BV(33981, 16), 8)), UFXP(BV(59548, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5979, 16), 8), SFXP(SBV(-12927, 16), 8)), SFXP(SBV(-25764, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44722, 16), 8), UFXP(BV(53234, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24769, 16), 8), UFXP(BV(25027, 16), 8)), UFXP(BV(49796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7718, 16), 8), SFXP(SBV(-18394, 16), 8)), SFXP(SBV(-10676, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56104, 16), 8), UFXP(BV(17008, 16), 8)), UFXP(BV(39096, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20133, 16), 8), UFXP(BV(48810, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6928, 16), 8), UFXP(BV(29442, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37577, 16), 8), UFXP(BV(15678, 16), 8)), UFXP(BV(21899, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62813, 16), 8), UFXP(BV(3724, 16), 8)), UFXP(BV(59089, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13345, 16), 8), SFXP(SBV(31512, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37890, 16), 8), UFXP(BV(56231, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5227, 16), 8), UFXP(BV(9095, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11832, 16), 8), UFXP(BV(39325, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53367, 16), 8), UFXP(BV(43158, 16), 8)), UFXP(BV(18494, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29050, 16), 8), SFXP(SBV(26146, 16), 8)), SFXP(SBV(2904, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41337, 16), 8), UFXP(BV(42004, 16), 8)), UFXP(BV(64869, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8034, 16), 8), UFXP(BV(45387, 16), 8)), UFXP(BV(48116, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18156, 16), 8), SFXP(SBV(-24332, 16), 8)), SFXP(SBV(-23048, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(872, 16), 8), SFXP(SBV(26312, 16), 8)), SFXP(SBV(-25440, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6993, 16), 8), UFXP(BV(31706, 16), 8)), UFXP(BV(14125, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60597, 16), 8), UFXP(BV(57902, 16), 8)), UFXP(BV(52963, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39199, 16), 8), UFXP(BV(51405, 16), 8)), UFXP(BV(25068, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32322, 16), 8), UFXP(BV(35192, 16), 8)), UFXP(BV(62666, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29665, 16), 8), SFXP(SBV(12860, 16), 8)), SFXP(SBV(-16805, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4227, 16), 8), SFXP(SBV(-14931, 16), 8)), SFXP(SBV(19158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(8335, 16), 8), SFXP(SBV(-7928, 16), 8)), SFXP(SBV(4019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11977, 16), 8), SFXP(SBV(17419, 16), 8)), SFXP(SBV(-29396, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8526, 16), 8), SFXP(SBV(-29582, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25175, 16), 8), SFXP(SBV(-19986, 16), 8)), SFXP(SBV(5189, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28984, 16), 8), SFXP(SBV(17495, 16), 8)), SFXP(SBV(-19057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13423, 16), 8), SFXP(SBV(-12556, 16), 8)), SFXP(SBV(-867, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8862, 16), 8), SFXP(SBV(3204, 16), 8)), SFXP(SBV(20158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27952, 16), 8), SFXP(SBV(2655, 16), 8)), SFXP(SBV(-30607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3508, 16), 8), SFXP(SBV(5157, 16), 8)), SFXP(SBV(1649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18862, 16), 8), UFXP(BV(64979, 16), 8)), UFXP(BV(3505, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47921, 16), 8), UFXP(BV(51351, 16), 8)), UFXP(BV(62106, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23788, 16), 8), UFXP(BV(50702, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18770, 16), 8), UFXP(BV(53454, 16), 8)), UFXP(BV(52639, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6194, 16), 8), SFXP(SBV(-29957, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21986, 16), 8), SFXP(SBV(19640, 16), 8)), SFXP(SBV(-2346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44020, 16), 8), UFXP(BV(45973, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20447, 16), 8), SFXP(SBV(16618, 16), 8)), SFXP(SBV(-3829, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1981, 16), 8), UFXP(BV(9922, 16), 8)), UFXP(BV(11903, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10772, 16), 8), SFXP(SBV(-18354, 16), 8)), SFXP(SBV(7582, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32240, 16), 8), SFXP(SBV(-14213, 16), 8)), SFXP(SBV(-18027, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38383, 16), 8), UFXP(BV(27333, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(9686, 16), 8), SFXP(SBV(-1835, 16), 8)), SFXP(SBV(-3893, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44778, 16), 8), UFXP(BV(5770, 16), 8)), UFXP(BV(39008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29791, 16), 8), UFXP(BV(40907, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41330, 16), 8), UFXP(BV(26858, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18767, 16), 8), SFXP(SBV(-28421, 16), 8)), SFXP(SBV(9654, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54162, 16), 8), UFXP(BV(26335, 16), 8)), UFXP(BV(27827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26840, 16), 8), UFXP(BV(29196, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(129, 16), 8), SFXP(SBV(15965, 16), 8)), SFXP(SBV(16094, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9269, 16), 8), SFXP(SBV(17821, 16), 8)), SFXP(SBV(10114, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28797, 16), 8), UFXP(BV(38989, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23841, 16), 8), SFXP(SBV(11705, 16), 8)), SFXP(SBV(-12136, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23972, 16), 8), SFXP(SBV(-32518, 16), 8)), SFXP(SBV(8546, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22591, 16), 8), UFXP(BV(5934, 16), 8)), UFXP(BV(28525, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26006, 16), 8), SFXP(SBV(-20370, 16), 8)), SFXP(SBV(19160, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63154, 16), 8), UFXP(BV(29836, 16), 8)), UFXP(BV(33318, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(34115, 16), 8), UFXP(BV(35559, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58800, 16), 8), UFXP(BV(30349, 16), 8)), UFXP(BV(23613, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8503, 16), 8), UFXP(BV(60003, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24149, 16), 8), SFXP(SBV(-8726, 16), 8)), SFXP(SBV(-32661, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9381, 16), 8), SFXP(SBV(3762, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48205, 16), 8), UFXP(BV(2884, 16), 8)), UFXP(BV(45321, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62744, 16), 8), UFXP(BV(44809, 16), 8)), UFXP(BV(17935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45853, 16), 8), UFXP(BV(44626, 16), 8)), UFXP(BV(1227, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49278, 16), 8), UFXP(BV(13270, 16), 8)), UFXP(BV(62548, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9042, 16), 8), SFXP(SBV(20696, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15578, 16), 8), SFXP(SBV(18926, 16), 8)), SFXP(SBV(3348, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-3164, 16), 8), SFXP(SBV(-6569, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51466, 16), 8), UFXP(BV(25647, 16), 8)), UFXP(BV(25819, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27227, 16), 8), UFXP(BV(31646, 16), 8)), UFXP(BV(58873, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15881, 16), 8), UFXP(BV(13687, 16), 8)), UFXP(BV(29568, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27092, 16), 8), UFXP(BV(35414, 16), 8)), UFXP(BV(12246, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49649, 16), 8), UFXP(BV(51202, 16), 8)), UFXP(BV(35315, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13802, 16), 8), UFXP(BV(32974, 16), 8)), UFXP(BV(46364, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2303, 16), 8), SFXP(SBV(-7381, 16), 8)), SFXP(SBV(-864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39664, 16), 8), UFXP(BV(21079, 16), 8)), UFXP(BV(60743, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(32269, 16), 8), SFXP(SBV(6949, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33502, 16), 8), UFXP(BV(20968, 16), 8)), UFXP(BV(12534, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45591, 16), 8), UFXP(BV(30444, 16), 8)), UFXP(BV(15147, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4942, 16), 8), SFXP(SBV(11918, 16), 8)), SFXP(SBV(32071, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42628, 16), 8), UFXP(BV(17240, 16), 8)), UFXP(BV(52681, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41117, 16), 8), UFXP(BV(2159, 16), 8)), UFXP(BV(38958, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36756, 16), 8), UFXP(BV(34921, 16), 8)), UFXP(BV(1835, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50983, 16), 8), UFXP(BV(63684, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7200, 16), 8), SFXP(SBV(29374, 16), 8)), SFXP(SBV(-28962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31221, 16), 8), SFXP(SBV(-23535, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64724, 16), 8), UFXP(BV(33394, 16), 8)), UFXP(BV(32582, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3726, 16), 8), SFXP(SBV(-29844, 16), 8)), SFXP(SBV(26118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12554, 16), 8), SFXP(SBV(-23456, 16), 8)), SFXP(SBV(-29526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24311, 16), 8), SFXP(SBV(-11467, 16), 8)), SFXP(SBV(-12844, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48166, 16), 8), UFXP(BV(53014, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6088, 16), 8), SFXP(SBV(-29249, 16), 8)), SFXP(SBV(-30199, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22777, 16), 8), UFXP(BV(10052, 16), 8)), UFXP(BV(42386, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(14662, 16), 8), UFXP(BV(43704, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20180, 16), 8), SFXP(SBV(31621, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11861, 16), 8), SFXP(SBV(18680, 16), 8)), SFXP(SBV(-6819, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8759, 16), 8), SFXP(SBV(-10118, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19606, 16), 8), UFXP(BV(13073, 16), 8)), UFXP(BV(32679, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28319, 16), 8), SFXP(SBV(-19821, 16), 8)), SFXP(SBV(29933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24047, 16), 8), SFXP(SBV(29779, 16), 8)), SFXP(SBV(11710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27754, 16), 8), UFXP(BV(52280, 16), 8)), UFXP(BV(41010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7175, 16), 8), SFXP(SBV(-2231, 16), 8)), SFXP(SBV(-9406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23114, 16), 8), SFXP(SBV(-15374, 16), 8)), SFXP(SBV(7740, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63353, 16), 8), UFXP(BV(22395, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4697, 16), 8), SFXP(SBV(-26759, 16), 8)), SFXP(SBV(-31456, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3746, 16), 8), SFXP(SBV(-18095, 16), 8)), SFXP(SBV(-14349, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13910, 16), 8), SFXP(SBV(16505, 16), 8)), SFXP(SBV(30415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17384, 16), 8), SFXP(SBV(-31771, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15943, 16), 8), SFXP(SBV(8757, 16), 8)), SFXP(SBV(-24700, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41218, 16), 8), UFXP(BV(1488, 16), 8)), UFXP(BV(42971, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(26596, 16), 8), UFXP(BV(19148, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20933, 16), 8), UFXP(BV(42190, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19621, 16), 8), SFXP(SBV(-1493, 16), 8)), SFXP(SBV(-21114, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25691, 16), 8), UFXP(BV(31297, 16), 8)), UFXP(BV(60633, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17232, 16), 8), SFXP(SBV(16281, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61574, 16), 8), UFXP(BV(64642, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19369, 16), 8), SFXP(SBV(-17053, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4451, 16), 8), SFXP(SBV(7566, 16), 8)), SFXP(SBV(-12017, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37827, 16), 8), UFXP(BV(28661, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32067, 16), 8), UFXP(BV(26092, 16), 8)), UFXP(BV(58159, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16405, 16), 8), UFXP(BV(56088, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17092, 16), 8), UFXP(BV(52445, 16), 8)), UFXP(BV(30183, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19975, 16), 8), SFXP(SBV(-13143, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65058, 16), 8), UFXP(BV(20431, 16), 8)), UFXP(BV(19953, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31613, 16), 8), SFXP(SBV(19116, 16), 8)), SFXP(SBV(-14807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17984, 16), 8), SFXP(SBV(-29529, 16), 8)), SFXP(SBV(-11545, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14635, 16), 8), SFXP(SBV(31734, 16), 8)), SFXP(SBV(-20839, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53255, 16), 8), UFXP(BV(57575, 16), 8)), UFXP(BV(61216, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10637, 16), 8), UFXP(BV(41328, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9344, 16), 8), UFXP(BV(25041, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2141, 16), 8), UFXP(BV(29973, 16), 8)), UFXP(BV(37704, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9915, 16), 8), SFXP(SBV(-11982, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28359, 16), 8), SFXP(SBV(10069, 16), 8)), SFXP(SBV(-27108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13048, 16), 8), SFXP(SBV(-20845, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16133, 16), 8), UFXP(BV(56801, 16), 8)), UFXP(BV(24868, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27161, 16), 8), UFXP(BV(55490, 16), 8)), UFXP(BV(54654, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15362, 16), 8), SFXP(SBV(23281, 16), 8)), SFXP(SBV(-26893, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28892, 16), 8), SFXP(SBV(7113, 16), 8)), SFXP(SBV(-16337, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58889, 16), 8), UFXP(BV(12428, 16), 8)), UFXP(BV(40828, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19191, 16), 8), SFXP(SBV(-28800, 16), 8)), SFXP(SBV(-3700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5798, 16), 8), SFXP(SBV(22439, 16), 8)), SFXP(SBV(-16641, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27789, 16), 8), SFXP(SBV(-15210, 16), 8)), SFXP(SBV(12579, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27623, 16), 8), UFXP(BV(13500, 16), 8)), UFXP(BV(14123, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60196, 16), 8), UFXP(BV(59772, 16), 8)), UFXP(BV(424, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1890, 16), 8), UFXP(BV(18982, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44851, 16), 8), UFXP(BV(27848, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20682, 16), 8), SFXP(SBV(-17361, 16), 8)), SFXP(SBV(27493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1716, 16), 8), SFXP(SBV(-26487, 16), 8)), SFXP(SBV(-24771, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30962, 16), 8), UFXP(BV(58194, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13432, 16), 8), SFXP(SBV(11615, 16), 8)), SFXP(SBV(1817, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42433, 16), 8), UFXP(BV(45333, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13122, 16), 8), UFXP(BV(41670, 16), 8)), UFXP(BV(54792, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1538, 16), 8), SFXP(SBV(7417, 16), 8)), SFXP(SBV(20976, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48448, 16), 8), UFXP(BV(60023, 16), 8)), UFXP(BV(21624, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12631, 16), 8), UFXP(BV(17917, 16), 8)), UFXP(BV(32054, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21169, 16), 8), SFXP(SBV(8415, 16), 8)), SFXP(SBV(12754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44468, 16), 8), UFXP(BV(50310, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22931, 16), 8), SFXP(SBV(18230, 16), 8)), SFXP(SBV(-4701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5310, 16), 8), SFXP(SBV(-19346, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3168, 16), 8), SFXP(SBV(13214, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-346, 16), 8), SFXP(SBV(-31529, 16), 8)), SFXP(SBV(31183, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37849, 16), 8), UFXP(BV(8261, 16), 8)), UFXP(BV(41722, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63521, 16), 8), UFXP(BV(2409, 16), 8)), UFXP(BV(61112, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28800, 16), 8), SFXP(SBV(-20714, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28916, 16), 8), UFXP(BV(23996, 16), 8)), UFXP(BV(23448, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26982, 16), 8), SFXP(SBV(21465, 16), 8)), SFXP(SBV(-31383, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1173, 16), 8), SFXP(SBV(-21617, 16), 8)), SFXP(SBV(-20444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22277, 16), 8), UFXP(BV(45921, 16), 8)), UFXP(BV(63863, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31407, 16), 8), SFXP(SBV(1604, 16), 8)), SFXP(SBV(29803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10465, 16), 8), SFXP(SBV(-30858, 16), 8)), SFXP(SBV(16258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3270, 16), 8), SFXP(SBV(-27664, 16), 8)), SFXP(SBV(-30934, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48559, 16), 8), UFXP(BV(49519, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16151, 16), 8), SFXP(SBV(-7861, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4826, 16), 8), SFXP(SBV(15441, 16), 8)), SFXP(SBV(-10615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21997, 16), 8), SFXP(SBV(-9867, 16), 8)), SFXP(SBV(-12130, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18130, 16), 8), SFXP(SBV(12993, 16), 8)), SFXP(SBV(5137, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24507, 16), 8), SFXP(SBV(27525, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6791, 16), 8), UFXP(BV(4692, 16), 8)), UFXP(BV(2099, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(89, 16), 8), UFXP(BV(37838, 16), 8)), UFXP(BV(13154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24633, 16), 8), SFXP(SBV(1632, 16), 8)), SFXP(SBV(26265, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14715, 16), 8), SFXP(SBV(17639, 16), 8)), SFXP(SBV(2924, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2038, 16), 8), UFXP(BV(28591, 16), 8)), UFXP(BV(30629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22361, 16), 8), UFXP(BV(51088, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10723, 16), 8), UFXP(BV(20197, 16), 8)), UFXP(BV(30920, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16322, 16), 8), UFXP(BV(21039, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20901, 16), 8), SFXP(SBV(-22326, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48997, 16), 8), UFXP(BV(43028, 16), 8)), UFXP(BV(26489, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16912, 16), 8), SFXP(SBV(-28358, 16), 8)), SFXP(SBV(-27144, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40903, 16), 8), UFXP(BV(32557, 16), 8)), UFXP(BV(8346, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31686, 16), 8), SFXP(SBV(-14272, 16), 8)), SFXP(SBV(-17414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2323, 16), 8), UFXP(BV(38937, 16), 8)), UFXP(BV(41260, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13104, 16), 8), SFXP(SBV(-19630, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(43423, 16), 8), UFXP(BV(5318, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58112, 16), 8), UFXP(BV(34477, 16), 8)), UFXP(BV(23635, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60940, 16), 8), UFXP(BV(6256, 16), 8)), UFXP(BV(47430, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19647, 16), 8), SFXP(SBV(4179, 16), 8)), SFXP(SBV(-6958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30328, 16), 8), SFXP(SBV(-20928, 16), 8)), SFXP(SBV(14280, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25518, 16), 8), SFXP(SBV(10263, 16), 8)), SFXP(SBV(-25564, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31161, 16), 8), UFXP(BV(45412, 16), 8)), UFXP(BV(22646, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52179, 16), 8), UFXP(BV(12613, 16), 8)), UFXP(BV(14931, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61494, 16), 8), UFXP(BV(6826, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30889, 16), 8), UFXP(BV(1882, 16), 8)), UFXP(BV(30474, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4871, 16), 8), SFXP(SBV(11487, 16), 8)), SFXP(SBV(6616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3000, 16), 8), UFXP(BV(44188, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32144, 16), 8), SFXP(SBV(20101, 16), 8)), SFXP(SBV(-12043, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56048, 16), 8), UFXP(BV(45071, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7513, 16), 8), SFXP(SBV(22091, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30256, 16), 8), SFXP(SBV(29688, 16), 8)), SFXP(SBV(5592, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-676, 16), 8), SFXP(SBV(-4395, 16), 8)), SFXP(SBV(3719, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21065, 16), 8), SFXP(SBV(-6353, 16), 8)), SFXP(SBV(-14712, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64251, 16), 8), UFXP(BV(14010, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10252, 16), 8), UFXP(BV(32085, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50495, 16), 8), UFXP(BV(4381, 16), 8)), UFXP(BV(54876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32148, 16), 8), SFXP(SBV(-20045, 16), 8)), SFXP(SBV(-12103, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3135, 16), 8), SFXP(SBV(-11114, 16), 8)), SFXP(SBV(14249, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26962, 16), 8), SFXP(SBV(16534, 16), 8)), SFXP(SBV(-10428, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19811, 16), 8), UFXP(BV(59861, 16), 8)), UFXP(BV(14136, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11127, 16), 8), SFXP(SBV(9327, 16), 8)), SFXP(SBV(-12180, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23664, 16), 8), SFXP(SBV(10262, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47871, 16), 8), UFXP(BV(28160, 16), 8)), UFXP(BV(10495, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11611, 16), 8), SFXP(SBV(-7162, 16), 8)), SFXP(SBV(18773, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30214, 16), 8), UFXP(BV(60556, 16), 8)), UFXP(BV(25234, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10486, 16), 8), SFXP(SBV(14085, 16), 8)), SFXP(SBV(-24571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18989, 16), 8), SFXP(SBV(17653, 16), 8)), SFXP(SBV(1336, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50825, 16), 8), UFXP(BV(43671, 16), 8)), UFXP(BV(7154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54310, 16), 8), UFXP(BV(21669, 16), 8)), UFXP(BV(10443, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18998, 16), 8), UFXP(BV(14062, 16), 8)), UFXP(BV(4936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50626, 16), 8), UFXP(BV(26327, 16), 8)), UFXP(BV(29026, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29118, 16), 8), SFXP(SBV(32182, 16), 8)), SFXP(SBV(-4236, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2709, 16), 8), UFXP(BV(1052, 16), 8)), UFXP(BV(3761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12528, 16), 8), SFXP(SBV(19786, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27177, 16), 8), SFXP(SBV(32591, 16), 8)), SFXP(SBV(13543, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57476, 16), 8), UFXP(BV(49444, 16), 8)), UFXP(BV(8032, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(62918, 16), 8), UFXP(BV(22366, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13952, 16), 8), UFXP(BV(18819, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64734, 16), 8), UFXP(BV(28196, 16), 8)), UFXP(BV(36538, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33766, 16), 8), UFXP(BV(19208, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17701, 16), 8), UFXP(BV(56738, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55170, 16), 8), UFXP(BV(45083, 16), 8)), UFXP(BV(34717, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11495, 16), 8), SFXP(SBV(-32006, 16), 8)), SFXP(SBV(20511, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1438, 16), 8), SFXP(SBV(-6574, 16), 8)), SFXP(SBV(28608, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62773, 16), 8), UFXP(BV(32101, 16), 8)), UFXP(BV(30672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11266, 16), 8), UFXP(BV(61929, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-305, 16), 8), SFXP(SBV(1816, 16), 8)), SFXP(SBV(-2164, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24460, 16), 8), SFXP(SBV(-7366, 16), 8)), SFXP(SBV(-17094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44221, 16), 8), UFXP(BV(2269, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23178, 16), 8), UFXP(BV(43546, 16), 8)), UFXP(BV(10455, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-3585, 16), 8), SFXP(SBV(-23949, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17748, 16), 8), SFXP(SBV(4957, 16), 8)), SFXP(SBV(-12791, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40493, 16), 8), UFXP(BV(64423, 16), 8)), UFXP(BV(39380, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(62688, 16), 8), UFXP(BV(25908, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30488, 16), 8), UFXP(BV(5032, 16), 8)), UFXP(BV(35520, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2510, 16), 8), SFXP(SBV(4972, 16), 8)), SFXP(SBV(-7482, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30385, 16), 8), UFXP(BV(50038, 16), 8)), UFXP(BV(45883, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22398, 16), 8), SFXP(SBV(8131, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13954, 16), 8), SFXP(SBV(22852, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1219, 16), 8), UFXP(BV(25030, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23434, 16), 8), SFXP(SBV(8728, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6976, 16), 8), UFXP(BV(50801, 16), 8)), UFXP(BV(21711, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(16525, 16), 8), SFXP(SBV(4601, 16), 8)), SFXP(SBV(-30682, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10951, 16), 8), UFXP(BV(43440, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52346, 16), 8), UFXP(BV(16101, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49156, 16), 8), UFXP(BV(7290, 16), 8)), UFXP(BV(41866, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53346, 16), 8), UFXP(BV(34332, 16), 8)), UFXP(BV(19014, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13096, 16), 8), UFXP(BV(44780, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19855, 16), 8), SFXP(SBV(-13100, 16), 8)), SFXP(SBV(-32581, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58380, 16), 8), UFXP(BV(28212, 16), 8)), UFXP(BV(21056, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32152, 16), 8), SFXP(SBV(20754, 16), 8)), SFXP(SBV(12630, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7111, 16), 8), UFXP(BV(36271, 16), 8)), UFXP(BV(43382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30382, 16), 8), SFXP(SBV(-20655, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15336, 16), 8), SFXP(SBV(-15716, 16), 8)), SFXP(SBV(31052, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15978, 16), 8), SFXP(SBV(-20855, 16), 8)), SFXP(SBV(28703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-32443, 16), 8), SFXP(SBV(-11461, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53015, 16), 8), UFXP(BV(41815, 16), 8)), UFXP(BV(29294, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37962, 16), 8), UFXP(BV(32241, 16), 8)), UFXP(BV(62395, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43516, 16), 8), UFXP(BV(52833, 16), 8)), UFXP(BV(56219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54642, 16), 8), UFXP(BV(8070, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6875, 16), 8), SFXP(SBV(-3144, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49754, 16), 8), UFXP(BV(64321, 16), 8)), UFXP(BV(49047, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59618, 16), 8), UFXP(BV(43608, 16), 8)), UFXP(BV(16010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4241, 16), 8), SFXP(SBV(18575, 16), 8)), SFXP(SBV(-22816, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19427, 16), 8), SFXP(SBV(-7797, 16), 8)), SFXP(SBV(11630, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8676, 16), 8), SFXP(SBV(21584, 16), 8)), SFXP(SBV(-30260, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48346, 16), 8), UFXP(BV(1609, 16), 8)), UFXP(BV(46737, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55244, 16), 8), UFXP(BV(64938, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52782, 16), 8), UFXP(BV(6681, 16), 8)), UFXP(BV(59463, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12214, 16), 8), SFXP(SBV(-1904, 16), 8)), SFXP(SBV(14118, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55817, 16), 8), UFXP(BV(62431, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9399, 16), 8), SFXP(SBV(21847, 16), 8)), SFXP(SBV(12448, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25967, 16), 8), SFXP(SBV(13305, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26583, 16), 8), UFXP(BV(53212, 16), 8)), UFXP(BV(38907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21539, 16), 8), SFXP(SBV(-7594, 16), 8)), SFXP(SBV(29133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28929, 16), 8), SFXP(SBV(-28496, 16), 8)), SFXP(SBV(8111, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17186, 16), 8), UFXP(BV(21415, 16), 8)), UFXP(BV(61393, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29945, 16), 8), UFXP(BV(53673, 16), 8)), UFXP(BV(18082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64162, 16), 8), UFXP(BV(7309, 16), 8)), UFXP(BV(56853, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47632, 16), 8), UFXP(BV(201, 16), 8)), UFXP(BV(47833, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29132, 16), 8), SFXP(SBV(16780, 16), 8)), SFXP(SBV(19624, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27123, 16), 8), SFXP(SBV(-24666, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41105, 16), 8), UFXP(BV(32296, 16), 8)), UFXP(BV(8809, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30478, 16), 8), SFXP(SBV(-4127, 16), 8)), SFXP(SBV(32586, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-25007, 16), 8), SFXP(SBV(-24027, 16), 8)), SFXP(SBV(-12252, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10855, 16), 8), SFXP(SBV(-11523, 16), 8)), SFXP(SBV(22378, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13221, 16), 8), SFXP(SBV(-19288, 16), 8)), SFXP(SBV(-6067, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17017, 16), 8), SFXP(SBV(-23765, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21119, 16), 8), UFXP(BV(33773, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24439, 16), 8), UFXP(BV(31925, 16), 8)), UFXP(BV(33060, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40355, 16), 8), UFXP(BV(32495, 16), 8)), UFXP(BV(10597, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18631, 16), 8), SFXP(SBV(3714, 16), 8)), SFXP(SBV(-22345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45611, 16), 8), UFXP(BV(1116, 16), 8)), UFXP(BV(46727, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19739, 16), 8), SFXP(SBV(-24099, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5167, 16), 8), SFXP(SBV(7096, 16), 8)), SFXP(SBV(12151, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26983, 16), 8), SFXP(SBV(-28220, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14376, 16), 8), UFXP(BV(32057, 16), 8)), UFXP(BV(47855, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-5245, 16), 8), SFXP(SBV(1696, 16), 8)), SFXP(SBV(30788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58672, 16), 8), UFXP(BV(3354, 16), 8)), UFXP(BV(62026, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62218, 16), 8), UFXP(BV(43689, 16), 8)), UFXP(BV(40371, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12789, 16), 8), SFXP(SBV(4237, 16), 8)), SFXP(SBV(-8552, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4724, 16), 8), UFXP(BV(5544, 16), 8)), UFXP(BV(10268, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(32477, 16), 8), SFXP(SBV(-20846, 16), 8)), SFXP(SBV(-23152, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31576, 16), 8), UFXP(BV(34262, 16), 8)), UFXP(BV(31700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10359, 16), 8), SFXP(SBV(14539, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3512, 16), 8), UFXP(BV(43673, 16), 8)), UFXP(BV(25375, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2064, 16), 8), SFXP(SBV(-7045, 16), 8)), SFXP(SBV(-9109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9095, 16), 8), SFXP(SBV(5113, 16), 8)), SFXP(SBV(-3982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42345, 16), 8), UFXP(BV(4056, 16), 8)), UFXP(BV(38289, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24871, 16), 8), SFXP(SBV(-6797, 16), 8)), SFXP(SBV(-31668, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17657, 16), 8), SFXP(SBV(31922, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14706, 16), 8), SFXP(SBV(4687, 16), 8)), SFXP(SBV(19393, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51214, 16), 8), UFXP(BV(64243, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3355, 16), 8), SFXP(SBV(24396, 16), 8)), SFXP(SBV(-27751, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3326, 16), 8), SFXP(SBV(-17000, 16), 8)), SFXP(SBV(-20326, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26279, 16), 8), UFXP(BV(62478, 16), 8)), UFXP(BV(56521, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34602, 16), 8), UFXP(BV(2595, 16), 8)), UFXP(BV(32007, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(55758, 16), 8), UFXP(BV(53847, 16), 8)), UFXP(BV(62722, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24674, 16), 8), SFXP(SBV(-7650, 16), 8)), SFXP(SBV(-17024, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32359, 16), 8), UFXP(BV(49604, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27199, 16), 8), UFXP(BV(24068, 16), 8)), UFXP(BV(51267, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11527, 16), 8), UFXP(BV(39904, 16), 8)), UFXP(BV(51431, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19641, 16), 8), SFXP(SBV(-3083, 16), 8)), SFXP(SBV(22724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24018, 16), 8), SFXP(SBV(-26797, 16), 8)), SFXP(SBV(-14721, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-17927, 16), 8), SFXP(SBV(15229, 16), 8)), SFXP(SBV(-17871, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5517, 16), 8), SFXP(SBV(3878, 16), 8)), SFXP(SBV(-1639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8705, 16), 8), UFXP(BV(37143, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45139, 16), 8), UFXP(BV(43600, 16), 8)), UFXP(BV(1539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42985, 16), 8), UFXP(BV(42108, 16), 8)), UFXP(BV(877, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5353, 16), 8), UFXP(BV(30562, 16), 8)), UFXP(BV(40327, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10443, 16), 8), SFXP(SBV(7196, 16), 8)), SFXP(SBV(17639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19747, 16), 8), UFXP(BV(35922, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63795, 16), 8), UFXP(BV(48751, 16), 8)), UFXP(BV(24552, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12266, 16), 8), SFXP(SBV(-1889, 16), 8)), SFXP(SBV(-10377, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56891, 16), 8), UFXP(BV(48318, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30723, 16), 8), SFXP(SBV(-24762, 16), 8)), SFXP(SBV(5961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(28894, 16), 8), UFXP(BV(16522, 16), 8)), UFXP(BV(29784, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28310, 16), 8), SFXP(SBV(-20358, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5914, 16), 8), SFXP(SBV(-18722, 16), 8)), SFXP(SBV(-24636, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58367, 16), 8), UFXP(BV(63795, 16), 8)), UFXP(BV(60108, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12600, 16), 8), SFXP(SBV(8828, 16), 8)), SFXP(SBV(3772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13173, 16), 8), SFXP(SBV(-20398, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36714, 16), 8), UFXP(BV(22519, 16), 8)), UFXP(BV(18277, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16851, 16), 8), SFXP(SBV(-9958, 16), 8)), SFXP(SBV(26809, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51353, 16), 8), UFXP(BV(52528, 16), 8)), UFXP(BV(64361, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53111, 16), 8), UFXP(BV(44630, 16), 8)), UFXP(BV(8481, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13495, 16), 8), SFXP(SBV(6171, 16), 8)), SFXP(SBV(19666, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25315, 16), 8), SFXP(SBV(1553, 16), 8)), SFXP(SBV(-23762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3583, 16), 8), SFXP(SBV(-10826, 16), 8)), SFXP(SBV(-7243, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14107, 16), 8), SFXP(SBV(2950, 16), 8)), SFXP(SBV(-17057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22699, 16), 8), SFXP(SBV(2286, 16), 8)), SFXP(SBV(-20413, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44508, 16), 8), UFXP(BV(38491, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(55350, 16), 8), UFXP(BV(21478, 16), 8)), UFXP(BV(56258, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4886, 16), 8), SFXP(SBV(-22605, 16), 8)), SFXP(SBV(17719, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31352, 16), 8), SFXP(SBV(5562, 16), 8)), SFXP(SBV(-25790, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3415, 16), 8), SFXP(SBV(-3395, 16), 8)), SFXP(SBV(20, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-3833, 16), 8), SFXP(SBV(11779, 16), 8)), SFXP(SBV(20245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14227, 16), 8), UFXP(BV(33591, 16), 8)), UFXP(BV(31786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46192, 16), 8), UFXP(BV(63669, 16), 8)), UFXP(BV(48059, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64194, 16), 8), UFXP(BV(4324, 16), 8)), UFXP(BV(59870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21713, 16), 8), SFXP(SBV(17677, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13545, 16), 8), UFXP(BV(10417, 16), 8)), UFXP(BV(26877, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40310, 16), 8), UFXP(BV(45500, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16211, 16), 8), SFXP(SBV(-10237, 16), 8)), SFXP(SBV(5974, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32653, 16), 8), SFXP(SBV(10578, 16), 8)), SFXP(SBV(-22305, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37642, 16), 8), UFXP(BV(13133, 16), 8)), UFXP(BV(24509, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2196, 16), 8), UFXP(BV(28578, 16), 8)), UFXP(BV(39154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12874, 16), 8), SFXP(SBV(-30008, 16), 8)), SFXP(SBV(22654, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29774, 16), 8), UFXP(BV(17086, 16), 8)), UFXP(BV(12688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13990, 16), 8), SFXP(SBV(-13111, 16), 8)), SFXP(SBV(-27101, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19049, 16), 8), UFXP(BV(58423, 16), 8)), UFXP(BV(26162, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21694, 16), 8), UFXP(BV(3819, 16), 8)), UFXP(BV(17875, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58276, 16), 8), UFXP(BV(1977, 16), 8)), UFXP(BV(56829, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29902, 16), 8), SFXP(SBV(25138, 16), 8)), SFXP(SBV(-12883, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62801, 16), 8), UFXP(BV(1148, 16), 8)), UFXP(BV(61653, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4820, 16), 8), SFXP(SBV(-2562, 16), 8)), SFXP(SBV(-7382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58176, 16), 8), UFXP(BV(25139, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18376, 16), 8), UFXP(BV(53560, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6666, 16), 8), SFXP(SBV(23916, 16), 8)), SFXP(SBV(-17250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57220, 16), 8), UFXP(BV(18540, 16), 8)), UFXP(BV(38680, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11044, 16), 8), SFXP(SBV(25832, 16), 8)), SFXP(SBV(-28660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19837, 16), 8), UFXP(BV(21998, 16), 8)), UFXP(BV(41835, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32285, 16), 8), SFXP(SBV(-387, 16), 8)), SFXP(SBV(-31898, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17705, 16), 8), SFXP(SBV(-12583, 16), 8)), SFXP(SBV(30288, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62292, 16), 8), UFXP(BV(15062, 16), 8)), UFXP(BV(11818, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31475, 16), 8), UFXP(BV(44628, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13829, 16), 8), SFXP(SBV(-18025, 16), 8)), SFXP(SBV(4196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13328, 16), 8), UFXP(BV(64685, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15738, 16), 8), SFXP(SBV(15032, 16), 8)), SFXP(SBV(706, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26956, 16), 8), SFXP(SBV(-5576, 16), 8)), SFXP(SBV(2688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1569, 16), 8), SFXP(SBV(25277, 16), 8)), SFXP(SBV(26846, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29631, 16), 8), SFXP(SBV(14909, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18324, 16), 8), UFXP(BV(36957, 16), 8)), UFXP(BV(23873, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8122, 16), 8), SFXP(SBV(25815, 16), 8)), SFXP(SBV(31599, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-185, 16), 8), SFXP(SBV(-15619, 16), 8)), SFXP(SBV(15434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5730, 16), 8), SFXP(SBV(-575, 16), 8)), SFXP(SBV(5155, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59531, 16), 8), UFXP(BV(40037, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17487, 16), 8), UFXP(BV(24795, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5929, 16), 8), SFXP(SBV(15845, 16), 8)), SFXP(SBV(26243, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43795, 16), 8), UFXP(BV(6267, 16), 8)), UFXP(BV(37528, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24397, 16), 8), SFXP(SBV(7284, 16), 8)), SFXP(SBV(-31681, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1877, 16), 8), SFXP(SBV(14453, 16), 8)), SFXP(SBV(-16330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17782, 16), 8), UFXP(BV(14501, 16), 8)), UFXP(BV(3281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12929, 16), 8), SFXP(SBV(26244, 16), 8)), SFXP(SBV(26363, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8449, 16), 8), SFXP(SBV(17082, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18828, 16), 8), UFXP(BV(5397, 16), 8)), UFXP(BV(3717, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38244, 16), 8), UFXP(BV(89, 16), 8)), UFXP(BV(38333, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21156, 16), 8), UFXP(BV(10794, 16), 8)), UFXP(BV(31950, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23931, 16), 8), UFXP(BV(34681, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18485, 16), 8), SFXP(SBV(3907, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4264, 16), 8), SFXP(SBV(-18810, 16), 8)), SFXP(SBV(23074, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2876, 16), 8), UFXP(BV(34738, 16), 8)), UFXP(BV(37614, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22432, 16), 8), UFXP(BV(44696, 16), 8)), UFXP(BV(1592, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18132, 16), 8), UFXP(BV(38680, 16), 8)), UFXP(BV(56812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14508, 16), 8), SFXP(SBV(-22511, 16), 8)), SFXP(SBV(8003, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27410, 16), 8), SFXP(SBV(-27862, 16), 8)), SFXP(SBV(452, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65280, 16), 8), UFXP(BV(15605, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3477, 16), 8), UFXP(BV(25693, 16), 8)), UFXP(BV(21283, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31127, 16), 8), SFXP(SBV(-91, 16), 8)), SFXP(SBV(31036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31916, 16), 8), UFXP(BV(19080, 16), 8)), UFXP(BV(50996, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(39348, 16), 8), UFXP(BV(31310, 16), 8)), UFXP(BV(28316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30225, 16), 8), SFXP(SBV(21385, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24456, 16), 8), SFXP(SBV(-16022, 16), 8)), SFXP(SBV(8434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7928, 16), 8), SFXP(SBV(-7723, 16), 8)), SFXP(SBV(22972, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32284, 16), 8), SFXP(SBV(-27378, 16), 8)), SFXP(SBV(4906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22076, 16), 8), UFXP(BV(56919, 16), 8)), UFXP(BV(13459, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15496, 16), 8), SFXP(SBV(12777, 16), 8)), SFXP(SBV(-28273, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6838, 16), 8), UFXP(BV(42078, 16), 8)), UFXP(BV(30296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35543, 16), 8), UFXP(BV(17427, 16), 8)), UFXP(BV(18116, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2664, 16), 8), UFXP(BV(64370, 16), 8)), UFXP(BV(14490, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15121, 16), 8), SFXP(SBV(-3801, 16), 8)), SFXP(SBV(-18922, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20267, 16), 8), UFXP(BV(60985, 16), 8)), UFXP(BV(24818, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11511, 16), 8), SFXP(SBV(-10716, 16), 8)), SFXP(SBV(-23092, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20011, 16), 8), UFXP(BV(28624, 16), 8)), UFXP(BV(48635, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29397, 16), 8), SFXP(SBV(-32626, 16), 8)), SFXP(SBV(10958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2032, 16), 8), SFXP(SBV(9505, 16), 8)), SFXP(SBV(-7473, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39735, 16), 8), UFXP(BV(14501, 16), 8)), UFXP(BV(22547, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4045, 16), 8), SFXP(SBV(31360, 16), 8)), SFXP(SBV(28775, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19008, 16), 8), SFXP(SBV(-22134, 16), 8)), SFXP(SBV(-5049, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26784, 16), 8), UFXP(BV(52152, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17264, 16), 8), SFXP(SBV(443, 16), 8)), SFXP(SBV(-17707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16408, 16), 8), SFXP(SBV(-6756, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13899, 16), 8), SFXP(SBV(-21058, 16), 8)), SFXP(SBV(30579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22144, 16), 8), SFXP(SBV(-30494, 16), 8)), SFXP(SBV(-8350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22919, 16), 8), SFXP(SBV(-8727, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27767, 16), 8), UFXP(BV(62865, 16), 8)), UFXP(BV(25096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18319, 16), 8), SFXP(SBV(11227, 16), 8)), SFXP(SBV(7092, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21881, 16), 8), UFXP(BV(14474, 16), 8)), UFXP(BV(7407, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40198, 16), 8), UFXP(BV(33639, 16), 8)), UFXP(BV(6559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5478, 16), 8), SFXP(SBV(658, 16), 8)), SFXP(SBV(-14081, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28201, 16), 8), UFXP(BV(20956, 16), 8)), UFXP(BV(49157, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(7732, 16), 8), UFXP(BV(2542, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43037, 16), 8), UFXP(BV(35561, 16), 8)), UFXP(BV(7476, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59609, 16), 8), UFXP(BV(7589, 16), 8)), UFXP(BV(1662, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1316, 16), 8), SFXP(SBV(-13850, 16), 8)), SFXP(SBV(-12534, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1066, 16), 8), SFXP(SBV(-24850, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11372, 16), 8), SFXP(SBV(26054, 16), 8)), SFXP(SBV(14682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19001, 16), 8), SFXP(SBV(-28241, 16), 8)), SFXP(SBV(9240, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51440, 16), 8), UFXP(BV(43201, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28631, 16), 8), SFXP(SBV(-26905, 16), 8)), SFXP(SBV(1726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28061, 16), 8), SFXP(SBV(-10963, 16), 8)), SFXP(SBV(-22043, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35073, 16), 8), UFXP(BV(34002, 16), 8)), UFXP(BV(5350, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58998, 16), 8), UFXP(BV(56536, 16), 8)), UFXP(BV(2462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2931, 16), 8), UFXP(BV(38757, 16), 8)), UFXP(BV(41688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12717, 16), 8), SFXP(SBV(-6903, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24160, 16), 8), UFXP(BV(43457, 16), 8)), UFXP(BV(38023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13875, 16), 8), UFXP(BV(28321, 16), 8)), UFXP(BV(27648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24350, 16), 8), SFXP(SBV(-21040, 16), 8)), SFXP(SBV(-3310, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24544, 16), 8), UFXP(BV(34164, 16), 8)), UFXP(BV(58708, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19623, 16), 8), SFXP(SBV(25704, 16), 8)), SFXP(SBV(-20209, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33715, 16), 8), UFXP(BV(27144, 16), 8)), UFXP(BV(6571, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10494, 16), 8), UFXP(BV(59520, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15276, 16), 8), SFXP(SBV(-28109, 16), 8)), SFXP(SBV(-26620, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10562, 16), 8), SFXP(SBV(-78, 16), 8)), SFXP(SBV(3218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29792, 16), 8), SFXP(SBV(13061, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58931, 16), 8), UFXP(BV(13938, 16), 8)), UFXP(BV(62788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10490, 16), 8), UFXP(BV(30530, 16), 8)), UFXP(BV(41020, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46034, 16), 8), UFXP(BV(29439, 16), 8)), UFXP(BV(9937, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16283, 16), 8), SFXP(SBV(8609, 16), 8)), SFXP(SBV(-24892, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1928, 16), 8), SFXP(SBV(4515, 16), 8)), SFXP(SBV(-2587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42098, 16), 8), UFXP(BV(15969, 16), 8)), UFXP(BV(58067, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24350, 16), 8), SFXP(SBV(-8561, 16), 8)), SFXP(SBV(27866, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26660, 16), 8), UFXP(BV(56478, 16), 8)), UFXP(BV(35718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17349, 16), 8), SFXP(SBV(-9279, 16), 8)), SFXP(SBV(26628, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31936, 16), 8), SFXP(SBV(2877, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4400, 16), 8), SFXP(SBV(17385, 16), 8)), SFXP(SBV(12985, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8532, 16), 8), SFXP(SBV(-18015, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2617, 16), 8), SFXP(SBV(-6434, 16), 8)), SFXP(SBV(3817, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(26696, 16), 8), SFXP(SBV(-25779, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19343, 16), 8), SFXP(SBV(-15571, 16), 8)), SFXP(SBV(-30622, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46433, 16), 8), UFXP(BV(6690, 16), 8)), UFXP(BV(53123, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29538, 16), 8), UFXP(BV(54100, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12020, 16), 8), UFXP(BV(13385, 16), 8)), UFXP(BV(64171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19178, 16), 8), SFXP(SBV(-22499, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11525, 16), 8), UFXP(BV(2237, 16), 8)), UFXP(BV(13762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15049, 16), 8), SFXP(SBV(26713, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14697, 16), 8), SFXP(SBV(23172, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11469, 16), 8), SFXP(SBV(-28564, 16), 8)), SFXP(SBV(17095, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3412, 16), 8), SFXP(SBV(-21709, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24905, 16), 8), SFXP(SBV(-8656, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9727, 16), 8), SFXP(SBV(10349, 16), 8)), SFXP(SBV(-622, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49215, 16), 8), UFXP(BV(32746, 16), 8)), UFXP(BV(16425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44264, 16), 8), UFXP(BV(14885, 16), 8)), UFXP(BV(29379, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13006, 16), 8), SFXP(SBV(1793, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25867, 16), 8), SFXP(SBV(8608, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26809, 16), 8), UFXP(BV(29233, 16), 8)), UFXP(BV(56042, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13827, 16), 8), SFXP(SBV(-27524, 16), 8)), SFXP(SBV(-13697, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44117, 16), 8), UFXP(BV(14661, 16), 8)), UFXP(BV(58778, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(24109, 16), 8), UFXP(BV(24120, 16), 8)), UFXP(BV(43295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18955, 16), 8), SFXP(SBV(-22206, 16), 8)), SFXP(SBV(3251, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3584, 16), 8), UFXP(BV(28838, 16), 8)), UFXP(BV(32422, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2636, 16), 8), SFXP(SBV(-16764, 16), 8)), SFXP(SBV(-19400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36345, 16), 8), UFXP(BV(51289, 16), 8)), UFXP(BV(50592, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15852, 16), 8), UFXP(BV(50378, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63969, 16), 8), UFXP(BV(53839, 16), 8)), UFXP(BV(18350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16396, 16), 8), SFXP(SBV(-21451, 16), 8)), SFXP(SBV(5055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17163, 16), 8), SFXP(SBV(27938, 16), 8)), SFXP(SBV(-10775, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7985, 16), 8), SFXP(SBV(-23321, 16), 8)), SFXP(SBV(-31306, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32207, 16), 8), UFXP(BV(51293, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12007, 16), 8), SFXP(SBV(18368, 16), 8)), SFXP(SBV(-6361, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3288, 16), 8), SFXP(SBV(-11784, 16), 8)), SFXP(SBV(-15072, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29543, 16), 8), SFXP(SBV(3268, 16), 8)), SFXP(SBV(-16082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30860, 16), 8), UFXP(BV(49586, 16), 8)), UFXP(BV(13662, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13484, 16), 8), SFXP(SBV(-6279, 16), 8)), SFXP(SBV(19763, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15589, 16), 8), SFXP(SBV(1790, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4939, 16), 8), SFXP(SBV(-32192, 16), 8)), SFXP(SBV(-28405, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2358, 16), 8), SFXP(SBV(10320, 16), 8)), SFXP(SBV(-29520, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19111, 16), 8), SFXP(SBV(11147, 16), 8)), SFXP(SBV(30258, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52553, 16), 8), UFXP(BV(64976, 16), 8)), UFXP(BV(34800, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11375, 16), 8), SFXP(SBV(-29677, 16), 8)), SFXP(SBV(24484, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17091, 16), 8), SFXP(SBV(27755, 16), 8)), SFXP(SBV(10664, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59512, 16), 8), UFXP(BV(37347, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6251, 16), 8), UFXP(BV(10043, 16), 8)), UFXP(BV(16294, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10618, 16), 8), SFXP(SBV(9604, 16), 8)), SFXP(SBV(-1014, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(41960, 16), 8), UFXP(BV(5605, 16), 8)), UFXP(BV(1191, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-170, 16), 8), SFXP(SBV(30039, 16), 8)), SFXP(SBV(-19947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13905, 16), 8), SFXP(SBV(7661, 16), 8)), SFXP(SBV(21566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5691, 16), 8), UFXP(BV(31827, 16), 8)), UFXP(BV(39400, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30251, 16), 8), SFXP(SBV(6782, 16), 8)), SFXP(SBV(28503, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23144, 16), 8), UFXP(BV(61924, 16), 8)), UFXP(BV(27757, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60372, 16), 8), UFXP(BV(39991, 16), 8)), UFXP(BV(34827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48495, 16), 8), UFXP(BV(12143, 16), 8)), UFXP(BV(36352, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(542, 16), 8), SFXP(SBV(18547, 16), 8)), SFXP(SBV(19089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13063, 16), 8), UFXP(BV(42504, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11982, 16), 8), SFXP(SBV(19913, 16), 8)), SFXP(SBV(14518, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53436, 16), 8), UFXP(BV(59644, 16), 8)), UFXP(BV(47544, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2778, 16), 8), SFXP(SBV(28784, 16), 8)), SFXP(SBV(-26006, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33929, 16), 8), UFXP(BV(42604, 16), 8)), UFXP(BV(10997, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47267, 16), 8), UFXP(BV(32561, 16), 8)), UFXP(BV(14706, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20587, 16), 8), UFXP(BV(39441, 16), 8)), UFXP(BV(46682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13100, 16), 8), SFXP(SBV(-15962, 16), 8)), SFXP(SBV(-2862, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14490, 16), 8), SFXP(SBV(18158, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35464, 16), 8), UFXP(BV(12130, 16), 8)), UFXP(BV(47594, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4111, 16), 8), SFXP(SBV(8764, 16), 8)), SFXP(SBV(9665, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25972, 16), 8), SFXP(SBV(-9842, 16), 8)), SFXP(SBV(29722, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15023, 16), 8), SFXP(SBV(-25080, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51614, 16), 8), UFXP(BV(26333, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4030, 16), 8), UFXP(BV(58615, 16), 8)), UFXP(BV(62645, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12481, 16), 8), SFXP(SBV(-16734, 16), 8)), SFXP(SBV(4253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18836, 16), 8), UFXP(BV(31977, 16), 8)), UFXP(BV(52395, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10641, 16), 8), UFXP(BV(17410, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22448, 16), 8), SFXP(SBV(-18576, 16), 8)), SFXP(SBV(-24512, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(43108, 16), 8), UFXP(BV(20455, 16), 8)), UFXP(BV(36559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27270, 16), 8), UFXP(BV(8937, 16), 8)), UFXP(BV(18333, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5727, 16), 8), SFXP(SBV(-19663, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32628, 16), 8), UFXP(BV(10193, 16), 8)), UFXP(BV(42821, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16888, 16), 8), SFXP(SBV(-5872, 16), 8)), SFXP(SBV(11016, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64807, 16), 8), UFXP(BV(39097, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17251, 16), 8), SFXP(SBV(-31153, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27983, 16), 8), SFXP(SBV(-23994, 16), 8)), SFXP(SBV(3989, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31230, 16), 8), SFXP(SBV(-15105, 16), 8)), SFXP(SBV(19201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4125, 16), 8), UFXP(BV(14290, 16), 8)), UFXP(BV(55371, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44249, 16), 8), UFXP(BV(22526, 16), 8)), UFXP(BV(1239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5581, 16), 8), SFXP(SBV(17532, 16), 8)), SFXP(SBV(11951, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8447, 16), 8), UFXP(BV(26947, 16), 8)), UFXP(BV(35394, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18221, 16), 8), SFXP(SBV(-12894, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27272, 16), 8), SFXP(SBV(31316, 16), 8)), SFXP(SBV(-6203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50456, 16), 8), UFXP(BV(16927, 16), 8)), UFXP(BV(1847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64426, 16), 8), UFXP(BV(44938, 16), 8)), UFXP(BV(19488, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34184, 16), 8), UFXP(BV(35680, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20939, 16), 8), SFXP(SBV(-9087, 16), 8)), SFXP(SBV(-11852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18488, 16), 8), UFXP(BV(8508, 16), 8)), UFXP(BV(9980, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2267, 16), 8), SFXP(SBV(14031, 16), 8)), SFXP(SBV(16298, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30242, 16), 8), SFXP(SBV(-600, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31216, 16), 8), UFXP(BV(35741, 16), 8)), UFXP(BV(61011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27560, 16), 8), SFXP(SBV(1170, 16), 8)), SFXP(SBV(-26390, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57671, 16), 8), UFXP(BV(13157, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26160, 16), 8), SFXP(SBV(-2261, 16), 8)), SFXP(SBV(-31098, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(47519, 16), 8), UFXP(BV(64278, 16), 8)), UFXP(BV(3800, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(805, 16), 8), SFXP(SBV(14964, 16), 8)), SFXP(SBV(15769, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17922, 16), 8), SFXP(SBV(-5695, 16), 8)), SFXP(SBV(23617, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27507, 16), 8), SFXP(SBV(12091, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29857, 16), 8), SFXP(SBV(-6979, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21615, 16), 8), UFXP(BV(46060, 16), 8)), UFXP(BV(2139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22176, 16), 8), SFXP(SBV(23424, 16), 8)), SFXP(SBV(-2512, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58330, 16), 8), UFXP(BV(17209, 16), 8)), UFXP(BV(41121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26883, 16), 8), SFXP(SBV(18145, 16), 8)), SFXP(SBV(-8738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18926, 16), 8), SFXP(SBV(30015, 16), 8)), SFXP(SBV(9225, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13769, 16), 8), SFXP(SBV(-28706, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22045, 16), 8), SFXP(SBV(1836, 16), 8)), SFXP(SBV(-23881, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28797, 16), 8), SFXP(SBV(17530, 16), 8)), SFXP(SBV(11267, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27597, 16), 8), SFXP(SBV(11715, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22344, 16), 8), SFXP(SBV(6887, 16), 8)), SFXP(SBV(29231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14657, 16), 8), SFXP(SBV(-17007, 16), 8)), SFXP(SBV(-2350, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53314, 16), 8), UFXP(BV(27642, 16), 8)), UFXP(BV(15420, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(199, 16), 8), SFXP(SBV(14048, 16), 8)), SFXP(SBV(-13849, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30985, 16), 8), UFXP(BV(59761, 16), 8)), UFXP(BV(25210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42472, 16), 8), UFXP(BV(30012, 16), 8)), UFXP(BV(63979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19433, 16), 8), SFXP(SBV(20191, 16), 8)), SFXP(SBV(25373, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54930, 16), 8), UFXP(BV(29651, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12133, 16), 8), SFXP(SBV(9405, 16), 8)), SFXP(SBV(-21538, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10302, 16), 8), SFXP(SBV(-13766, 16), 8)), SFXP(SBV(-29685, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3969, 16), 8), SFXP(SBV(14906, 16), 8)), SFXP(SBV(-18875, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13712, 16), 8), UFXP(BV(52188, 16), 8)), UFXP(BV(42807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29548, 16), 8), SFXP(SBV(-16112, 16), 8)), SFXP(SBV(19876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18697, 16), 8), SFXP(SBV(-1037, 16), 8)), SFXP(SBV(19734, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19288, 16), 8), UFXP(BV(51066, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1359, 16), 8), SFXP(SBV(26704, 16), 8)), SFXP(SBV(25345, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18791, 16), 8), SFXP(SBV(22872, 16), 8)), SFXP(SBV(4081, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3623, 16), 8), UFXP(BV(53679, 16), 8)), UFXP(BV(57302, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16258, 16), 8), UFXP(BV(56335, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21091, 16), 8), SFXP(SBV(5023, 16), 8)), SFXP(SBV(-16068, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19708, 16), 8), SFXP(SBV(-22238, 16), 8)), SFXP(SBV(23590, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18688, 16), 8), SFXP(SBV(-28233, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12136, 16), 8), SFXP(SBV(14507, 16), 8)), SFXP(SBV(-2371, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60254, 16), 8), UFXP(BV(8606, 16), 8)), UFXP(BV(59490, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35304, 16), 8), UFXP(BV(38768, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61528, 16), 8), UFXP(BV(45325, 16), 8)), UFXP(BV(16203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60627, 16), 8), UFXP(BV(61256, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28923, 16), 8), SFXP(SBV(-8911, 16), 8)), SFXP(SBV(-23729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20830, 16), 8), SFXP(SBV(-19394, 16), 8)), SFXP(SBV(1436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26970, 16), 8), UFXP(BV(23515, 16), 8)), UFXP(BV(52509, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18542, 16), 8), SFXP(SBV(-27063, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40158, 16), 8), UFXP(BV(369, 16), 8)), UFXP(BV(39789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13259, 16), 8), SFXP(SBV(19318, 16), 8)), SFXP(SBV(32577, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16361, 16), 8), SFXP(SBV(25187, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52021, 16), 8), UFXP(BV(7118, 16), 8)), UFXP(BV(44903, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19298, 16), 8), SFXP(SBV(6369, 16), 8)), SFXP(SBV(-12929, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18980, 16), 8), SFXP(SBV(-12920, 16), 8)), SFXP(SBV(31900, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22880, 16), 8), SFXP(SBV(18178, 16), 8)), SFXP(SBV(4702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29258, 16), 8), UFXP(BV(9198, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3420, 16), 8), SFXP(SBV(2826, 16), 8)), SFXP(SBV(6246, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40810, 16), 8), UFXP(BV(45334, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5755, 16), 8), SFXP(SBV(-24350, 16), 8)), SFXP(SBV(30105, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10003, 16), 8), SFXP(SBV(12043, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28154, 16), 8), SFXP(SBV(7395, 16), 8)), SFXP(SBV(20759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(24187, 16), 8), SFXP(SBV(28297, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24545, 16), 8), SFXP(SBV(-6725, 16), 8)), SFXP(SBV(10575, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44816, 16), 8), UFXP(BV(30570, 16), 8)), UFXP(BV(43244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24222, 16), 8), SFXP(SBV(25478, 16), 8)), SFXP(SBV(14175, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30909, 16), 8), SFXP(SBV(24956, 16), 8)), SFXP(SBV(-9671, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1243, 16), 8), UFXP(BV(49697, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25117, 16), 8), SFXP(SBV(26326, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38744, 16), 8), UFXP(BV(4902, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3961, 16), 8), UFXP(BV(61066, 16), 8)), UFXP(BV(27350, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12933, 16), 8), SFXP(SBV(-27885, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21812, 16), 8), UFXP(BV(9876, 16), 8)), UFXP(BV(31688, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3950, 16), 8), UFXP(BV(17056, 16), 8)), UFXP(BV(1025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18892, 16), 8), UFXP(BV(51852, 16), 8)), UFXP(BV(5208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2923, 16), 8), SFXP(SBV(-28193, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39426, 16), 8), UFXP(BV(16096, 16), 8)), UFXP(BV(55522, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5594, 16), 8), SFXP(SBV(-30675, 16), 8)), SFXP(SBV(29267, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7757, 16), 8), SFXP(SBV(-19690, 16), 8)), SFXP(SBV(-6798, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35334, 16), 8), UFXP(BV(42047, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22105, 16), 8), UFXP(BV(49653, 16), 8)), UFXP(BV(37988, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(937, 16), 8), UFXP(BV(59990, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(625, 16), 8), UFXP(BV(12676, 16), 8)), UFXP(BV(53485, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57792, 16), 8), UFXP(BV(4826, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54739, 16), 8), UFXP(BV(57160, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23672, 16), 8), UFXP(BV(22182, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24029, 16), 8), SFXP(SBV(18841, 16), 8)), SFXP(SBV(-5188, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40331, 16), 8), UFXP(BV(950, 16), 8)), UFXP(BV(41281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16271, 16), 8), SFXP(SBV(24840, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2341, 16), 8), SFXP(SBV(32357, 16), 8)), SFXP(SBV(-30016, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3738, 16), 8), SFXP(SBV(-17213, 16), 8)), SFXP(SBV(13475, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25712, 16), 8), UFXP(BV(54030, 16), 8)), UFXP(BV(37218, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(563, 16), 8), UFXP(BV(41927, 16), 8)), UFXP(BV(42490, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57885, 16), 8), UFXP(BV(60126, 16), 8)), UFXP(BV(63295, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47833, 16), 8), UFXP(BV(28981, 16), 8)), UFXP(BV(18852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40867, 16), 8), UFXP(BV(65170, 16), 8)), UFXP(BV(48837, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5470, 16), 8), SFXP(SBV(-10234, 16), 8)), SFXP(SBV(-4764, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14230, 16), 8), SFXP(SBV(-2596, 16), 8)), SFXP(SBV(-11634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13885, 16), 8), UFXP(BV(31357, 16), 8)), UFXP(BV(62349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53823, 16), 8), UFXP(BV(13730, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29582, 16), 8), SFXP(SBV(23818, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16977, 16), 8), SFXP(SBV(-26800, 16), 8)), SFXP(SBV(-9823, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25195, 16), 8), SFXP(SBV(-9470, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6059, 16), 8), SFXP(SBV(5268, 16), 8)), SFXP(SBV(791, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(461, 16), 8), UFXP(BV(41279, 16), 8)), UFXP(BV(8798, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6992, 16), 8), UFXP(BV(44245, 16), 8)), UFXP(BV(28793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54485, 16), 8), UFXP(BV(43068, 16), 8)), UFXP(BV(11417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50301, 16), 8), UFXP(BV(57146, 16), 8)), UFXP(BV(41911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25628, 16), 8), SFXP(SBV(-30029, 16), 8)), SFXP(SBV(8471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-467, 16), 8), SFXP(SBV(10302, 16), 8)), SFXP(SBV(-18793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33834, 16), 8), UFXP(BV(5293, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35575, 16), 8), UFXP(BV(48164, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32717, 16), 8), SFXP(SBV(13620, 16), 8)), SFXP(SBV(-19097, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18751, 16), 8), UFXP(BV(48883, 16), 8)), UFXP(BV(41545, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63786, 16), 8), UFXP(BV(49596, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6001, 16), 8), SFXP(SBV(-9033, 16), 8)), SFXP(SBV(-15034, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34891, 16), 8), UFXP(BV(26714, 16), 8)), UFXP(BV(36451, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28437, 16), 8), SFXP(SBV(9245, 16), 8)), SFXP(SBV(27854, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7462, 16), 8), SFXP(SBV(-26299, 16), 8)), SFXP(SBV(18837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24716, 16), 8), UFXP(BV(8078, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50805, 16), 8), UFXP(BV(43219, 16), 8)), UFXP(BV(7586, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27437, 16), 8), UFXP(BV(15597, 16), 8)), UFXP(BV(43034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10932, 16), 8), SFXP(SBV(5001, 16), 8)), SFXP(SBV(5931, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50690, 16), 8), UFXP(BV(4785, 16), 8)), UFXP(BV(45905, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(874, 16), 8), SFXP(SBV(-29912, 16), 8)), SFXP(SBV(-29038, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28346, 16), 8), UFXP(BV(54460, 16), 8)), UFXP(BV(17270, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21728, 16), 8), SFXP(SBV(21457, 16), 8)), SFXP(SBV(13846, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4595, 16), 8), SFXP(SBV(-1842, 16), 8)), SFXP(SBV(6437, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29682, 16), 8), SFXP(SBV(11831, 16), 8)), SFXP(SBV(4507, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33039, 16), 8), UFXP(BV(27215, 16), 8)), UFXP(BV(38922, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63620, 16), 8), UFXP(BV(12224, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22953, 16), 8), SFXP(SBV(22660, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9519, 16), 8), SFXP(SBV(20273, 16), 8)), SFXP(SBV(10754, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8394, 16), 8), SFXP(SBV(-31273, 16), 8)), SFXP(SBV(-25869, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47551, 16), 8), UFXP(BV(6991, 16), 8)), UFXP(BV(40560, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54422, 16), 8), UFXP(BV(31277, 16), 8)), UFXP(BV(23145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10441, 16), 8), UFXP(BV(25908, 16), 8)), UFXP(BV(36349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55113, 16), 8), UFXP(BV(42351, 16), 8)), UFXP(BV(12762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-583, 16), 8), SFXP(SBV(8634, 16), 8)), SFXP(SBV(-19662, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49199, 16), 8), UFXP(BV(15285, 16), 8)), UFXP(BV(53943, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15985, 16), 8), UFXP(BV(27041, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56683, 16), 8), UFXP(BV(5274, 16), 8)), UFXP(BV(61957, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56077, 16), 8), UFXP(BV(54745, 16), 8)), UFXP(BV(64384, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51400, 16), 8), UFXP(BV(8892, 16), 8)), UFXP(BV(60292, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52884, 16), 8), UFXP(BV(34733, 16), 8)), UFXP(BV(18151, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17413, 16), 8), SFXP(SBV(12109, 16), 8)), SFXP(SBV(-29522, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9661, 16), 8), SFXP(SBV(27112, 16), 8)), SFXP(SBV(-17451, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32590, 16), 8), UFXP(BV(36816, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21040, 16), 8), SFXP(SBV(19938, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10331, 16), 8), SFXP(SBV(-7004, 16), 8)), SFXP(SBV(-3327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51265, 16), 8), UFXP(BV(17326, 16), 8)), UFXP(BV(3055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30539, 16), 8), SFXP(SBV(-12962, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-376, 16), 8), SFXP(SBV(9394, 16), 8)), SFXP(SBV(9018, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9644, 16), 8), SFXP(SBV(-16228, 16), 8)), SFXP(SBV(-25872, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2167, 16), 8), SFXP(SBV(-5665, 16), 8)), SFXP(SBV(-7832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33092, 16), 8), UFXP(BV(51010, 16), 8)), UFXP(BV(47618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13520, 16), 8), UFXP(BV(65498, 16), 8)), UFXP(BV(51242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17062, 16), 8), UFXP(BV(55658, 16), 8)), UFXP(BV(7184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(143, 16), 8), SFXP(SBV(-5080, 16), 8)), SFXP(SBV(5223, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2365, 16), 8), SFXP(SBV(-29005, 16), 8)), SFXP(SBV(5813, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37152, 16), 8), UFXP(BV(16057, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23285, 16), 8), SFXP(SBV(-13636, 16), 8)), SFXP(SBV(-4893, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10184, 16), 8), SFXP(SBV(-1638, 16), 8)), SFXP(SBV(8546, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(41665, 16), 8), UFXP(BV(9980, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13248, 16), 8), SFXP(SBV(1852, 16), 8)), SFXP(SBV(-11396, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8812, 16), 8), SFXP(SBV(-636, 16), 8)), SFXP(SBV(8176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13910, 16), 8), SFXP(SBV(14078, 16), 8)), SFXP(SBV(-168, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40152, 16), 8), UFXP(BV(15077, 16), 8)), UFXP(BV(55229, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10219, 16), 8), SFXP(SBV(6832, 16), 8)), SFXP(SBV(10575, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12485, 16), 8), SFXP(SBV(-25070, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21920, 16), 8), UFXP(BV(35662, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20725, 16), 8), SFXP(SBV(395, 16), 8)), SFXP(SBV(-31979, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40295, 16), 8), UFXP(BV(50525, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25287, 16), 8), SFXP(SBV(-12370, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53215, 16), 8), UFXP(BV(35732, 16), 8)), UFXP(BV(23411, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61567, 16), 8), UFXP(BV(2687, 16), 8)), UFXP(BV(58880, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19250, 16), 8), UFXP(BV(57359, 16), 8)), UFXP(BV(11073, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1779, 16), 8), SFXP(SBV(17052, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7385, 16), 8), UFXP(BV(22182, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21205, 16), 8), UFXP(BV(11120, 16), 8)), UFXP(BV(3588, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43273, 16), 8), UFXP(BV(29983, 16), 8)), UFXP(BV(7720, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6651, 16), 8), SFXP(SBV(20586, 16), 8)), SFXP(SBV(13935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38043, 16), 8), UFXP(BV(19269, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24650, 16), 8), UFXP(BV(7005, 16), 8)), UFXP(BV(17645, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21025, 16), 8), SFXP(SBV(6104, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45120, 16), 8), UFXP(BV(46032, 16), 8)), UFXP(BV(25616, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21155, 16), 8), SFXP(SBV(23863, 16), 8)), SFXP(SBV(2708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35732, 16), 8), UFXP(BV(39442, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9026, 16), 8), SFXP(SBV(23189, 16), 8)), SFXP(SBV(14163, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19461, 16), 8), UFXP(BV(33359, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31225, 16), 8), SFXP(SBV(31912, 16), 8)), SFXP(SBV(-2399, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30981, 16), 8), SFXP(SBV(18413, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13085, 16), 8), SFXP(SBV(11326, 16), 8)), SFXP(SBV(-1759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23892, 16), 8), SFXP(SBV(22173, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21223, 16), 8), SFXP(SBV(-23753, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27594, 16), 8), SFXP(SBV(26218, 16), 8)), SFXP(SBV(11724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8515, 16), 8), SFXP(SBV(-15311, 16), 8)), SFXP(SBV(23826, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2417, 16), 8), SFXP(SBV(7769, 16), 8)), SFXP(SBV(10186, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45280, 16), 8), UFXP(BV(52843, 16), 8)), UFXP(BV(32587, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1968, 16), 8), SFXP(SBV(-18838, 16), 8)), SFXP(SBV(16870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50679, 16), 8), UFXP(BV(30974, 16), 8)), UFXP(BV(19705, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17071, 16), 8), SFXP(SBV(23516, 16), 8)), SFXP(SBV(24949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21324, 16), 8), UFXP(BV(13104, 16), 8)), UFXP(BV(34428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31713, 16), 8), SFXP(SBV(24346, 16), 8)), SFXP(SBV(1300, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3935, 16), 8), UFXP(BV(46167, 16), 8)), UFXP(BV(23304, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-28390, 16), 8), SFXP(SBV(25018, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13563, 16), 8), SFXP(SBV(18345, 16), 8)), SFXP(SBV(-31908, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17603, 16), 8), SFXP(SBV(-28321, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24077, 16), 8), SFXP(SBV(16339, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7017, 16), 8), UFXP(BV(17021, 16), 8)), UFXP(BV(7797, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10633, 16), 8), SFXP(SBV(-9572, 16), 8)), SFXP(SBV(1061, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18034, 16), 8), UFXP(BV(6884, 16), 8)), UFXP(BV(26193, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10001, 16), 8), UFXP(BV(51513, 16), 8)), UFXP(BV(61514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46053, 16), 8), UFXP(BV(7732, 16), 8)), UFXP(BV(53785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23170, 16), 8), SFXP(SBV(-7694, 16), 8)), SFXP(SBV(15476, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31295, 16), 8), SFXP(SBV(-26494, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7141, 16), 8), SFXP(SBV(-472, 16), 8)), SFXP(SBV(6669, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25242, 16), 8), SFXP(SBV(-23469, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29557, 16), 8), SFXP(SBV(32400, 16), 8)), SFXP(SBV(-5256, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30238, 16), 8), SFXP(SBV(-31443, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(206, 16), 8), SFXP(SBV(-8735, 16), 8)), SFXP(SBV(-7029, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22474, 16), 8), SFXP(SBV(-1332, 16), 8)), SFXP(SBV(21142, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11191, 16), 8), SFXP(SBV(10916, 16), 8)), SFXP(SBV(22107, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14616, 16), 8), SFXP(SBV(20732, 16), 8)), SFXP(SBV(-4020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6245, 16), 8), SFXP(SBV(-9416, 16), 8)), SFXP(SBV(-3171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28182, 16), 8), SFXP(SBV(-13941, 16), 8)), SFXP(SBV(14241, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1355, 16), 8), SFXP(SBV(22409, 16), 8)), SFXP(SBV(-23764, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14009, 16), 8), SFXP(SBV(6043, 16), 8)), SFXP(SBV(-20052, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57157, 16), 8), UFXP(BV(6074, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20377, 16), 8), SFXP(SBV(7250, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4223, 16), 8), SFXP(SBV(23324, 16), 8)), SFXP(SBV(-19101, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38576, 16), 8), UFXP(BV(36311, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25287, 16), 8), SFXP(SBV(6633, 16), 8)), SFXP(SBV(-18654, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3349, 16), 8), SFXP(SBV(21999, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44129, 16), 8), UFXP(BV(7414, 16), 8)), UFXP(BV(36715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28160, 16), 8), SFXP(SBV(-26220, 16), 8)), SFXP(SBV(11156, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25106, 16), 8), UFXP(BV(9527, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12739, 16), 8), UFXP(BV(29912, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4104, 16), 8), SFXP(SBV(-6628, 16), 8)), SFXP(SBV(-10732, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12950, 16), 8), SFXP(SBV(14251, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60418, 16), 8), UFXP(BV(20826, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7245, 16), 8), UFXP(BV(16249, 16), 8)), UFXP(BV(56532, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38188, 16), 8), UFXP(BV(31866, 16), 8)), UFXP(BV(6322, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9666, 16), 8), UFXP(BV(56275, 16), 8)), UFXP(BV(18927, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57705, 16), 8), UFXP(BV(23963, 16), 8)), UFXP(BV(33742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35039, 16), 8), UFXP(BV(16431, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25959, 16), 8), SFXP(SBV(-9758, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8841, 16), 8), UFXP(BV(44826, 16), 8)), UFXP(BV(40744, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17480, 16), 8), SFXP(SBV(-7313, 16), 8)), SFXP(SBV(24793, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18278, 16), 8), SFXP(SBV(21964, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30117, 16), 8), SFXP(SBV(19860, 16), 8)), SFXP(SBV(-22875, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2328, 16), 8), SFXP(SBV(-4219, 16), 8)), SFXP(SBV(27170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17609, 16), 8), SFXP(SBV(-2461, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3092, 16), 8), SFXP(SBV(-6333, 16), 8)), SFXP(SBV(-9425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59344, 16), 8), UFXP(BV(33, 16), 8)), UFXP(BV(59377, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21168, 16), 8), SFXP(SBV(28801, 16), 8)), SFXP(SBV(7633, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6014, 16), 8), UFXP(BV(33611, 16), 8)), UFXP(BV(37939, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9585, 16), 8), SFXP(SBV(-31978, 16), 8)), SFXP(SBV(22393, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57142, 16), 8), UFXP(BV(29574, 16), 8)), UFXP(BV(47640, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64387, 16), 8), UFXP(BV(15315, 16), 8)), UFXP(BV(14166, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20245, 16), 8), UFXP(BV(54460, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3702, 16), 8), SFXP(SBV(15072, 16), 8)), SFXP(SBV(-11370, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23021, 16), 8), SFXP(SBV(15446, 16), 8)), SFXP(SBV(-12737, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52745, 16), 8), UFXP(BV(62858, 16), 8)), UFXP(BV(55423, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59185, 16), 8), UFXP(BV(2670, 16), 8)), UFXP(BV(56515, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37215, 16), 8), UFXP(BV(20914, 16), 8)), UFXP(BV(16301, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3273, 16), 8), SFXP(SBV(13255, 16), 8)), SFXP(SBV(9982, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27520, 16), 8), SFXP(SBV(-24876, 16), 8)), SFXP(SBV(-2644, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21747, 16), 8), UFXP(BV(12390, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60831, 16), 8), UFXP(BV(18386, 16), 8)), UFXP(BV(43526, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(20450, 16), 8), SFXP(SBV(-12688, 16), 8)), SFXP(SBV(-30513, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42706, 16), 8), UFXP(BV(46971, 16), 8)), UFXP(BV(36933, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52950, 16), 8), UFXP(BV(26221, 16), 8)), UFXP(BV(49494, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18692, 16), 8), SFXP(SBV(-7023, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13878, 16), 8), SFXP(SBV(21587, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-3526, 16), 8), SFXP(SBV(7345, 16), 8)), SFXP(SBV(29907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16543, 16), 8), UFXP(BV(63333, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29158, 16), 8), SFXP(SBV(27168, 16), 8)), SFXP(SBV(-1990, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8537, 16), 8), UFXP(BV(22215, 16), 8)), UFXP(BV(19922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5329, 16), 8), SFXP(SBV(2158, 16), 8)), SFXP(SBV(7487, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14197, 16), 8), UFXP(BV(51515, 16), 8)), UFXP(BV(28218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26968, 16), 8), SFXP(SBV(-25632, 16), 8)), SFXP(SBV(-12936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55531, 16), 8), UFXP(BV(17312, 16), 8)), UFXP(BV(7307, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19783, 16), 8), UFXP(BV(1434, 16), 8)), UFXP(BV(45279, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51181, 16), 8), UFXP(BV(62604, 16), 8)), UFXP(BV(54113, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19680, 16), 8), SFXP(SBV(9925, 16), 8)), SFXP(SBV(-9755, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15951, 16), 8), SFXP(SBV(-5807, 16), 8)), SFXP(SBV(-21758, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29321, 16), 8), SFXP(SBV(11147, 16), 8)), SFXP(SBV(-18174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(29677, 16), 8), UFXP(BV(4289, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-264, 16), 8), SFXP(SBV(16477, 16), 8)), SFXP(SBV(16213, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28036, 16), 8), SFXP(SBV(23789, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64461, 16), 8), UFXP(BV(31491, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30433, 16), 8), UFXP(BV(16941, 16), 8)), UFXP(BV(47847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23022, 16), 8), SFXP(SBV(20057, 16), 8)), SFXP(SBV(2965, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44003, 16), 8), UFXP(BV(18503, 16), 8)), UFXP(BV(34692, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57976, 16), 8), UFXP(BV(59829, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30104, 16), 8), SFXP(SBV(29360, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26206, 16), 8), SFXP(SBV(-22512, 16), 8)), SFXP(SBV(3694, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56984, 16), 8), UFXP(BV(34176, 16), 8)), UFXP(BV(25624, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26030, 16), 8), SFXP(SBV(-10225, 16), 8)), SFXP(SBV(-8902, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6751, 16), 8), SFXP(SBV(-15670, 16), 8)), SFXP(SBV(-22421, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31953, 16), 8), UFXP(BV(1187, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4548, 16), 8), SFXP(SBV(2940, 16), 8)), SFXP(SBV(-7488, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5110, 16), 8), SFXP(SBV(-26172, 16), 8)), SFXP(SBV(31282, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26981, 16), 8), UFXP(BV(34565, 16), 8)), UFXP(BV(57952, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13890, 16), 8), UFXP(BV(43178, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7055, 16), 8), SFXP(SBV(19146, 16), 8)), SFXP(SBV(-3348, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61244, 16), 8), UFXP(BV(19940, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2968, 16), 8), SFXP(SBV(27859, 16), 8)), SFXP(SBV(4689, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27471, 16), 8), SFXP(SBV(-7480, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18894, 16), 8), UFXP(BV(25790, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7654, 16), 8), UFXP(BV(42812, 16), 8)), UFXP(BV(50466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20085, 16), 8), SFXP(SBV(-22104, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45812, 16), 8), UFXP(BV(45651, 16), 8)), UFXP(BV(161, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-19192, 16), 8), SFXP(SBV(7324, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-6015, 16), 8), SFXP(SBV(24241, 16), 8)), SFXP(SBV(20255, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57484, 16), 8), UFXP(BV(42889, 16), 8)), UFXP(BV(14595, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39817, 16), 8), UFXP(BV(6122, 16), 8)), UFXP(BV(34683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12869, 16), 8), SFXP(SBV(30878, 16), 8)), SFXP(SBV(18009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40761, 16), 8), UFXP(BV(10618, 16), 8)), UFXP(BV(30143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21959, 16), 8), SFXP(SBV(-12392, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16574, 16), 8), SFXP(SBV(-16304, 16), 8)), SFXP(SBV(-270, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(332, 16), 8), UFXP(BV(1464, 16), 8)), UFXP(BV(64404, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11912, 16), 8), UFXP(BV(49002, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29374, 16), 8), SFXP(SBV(28059, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32692, 16), 8), SFXP(SBV(21304, 16), 8)), SFXP(SBV(-11388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30540, 16), 8), SFXP(SBV(-16323, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20565, 16), 8), SFXP(SBV(14698, 16), 8)), SFXP(SBV(5867, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58768, 16), 8), UFXP(BV(6143, 16), 8)), UFXP(BV(52625, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15934, 16), 8), SFXP(SBV(32092, 16), 8)), SFXP(SBV(16158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2548, 16), 8), SFXP(SBV(-15810, 16), 8)), SFXP(SBV(-13262, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20517, 16), 8), UFXP(BV(11796, 16), 8)), UFXP(BV(8721, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39826, 16), 8), UFXP(BV(8104, 16), 8)), UFXP(BV(47930, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1833, 16), 8), UFXP(BV(16136, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3816, 16), 8), SFXP(SBV(124, 16), 8)), SFXP(SBV(-3692, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50836, 16), 8), UFXP(BV(8420, 16), 8)), UFXP(BV(42416, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(537, 16), 8), SFXP(SBV(5108, 16), 8)), SFXP(SBV(5645, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(841, 16), 8), UFXP(BV(20655, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24879, 16), 8), SFXP(SBV(-31389, 16), 8)), SFXP(SBV(-29696, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30209, 16), 8), SFXP(SBV(17288, 16), 8)), SFXP(SBV(18039, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26976, 16), 8), UFXP(BV(65229, 16), 8)), UFXP(BV(57761, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37144, 16), 8), UFXP(BV(29955, 16), 8)), UFXP(BV(1563, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(65204, 16), 8), UFXP(BV(59066, 16), 8)), UFXP(BV(36550, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7246, 16), 8), SFXP(SBV(15851, 16), 8)), SFXP(SBV(23097, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8499, 16), 8), SFXP(SBV(-24414, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34367, 16), 8), UFXP(BV(39281, 16), 8)), UFXP(BV(60622, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47524, 16), 8), UFXP(BV(36304, 16), 8)), UFXP(BV(11220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7350, 16), 8), SFXP(SBV(1082, 16), 8)), SFXP(SBV(31065, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61682, 16), 8), UFXP(BV(31656, 16), 8)), UFXP(BV(30026, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11233, 16), 8), SFXP(SBV(-18624, 16), 8)), SFXP(SBV(-30768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31565, 16), 8), SFXP(SBV(-16183, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30708, 16), 8), UFXP(BV(42193, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-817, 16), 8), SFXP(SBV(-3781, 16), 8)), SFXP(SBV(-4598, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17557, 16), 8), SFXP(SBV(435, 16), 8)), SFXP(SBV(-17992, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49021, 16), 8), UFXP(BV(37488, 16), 8)), UFXP(BV(35089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32494, 16), 8), UFXP(BV(18132, 16), 8)), UFXP(BV(14362, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14555, 16), 8), SFXP(SBV(-5645, 16), 8)), SFXP(SBV(-6731, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20511, 16), 8), UFXP(BV(48202, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18781, 16), 8), UFXP(BV(4396, 16), 8)), UFXP(BV(23177, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4424, 16), 8), SFXP(SBV(-28913, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43139, 16), 8), UFXP(BV(48558, 16), 8)), UFXP(BV(26161, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40377, 16), 8), UFXP(BV(24348, 16), 8)), UFXP(BV(64725, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21782, 16), 8), SFXP(SBV(-8164, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47026, 16), 8), UFXP(BV(20594, 16), 8)), UFXP(BV(2084, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10502, 16), 8), SFXP(SBV(-29845, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6855, 16), 8), UFXP(BV(36071, 16), 8)), UFXP(BV(42926, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8897, 16), 8), SFXP(SBV(5034, 16), 8)), SFXP(SBV(-3863, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62343, 16), 8), UFXP(BV(29293, 16), 8)), UFXP(BV(26100, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(32586, 16), 8), SFXP(SBV(-18748, 16), 8)), SFXP(SBV(-27120, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10692, 16), 8), UFXP(BV(60099, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12998, 16), 8), UFXP(BV(19142, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1606, 16), 8), SFXP(SBV(26055, 16), 8)), SFXP(SBV(-24449, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21551, 16), 8), UFXP(BV(49320, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18492, 16), 8), UFXP(BV(14830, 16), 8)), UFXP(BV(33322, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17739, 16), 8), SFXP(SBV(-15012, 16), 8)), SFXP(SBV(-32751, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56127, 16), 8), UFXP(BV(20912, 16), 8)), UFXP(BV(11503, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3964, 16), 8), SFXP(SBV(803, 16), 8)), SFXP(SBV(-4767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3965, 16), 8), UFXP(BV(25309, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25589, 16), 8), UFXP(BV(64515, 16), 8)), UFXP(BV(24568, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46455, 16), 8), UFXP(BV(33772, 16), 8)), UFXP(BV(12683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11799, 16), 8), SFXP(SBV(5610, 16), 8)), SFXP(SBV(17409, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9668, 16), 8), SFXP(SBV(17731, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30041, 16), 8), SFXP(SBV(-25933, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23718, 16), 8), UFXP(BV(18079, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42747, 16), 8), UFXP(BV(57290, 16), 8)), UFXP(BV(34501, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37261, 16), 8), UFXP(BV(30650, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5647, 16), 8), UFXP(BV(2923, 16), 8)), UFXP(BV(2724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9990, 16), 8), SFXP(SBV(18997, 16), 8)), SFXP(SBV(28987, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10720, 16), 8), SFXP(SBV(15724, 16), 8)), SFXP(SBV(-26444, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27067, 16), 8), UFXP(BV(54535, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22008, 16), 8), UFXP(BV(21304, 16), 8)), UFXP(BV(43312, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1675, 16), 8), UFXP(BV(50063, 16), 8)), UFXP(BV(51738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17419, 16), 8), SFXP(SBV(22445, 16), 8)), SFXP(SBV(25672, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19540, 16), 8), SFXP(SBV(4766, 16), 8)), SFXP(SBV(14774, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6814, 16), 8), SFXP(SBV(17636, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4360, 16), 8), UFXP(BV(50125, 16), 8)), UFXP(BV(19771, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14773, 16), 8), SFXP(SBV(-6729, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6072, 16), 8), SFXP(SBV(3300, 16), 8)), SFXP(SBV(2772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10426, 16), 8), SFXP(SBV(-31682, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(14349, 16), 8), UFXP(BV(24688, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5815, 16), 8), UFXP(BV(22480, 16), 8)), UFXP(BV(28295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17089, 16), 8), SFXP(SBV(-17572, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8243, 16), 8), SFXP(SBV(3884, 16), 8)), SFXP(SBV(4359, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16904, 16), 8), SFXP(SBV(23642, 16), 8)), SFXP(SBV(-6738, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36484, 16), 8), UFXP(BV(3752, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18806, 16), 8), SFXP(SBV(-165, 16), 8)), SFXP(SBV(18641, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5730, 16), 8), SFXP(SBV(-10695, 16), 8)), SFXP(SBV(-22760, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13020, 16), 8), SFXP(SBV(1720, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31953, 16), 8), SFXP(SBV(-29948, 16), 8)), SFXP(SBV(2005, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21456, 16), 8), SFXP(SBV(23213, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36786, 16), 8), UFXP(BV(50684, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11247, 16), 8), SFXP(SBV(14768, 16), 8)), SFXP(SBV(-26015, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6287, 16), 8), SFXP(SBV(9493, 16), 8)), SFXP(SBV(15780, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57289, 16), 8), UFXP(BV(12962, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13834, 16), 8), SFXP(SBV(-16296, 16), 8)), SFXP(SBV(-2462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(22017, 16), 8), UFXP(BV(51932, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62668, 16), 8), UFXP(BV(50062, 16), 8)), UFXP(BV(65325, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5968, 16), 8), SFXP(SBV(-1691, 16), 8)), SFXP(SBV(7659, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16986, 16), 8), SFXP(SBV(-22808, 16), 8)), SFXP(SBV(-25742, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9348, 16), 8), SFXP(SBV(-32631, 16), 8)), SFXP(SBV(-11893, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57564, 16), 8), UFXP(BV(11232, 16), 8)), UFXP(BV(46332, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6769, 16), 8), SFXP(SBV(21052, 16), 8)), SFXP(SBV(27821, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24823, 16), 8), UFXP(BV(1164, 16), 8)), UFXP(BV(23659, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30865, 16), 8), UFXP(BV(16952, 16), 8)), UFXP(BV(13913, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43359, 16), 8), UFXP(BV(37513, 16), 8)), UFXP(BV(5846, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7065, 16), 8), UFXP(BV(29644, 16), 8)), UFXP(BV(36709, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54736, 16), 8), UFXP(BV(45579, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30621, 16), 8), UFXP(BV(62350, 16), 8)), UFXP(BV(52321, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52663, 16), 8), UFXP(BV(62967, 16), 8)), UFXP(BV(50094, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30032, 16), 8), SFXP(SBV(-18970, 16), 8)), SFXP(SBV(-11062, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59283, 16), 8), UFXP(BV(22694, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7507, 16), 8), SFXP(SBV(20229, 16), 8)), SFXP(SBV(-12722, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25, 16), 8), SFXP(SBV(-27201, 16), 8)), SFXP(SBV(27176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14204, 16), 8), SFXP(SBV(7736, 16), 8)), SFXP(SBV(21940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6353, 16), 8), UFXP(BV(11323, 16), 8)), UFXP(BV(60566, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-347, 16), 8), SFXP(SBV(32177, 16), 8)), SFXP(SBV(21922, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33540, 16), 8), UFXP(BV(27479, 16), 8)), UFXP(BV(61019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22163, 16), 8), SFXP(SBV(-22774, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6946, 16), 8), SFXP(SBV(-10338, 16), 8)), SFXP(SBV(-17284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40016, 16), 8), UFXP(BV(54803, 16), 8)), UFXP(BV(29283, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12331, 16), 8), SFXP(SBV(-30293, 16), 8)), SFXP(SBV(17962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23100, 16), 8), SFXP(SBV(24086, 16), 8)), SFXP(SBV(-986, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31514, 16), 8), SFXP(SBV(15900, 16), 8)), SFXP(SBV(8766, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8258, 16), 8), SFXP(SBV(-27795, 16), 8)), SFXP(SBV(-19537, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7140, 16), 8), SFXP(SBV(-10158, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16800, 16), 8), SFXP(SBV(26787, 16), 8)), SFXP(SBV(9987, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38678, 16), 8), UFXP(BV(44927, 16), 8)), UFXP(BV(59287, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7529, 16), 8), SFXP(SBV(-29091, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22690, 16), 8), SFXP(SBV(-10313, 16), 8)), SFXP(SBV(-32533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20855, 16), 8), SFXP(SBV(2258, 16), 8)), SFXP(SBV(12661, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19536, 16), 8), UFXP(BV(46135, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6780, 16), 8), UFXP(BV(60267, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20223, 16), 8), UFXP(BV(60149, 16), 8)), UFXP(BV(25610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10792, 16), 8), UFXP(BV(57670, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3681, 16), 8), SFXP(SBV(8225, 16), 8)), SFXP(SBV(-4544, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(32348, 16), 8), SFXP(SBV(19998, 16), 8)), SFXP(SBV(-28970, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14552, 16), 8), SFXP(SBV(-14997, 16), 8)), SFXP(SBV(445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18004, 16), 8), UFXP(BV(18812, 16), 8)), UFXP(BV(36816, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30933, 16), 8), SFXP(SBV(-22873, 16), 8)), SFXP(SBV(11279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10788, 16), 8), SFXP(SBV(-20012, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26115, 16), 8), SFXP(SBV(7743, 16), 8)), SFXP(SBV(-18372, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21769, 16), 8), SFXP(SBV(-4103, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27254, 16), 8), SFXP(SBV(-11250, 16), 8)), SFXP(SBV(18037, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23267, 16), 8), SFXP(SBV(-15251, 16), 8)), SFXP(SBV(27018, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31438, 16), 8), SFXP(SBV(31598, 16), 8)), SFXP(SBV(-160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18193, 16), 8), SFXP(SBV(17747, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3899, 16), 8), UFXP(BV(44625, 16), 8)), UFXP(BV(48524, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13594, 16), 8), SFXP(SBV(-6353, 16), 8)), SFXP(SBV(-19947, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46169, 16), 8), UFXP(BV(42087, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27346, 16), 8), UFXP(BV(6182, 16), 8)), UFXP(BV(5004, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23643, 16), 8), SFXP(SBV(-18379, 16), 8)), SFXP(SBV(-5264, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16683, 16), 8), UFXP(BV(18754, 16), 8)), UFXP(BV(35437, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21209, 16), 8), SFXP(SBV(15523, 16), 8)), SFXP(SBV(-5686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65347, 16), 8), UFXP(BV(59615, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(2169, 16), 8), SFXP(SBV(-976, 16), 8)), SFXP(SBV(-8269, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51672, 16), 8), UFXP(BV(21132, 16), 8)), UFXP(BV(7268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55711, 16), 8), UFXP(BV(38281, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54623, 16), 8), UFXP(BV(14939, 16), 8)), UFXP(BV(39684, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47058, 16), 8), UFXP(BV(46113, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7413, 16), 8), UFXP(BV(14328, 16), 8)), UFXP(BV(58621, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29893, 16), 8), SFXP(SBV(27187, 16), 8)), SFXP(SBV(-28886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18384, 16), 8), SFXP(SBV(17121, 16), 8)), SFXP(SBV(-30031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31660, 16), 8), SFXP(SBV(-21188, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13307, 16), 8), UFXP(BV(40672, 16), 8)), UFXP(BV(53979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13595, 16), 8), SFXP(SBV(-21646, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18374, 16), 8), SFXP(SBV(-21826, 16), 8)), SFXP(SBV(-3452, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7903, 16), 8), UFXP(BV(52798, 16), 8)), UFXP(BV(60701, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24708, 16), 8), SFXP(SBV(2796, 16), 8)), SFXP(SBV(-27504, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64712, 16), 8), UFXP(BV(39017, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24206, 16), 8), SFXP(SBV(-30309, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2808, 16), 8), SFXP(SBV(-26442, 16), 8)), SFXP(SBV(23634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48977, 16), 8), UFXP(BV(43439, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50378, 16), 8), UFXP(BV(44496, 16), 8)), UFXP(BV(5882, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58277, 16), 8), UFXP(BV(49593, 16), 8)), UFXP(BV(17384, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(27360, 16), 8), SFXP(SBV(-11145, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44086, 16), 8), UFXP(BV(32912, 16), 8)), UFXP(BV(11174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62560, 16), 8), UFXP(BV(34328, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54464, 16), 8), UFXP(BV(18006, 16), 8)), UFXP(BV(36458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46553, 16), 8), UFXP(BV(17993, 16), 8)), UFXP(BV(28560, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18580, 16), 8), SFXP(SBV(-22475, 16), 8)), SFXP(SBV(-24481, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9641, 16), 8), UFXP(BV(54107, 16), 8)), UFXP(BV(21070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2934, 16), 8), UFXP(BV(10946, 16), 8)), UFXP(BV(57524, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30335, 16), 8), SFXP(SBV(23252, 16), 8)), SFXP(SBV(7083, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3700, 16), 8), SFXP(SBV(-29444, 16), 8)), SFXP(SBV(-32392, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31522, 16), 8), UFXP(BV(16280, 16), 8)), UFXP(BV(15242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61736, 16), 8), UFXP(BV(19812, 16), 8)), UFXP(BV(16012, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42062, 16), 8), UFXP(BV(39096, 16), 8)), UFXP(BV(2966, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18, 16), 8), SFXP(SBV(-28439, 16), 8)), SFXP(SBV(-1999, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57250, 16), 8), UFXP(BV(63489, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44909, 16), 8), UFXP(BV(46317, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18941, 16), 8), SFXP(SBV(-11082, 16), 8)), SFXP(SBV(30023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36775, 16), 8), UFXP(BV(39274, 16), 8)), UFXP(BV(10513, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10293, 16), 8), SFXP(SBV(-5487, 16), 8)), SFXP(SBV(24007, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6612, 16), 8), UFXP(BV(32900, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2784, 16), 8), SFXP(SBV(-20054, 16), 8)), SFXP(SBV(-22838, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50699, 16), 8), UFXP(BV(27539, 16), 8)), UFXP(BV(14417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10106, 16), 8), UFXP(BV(15785, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9649, 16), 8), UFXP(BV(48004, 16), 8)), UFXP(BV(57653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33708, 16), 8), UFXP(BV(48602, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52709, 16), 8), UFXP(BV(62021, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3608, 16), 8), UFXP(BV(4860, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7278, 16), 8), SFXP(SBV(29472, 16), 8)), SFXP(SBV(28786, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28833, 16), 8), SFXP(SBV(-11021, 16), 8)), SFXP(SBV(-25682, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21633, 16), 8), SFXP(SBV(23403, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16146, 16), 8), SFXP(SBV(-15951, 16), 8)), SFXP(SBV(-32097, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15993, 16), 8), SFXP(SBV(30539, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22900, 16), 8), SFXP(SBV(-15271, 16), 8)), SFXP(SBV(-10217, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20627, 16), 8), SFXP(SBV(-19361, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18799, 16), 8), SFXP(SBV(24200, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8187, 16), 8), SFXP(SBV(8635, 16), 8)), SFXP(SBV(448, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13527, 16), 8), SFXP(SBV(-2350, 16), 8)), SFXP(SBV(15877, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18280, 16), 8), SFXP(SBV(-1078, 16), 8)), SFXP(SBV(11439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44894, 16), 8), UFXP(BV(16895, 16), 8)), UFXP(BV(61789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20149, 16), 8), SFXP(SBV(30346, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3188, 16), 8), SFXP(SBV(1193, 16), 8)), SFXP(SBV(-1995, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17936, 16), 8), SFXP(SBV(-13623, 16), 8)), SFXP(SBV(31559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24864, 16), 8), SFXP(SBV(-12228, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38565, 16), 8), UFXP(BV(21787, 16), 8)), UFXP(BV(5292, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24322, 16), 8), UFXP(BV(41140, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15342, 16), 8), SFXP(SBV(-8505, 16), 8)), SFXP(SBV(-23847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23429, 16), 8), SFXP(SBV(-3566, 16), 8)), SFXP(SBV(-19863, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17711, 16), 8), SFXP(SBV(-10650, 16), 8)), SFXP(SBV(-28361, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29703, 16), 8), SFXP(SBV(-11712, 16), 8)), SFXP(SBV(-17991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38101, 16), 8), UFXP(BV(2216, 16), 8)), UFXP(BV(35885, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11377, 16), 8), SFXP(SBV(-28866, 16), 8)), SFXP(SBV(-25293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32297, 16), 8), UFXP(BV(15961, 16), 8)), UFXP(BV(16336, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42747, 16), 8), UFXP(BV(50811, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2860, 16), 8), SFXP(SBV(-5423, 16), 8)), SFXP(SBV(-4951, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39273, 16), 8), UFXP(BV(30038, 16), 8)), UFXP(BV(9235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32901, 16), 8), UFXP(BV(9650, 16), 8)), UFXP(BV(23251, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(12132, 16), 8), SFXP(SBV(-28168, 16), 8)), SFXP(SBV(-16036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63591, 16), 8), UFXP(BV(56332, 16), 8)), UFXP(BV(7259, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31755, 16), 8), UFXP(BV(61168, 16), 8)), UFXP(BV(50820, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14140, 16), 8), SFXP(SBV(-8836, 16), 8)), SFXP(SBV(5304, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28651, 16), 8), SFXP(SBV(26641, 16), 8)), SFXP(SBV(10244, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19338, 16), 8), UFXP(BV(10176, 16), 8)), UFXP(BV(29514, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27155, 16), 8), SFXP(SBV(-16370, 16), 8)), SFXP(SBV(10785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(24242, 16), 8), SFXP(SBV(21658, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20863, 16), 8), SFXP(SBV(1668, 16), 8)), SFXP(SBV(19195, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33836, 16), 8), UFXP(BV(51779, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9098, 16), 8), UFXP(BV(38801, 16), 8)), UFXP(BV(47899, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37685, 16), 8), UFXP(BV(646, 16), 8)), UFXP(BV(37039, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58674, 16), 8), UFXP(BV(45389, 16), 8)), UFXP(BV(48259, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27902, 16), 8), UFXP(BV(61294, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2815, 16), 8), UFXP(BV(2880, 16), 8)), UFXP(BV(65471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6376, 16), 8), SFXP(SBV(-32511, 16), 8)), SFXP(SBV(-23295, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19471, 16), 8), UFXP(BV(37510, 16), 8)), UFXP(BV(47497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20058, 16), 8), SFXP(SBV(16964, 16), 8)), SFXP(SBV(-3094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44235, 16), 8), UFXP(BV(22095, 16), 8)), UFXP(BV(794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51499, 16), 8), UFXP(BV(37918, 16), 8)), UFXP(BV(23881, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11480, 16), 8), UFXP(BV(44126, 16), 8)), UFXP(BV(55606, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15826, 16), 8), SFXP(SBV(-24588, 16), 8)), SFXP(SBV(12710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65157, 16), 8), UFXP(BV(33025, 16), 8)), UFXP(BV(32132, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12655, 16), 8), UFXP(BV(63292, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62620, 16), 8), UFXP(BV(54630, 16), 8)), UFXP(BV(51714, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27913, 16), 8), SFXP(SBV(-21727, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13681, 16), 8), UFXP(BV(33029, 16), 8)), UFXP(BV(61181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5780, 16), 8), UFXP(BV(60472, 16), 8)), UFXP(BV(54625, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51831, 16), 8), UFXP(BV(36004, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13141, 16), 8), UFXP(BV(30081, 16), 8)), UFXP(BV(43222, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22160, 16), 8), SFXP(SBV(28566, 16), 8)), SFXP(SBV(6406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30328, 16), 8), SFXP(SBV(-12622, 16), 8)), SFXP(SBV(17706, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10604, 16), 8), SFXP(SBV(-31803, 16), 8)), SFXP(SBV(-21199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20892, 16), 8), SFXP(SBV(-10400, 16), 8)), SFXP(SBV(-10492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18597, 16), 8), UFXP(BV(49615, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(5530, 16), 8), SFXP(SBV(-32225, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26575, 16), 8), SFXP(SBV(-1077, 16), 8)), SFXP(SBV(-19271, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13165, 16), 8), UFXP(BV(17602, 16), 8)), UFXP(BV(61099, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19762, 16), 8), UFXP(BV(21845, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1249, 16), 8), SFXP(SBV(-22237, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57484, 16), 8), UFXP(BV(54156, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9204, 16), 8), UFXP(BV(16853, 16), 8)), UFXP(BV(26057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24838, 16), 8), SFXP(SBV(-7982, 16), 8)), SFXP(SBV(16856, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2552, 16), 8), UFXP(BV(48959, 16), 8)), UFXP(BV(51511, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39663, 16), 8), UFXP(BV(26466, 16), 8)), UFXP(BV(593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13869, 16), 8), UFXP(BV(27248, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3734, 16), 8), SFXP(SBV(-12366, 16), 8)), SFXP(SBV(-8632, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29297, 16), 8), SFXP(SBV(-16705, 16), 8)), SFXP(SBV(-12592, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23673, 16), 8), UFXP(BV(6663, 16), 8)), UFXP(BV(17010, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5705, 16), 8), SFXP(SBV(32030, 16), 8)), SFXP(SBV(-27801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6094, 16), 8), SFXP(SBV(-24704, 16), 8)), SFXP(SBV(18610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17557, 16), 8), UFXP(BV(7315, 16), 8)), UFXP(BV(10242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38848, 16), 8), UFXP(BV(61375, 16), 8)), UFXP(BV(43009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14893, 16), 8), UFXP(BV(10011, 16), 8)), UFXP(BV(4882, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20927, 16), 8), SFXP(SBV(-13378, 16), 8)), SFXP(SBV(7549, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65162, 16), 8), UFXP(BV(62749, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(796, 16), 8), UFXP(BV(24534, 16), 8)), UFXP(BV(10750, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23692, 16), 8), SFXP(SBV(8654, 16), 8)), SFXP(SBV(-14468, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53987, 16), 8), UFXP(BV(16136, 16), 8)), UFXP(BV(37851, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4205, 16), 8), SFXP(SBV(-7328, 16), 8)), SFXP(SBV(-3123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9299, 16), 8), SFXP(SBV(23938, 16), 8)), SFXP(SBV(-14639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20372, 16), 8), UFXP(BV(46306, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(1415, 16), 8), SFXP(SBV(16209, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32656, 16), 8), SFXP(SBV(-300, 16), 8)), SFXP(SBV(-32356, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11791, 16), 8), UFXP(BV(9232, 16), 8)), UFXP(BV(2559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3741, 16), 8), SFXP(SBV(-24522, 16), 8)), SFXP(SBV(20781, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52881, 16), 8), UFXP(BV(22678, 16), 8)), UFXP(BV(30203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55908, 16), 8), UFXP(BV(4361, 16), 8)), UFXP(BV(51547, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34127, 16), 8), UFXP(BV(28886, 16), 8)), UFXP(BV(63013, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9651, 16), 8), SFXP(SBV(-13130, 16), 8)), SFXP(SBV(3479, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23751, 16), 8), UFXP(BV(63041, 16), 8)), UFXP(BV(16073, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17038, 16), 8), SFXP(SBV(-25654, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3592, 16), 8), SFXP(SBV(14772, 16), 8)), SFXP(SBV(-11180, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5257, 16), 8), UFXP(BV(33168, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-896, 16), 8), SFXP(SBV(-4032, 16), 8)), SFXP(SBV(3136, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31052, 16), 8), UFXP(BV(43960, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31812, 16), 8), SFXP(SBV(-24067, 16), 8)), SFXP(SBV(7745, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57359, 16), 8), UFXP(BV(59099, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33854, 16), 8), UFXP(BV(63461, 16), 8)), UFXP(BV(3613, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37520, 16), 8), UFXP(BV(43224, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3828, 16), 8), SFXP(SBV(27744, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23839, 16), 8), UFXP(BV(64652, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30106, 16), 8), UFXP(BV(54232, 16), 8)), UFXP(BV(20775, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18599, 16), 8), UFXP(BV(3040, 16), 8)), UFXP(BV(24255, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23155, 16), 8), UFXP(BV(54162, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60516, 16), 8), UFXP(BV(20888, 16), 8)), UFXP(BV(15868, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4056, 16), 8), SFXP(SBV(-26732, 16), 8)), SFXP(SBV(-30788, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9724, 16), 8), SFXP(SBV(-21767, 16), 8)), SFXP(SBV(12043, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1551, 16), 8), UFXP(BV(36567, 16), 8)), UFXP(BV(38118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5840, 16), 8), SFXP(SBV(-31722, 16), 8)), SFXP(SBV(-25882, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21004, 16), 8), SFXP(SBV(7764, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16317, 16), 8), UFXP(BV(30132, 16), 8)), UFXP(BV(46449, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63545, 16), 8), UFXP(BV(18561, 16), 8)), UFXP(BV(19740, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6567, 16), 8), SFXP(SBV(9705, 16), 8)), SFXP(SBV(16272, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13320, 16), 8), UFXP(BV(15564, 16), 8)), UFXP(BV(23382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14838, 16), 8), SFXP(SBV(-12136, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25545, 16), 8), SFXP(SBV(3202, 16), 8)), SFXP(SBV(28747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63371, 16), 8), UFXP(BV(17461, 16), 8)), UFXP(BV(45910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30653, 16), 8), UFXP(BV(61270, 16), 8)), UFXP(BV(61869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20048, 16), 8), SFXP(SBV(-32366, 16), 8)), SFXP(SBV(13122, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44256, 16), 8), UFXP(BV(39844, 16), 8)), UFXP(BV(18564, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54451, 16), 8), UFXP(BV(57403, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19872, 16), 8), UFXP(BV(42346, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(57812, 16), 8), UFXP(BV(22317, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31065, 16), 8), SFXP(SBV(1964, 16), 8)), SFXP(SBV(-23817, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65043, 16), 8), UFXP(BV(58962, 16), 8)), UFXP(BV(6081, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43368, 16), 8), UFXP(BV(62452, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25360, 16), 8), UFXP(BV(62502, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55913, 16), 8), UFXP(BV(63751, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19349, 16), 8), SFXP(SBV(10121, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52252, 16), 8), UFXP(BV(49554, 16), 8)), UFXP(BV(2698, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19088, 16), 8), UFXP(BV(9810, 16), 8)), UFXP(BV(28898, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8839, 16), 8), SFXP(SBV(-17321, 16), 8)), SFXP(SBV(-26160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14558, 16), 8), SFXP(SBV(-21976, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26199, 16), 8), UFXP(BV(15409, 16), 8)), UFXP(BV(10790, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30171, 16), 8), SFXP(SBV(27613, 16), 8)), SFXP(SBV(-2558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19514, 16), 8), SFXP(SBV(29796, 16), 8)), SFXP(SBV(22514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50923, 16), 8), UFXP(BV(56261, 16), 8)), UFXP(BV(50203, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24333, 16), 8), SFXP(SBV(-2982, 16), 8)), SFXP(SBV(27315, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19476, 16), 8), SFXP(SBV(-5877, 16), 8)), SFXP(SBV(25353, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60849, 16), 8), UFXP(BV(45288, 16), 8)), UFXP(BV(16665, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35651, 16), 8), UFXP(BV(40640, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3039, 16), 8), SFXP(SBV(22036, 16), 8)), SFXP(SBV(18997, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24723, 16), 8), SFXP(SBV(16010, 16), 8)), SFXP(SBV(-24803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13237, 16), 8), SFXP(SBV(-12891, 16), 8)), SFXP(SBV(26128, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41692, 16), 8), UFXP(BV(56358, 16), 8)), UFXP(BV(32514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49818, 16), 8), UFXP(BV(27472, 16), 8)), UFXP(BV(37679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34187, 16), 8), UFXP(BV(64155, 16), 8)), UFXP(BV(32806, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49179, 16), 8), UFXP(BV(4014, 16), 8)), UFXP(BV(45165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25499, 16), 8), SFXP(SBV(26423, 16), 8)), SFXP(SBV(10435, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62459, 16), 8), UFXP(BV(19549, 16), 8)), UFXP(BV(50983, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28165, 16), 8), SFXP(SBV(12218, 16), 8)), SFXP(SBV(25153, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24039, 16), 8), UFXP(BV(12365, 16), 8)), UFXP(BV(36404, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28276, 16), 8), SFXP(SBV(-27792, 16), 8)), SFXP(SBV(10478, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49935, 16), 8), UFXP(BV(40560, 16), 8)), UFXP(BV(9375, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26135, 16), 8), UFXP(BV(2565, 16), 8)), UFXP(BV(28700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18507, 16), 8), SFXP(SBV(14515, 16), 8)), SFXP(SBV(-32514, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26943, 16), 8), SFXP(SBV(28957, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6065, 16), 8), UFXP(BV(2114, 16), 8)), UFXP(BV(50083, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56321, 16), 8), UFXP(BV(62399, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13242, 16), 8), SFXP(SBV(2175, 16), 8)), SFXP(SBV(15417, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29731, 16), 8), SFXP(SBV(22876, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15920, 16), 8), UFXP(BV(38771, 16), 8)), UFXP(BV(54691, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23006, 16), 8), UFXP(BV(48346, 16), 8)), UFXP(BV(40196, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6872, 16), 8), SFXP(SBV(-14003, 16), 8)), SFXP(SBV(20875, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13625, 16), 8), UFXP(BV(60371, 16), 8)), UFXP(BV(18790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53850, 16), 8), UFXP(BV(10758, 16), 8)), UFXP(BV(64608, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27765, 16), 8), SFXP(SBV(-21854, 16), 8)), SFXP(SBV(5911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11699, 16), 8), SFXP(SBV(18455, 16), 8)), SFXP(SBV(-30154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26632, 16), 8), UFXP(BV(33767, 16), 8)), UFXP(BV(60399, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1479, 16), 8), SFXP(SBV(1204, 16), 8)), SFXP(SBV(2683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22325, 16), 8), SFXP(SBV(-7468, 16), 8)), SFXP(SBV(4098, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3538, 16), 8), UFXP(BV(29610, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38457, 16), 8), UFXP(BV(61257, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47752, 16), 8), UFXP(BV(38195, 16), 8)), UFXP(BV(9557, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14270, 16), 8), UFXP(BV(20587, 16), 8)), UFXP(BV(59219, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21292, 16), 8), SFXP(SBV(3585, 16), 8)), SFXP(SBV(-17707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2690, 16), 8), SFXP(SBV(12701, 16), 8)), SFXP(SBV(2388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20437, 16), 8), SFXP(SBV(-21237, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(43194, 16), 8), UFXP(BV(998, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10228, 16), 8), SFXP(SBV(10391, 16), 8)), SFXP(SBV(20619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60927, 16), 8), UFXP(BV(16009, 16), 8)), UFXP(BV(44918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41889, 16), 8), UFXP(BV(34377, 16), 8)), UFXP(BV(10730, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17495, 16), 8), UFXP(BV(20752, 16), 8)), UFXP(BV(62279, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20479, 16), 8), UFXP(BV(39217, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51126, 16), 8), UFXP(BV(35692, 16), 8)), UFXP(BV(15434, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27695, 16), 8), SFXP(SBV(26123, 16), 8)), SFXP(SBV(1572, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34281, 16), 8), UFXP(BV(50794, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19014, 16), 8), UFXP(BV(43036, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32618, 16), 8), UFXP(BV(13938, 16), 8)), UFXP(BV(46556, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27229, 16), 8), SFXP(SBV(-23209, 16), 8)), SFXP(SBV(-4020, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30622, 16), 8), SFXP(SBV(25082, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20166, 16), 8), SFXP(SBV(6624, 16), 8)), SFXP(SBV(26790, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3205, 16), 8), UFXP(BV(64924, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8467, 16), 8), SFXP(SBV(4769, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(964, 16), 8), UFXP(BV(63190, 16), 8)), UFXP(BV(41341, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8682, 16), 8), SFXP(SBV(-23264, 16), 8)), SFXP(SBV(-2544, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6659, 16), 8), SFXP(SBV(-8886, 16), 8)), SFXP(SBV(-31003, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1145, 16), 8), SFXP(SBV(-10960, 16), 8)), SFXP(SBV(12105, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5318, 16), 8), SFXP(SBV(20107, 16), 8)), SFXP(SBV(25425, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29292, 16), 8), SFXP(SBV(25383, 16), 8)), SFXP(SBV(-3909, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28725, 16), 8), SFXP(SBV(19376, 16), 8)), SFXP(SBV(-11435, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9786, 16), 8), SFXP(SBV(-31446, 16), 8)), SFXP(SBV(-21660, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22195, 16), 8), SFXP(SBV(-14085, 16), 8)), SFXP(SBV(29256, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15861, 16), 8), UFXP(BV(24355, 16), 8)), UFXP(BV(1636, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13720, 16), 8), SFXP(SBV(25658, 16), 8)), SFXP(SBV(-11938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58460, 16), 8), UFXP(BV(41365, 16), 8)), UFXP(BV(8901, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42675, 16), 8), UFXP(BV(5529, 16), 8)), UFXP(BV(4175, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14696, 16), 8), SFXP(SBV(32083, 16), 8)), SFXP(SBV(-6757, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23868, 16), 8), SFXP(SBV(24182, 16), 8)), SFXP(SBV(314, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4542, 16), 8), SFXP(SBV(16274, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31788, 16), 8), SFXP(SBV(-1796, 16), 8)), SFXP(SBV(26404, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19316, 16), 8), SFXP(SBV(-5253, 16), 8)), SFXP(SBV(-3140, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52106, 16), 8), UFXP(BV(25500, 16), 8)), UFXP(BV(12070, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30846, 16), 8), SFXP(SBV(22948, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51492, 16), 8), UFXP(BV(54352, 16), 8)), UFXP(BV(62676, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3812, 16), 8), SFXP(SBV(-25846, 16), 8)), SFXP(SBV(-22034, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30904, 16), 8), UFXP(BV(8671, 16), 8)), UFXP(BV(39575, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19074, 16), 8), UFXP(BV(33237, 16), 8)), UFXP(BV(52311, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(442, 16), 8), UFXP(BV(25971, 16), 8)), UFXP(BV(44841, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30433, 16), 8), UFXP(BV(55847, 16), 8)), UFXP(BV(19895, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53055, 16), 8), UFXP(BV(58548, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34699, 16), 8), UFXP(BV(13191, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1784, 16), 8), UFXP(BV(22048, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7740, 16), 8), UFXP(BV(18508, 16), 8)), UFXP(BV(26248, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16459, 16), 8), UFXP(BV(35872, 16), 8)), UFXP(BV(52331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57524, 16), 8), UFXP(BV(47845, 16), 8)), UFXP(BV(9679, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32368, 16), 8), SFXP(SBV(-11861, 16), 8)), SFXP(SBV(-20507, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13925, 16), 8), UFXP(BV(15024, 16), 8)), UFXP(BV(28949, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31576, 16), 8), SFXP(SBV(21795, 16), 8)), SFXP(SBV(-12165, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4872, 16), 8), UFXP(BV(50242, 16), 8)), UFXP(BV(38664, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4752, 16), 8), SFXP(SBV(2553, 16), 8)), SFXP(SBV(2199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6582, 16), 8), SFXP(SBV(30691, 16), 8)), SFXP(SBV(-28263, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22706, 16), 8), SFXP(SBV(-5927, 16), 8)), SFXP(SBV(-16779, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46975, 16), 8), UFXP(BV(38675, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38498, 16), 8), UFXP(BV(14683, 16), 8)), UFXP(BV(53181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10439, 16), 8), UFXP(BV(9554, 16), 8)), UFXP(BV(19993, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9179, 16), 8), SFXP(SBV(13671, 16), 8)), SFXP(SBV(-4492, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6772, 16), 8), SFXP(SBV(14843, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31456, 16), 8), SFXP(SBV(14419, 16), 8)), SFXP(SBV(19661, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1417, 16), 8), UFXP(BV(2952, 16), 8)), UFXP(BV(4369, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29313, 16), 8), SFXP(SBV(6311, 16), 8)), SFXP(SBV(-29912, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62171, 16), 8), UFXP(BV(49127, 16), 8)), UFXP(BV(45762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17589, 16), 8), SFXP(SBV(-23160, 16), 8)), SFXP(SBV(-24787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34742, 16), 8), UFXP(BV(15159, 16), 8)), UFXP(BV(49901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10621, 16), 8), SFXP(SBV(30784, 16), 8)), SFXP(SBV(-20163, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40126, 16), 8), UFXP(BV(39628, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16668, 16), 8), SFXP(SBV(-16382, 16), 8)), SFXP(SBV(286, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25527, 16), 8), UFXP(BV(39455, 16), 8)), UFXP(BV(64982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28298, 16), 8), UFXP(BV(9908, 16), 8)), UFXP(BV(38206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5766, 16), 8), SFXP(SBV(7962, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23325, 16), 8), SFXP(SBV(22134, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31556, 16), 8), UFXP(BV(11439, 16), 8)), UFXP(BV(20117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61425, 16), 8), UFXP(BV(22408, 16), 8)), UFXP(BV(18297, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60292, 16), 8), UFXP(BV(36793, 16), 8)), UFXP(BV(31549, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8911, 16), 8), UFXP(BV(25271, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12816, 16), 8), SFXP(SBV(-20526, 16), 8)), SFXP(SBV(7710, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14164, 16), 8), SFXP(SBV(-20315, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47315, 16), 8), UFXP(BV(64557, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31613, 16), 8), SFXP(SBV(-12494, 16), 8)), SFXP(SBV(19119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31510, 16), 8), UFXP(BV(51708, 16), 8)), UFXP(BV(45338, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17970, 16), 8), UFXP(BV(27250, 16), 8)), UFXP(BV(45220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14356, 16), 8), SFXP(SBV(-11254, 16), 8)), SFXP(SBV(-3102, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18422, 16), 8), SFXP(SBV(9836, 16), 8)), SFXP(SBV(-8586, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45262, 16), 8), UFXP(BV(49035, 16), 8)), UFXP(BV(28761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9044, 16), 8), SFXP(SBV(-26281, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20666, 16), 8), UFXP(BV(45668, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54897, 16), 8), UFXP(BV(30866, 16), 8)), UFXP(BV(20227, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6405, 16), 8), UFXP(BV(26738, 16), 8)), UFXP(BV(45203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(32965, 16), 8), UFXP(BV(56801, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43627, 16), 8), UFXP(BV(51152, 16), 8)), UFXP(BV(58011, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18773, 16), 8), UFXP(BV(61311, 16), 8)), UFXP(BV(14548, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25650, 16), 8), SFXP(SBV(-1189, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32836, 16), 8), UFXP(BV(12912, 16), 8)), UFXP(BV(19924, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5898, 16), 8), SFXP(SBV(-28271, 16), 8)), SFXP(SBV(31367, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54787, 16), 8), UFXP(BV(54782, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5825, 16), 8), SFXP(SBV(-20831, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30965, 16), 8), UFXP(BV(3104, 16), 8)), UFXP(BV(47770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9546, 16), 8), UFXP(BV(36262, 16), 8)), UFXP(BV(38820, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21103, 16), 8), UFXP(BV(24979, 16), 8)), UFXP(BV(46082, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17881, 16), 8), SFXP(SBV(29216, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6471, 16), 8), SFXP(SBV(-19823, 16), 8)), SFXP(SBV(-13352, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22951, 16), 8), UFXP(BV(22112, 16), 8)), UFXP(BV(839, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55806, 16), 8), UFXP(BV(12353, 16), 8)), UFXP(BV(43453, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63902, 16), 8), UFXP(BV(26561, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4197, 16), 8), UFXP(BV(59572, 16), 8)), UFXP(BV(10161, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28363, 16), 8), SFXP(SBV(-19388, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22270, 16), 8), SFXP(SBV(-14567, 16), 8)), SFXP(SBV(7703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31118, 16), 8), SFXP(SBV(-25775, 16), 8)), SFXP(SBV(-8643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15616, 16), 8), SFXP(SBV(22575, 16), 8)), SFXP(SBV(819, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20679, 16), 8), UFXP(BV(4711, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43103, 16), 8), UFXP(BV(51949, 16), 8)), UFXP(BV(56690, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6785, 16), 8), SFXP(SBV(-31439, 16), 8)), SFXP(SBV(-24654, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29852, 16), 8), UFXP(BV(56665, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26415, 16), 8), UFXP(BV(52675, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38114, 16), 8), UFXP(BV(58732, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10059, 16), 8), UFXP(BV(3742, 16), 8)), UFXP(BV(13801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3217, 16), 8), SFXP(SBV(-11488, 16), 8)), SFXP(SBV(-8271, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17098, 16), 8), SFXP(SBV(16658, 16), 8)), SFXP(SBV(31780, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44759, 16), 8), UFXP(BV(921, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8499, 16), 8), SFXP(SBV(-23883, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-122, 16), 8), SFXP(SBV(-23037, 16), 8)), SFXP(SBV(10979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23472, 16), 8), SFXP(SBV(14271, 16), 8)), SFXP(SBV(9201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10634, 16), 8), UFXP(BV(5078, 16), 8)), UFXP(BV(5556, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25726, 16), 8), SFXP(SBV(-16850, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29057, 16), 8), SFXP(SBV(7552, 16), 8)), SFXP(SBV(-21505, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1214, 16), 8), SFXP(SBV(-24461, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18800, 16), 8), UFXP(BV(62245, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52641, 16), 8), UFXP(BV(32325, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30484, 16), 8), SFXP(SBV(12490, 16), 8)), SFXP(SBV(17994, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14640, 16), 8), SFXP(SBV(2748, 16), 8)), SFXP(SBV(-11892, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28609, 16), 8), SFXP(SBV(7777, 16), 8)), SFXP(SBV(-29150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52193, 16), 8), UFXP(BV(21805, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32609, 16), 8), SFXP(SBV(5196, 16), 8)), SFXP(SBV(27413, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21651, 16), 8), SFXP(SBV(5744, 16), 8)), SFXP(SBV(27395, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27402, 16), 8), UFXP(BV(54839, 16), 8)), UFXP(BV(16705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49603, 16), 8), UFXP(BV(48928, 16), 8)), UFXP(BV(43189, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48430, 16), 8), UFXP(BV(34086, 16), 8)), UFXP(BV(14344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19061, 16), 8), SFXP(SBV(-8853, 16), 8)), SFXP(SBV(-10208, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45886, 16), 8), UFXP(BV(33153, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10855, 16), 8), SFXP(SBV(-26716, 16), 8)), SFXP(SBV(15861, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60545, 16), 8), UFXP(BV(12697, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18892, 16), 8), SFXP(SBV(-22821, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9331, 16), 8), UFXP(BV(8945, 16), 8)), UFXP(BV(18276, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10604, 16), 8), UFXP(BV(44235, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6075, 16), 8), SFXP(SBV(29041, 16), 8)), SFXP(SBV(22966, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37665, 16), 8), UFXP(BV(35838, 16), 8)), UFXP(BV(1827, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13783, 16), 8), UFXP(BV(40280, 16), 8)), UFXP(BV(5981, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29084, 16), 8), SFXP(SBV(13163, 16), 8)), SFXP(SBV(-15921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46624, 16), 8), UFXP(BV(11043, 16), 8)), UFXP(BV(45127, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27348, 16), 8), SFXP(SBV(-3885, 16), 8)), SFXP(SBV(21812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17338, 16), 8), SFXP(SBV(18834, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34881, 16), 8), UFXP(BV(35244, 16), 8)), UFXP(BV(4589, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1533, 16), 8), SFXP(SBV(-20014, 16), 8)), SFXP(SBV(-18481, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12231, 16), 8), SFXP(SBV(6978, 16), 8)), SFXP(SBV(5253, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2159, 16), 8), SFXP(SBV(1109, 16), 8)), SFXP(SBV(3268, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31622, 16), 8), UFXP(BV(50262, 16), 8)), UFXP(BV(46896, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43370, 16), 8), UFXP(BV(30632, 16), 8)), UFXP(BV(12738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24113, 16), 8), SFXP(SBV(32191, 16), 8)), SFXP(SBV(9232, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54778, 16), 8), UFXP(BV(50537, 16), 8)), UFXP(BV(39779, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27900, 16), 8), SFXP(SBV(7306, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42898, 16), 8), UFXP(BV(27045, 16), 8)), UFXP(BV(4407, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21083, 16), 8), SFXP(SBV(-10929, 16), 8)), SFXP(SBV(-10154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18241, 16), 8), SFXP(SBV(-16133, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37233, 16), 8), UFXP(BV(49124, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46212, 16), 8), UFXP(BV(56342, 16), 8)), UFXP(BV(55406, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37763, 16), 8), UFXP(BV(65187, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64780, 16), 8), UFXP(BV(3232, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6785, 16), 8), SFXP(SBV(15981, 16), 8)), SFXP(SBV(-22766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31358, 16), 8), UFXP(BV(38565, 16), 8)), UFXP(BV(4387, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52751, 16), 8), UFXP(BV(41174, 16), 8)), UFXP(BV(11577, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39924, 16), 8), UFXP(BV(45714, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16168, 16), 8), SFXP(SBV(-8118, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44452, 16), 8), UFXP(BV(52416, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32305, 16), 8), UFXP(BV(37611, 16), 8)), UFXP(BV(60230, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25, 16), 8), UFXP(BV(49594, 16), 8)), UFXP(BV(4844, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5401, 16), 8), SFXP(SBV(9105, 16), 8)), SFXP(SBV(14506, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57297, 16), 8), UFXP(BV(4774, 16), 8)), UFXP(BV(19924, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25950, 16), 8), UFXP(BV(26818, 16), 8)), UFXP(BV(31490, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12040, 16), 8), UFXP(BV(7953, 16), 8)), UFXP(BV(19993, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5718, 16), 8), UFXP(BV(33603, 16), 8)), UFXP(BV(39321, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5855, 16), 8), SFXP(SBV(-1071, 16), 8)), SFXP(SBV(6926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52493, 16), 8), UFXP(BV(18218, 16), 8)), UFXP(BV(34275, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(167, 16), 8), SFXP(SBV(-7227, 16), 8)), SFXP(SBV(-4715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3498, 16), 8), SFXP(SBV(-25504, 16), 8)), SFXP(SBV(-29002, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26589, 16), 8), SFXP(SBV(-30352, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13576, 16), 8), SFXP(SBV(13823, 16), 8)), SFXP(SBV(247, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26045, 16), 8), SFXP(SBV(-3748, 16), 8)), SFXP(SBV(-29793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48479, 16), 8), UFXP(BV(54735, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48028, 16), 8), UFXP(BV(26469, 16), 8)), UFXP(BV(50633, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5393, 16), 8), UFXP(BV(35899, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19164, 16), 8), SFXP(SBV(31410, 16), 8)), SFXP(SBV(-12246, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21064, 16), 8), SFXP(SBV(5370, 16), 8)), SFXP(SBV(-15694, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32213, 16), 8), SFXP(SBV(22438, 16), 8)), SFXP(SBV(10885, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20363, 16), 8), SFXP(SBV(28389, 16), 8)), SFXP(SBV(8026, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5433, 16), 8), UFXP(BV(42060, 16), 8)), UFXP(BV(47493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(119, 16), 8), SFXP(SBV(19551, 16), 8)), SFXP(SBV(9088, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20036, 16), 8), SFXP(SBV(2578, 16), 8)), SFXP(SBV(-17458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51250, 16), 8), UFXP(BV(8194, 16), 8)), UFXP(BV(2001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31231, 16), 8), SFXP(SBV(-24532, 16), 8)), SFXP(SBV(6699, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24448, 16), 8), SFXP(SBV(-10384, 16), 8)), SFXP(SBV(14064, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15631, 16), 8), SFXP(SBV(556, 16), 8)), SFXP(SBV(15075, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64817, 16), 8), UFXP(BV(13762, 16), 8)), UFXP(BV(51055, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19689, 16), 8), SFXP(SBV(-6462, 16), 8)), SFXP(SBV(13227, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15811, 16), 8), UFXP(BV(58259, 16), 8)), UFXP(BV(59231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(14938, 16), 8), SFXP(SBV(27688, 16), 8)), SFXP(SBV(-12750, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4534, 16), 8), SFXP(SBV(-4474, 16), 8)), SFXP(SBV(-60, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36497, 16), 8), UFXP(BV(53818, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(5223, 16), 8), SFXP(SBV(-30415, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13206, 16), 8), SFXP(SBV(1764, 16), 8)), SFXP(SBV(14970, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44396, 16), 8), UFXP(BV(2561, 16), 8)), UFXP(BV(50918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51505, 16), 8), UFXP(BV(65456, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58684, 16), 8), UFXP(BV(18881, 16), 8)), UFXP(BV(39803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8659, 16), 8), SFXP(SBV(-974, 16), 8)), SFXP(SBV(-7685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50813, 16), 8), UFXP(BV(28770, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24889, 16), 8), SFXP(SBV(-27506, 16), 8)), SFXP(SBV(-12770, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25283, 16), 8), SFXP(SBV(-23559, 16), 8)), SFXP(SBV(-16694, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15487, 16), 8), SFXP(SBV(-19195, 16), 8)), SFXP(SBV(30854, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6463, 16), 8), SFXP(SBV(-29662, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48628, 16), 8), UFXP(BV(14308, 16), 8)), UFXP(BV(62936, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6732, 16), 8), SFXP(SBV(-26703, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(4802, 16), 8), SFXP(SBV(17646, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63838, 16), 8), UFXP(BV(13053, 16), 8)), UFXP(BV(50785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29222, 16), 8), SFXP(SBV(-27461, 16), 8)), SFXP(SBV(1761, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37738, 16), 8), UFXP(BV(22750, 16), 8)), UFXP(BV(60488, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12282, 16), 8), SFXP(SBV(15457, 16), 8)), SFXP(SBV(3175, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37241, 16), 8), UFXP(BV(25678, 16), 8)), UFXP(BV(62919, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3195, 16), 8), SFXP(SBV(28430, 16), 8)), SFXP(SBV(31625, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59659, 16), 8), UFXP(BV(34945, 16), 8)), UFXP(BV(17223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(35204, 16), 8), UFXP(BV(29381, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21872, 16), 8), UFXP(BV(58789, 16), 8)), UFXP(BV(28619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37894, 16), 8), UFXP(BV(61175, 16), 8)), UFXP(BV(33533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9131, 16), 8), SFXP(SBV(-12015, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15532, 16), 8), UFXP(BV(40242, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42306, 16), 8), UFXP(BV(35219, 16), 8)), UFXP(BV(11989, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12576, 16), 8), SFXP(SBV(-17645, 16), 8)), SFXP(SBV(-30221, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27431, 16), 8), SFXP(SBV(14201, 16), 8)), SFXP(SBV(13230, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2412, 16), 8), UFXP(BV(23380, 16), 8)), UFXP(BV(23676, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2221, 16), 8), UFXP(BV(35227, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8233, 16), 8), SFXP(SBV(6686, 16), 8)), SFXP(SBV(18415, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31059, 16), 8), UFXP(BV(24137, 16), 8)), UFXP(BV(55196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54950, 16), 8), UFXP(BV(17661, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28912, 16), 8), SFXP(SBV(-9323, 16), 8)), SFXP(SBV(-19589, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25740, 16), 8), SFXP(SBV(-13710, 16), 8)), SFXP(SBV(-26086, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17787, 16), 8), SFXP(SBV(23948, 16), 8)), SFXP(SBV(23801, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58922, 16), 8), UFXP(BV(8718, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1053, 16), 8), UFXP(BV(35141, 16), 8)), UFXP(BV(13472, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18700, 16), 8), SFXP(SBV(27936, 16), 8)), SFXP(SBV(9022, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21171, 16), 8), SFXP(SBV(-19612, 16), 8)), SFXP(SBV(24753, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1198, 16), 8), UFXP(BV(7797, 16), 8)), UFXP(BV(8995, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52884, 16), 8), UFXP(BV(142, 16), 8)), UFXP(BV(29335, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26737, 16), 8), SFXP(SBV(-10672, 16), 8)), SFXP(SBV(-16065, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57943, 16), 8), UFXP(BV(63805, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51401, 16), 8), UFXP(BV(56142, 16), 8)), UFXP(BV(60795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14579, 16), 8), UFXP(BV(28155, 16), 8)), UFXP(BV(42734, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51107, 16), 8), UFXP(BV(21274, 16), 8)), UFXP(BV(52768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21691, 16), 8), SFXP(SBV(2890, 16), 8)), SFXP(SBV(18801, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47745, 16), 8), UFXP(BV(12308, 16), 8)), UFXP(BV(35437, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8742, 16), 8), SFXP(SBV(7022, 16), 8)), SFXP(SBV(1720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22455, 16), 8), UFXP(BV(5570, 16), 8)), UFXP(BV(28025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59894, 16), 8), UFXP(BV(6799, 16), 8)), UFXP(BV(1157, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8536, 16), 8), UFXP(BV(45955, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11412, 16), 8), SFXP(SBV(-5956, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16967, 16), 8), SFXP(SBV(-32386, 16), 8)), SFXP(SBV(15419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56825, 16), 8), UFXP(BV(33122, 16), 8)), UFXP(BV(24411, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7086, 16), 8), UFXP(BV(7201, 16), 8)), UFXP(BV(14287, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51276, 16), 8), UFXP(BV(19124, 16), 8)), UFXP(BV(32152, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(10325, 16), 8), UFXP(BV(51250, 16), 8)), UFXP(BV(35401, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53838, 16), 8), UFXP(BV(13753, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11440, 16), 8), UFXP(BV(61237, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34399, 16), 8), UFXP(BV(24792, 16), 8)), UFXP(BV(9607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27497, 16), 8), SFXP(SBV(25824, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3308, 16), 8), SFXP(SBV(-13134, 16), 8)), SFXP(SBV(9826, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(410, 16), 8), SFXP(SBV(-573, 16), 8)), SFXP(SBV(983, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27451, 16), 8), SFXP(SBV(-14580, 16), 8)), SFXP(SBV(9444, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(4209, 16), 8), SFXP(SBV(-3106, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7183, 16), 8), SFXP(SBV(20590, 16), 8)), SFXP(SBV(-13407, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32870, 16), 8), UFXP(BV(3924, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20929, 16), 8), UFXP(BV(41828, 16), 8)), UFXP(BV(62757, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2726, 16), 8), SFXP(SBV(23048, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3182, 16), 8), UFXP(BV(15459, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16922, 16), 8), SFXP(SBV(-23010, 16), 8)), SFXP(SBV(25604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1487, 16), 8), SFXP(SBV(-1047, 16), 8)), SFXP(SBV(-2534, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6739, 16), 8), UFXP(BV(39612, 16), 8)), UFXP(BV(59715, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49924, 16), 8), UFXP(BV(21228, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14342, 16), 8), SFXP(SBV(-21767, 16), 8)), SFXP(SBV(-25722, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44312, 16), 8), UFXP(BV(37838, 16), 8)), UFXP(BV(61458, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19630, 16), 8), SFXP(SBV(25684, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19775, 16), 8), SFXP(SBV(-5502, 16), 8)), SFXP(SBV(31793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13688, 16), 8), UFXP(BV(15749, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43019, 16), 8), UFXP(BV(10475, 16), 8)), UFXP(BV(32544, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3794, 16), 8), UFXP(BV(24925, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(24141, 16), 8), SFXP(SBV(21005, 16), 8)), SFXP(SBV(14707, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10757, 16), 8), UFXP(BV(48192, 16), 8)), UFXP(BV(58949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57953, 16), 8), UFXP(BV(17944, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7327, 16), 8), SFXP(SBV(-27590, 16), 8)), SFXP(SBV(30619, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6424, 16), 8), SFXP(SBV(-11349, 16), 8)), SFXP(SBV(17773, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17831, 16), 8), SFXP(SBV(-29398, 16), 8)), SFXP(SBV(-11567, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23489, 16), 8), UFXP(BV(35665, 16), 8)), UFXP(BV(59154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4955, 16), 8), SFXP(SBV(5278, 16), 8)), SFXP(SBV(28914, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12555, 16), 8), SFXP(SBV(-29372, 16), 8)), SFXP(SBV(23609, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23166, 16), 8), UFXP(BV(52007, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1275, 16), 8), SFXP(SBV(-23328, 16), 8)), SFXP(SBV(-24603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16114, 16), 8), SFXP(SBV(13971, 16), 8)), SFXP(SBV(30085, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(65010, 16), 8), UFXP(BV(52533, 16), 8)), UFXP(BV(12477, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6053, 16), 8), SFXP(SBV(22857, 16), 8)), SFXP(SBV(16804, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27954, 16), 8), SFXP(SBV(-10649, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22494, 16), 8), UFXP(BV(26424, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50734, 16), 8), UFXP(BV(8600, 16), 8)), UFXP(BV(59334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26551, 16), 8), UFXP(BV(59329, 16), 8)), UFXP(BV(20344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16020, 16), 8), SFXP(SBV(-9672, 16), 8)), SFXP(SBV(6348, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17097, 16), 8), SFXP(SBV(6012, 16), 8)), SFXP(SBV(-11085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4245, 16), 8), SFXP(SBV(17974, 16), 8)), SFXP(SBV(-22219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8250, 16), 8), UFXP(BV(36149, 16), 8)), UFXP(BV(44399, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26185, 16), 8), UFXP(BV(169, 16), 8)), UFXP(BV(17287, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(492, 16), 8), UFXP(BV(37215, 16), 8)), UFXP(BV(5987, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28860, 16), 8), SFXP(SBV(-18442, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15930, 16), 8), SFXP(SBV(-7833, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8945, 16), 8), SFXP(SBV(-1856, 16), 8)), SFXP(SBV(-10801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16195, 16), 8), SFXP(SBV(3403, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32876, 16), 8), UFXP(BV(48907, 16), 8)), UFXP(BV(54809, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6595, 16), 8), UFXP(BV(15369, 16), 8)), UFXP(BV(2715, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46193, 16), 8), UFXP(BV(49504, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20334, 16), 8), SFXP(SBV(8811, 16), 8)), SFXP(SBV(29145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(41853, 16), 8), UFXP(BV(50780, 16), 8)), UFXP(BV(44398, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14370, 16), 8), SFXP(SBV(-26277, 16), 8)), SFXP(SBV(-11907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13014, 16), 8), SFXP(SBV(-587, 16), 8)), SFXP(SBV(-13601, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10503, 16), 8), SFXP(SBV(-17882, 16), 8)), SFXP(SBV(-12754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19852, 16), 8), UFXP(BV(22101, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6247, 16), 8), SFXP(SBV(-6296, 16), 8)), SFXP(SBV(12543, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47588, 16), 8), UFXP(BV(13709, 16), 8)), UFXP(BV(33879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13024, 16), 8), SFXP(SBV(30663, 16), 8)), SFXP(SBV(-17639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10615, 16), 8), UFXP(BV(16645, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(2166, 16), 8), SFXP(SBV(-28071, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41666, 16), 8), UFXP(BV(40883, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5778, 16), 8), UFXP(BV(60622, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31435, 16), 8), SFXP(SBV(11885, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1623, 16), 8), SFXP(SBV(26402, 16), 8)), SFXP(SBV(-28025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23624, 16), 8), UFXP(BV(54844, 16), 8)), UFXP(BV(12932, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10756, 16), 8), UFXP(BV(13649, 16), 8)), UFXP(BV(24405, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1220, 16), 8), UFXP(BV(18718, 16), 8)), UFXP(BV(19938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28203, 16), 8), SFXP(SBV(16483, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20146, 16), 8), SFXP(SBV(22821, 16), 8)), SFXP(SBV(-2675, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29823, 16), 8), UFXP(BV(19632, 16), 8)), UFXP(BV(10191, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15932, 16), 8), SFXP(SBV(-25541, 16), 8)), SFXP(SBV(16665, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11043, 16), 8), UFXP(BV(47920, 16), 8)), UFXP(BV(28659, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52096, 16), 8), UFXP(BV(53247, 16), 8)), UFXP(BV(64385, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62094, 16), 8), UFXP(BV(2288, 16), 8)), UFXP(BV(59806, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1973, 16), 8), SFXP(SBV(-25269, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41954, 16), 8), UFXP(BV(59778, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16502, 16), 8), SFXP(SBV(30807, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40390, 16), 8), UFXP(BV(49000, 16), 8)), UFXP(BV(23854, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4841, 16), 8), SFXP(SBV(-6998, 16), 8)), SFXP(SBV(-11839, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10508, 16), 8), SFXP(SBV(16072, 16), 8)), SFXP(SBV(-5564, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14155, 16), 8), SFXP(SBV(29767, 16), 8)), SFXP(SBV(15612, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21704, 16), 8), SFXP(SBV(-11476, 16), 8)), SFXP(SBV(-10228, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6630, 16), 8), SFXP(SBV(-32707, 16), 8)), SFXP(SBV(-26077, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60356, 16), 8), UFXP(BV(46267, 16), 8)), UFXP(BV(14089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31152, 16), 8), UFXP(BV(35589, 16), 8)), UFXP(BV(1205, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2958, 16), 8), SFXP(SBV(-6682, 16), 8)), SFXP(SBV(-3724, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64998, 16), 8), UFXP(BV(39635, 16), 8)), UFXP(BV(25363, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29090, 16), 8), SFXP(SBV(-20339, 16), 8)), SFXP(SBV(-16107, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11500, 16), 8), UFXP(BV(25438, 16), 8)), UFXP(BV(36938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59309, 16), 8), UFXP(BV(20304, 16), 8)), UFXP(BV(50890, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48146, 16), 8), UFXP(BV(64253, 16), 8)), UFXP(BV(25458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13184, 16), 8), UFXP(BV(62641, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38609, 16), 8), UFXP(BV(13626, 16), 8)), UFXP(BV(52235, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63372, 16), 8), UFXP(BV(61886, 16), 8)), UFXP(BV(49797, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1330, 16), 8), UFXP(BV(53271, 16), 8)), UFXP(BV(54601, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7732, 16), 8), SFXP(SBV(-11730, 16), 8)), SFXP(SBV(-26602, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2461, 16), 8), UFXP(BV(17878, 16), 8)), UFXP(BV(20339, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61188, 16), 8), UFXP(BV(36361, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8912, 16), 8), SFXP(SBV(-17327, 16), 8)), SFXP(SBV(-8415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23740, 16), 8), SFXP(SBV(-26406, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9217, 16), 8), UFXP(BV(11996, 16), 8)), UFXP(BV(21213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59410, 16), 8), UFXP(BV(35299, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14041, 16), 8), SFXP(SBV(-20569, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(21359, 16), 8), SFXP(SBV(13971, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42416, 16), 8), UFXP(BV(29715, 16), 8)), UFXP(BV(8204, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21670, 16), 8), SFXP(SBV(24526, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30173, 16), 8), SFXP(SBV(-21960, 16), 8)), SFXP(SBV(13403, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16970, 16), 8), UFXP(BV(43545, 16), 8)), UFXP(BV(38961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13929, 16), 8), UFXP(BV(21052, 16), 8)), UFXP(BV(34981, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53842, 16), 8), UFXP(BV(669, 16), 8)), UFXP(BV(53173, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21589, 16), 8), SFXP(SBV(27069, 16), 8)), SFXP(SBV(-5480, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62156, 16), 8), UFXP(BV(61196, 16), 8)), UFXP(BV(57816, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30258, 16), 8), SFXP(SBV(14191, 16), 8)), SFXP(SBV(16067, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62286, 16), 8), UFXP(BV(22981, 16), 8)), UFXP(BV(39305, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58616, 16), 8), UFXP(BV(14143, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61679, 16), 8), UFXP(BV(46069, 16), 8)), UFXP(BV(15610, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49447, 16), 8), UFXP(BV(35857, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(16887, 16), 8), SFXP(SBV(9642, 16), 8)), SFXP(SBV(-19327, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28706, 16), 8), SFXP(SBV(168, 16), 8)), SFXP(SBV(28538, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16739, 16), 8), SFXP(SBV(17869, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12119, 16), 8), SFXP(SBV(15860, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24880, 16), 8), SFXP(SBV(19240, 16), 8)), SFXP(SBV(21416, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22988, 16), 8), SFXP(SBV(-30403, 16), 8)), SFXP(SBV(-22417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40486, 16), 8), UFXP(BV(60269, 16), 8)), UFXP(BV(45753, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(301, 16), 8), SFXP(SBV(2962, 16), 8)), SFXP(SBV(-2661, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43958, 16), 8), UFXP(BV(14029, 16), 8)), UFXP(BV(57987, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48089, 16), 8), UFXP(BV(60107, 16), 8)), UFXP(BV(42660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6254, 16), 8), UFXP(BV(62167, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21544, 16), 8), SFXP(SBV(-22722, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4645, 16), 8), UFXP(BV(54614, 16), 8)), UFXP(BV(15567, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23867, 16), 8), SFXP(SBV(-3081, 16), 8)), SFXP(SBV(-20786, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2472, 16), 8), SFXP(SBV(30251, 16), 8)), SFXP(SBV(-32723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9137, 16), 8), SFXP(SBV(-20567, 16), 8)), SFXP(SBV(29704, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5956, 16), 8), SFXP(SBV(-25943, 16), 8)), SFXP(SBV(-31899, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16244, 16), 8), SFXP(SBV(17822, 16), 8)), SFXP(SBV(-1578, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16422, 16), 8), UFXP(BV(34533, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44656, 16), 8), UFXP(BV(28206, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(29079, 16), 8), SFXP(SBV(6498, 16), 8)), SFXP(SBV(17210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(47071, 16), 8), UFXP(BV(36349, 16), 8)), UFXP(BV(64395, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24673, 16), 8), UFXP(BV(16666, 16), 8)), UFXP(BV(8007, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3073, 16), 8), SFXP(SBV(-11706, 16), 8)), SFXP(SBV(-14779, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46726, 16), 8), UFXP(BV(58459, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29263, 16), 8), UFXP(BV(64058, 16), 8)), UFXP(BV(47883, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2894, 16), 8), SFXP(SBV(26646, 16), 8)), SFXP(SBV(-23752, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7487, 16), 8), SFXP(SBV(26765, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20424, 16), 8), SFXP(SBV(-20647, 16), 8)), SFXP(SBV(8843, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27955, 16), 8), UFXP(BV(55660, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3562, 16), 8), SFXP(SBV(16858, 16), 8)), SFXP(SBV(-13296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50744, 16), 8), UFXP(BV(34825, 16), 8)), UFXP(BV(21688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13679, 16), 8), SFXP(SBV(-4455, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3587, 16), 8), UFXP(BV(10720, 16), 8)), UFXP(BV(19134, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29104, 16), 8), SFXP(SBV(12810, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17459, 16), 8), SFXP(SBV(6888, 16), 8)), SFXP(SBV(10571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15039, 16), 8), SFXP(SBV(11053, 16), 8)), SFXP(SBV(6040, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(243, 16), 8), SFXP(SBV(-15113, 16), 8)), SFXP(SBV(-14870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4729, 16), 8), UFXP(BV(54102, 16), 8)), UFXP(BV(16367, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37873, 16), 8), UFXP(BV(42905, 16), 8)), UFXP(BV(15242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42288, 16), 8), UFXP(BV(59453, 16), 8)), UFXP(BV(36205, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21829, 16), 8), UFXP(BV(32672, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60696, 16), 8), UFXP(BV(46433, 16), 8)), UFXP(BV(14263, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28069, 16), 8), SFXP(SBV(21033, 16), 8)), SFXP(SBV(16434, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18328, 16), 8), UFXP(BV(8629, 16), 8)), UFXP(BV(27959, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16549, 16), 8), UFXP(BV(62904, 16), 8)), UFXP(BV(13917, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13222, 16), 8), SFXP(SBV(11675, 16), 8)), SFXP(SBV(-24897, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6238, 16), 8), SFXP(SBV(-31609, 16), 8)), SFXP(SBV(-27689, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29868, 16), 8), UFXP(BV(15563, 16), 8)), UFXP(BV(14305, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25211, 16), 8), UFXP(BV(11036, 16), 8)), UFXP(BV(36247, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12654, 16), 8), SFXP(SBV(-19851, 16), 8)), SFXP(SBV(-1812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29849, 16), 8), SFXP(SBV(-7988, 16), 8)), SFXP(SBV(-27699, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10389, 16), 8), UFXP(BV(57460, 16), 8)), UFXP(BV(18465, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27392, 16), 8), SFXP(SBV(5905, 16), 8)), SFXP(SBV(-21487, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1449, 16), 8), UFXP(BV(53485, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(20134, 16), 8), SFXP(SBV(27563, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26379, 16), 8), SFXP(SBV(-7528, 16), 8)), SFXP(SBV(-31629, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29821, 16), 8), SFXP(SBV(-3366, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26237, 16), 8), SFXP(SBV(-29514, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53, 16), 8), UFXP(BV(33862, 16), 8)), UFXP(BV(33915, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-1847, 16), 8), SFXP(SBV(22152, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16525, 16), 8), SFXP(SBV(26742, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9144, 16), 8), SFXP(SBV(1468, 16), 8)), SFXP(SBV(10612, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38150, 16), 8), UFXP(BV(27861, 16), 8)), UFXP(BV(23174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49787, 16), 8), UFXP(BV(7164, 16), 8)), UFXP(BV(17002, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(13605, 16), 8), SFXP(SBV(11583, 16), 8)), SFXP(SBV(25750, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10987, 16), 8), UFXP(BV(2032, 16), 8)), UFXP(BV(8955, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(65334, 16), 8), UFXP(BV(17973, 16), 8)), UFXP(BV(64922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20713, 16), 8), SFXP(SBV(10134, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22849, 16), 8), UFXP(BV(8330, 16), 8)), UFXP(BV(31179, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7081, 16), 8), SFXP(SBV(15747, 16), 8)), SFXP(SBV(-23187, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(890, 16), 8), UFXP(BV(13326, 16), 8)), UFXP(BV(46329, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56083, 16), 8), UFXP(BV(37948, 16), 8)), UFXP(BV(18135, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35223, 16), 8), UFXP(BV(47073, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7239, 16), 8), SFXP(SBV(23567, 16), 8)), SFXP(SBV(11053, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57762, 16), 8), UFXP(BV(8303, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9324, 16), 8), UFXP(BV(5263, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29811, 16), 8), SFXP(SBV(-16979, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9351, 16), 8), UFXP(BV(18750, 16), 8)), UFXP(BV(28101, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25485, 16), 8), UFXP(BV(42676, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10410, 16), 8), SFXP(SBV(25377, 16), 8)), SFXP(SBV(-14967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10872, 16), 8), SFXP(SBV(-25829, 16), 8)), SFXP(SBV(-14957, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13273, 16), 8), UFXP(BV(10842, 16), 8)), UFXP(BV(2431, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1657, 16), 8), SFXP(SBV(9459, 16), 8)), SFXP(SBV(-7802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9393, 16), 8), SFXP(SBV(4103, 16), 8)), SFXP(SBV(-5290, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64797, 16), 8), UFXP(BV(12164, 16), 8)), UFXP(BV(52633, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17087, 16), 8), UFXP(BV(41432, 16), 8)), UFXP(BV(58519, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15305, 16), 8), SFXP(SBV(-6772, 16), 8)), SFXP(SBV(22077, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5805, 16), 8), UFXP(BV(53740, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27420, 16), 8), SFXP(SBV(-29631, 16), 8)), SFXP(SBV(28030, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36520, 16), 8), UFXP(BV(56212, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15417, 16), 8), SFXP(SBV(27686, 16), 8)), SFXP(SBV(-12269, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13114, 16), 8), SFXP(SBV(-2309, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23360, 16), 8), SFXP(SBV(-21608, 16), 8)), SFXP(SBV(-5650, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12208, 16), 8), SFXP(SBV(15092, 16), 8)), SFXP(SBV(-2884, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40367, 16), 8), UFXP(BV(37428, 16), 8)), UFXP(BV(2939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39238, 16), 8), UFXP(BV(59781, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7130, 16), 8), UFXP(BV(13191, 16), 8)), UFXP(BV(39710, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50466, 16), 8), UFXP(BV(52682, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8094, 16), 8), UFXP(BV(53954, 16), 8)), UFXP(BV(19676, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58280, 16), 8), UFXP(BV(29981, 16), 8)), UFXP(BV(28299, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51669, 16), 8), UFXP(BV(39507, 16), 8)), UFXP(BV(12162, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14577, 16), 8), UFXP(BV(42154, 16), 8)), UFXP(BV(41013, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51194, 16), 8), UFXP(BV(32642, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20132, 16), 8), SFXP(SBV(30550, 16), 8)), SFXP(SBV(-10418, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31217, 16), 8), UFXP(BV(9903, 16), 8)), UFXP(BV(21314, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16898, 16), 8), SFXP(SBV(-18186, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39600, 16), 8), UFXP(BV(26685, 16), 8)), UFXP(BV(749, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23883, 16), 8), SFXP(SBV(13940, 16), 8)), SFXP(SBV(-27713, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17045, 16), 8), SFXP(SBV(-73, 16), 8)), SFXP(SBV(-17118, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1636, 16), 8), UFXP(BV(9001, 16), 8)), UFXP(BV(57523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6504, 16), 8), SFXP(SBV(-20484, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50019, 16), 8), UFXP(BV(8735, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(20716, 16), 8), UFXP(BV(53536, 16), 8)), UFXP(BV(6857, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46834, 16), 8), UFXP(BV(38359, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54031, 16), 8), UFXP(BV(35854, 16), 8)), UFXP(BV(18177, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49800, 16), 8), UFXP(BV(27750, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4410, 16), 8), UFXP(BV(17226, 16), 8)), UFXP(BV(21636, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6510, 16), 8), UFXP(BV(56390, 16), 8)), UFXP(BV(62900, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20607, 16), 8), SFXP(SBV(11729, 16), 8)), SFXP(SBV(-32336, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19357, 16), 8), UFXP(BV(52128, 16), 8)), UFXP(BV(9409, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30765, 16), 8), UFXP(BV(4016, 16), 8)), UFXP(BV(23874, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43231, 16), 8), UFXP(BV(15507, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29541, 16), 8), SFXP(SBV(-21187, 16), 8)), SFXP(SBV(8354, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6928, 16), 8), SFXP(SBV(1506, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63345, 16), 8), UFXP(BV(35035, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4547, 16), 8), SFXP(SBV(-9206, 16), 8)), SFXP(SBV(-4659, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7323, 16), 8), SFXP(SBV(-9809, 16), 8)), SFXP(SBV(17132, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23431, 16), 8), SFXP(SBV(21659, 16), 8)), SFXP(SBV(1772, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37183, 16), 8), UFXP(BV(21186, 16), 8)), UFXP(BV(58369, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13192, 16), 8), SFXP(SBV(-4348, 16), 8)), SFXP(SBV(-27450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45586, 16), 8), UFXP(BV(55060, 16), 8)), UFXP(BV(56062, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57232, 16), 8), UFXP(BV(42643, 16), 8)), UFXP(BV(34339, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40487, 16), 8), UFXP(BV(51628, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20581, 16), 8), UFXP(BV(14990, 16), 8)), UFXP(BV(5591, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32422, 16), 8), UFXP(BV(48555, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4118, 16), 8), SFXP(SBV(32391, 16), 8)), SFXP(SBV(28273, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(28905, 16), 8), UFXP(BV(15706, 16), 8)), UFXP(BV(13199, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12195, 16), 8), SFXP(SBV(-967, 16), 8)), SFXP(SBV(-11228, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23732, 16), 8), UFXP(BV(54868, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25498, 16), 8), SFXP(SBV(-19998, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64534, 16), 8), UFXP(BV(49801, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10503, 16), 8), UFXP(BV(63632, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23372, 16), 8), SFXP(SBV(-14352, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(8930, 16), 8), UFXP(BV(8622, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20254, 16), 8), UFXP(BV(3240, 16), 8)), UFXP(BV(17014, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16930, 16), 8), SFXP(SBV(30440, 16), 8)), SFXP(SBV(18166, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43629, 16), 8), UFXP(BV(39167, 16), 8)), UFXP(BV(4462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37804, 16), 8), UFXP(BV(63611, 16), 8)), UFXP(BV(21907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56788, 16), 8), UFXP(BV(64278, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34499, 16), 8), UFXP(BV(21946, 16), 8)), UFXP(BV(56445, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49416, 16), 8), UFXP(BV(46520, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14580, 16), 8), SFXP(SBV(-25948, 16), 8)), SFXP(SBV(-11368, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62941, 16), 8), UFXP(BV(51113, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22497, 16), 8), SFXP(SBV(-24714, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6916, 16), 8), SFXP(SBV(31730, 16), 8)), SFXP(SBV(24814, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9023, 16), 8), SFXP(SBV(3659, 16), 8)), SFXP(SBV(-5364, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28073, 16), 8), UFXP(BV(13835, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27833, 16), 8), UFXP(BV(9792, 16), 8)), UFXP(BV(16036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19958, 16), 8), UFXP(BV(60065, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21517, 16), 8), UFXP(BV(46226, 16), 8)), UFXP(BV(18707, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50686, 16), 8), UFXP(BV(16515, 16), 8)), UFXP(BV(34171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9812, 16), 8), SFXP(SBV(-31643, 16), 8)), SFXP(SBV(-21831, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30371, 16), 8), SFXP(SBV(-8502, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27240, 16), 8), SFXP(SBV(13638, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17035, 16), 8), SFXP(SBV(-935, 16), 8)), SFXP(SBV(3318, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13207, 16), 8), UFXP(BV(34774, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55071, 16), 8), UFXP(BV(34253, 16), 8)), UFXP(BV(23788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59145, 16), 8), UFXP(BV(59843, 16), 8)), UFXP(BV(63276, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54343, 16), 8), UFXP(BV(30323, 16), 8)), UFXP(BV(24020, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9296, 16), 8), UFXP(BV(26109, 16), 8)), UFXP(BV(35405, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55634, 16), 8), UFXP(BV(6627, 16), 8)), UFXP(BV(62261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13420, 16), 8), SFXP(SBV(29581, 16), 8)), SFXP(SBV(-16161, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1855, 16), 8), SFXP(SBV(-19823, 16), 8)), SFXP(SBV(17968, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38912, 16), 8), UFXP(BV(19085, 16), 8)), UFXP(BV(17336, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14742, 16), 8), SFXP(SBV(-12316, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35378, 16), 8), UFXP(BV(12975, 16), 8)), UFXP(BV(48353, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2531, 16), 8), SFXP(SBV(1293, 16), 8)), SFXP(SBV(-12784, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21759, 16), 8), SFXP(SBV(-30144, 16), 8)), SFXP(SBV(6218, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54752, 16), 8), UFXP(BV(35820, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15320, 16), 8), UFXP(BV(58485, 16), 8)), UFXP(BV(26553, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26927, 16), 8), SFXP(SBV(30845, 16), 8)), SFXP(SBV(-3918, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13966, 16), 8), SFXP(SBV(32111, 16), 8)), SFXP(SBV(-18145, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60641, 16), 8), UFXP(BV(2871, 16), 8)), UFXP(BV(63512, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58025, 16), 8), UFXP(BV(23563, 16), 8)), UFXP(BV(34462, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25100, 16), 8), SFXP(SBV(-19320, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1677, 16), 8), SFXP(SBV(-22722, 16), 8)), SFXP(SBV(-24399, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(94, 16), 8), UFXP(BV(53106, 16), 8)), UFXP(BV(19499, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27048, 16), 8), SFXP(SBV(-16937, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18758, 16), 8), SFXP(SBV(-24688, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45449, 16), 8), UFXP(BV(12191, 16), 8)), UFXP(BV(33258, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13273, 16), 8), UFXP(BV(25488, 16), 8)), UFXP(BV(38761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2998, 16), 8), SFXP(SBV(31052, 16), 8)), SFXP(SBV(28054, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10340, 16), 8), SFXP(SBV(25270, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37317, 16), 8), UFXP(BV(21970, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10474, 16), 8), UFXP(BV(36018, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6575, 16), 8), UFXP(BV(26818, 16), 8)), UFXP(BV(45293, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32575, 16), 8), SFXP(SBV(7904, 16), 8)), SFXP(SBV(24671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6831, 16), 8), SFXP(SBV(-15819, 16), 8)), SFXP(SBV(22650, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53105, 16), 8), UFXP(BV(16447, 16), 8)), UFXP(BV(36658, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48824, 16), 8), UFXP(BV(43430, 16), 8)), UFXP(BV(5394, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(1270, 16), 8), SFXP(SBV(13198, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58722, 16), 8), UFXP(BV(7057, 16), 8)), UFXP(BV(51665, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17458, 16), 8), UFXP(BV(46880, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13888, 16), 8), UFXP(BV(59475, 16), 8)), UFXP(BV(15255, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27262, 16), 8), SFXP(SBV(31592, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15493, 16), 8), UFXP(BV(64431, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19621, 16), 8), UFXP(BV(33691, 16), 8)), UFXP(BV(53312, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12230, 16), 8), SFXP(SBV(-21990, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18791, 16), 8), SFXP(SBV(31754, 16), 8)), SFXP(SBV(-14991, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13143, 16), 8), SFXP(SBV(-32510, 16), 8)), SFXP(SBV(19883, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6481, 16), 8), SFXP(SBV(-8847, 16), 8)), SFXP(SBV(2366, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23385, 16), 8), UFXP(BV(26637, 16), 8)), UFXP(BV(8395, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27869, 16), 8), SFXP(SBV(131, 16), 8)), SFXP(SBV(14262, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62482, 16), 8), UFXP(BV(64800, 16), 8)), UFXP(BV(61746, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(4280, 16), 8), SFXP(SBV(-18432, 16), 8)), SFXP(SBV(19520, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6567, 16), 8), SFXP(SBV(-22738, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27956, 16), 8), SFXP(SBV(7641, 16), 8)), SFXP(SBV(20315, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19796, 16), 8), SFXP(SBV(30084, 16), 8)), SFXP(SBV(10288, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7396, 16), 8), UFXP(BV(45600, 16), 8)), UFXP(BV(27332, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11157, 16), 8), SFXP(SBV(9755, 16), 8)), SFXP(SBV(1402, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23077, 16), 8), SFXP(SBV(4882, 16), 8)), SFXP(SBV(27959, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19009, 16), 8), UFXP(BV(42594, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13166, 16), 8), UFXP(BV(37960, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15186, 16), 8), UFXP(BV(37609, 16), 8)), UFXP(BV(52795, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53529, 16), 8), UFXP(BV(51995, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62526, 16), 8), UFXP(BV(46923, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24034, 16), 8), UFXP(BV(36471, 16), 8)), UFXP(BV(60505, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(32723, 16), 8), SFXP(SBV(23402, 16), 8)), SFXP(SBV(-23313, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(11832, 16), 8), UFXP(BV(51003, 16), 8)), UFXP(BV(63535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(54085, 16), 8), UFXP(BV(21094, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18745, 16), 8), SFXP(SBV(-9062, 16), 8)), SFXP(SBV(9683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2947, 16), 8), SFXP(SBV(3118, 16), 8)), SFXP(SBV(-171, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45679, 16), 8), UFXP(BV(39247, 16), 8)), UFXP(BV(19390, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30551, 16), 8), UFXP(BV(13418, 16), 8)), UFXP(BV(43969, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(9716, 16), 8), SFXP(SBV(-5819, 16), 8)), SFXP(SBV(-24242, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20527, 16), 8), UFXP(BV(38934, 16), 8)), UFXP(BV(41677, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12107, 16), 8), SFXP(SBV(29652, 16), 8)), SFXP(SBV(-17545, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7536, 16), 8), SFXP(SBV(-1220, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24200, 16), 8), SFXP(SBV(-1543, 16), 8)), SFXP(SBV(-25743, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12081, 16), 8), UFXP(BV(43250, 16), 8)), UFXP(BV(55331, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14930, 16), 8), SFXP(SBV(-27715, 16), 8)), SFXP(SBV(12785, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30225, 16), 8), UFXP(BV(51418, 16), 8)), UFXP(BV(44343, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49754, 16), 8), UFXP(BV(29434, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38456, 16), 8), UFXP(BV(63955, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1188, 16), 8), UFXP(BV(47609, 16), 8)), UFXP(BV(48797, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37216, 16), 8), UFXP(BV(6100, 16), 8)), UFXP(BV(43316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5262, 16), 8), UFXP(BV(16080, 16), 8)), UFXP(BV(54718, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12855, 16), 8), UFXP(BV(5999, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19066, 16), 8), SFXP(SBV(11624, 16), 8)), SFXP(SBV(-30690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29791, 16), 8), UFXP(BV(16286, 16), 8)), UFXP(BV(46077, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41780, 16), 8), UFXP(BV(47030, 16), 8)), UFXP(BV(23274, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16479, 16), 8), UFXP(BV(58859, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22681, 16), 8), SFXP(SBV(24873, 16), 8)), SFXP(SBV(2192, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41455, 16), 8), UFXP(BV(4821, 16), 8)), UFXP(BV(46276, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56966, 16), 8), UFXP(BV(35353, 16), 8)), UFXP(BV(2551, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25785, 16), 8), UFXP(BV(47800, 16), 8)), UFXP(BV(30414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29438, 16), 8), SFXP(SBV(-11241, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15250, 16), 8), UFXP(BV(21209, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37366, 16), 8), UFXP(BV(41083, 16), 8)), UFXP(BV(32737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11082, 16), 8), SFXP(SBV(2519, 16), 8)), SFXP(SBV(13601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56086, 16), 8), UFXP(BV(6302, 16), 8)), UFXP(BV(62388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9147, 16), 8), SFXP(SBV(1647, 16), 8)), SFXP(SBV(-10794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20502, 16), 8), UFXP(BV(296, 16), 8)), UFXP(BV(23706, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15678, 16), 8), SFXP(SBV(-14992, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9355, 16), 8), UFXP(BV(44967, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32964, 16), 8), UFXP(BV(50798, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17564, 16), 8), SFXP(SBV(6816, 16), 8)), SFXP(SBV(10748, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29424, 16), 8), SFXP(SBV(17036, 16), 8)), SFXP(SBV(8004, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(47562, 16), 8), UFXP(BV(13584, 16), 8)), UFXP(BV(33391, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64189, 16), 8), UFXP(BV(8997, 16), 8)), UFXP(BV(7650, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(16601, 16), 8), SFXP(SBV(-12056, 16), 8)), SFXP(SBV(4545, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22231, 16), 8), UFXP(BV(34397, 16), 8)), UFXP(BV(37910, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(707, 16), 8), SFXP(SBV(25834, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29251, 16), 8), UFXP(BV(64034, 16), 8)), UFXP(BV(42139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21595, 16), 8), SFXP(SBV(-18935, 16), 8)), SFXP(SBV(2660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15146, 16), 8), UFXP(BV(58723, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3255, 16), 8), SFXP(SBV(-3402, 16), 8)), SFXP(SBV(-147, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4347, 16), 8), UFXP(BV(36923, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11023, 16), 8), UFXP(BV(43968, 16), 8)), UFXP(BV(54991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9735, 16), 8), UFXP(BV(36505, 16), 8)), UFXP(BV(38766, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23253, 16), 8), SFXP(SBV(6767, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4062, 16), 8), UFXP(BV(47084, 16), 8)), UFXP(BV(51146, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13721, 16), 8), SFXP(SBV(-3714, 16), 8)), SFXP(SBV(17435, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6824, 16), 8), SFXP(SBV(26438, 16), 8)), SFXP(SBV(19614, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-335, 16), 8), SFXP(SBV(-14234, 16), 8)), SFXP(SBV(18627, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-126, 16), 8), SFXP(SBV(14437, 16), 8)), SFXP(SBV(14311, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15964, 16), 8), UFXP(BV(12837, 16), 8)), UFXP(BV(3127, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9941, 16), 8), SFXP(SBV(30231, 16), 8)), SFXP(SBV(20290, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19482, 16), 8), SFXP(SBV(18874, 16), 8)), SFXP(SBV(-27180, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19546, 16), 8), SFXP(SBV(-22881, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29950, 16), 8), SFXP(SBV(38, 16), 8)), SFXP(SBV(-4445, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8567, 16), 8), SFXP(SBV(4361, 16), 8)), SFXP(SBV(12928, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(241, 16), 8), UFXP(BV(21175, 16), 8)), UFXP(BV(19934, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29950, 16), 8), SFXP(SBV(22852, 16), 8)), SFXP(SBV(-13470, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14436, 16), 8), UFXP(BV(1775, 16), 8)), UFXP(BV(16211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50761, 16), 8), UFXP(BV(26463, 16), 8)), UFXP(BV(24298, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26765, 16), 8), SFXP(SBV(20122, 16), 8)), SFXP(SBV(18649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47600, 16), 8), UFXP(BV(20812, 16), 8)), UFXP(BV(2876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(64452, 16), 8), UFXP(BV(51354, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51646, 16), 8), UFXP(BV(37188, 16), 8)), UFXP(BV(31284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48725, 16), 8), UFXP(BV(16046, 16), 8)), UFXP(BV(32679, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30556, 16), 8), SFXP(SBV(23607, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22428, 16), 8), SFXP(SBV(15036, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24879, 16), 8), UFXP(BV(20431, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59113, 16), 8), UFXP(BV(53177, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9756, 16), 8), SFXP(SBV(18016, 16), 8)), SFXP(SBV(-8260, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31709, 16), 8), SFXP(SBV(23934, 16), 8)), SFXP(SBV(-7775, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14158, 16), 8), UFXP(BV(11386, 16), 8)), UFXP(BV(2772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20222, 16), 8), SFXP(SBV(-4368, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7168, 16), 8), SFXP(SBV(-5599, 16), 8)), SFXP(SBV(-1569, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46335, 16), 8), UFXP(BV(34245, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10658, 16), 8), SFXP(SBV(5456, 16), 8)), SFXP(SBV(16114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1857, 16), 8), SFXP(SBV(10923, 16), 8)), SFXP(SBV(9066, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53777, 16), 8), UFXP(BV(51739, 16), 8)), UFXP(BV(55186, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24176, 16), 8), SFXP(SBV(9936, 16), 8)), SFXP(SBV(-20827, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22937, 16), 8), SFXP(SBV(-14278, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3682, 16), 8), UFXP(BV(53113, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30637, 16), 8), UFXP(BV(61242, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23956, 16), 8), SFXP(SBV(13831, 16), 8)), SFXP(SBV(-27749, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30650, 16), 8), SFXP(SBV(-13879, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21285, 16), 8), SFXP(SBV(-12545, 16), 8)), SFXP(SBV(-8740, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21502, 16), 8), SFXP(SBV(8459, 16), 8)), SFXP(SBV(29961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60749, 16), 8), UFXP(BV(47226, 16), 8)), UFXP(BV(110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52835, 16), 8), UFXP(BV(59916, 16), 8)), UFXP(BV(45099, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32078, 16), 8), UFXP(BV(56548, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19141, 16), 8), SFXP(SBV(26829, 16), 8)), SFXP(SBV(-7688, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11855, 16), 8), UFXP(BV(62702, 16), 8)), UFXP(BV(9021, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16912, 16), 8), SFXP(SBV(20144, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19148, 16), 8), SFXP(SBV(7251, 16), 8)), SFXP(SBV(-11897, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23196, 16), 8), SFXP(SBV(27548, 16), 8)), SFXP(SBV(5739, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45059, 16), 8), UFXP(BV(62034, 16), 8)), UFXP(BV(48561, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23537, 16), 8), SFXP(SBV(-22123, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7804, 16), 8), SFXP(SBV(16224, 16), 8)), SFXP(SBV(29710, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30092, 16), 8), SFXP(SBV(-31767, 16), 8)), SFXP(SBV(-1675, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18763, 16), 8), UFXP(BV(48218, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24307, 16), 8), UFXP(BV(50008, 16), 8)), UFXP(BV(39835, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29892, 16), 8), UFXP(BV(56903, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23713, 16), 8), SFXP(SBV(-21380, 16), 8)), SFXP(SBV(-14327, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30507, 16), 8), SFXP(SBV(9824, 16), 8)), SFXP(SBV(8942, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2354, 16), 8), SFXP(SBV(13373, 16), 8)), SFXP(SBV(-11019, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60526, 16), 8), UFXP(BV(17719, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4813, 16), 8), UFXP(BV(40108, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39323, 16), 8), UFXP(BV(5042, 16), 8)), UFXP(BV(34281, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6091, 16), 8), UFXP(BV(59610, 16), 8)), UFXP(BV(12017, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11785, 16), 8), SFXP(SBV(2561, 16), 8)), SFXP(SBV(-14346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19033, 16), 8), UFXP(BV(10680, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(34956, 16), 8), UFXP(BV(31376, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14580, 16), 8), UFXP(BV(33361, 16), 8)), UFXP(BV(65006, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43000, 16), 8), UFXP(BV(35051, 16), 8)), UFXP(BV(7949, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36551, 16), 8), UFXP(BV(11774, 16), 8)), UFXP(BV(42661, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23066, 16), 8), SFXP(SBV(7894, 16), 8)), SFXP(SBV(30960, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63163, 16), 8), UFXP(BV(54927, 16), 8)), UFXP(BV(8236, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7367, 16), 8), SFXP(SBV(-7636, 16), 8)), SFXP(SBV(15003, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51669, 16), 8), UFXP(BV(47756, 16), 8)), UFXP(BV(33889, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11556, 16), 8), UFXP(BV(49417, 16), 8)), UFXP(BV(60973, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38153, 16), 8), UFXP(BV(59741, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12000, 16), 8), SFXP(SBV(-18985, 16), 8)), SFXP(SBV(-30985, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(16712, 16), 8), SFXP(SBV(9220, 16), 8)), SFXP(SBV(12069, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(22244, 16), 8), SFXP(SBV(31004, 16), 8)), SFXP(SBV(-8760, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29382, 16), 8), SFXP(SBV(-2267, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4859, 16), 8), SFXP(SBV(-9017, 16), 8)), SFXP(SBV(-13876, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5759, 16), 8), SFXP(SBV(22964, 16), 8)), SFXP(SBV(17205, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27492, 16), 8), SFXP(SBV(-16709, 16), 8)), SFXP(SBV(-21335, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10414, 16), 8), UFXP(BV(3094, 16), 8)), UFXP(BV(13508, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26312, 16), 8), UFXP(BV(29989, 16), 8)), UFXP(BV(56301, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14627, 16), 8), UFXP(BV(44392, 16), 8)), UFXP(BV(35771, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20074, 16), 8), UFXP(BV(47312, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52203, 16), 8), UFXP(BV(41499, 16), 8)), UFXP(BV(8248, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7385, 16), 8), UFXP(BV(8255, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(32152, 16), 8), SFXP(SBV(-30509, 16), 8)), SFXP(SBV(-30652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24030, 16), 8), SFXP(SBV(8815, 16), 8)), SFXP(SBV(-15215, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23626, 16), 8), SFXP(SBV(6462, 16), 8)), SFXP(SBV(-17164, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(907, 16), 8), SFXP(SBV(-23662, 16), 8)), SFXP(SBV(-22755, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(55552, 16), 8), UFXP(BV(64508, 16), 8)), UFXP(BV(39068, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48205, 16), 8), UFXP(BV(52480, 16), 8)), UFXP(BV(35149, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4984, 16), 8), SFXP(SBV(-13028, 16), 8)), SFXP(SBV(18012, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55105, 16), 8), UFXP(BV(33925, 16), 8)), UFXP(BV(21180, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17889, 16), 8), SFXP(SBV(20081, 16), 8)), SFXP(SBV(27566, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25720, 16), 8), UFXP(BV(48579, 16), 8)), UFXP(BV(8763, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-17724, 16), 8), SFXP(SBV(-28864, 16), 8)), SFXP(SBV(32301, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(12383, 16), 8), UFXP(BV(37615, 16), 8)), UFXP(BV(50007, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3432, 16), 8), SFXP(SBV(996, 16), 8)), SFXP(SBV(2436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6761, 16), 8), UFXP(BV(16385, 16), 8)), UFXP(BV(39515, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(59375, 16), 8), UFXP(BV(26977, 16), 8)), UFXP(BV(30952, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41486, 16), 8), UFXP(BV(7921, 16), 8)), UFXP(BV(33565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15546, 16), 8), SFXP(SBV(27353, 16), 8)), SFXP(SBV(11807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2248, 16), 8), SFXP(SBV(27535, 16), 8)), SFXP(SBV(-25287, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6618, 16), 8), UFXP(BV(1742, 16), 8)), UFXP(BV(45034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22515, 16), 8), SFXP(SBV(-29079, 16), 8)), SFXP(SBV(-1571, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17608, 16), 8), UFXP(BV(61663, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9885, 16), 8), SFXP(SBV(-27206, 16), 8)), SFXP(SBV(-28445, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7020, 16), 8), SFXP(SBV(-31427, 16), 8)), SFXP(SBV(9820, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(64565, 16), 8), UFXP(BV(24239, 16), 8)), UFXP(BV(18398, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8351, 16), 8), UFXP(BV(7798, 16), 8)), UFXP(BV(16149, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34818, 16), 8), UFXP(BV(48462, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30286, 16), 8), UFXP(BV(45708, 16), 8)), UFXP(BV(50114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14126, 16), 8), SFXP(SBV(17916, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17257, 16), 8), SFXP(SBV(-23634, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20218, 16), 8), SFXP(SBV(-18700, 16), 8)), SFXP(SBV(-30467, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31906, 16), 8), UFXP(BV(13184, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23747, 16), 8), SFXP(SBV(-18720, 16), 8)), SFXP(SBV(32564, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20335, 16), 8), UFXP(BV(40395, 16), 8)), UFXP(BV(60730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23905, 16), 8), SFXP(SBV(7127, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15440, 16), 8), UFXP(BV(44974, 16), 8)), UFXP(BV(36002, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53991, 16), 8), UFXP(BV(29404, 16), 8)), UFXP(BV(24587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38057, 16), 8), UFXP(BV(29437, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16154, 16), 8), UFXP(BV(40799, 16), 8)), UFXP(BV(56953, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13548, 16), 8), SFXP(SBV(-12537, 16), 8)), SFXP(SBV(26085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17883, 16), 8), SFXP(SBV(-21676, 16), 8)), SFXP(SBV(-3793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30589, 16), 8), UFXP(BV(12492, 16), 8)), UFXP(BV(43081, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64136, 16), 8), UFXP(BV(12819, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30793, 16), 8), SFXP(SBV(6946, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17035, 16), 8), UFXP(BV(21895, 16), 8)), UFXP(BV(38930, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12214, 16), 8), SFXP(SBV(-11279, 16), 8)), SFXP(SBV(935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8682, 16), 8), UFXP(BV(60521, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(15500, 16), 8), UFXP(BV(7234, 16), 8)), UFXP(BV(44781, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3648, 16), 8), UFXP(BV(33500, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19709, 16), 8), UFXP(BV(31253, 16), 8)), UFXP(BV(50962, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9951, 16), 8), SFXP(SBV(-832, 16), 8)), SFXP(SBV(9119, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(32255, 16), 8), SFXP(SBV(-15907, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(17382, 16), 8), UFXP(BV(9367, 16), 8)), UFXP(BV(46181, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(17159, 16), 8), UFXP(BV(13054, 16), 8)), UFXP(BV(4105, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1689, 16), 8), SFXP(SBV(18182, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56241, 16), 8), UFXP(BV(51202, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26394, 16), 8), SFXP(SBV(-24403, 16), 8)), SFXP(SBV(-1991, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24543, 16), 8), SFXP(SBV(-29335, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40200, 16), 8), UFXP(BV(48026, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9000, 16), 8), SFXP(SBV(-30265, 16), 8)), SFXP(SBV(21265, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17235, 16), 8), SFXP(SBV(-24527, 16), 8)), SFXP(SBV(7292, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62560, 16), 8), UFXP(BV(31965, 16), 8)), UFXP(BV(30595, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7908, 16), 8), SFXP(SBV(-167, 16), 8)), SFXP(SBV(-7741, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28876, 16), 8), SFXP(SBV(-4957, 16), 8)), SFXP(SBV(31703, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6580, 16), 8), UFXP(BV(48348, 16), 8)), UFXP(BV(54928, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29957, 16), 8), SFXP(SBV(-30374, 16), 8)), SFXP(SBV(-5205, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4090, 16), 8), SFXP(SBV(12301, 16), 8)), SFXP(SBV(-8211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53728, 16), 8), UFXP(BV(56810, 16), 8)), UFXP(BV(62454, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48947, 16), 8), UFXP(BV(25709, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(59080, 16), 8), UFXP(BV(1320, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30417, 16), 8), SFXP(SBV(10370, 16), 8)), SFXP(SBV(-13057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30300, 16), 8), SFXP(SBV(-19351, 16), 8)), SFXP(SBV(-3387, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43895, 16), 8), UFXP(BV(464, 16), 8)), UFXP(BV(43431, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49052, 16), 8), UFXP(BV(42485, 16), 8)), UFXP(BV(6567, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22296, 16), 8), SFXP(SBV(-3945, 16), 8)), SFXP(SBV(-15904, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38711, 16), 8), UFXP(BV(36995, 16), 8)), UFXP(BV(1716, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16467, 16), 8), SFXP(SBV(-17318, 16), 8)), SFXP(SBV(-851, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1059, 16), 8), SFXP(SBV(-3144, 16), 8)), SFXP(SBV(2085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24286, 16), 8), SFXP(SBV(-12769, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15532, 16), 8), SFXP(SBV(4825, 16), 8)), SFXP(SBV(10707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5365, 16), 8), SFXP(SBV(14373, 16), 8)), SFXP(SBV(9008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19596, 16), 8), UFXP(BV(13144, 16), 8)), UFXP(BV(32740, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53319, 16), 8), UFXP(BV(58498, 16), 8)), UFXP(BV(60357, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12781, 16), 8), SFXP(SBV(10643, 16), 8)), SFXP(SBV(-2138, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39799, 16), 8), UFXP(BV(22336, 16), 8)), UFXP(BV(17463, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11274, 16), 8), SFXP(SBV(29415, 16), 8)), SFXP(SBV(-18141, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15086, 16), 8), SFXP(SBV(487, 16), 8)), SFXP(SBV(-14599, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18567, 16), 8), UFXP(BV(61099, 16), 8)), UFXP(BV(40437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17744, 16), 8), UFXP(BV(742, 16), 8)), UFXP(BV(18486, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28711, 16), 8), SFXP(SBV(2640, 16), 8)), SFXP(SBV(-26071, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-19803, 16), 8), SFXP(SBV(15842, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46891, 16), 8), UFXP(BV(22929, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29330, 16), 8), SFXP(SBV(24941, 16), 8)), SFXP(SBV(-11265, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(69, 16), 8), UFXP(BV(14508, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11115, 16), 8), SFXP(SBV(-5571, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(50333, 16), 8), UFXP(BV(45321, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40502, 16), 8), UFXP(BV(3940, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1031, 16), 8), SFXP(SBV(-26632, 16), 8)), SFXP(SBV(25601, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34541, 16), 8), UFXP(BV(49946, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9260, 16), 8), SFXP(SBV(19218, 16), 8)), SFXP(SBV(9958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25676, 16), 8), SFXP(SBV(29484, 16), 8)), SFXP(SBV(10376, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64410, 16), 8), UFXP(BV(42641, 16), 8)), UFXP(BV(21769, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45521, 16), 8), UFXP(BV(18721, 16), 8)), UFXP(BV(26800, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28202, 16), 8), SFXP(SBV(5515, 16), 8)), SFXP(SBV(-31819, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53974, 16), 8), UFXP(BV(23400, 16), 8)), UFXP(BV(18360, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3844, 16), 8), SFXP(SBV(17302, 16), 8)), SFXP(SBV(13458, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5700, 16), 8), UFXP(BV(14488, 16), 8)), UFXP(BV(60440, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44673, 16), 8), UFXP(BV(46558, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5315, 16), 8), SFXP(SBV(-19656, 16), 8)), SFXP(SBV(24971, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32740, 16), 8), SFXP(SBV(-28612, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4968, 16), 8), UFXP(BV(34359, 16), 8)), UFXP(BV(39327, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32565, 16), 8), SFXP(SBV(-12764, 16), 8)), SFXP(SBV(-19801, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36872, 16), 8), UFXP(BV(9366, 16), 8)), UFXP(BV(27506, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8471, 16), 8), UFXP(BV(13956, 16), 8)), UFXP(BV(60051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26985, 16), 8), SFXP(SBV(-15456, 16), 8)), SFXP(SBV(-11529, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33272, 16), 8), UFXP(BV(9286, 16), 8)), UFXP(BV(23986, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18760, 16), 8), UFXP(BV(41931, 16), 8)), UFXP(BV(60691, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7400, 16), 8), SFXP(SBV(-4325, 16), 8)), SFXP(SBV(-11725, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20139, 16), 8), UFXP(BV(39459, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45950, 16), 8), UFXP(BV(57679, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4478, 16), 8), UFXP(BV(63473, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-7670, 16), 8), SFXP(SBV(-18451, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1846, 16), 8), UFXP(BV(37833, 16), 8)), UFXP(BV(29549, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8483, 16), 8), UFXP(BV(47654, 16), 8)), UFXP(BV(56137, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60992, 16), 8), UFXP(BV(4287, 16), 8)), UFXP(BV(38337, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38997, 16), 8), UFXP(BV(52365, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21442, 16), 8), UFXP(BV(56298, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62279, 16), 8), UFXP(BV(14272, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37240, 16), 8), UFXP(BV(39400, 16), 8)), UFXP(BV(63376, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-5237, 16), 8), SFXP(SBV(25722, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24098, 16), 8), SFXP(SBV(12456, 16), 8)), SFXP(SBV(-11642, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1793, 16), 8), SFXP(SBV(-29863, 16), 8)), SFXP(SBV(12550, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8119, 16), 8), SFXP(SBV(2354, 16), 8)), SFXP(SBV(-10473, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52411, 16), 8), UFXP(BV(40668, 16), 8)), UFXP(BV(2907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56267, 16), 8), UFXP(BV(47226, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15605, 16), 8), UFXP(BV(6320, 16), 8)), UFXP(BV(21925, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42428, 16), 8), UFXP(BV(20830, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2048, 16), 8), UFXP(BV(3670, 16), 8)), UFXP(BV(5718, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34022, 16), 8), UFXP(BV(65461, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21518, 16), 8), SFXP(SBV(-10299, 16), 8)), SFXP(SBV(-31817, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4063, 16), 8), SFXP(SBV(-29634, 16), 8)), SFXP(SBV(25571, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8672, 16), 8), UFXP(BV(15367, 16), 8)), UFXP(BV(24039, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23597, 16), 8), SFXP(SBV(-18276, 16), 8)), SFXP(SBV(-5321, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43480, 16), 8), UFXP(BV(14695, 16), 8)), UFXP(BV(58175, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1407, 16), 8), UFXP(BV(17901, 16), 8)), UFXP(BV(32850, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18306, 16), 8), SFXP(SBV(10566, 16), 8)), SFXP(SBV(-28872, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18916, 16), 8), SFXP(SBV(14470, 16), 8)), SFXP(SBV(32150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57875, 16), 8), UFXP(BV(64109, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42645, 16), 8), UFXP(BV(8879, 16), 8)), UFXP(BV(51524, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11708, 16), 8), SFXP(SBV(9862, 16), 8)), SFXP(SBV(7720, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32660, 16), 8), SFXP(SBV(27114, 16), 8)), SFXP(SBV(-5546, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(7064, 16), 8), SFXP(SBV(5197, 16), 8)), SFXP(SBV(12333, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19881, 16), 8), SFXP(SBV(-18796, 16), 8)), SFXP(SBV(-1085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18109, 16), 8), SFXP(SBV(26041, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30213, 16), 8), SFXP(SBV(-18551, 16), 8)), SFXP(SBV(-16772, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49620, 16), 8), UFXP(BV(38570, 16), 8)), UFXP(BV(11050, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22291, 16), 8), UFXP(BV(14186, 16), 8)), UFXP(BV(8105, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14195, 16), 8), SFXP(SBV(6367, 16), 8)), SFXP(SBV(-7828, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29313, 16), 8), SFXP(SBV(-23998, 16), 8)), SFXP(SBV(-12225, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3439, 16), 8), SFXP(SBV(20290, 16), 8)), SFXP(SBV(-16851, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14891, 16), 8), UFXP(BV(30678, 16), 8)), UFXP(BV(49749, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29809, 16), 8), UFXP(BV(49780, 16), 8)), UFXP(BV(45565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1224, 16), 8), SFXP(SBV(-10813, 16), 8)), SFXP(SBV(-12037, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15603, 16), 8), SFXP(SBV(-2259, 16), 8)), SFXP(SBV(13344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3826, 16), 8), SFXP(SBV(-7977, 16), 8)), SFXP(SBV(-4151, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26753, 16), 8), SFXP(SBV(4239, 16), 8)), SFXP(SBV(-22514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59973, 16), 8), UFXP(BV(25491, 16), 8)), UFXP(BV(34482, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31032, 16), 8), SFXP(SBV(-29180, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29117, 16), 8), UFXP(BV(23567, 16), 8)), UFXP(BV(5550, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8324, 16), 8), SFXP(SBV(6830, 16), 8)), SFXP(SBV(15154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1935, 16), 8), SFXP(SBV(14710, 16), 8)), SFXP(SBV(12775, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1112, 16), 8), UFXP(BV(52112, 16), 8)), UFXP(BV(53224, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22431, 16), 8), UFXP(BV(54236, 16), 8)), UFXP(BV(11131, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(883, 16), 8), UFXP(BV(2908, 16), 8)), UFXP(BV(10030, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22153, 16), 8), SFXP(SBV(15359, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15103, 16), 8), SFXP(SBV(15104, 16), 8)), SFXP(SBV(-1, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-581, 16), 8), SFXP(SBV(5369, 16), 8)), SFXP(SBV(4788, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-24029, 16), 8), SFXP(SBV(-6710, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7800, 16), 8), SFXP(SBV(32235, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(219, 16), 8), SFXP(SBV(27714, 16), 8)), SFXP(SBV(-27495, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(8165, 16), 8), UFXP(BV(32062, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16046, 16), 8), UFXP(BV(48470, 16), 8)), UFXP(BV(23429, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59747, 16), 8), UFXP(BV(21126, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20309, 16), 8), SFXP(SBV(21291, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52372, 16), 8), UFXP(BV(57869, 16), 8)), UFXP(BV(42252, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16713, 16), 8), SFXP(SBV(309, 16), 8)), SFXP(SBV(20174, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62411, 16), 8), UFXP(BV(24603, 16), 8)), UFXP(BV(37808, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7573, 16), 8), SFXP(SBV(13860, 16), 8)), SFXP(SBV(-6287, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9883, 16), 8), SFXP(SBV(31689, 16), 8)), SFXP(SBV(21806, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16853, 16), 8), SFXP(SBV(16976, 16), 8)), SFXP(SBV(-31707, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41311, 16), 8), UFXP(BV(56280, 16), 8)), UFXP(BV(50567, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23882, 16), 8), SFXP(SBV(32700, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54667, 16), 8), UFXP(BV(43575, 16), 8)), UFXP(BV(11092, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19228, 16), 8), SFXP(SBV(-11736, 16), 8)), SFXP(SBV(7492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(26572, 16), 8), UFXP(BV(21868, 16), 8)), UFXP(BV(41607, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63996, 16), 8), UFXP(BV(20781, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27256, 16), 8), SFXP(SBV(18726, 16), 8)), SFXP(SBV(19554, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14323, 16), 8), UFXP(BV(57756, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19291, 16), 8), UFXP(BV(41842, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4968, 16), 8), UFXP(BV(58039, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40853, 16), 8), UFXP(BV(39232, 16), 8)), UFXP(BV(1621, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16001, 16), 8), UFXP(BV(64276, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61570, 16), 8), UFXP(BV(57934, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-349, 16), 8), SFXP(SBV(-12700, 16), 8)), SFXP(SBV(17314, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-105, 16), 8), SFXP(SBV(-878, 16), 8)), SFXP(SBV(773, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(840, 16), 8), SFXP(SBV(2030, 16), 8)), SFXP(SBV(2870, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7716, 16), 8), SFXP(SBV(17436, 16), 8)), SFXP(SBV(-9720, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10547, 16), 8), SFXP(SBV(-18420, 16), 8)), SFXP(SBV(28967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27869, 16), 8), SFXP(SBV(-6509, 16), 8)), SFXP(SBV(31158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23321, 16), 8), SFXP(SBV(7547, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-8495, 16), 8), SFXP(SBV(-10320, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22404, 16), 8), SFXP(SBV(4099, 16), 8)), SFXP(SBV(-31046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3447, 16), 8), SFXP(SBV(-24883, 16), 8)), SFXP(SBV(21436, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6365, 16), 8), SFXP(SBV(-20979, 16), 8)), SFXP(SBV(-27344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19843, 16), 8), SFXP(SBV(31629, 16), 8)), SFXP(SBV(-11786, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35094, 16), 8), UFXP(BV(32437, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14622, 16), 8), UFXP(BV(44930, 16), 8)), UFXP(BV(10371, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26257, 16), 8), SFXP(SBV(3649, 16), 8)), SFXP(SBV(18952, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14831, 16), 8), SFXP(SBV(25879, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32021, 16), 8), SFXP(SBV(-20031, 16), 8)), SFXP(SBV(11990, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43923, 16), 8), UFXP(BV(44256, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37518, 16), 8), UFXP(BV(40106, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16889, 16), 8), UFXP(BV(22415, 16), 8)), UFXP(BV(36985, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16510, 16), 8), SFXP(SBV(-12812, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55835, 16), 8), UFXP(BV(3684, 16), 8)), UFXP(BV(52151, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41094, 16), 8), UFXP(BV(36551, 16), 8)), UFXP(BV(4543, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15066, 16), 8), SFXP(SBV(-10938, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32948, 16), 8), UFXP(BV(22526, 16), 8)), UFXP(BV(10422, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2401, 16), 8), SFXP(SBV(26140, 16), 8)), SFXP(SBV(-28541, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2970, 16), 8), UFXP(BV(8044, 16), 8)), UFXP(BV(11014, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11610, 16), 8), UFXP(BV(36866, 16), 8)), UFXP(BV(48476, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44187, 16), 8), UFXP(BV(28210, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55934, 16), 8), UFXP(BV(3568, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1438, 16), 8), SFXP(SBV(-31254, 16), 8)), SFXP(SBV(29816, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6471, 16), 8), SFXP(SBV(22107, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-26664, 16), 8), SFXP(SBV(-8539, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22058, 16), 8), UFXP(BV(11598, 16), 8)), UFXP(BV(10460, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60141, 16), 8), UFXP(BV(14701, 16), 8)), UFXP(BV(45440, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43017, 16), 8), UFXP(BV(53277, 16), 8)), UFXP(BV(30758, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31923, 16), 8), SFXP(SBV(16012, 16), 8)), SFXP(SBV(-30604, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(71, 16), 8), SFXP(SBV(3327, 16), 8)), SFXP(SBV(3398, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22470, 16), 8), SFXP(SBV(13717, 16), 8)), SFXP(SBV(8753, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8571, 16), 8), SFXP(SBV(1501, 16), 8)), SFXP(SBV(-7070, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22536, 16), 8), SFXP(SBV(-21866, 16), 8)), SFXP(SBV(670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17426, 16), 8), SFXP(SBV(24513, 16), 8)), SFXP(SBV(7087, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49553, 16), 8), UFXP(BV(42336, 16), 8)), UFXP(BV(7217, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11118, 16), 8), SFXP(SBV(19394, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20895, 16), 8), UFXP(BV(18587, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31702, 16), 8), UFXP(BV(55730, 16), 8)), UFXP(BV(20097, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5722, 16), 8), SFXP(SBV(3011, 16), 8)), SFXP(SBV(1764, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10898, 16), 8), SFXP(SBV(31344, 16), 8)), SFXP(SBV(-20446, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9200, 16), 8), SFXP(SBV(-25275, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48665, 16), 8), UFXP(BV(46664, 16), 8)), UFXP(BV(23358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30737, 16), 8), SFXP(SBV(30089, 16), 8)), SFXP(SBV(-648, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43906, 16), 8), UFXP(BV(51364, 16), 8)), UFXP(BV(58078, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30301, 16), 8), UFXP(BV(55329, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53298, 16), 8), UFXP(BV(19787, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4590, 16), 8), SFXP(SBV(-14614, 16), 8)), SFXP(SBV(10024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31120, 16), 8), SFXP(SBV(-8604, 16), 8)), SFXP(SBV(2652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25004, 16), 8), SFXP(SBV(-31284, 16), 8)), SFXP(SBV(6280, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18742, 16), 8), SFXP(SBV(-17341, 16), 8)), SFXP(SBV(-24366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11035, 16), 8), SFXP(SBV(21078, 16), 8)), SFXP(SBV(32113, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42001, 16), 8), UFXP(BV(59888, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24602, 16), 8), SFXP(SBV(24290, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25936, 16), 8), UFXP(BV(42710, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49034, 16), 8), UFXP(BV(16498, 16), 8)), UFXP(BV(32536, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15371, 16), 8), UFXP(BV(24652, 16), 8)), UFXP(BV(40023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54216, 16), 8), UFXP(BV(24055, 16), 8)), UFXP(BV(12735, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16159, 16), 8), SFXP(SBV(-27560, 16), 8)), SFXP(SBV(-11401, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34974, 16), 8), UFXP(BV(17599, 16), 8)), UFXP(BV(52573, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39071, 16), 8), UFXP(BV(32787, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19777, 16), 8), SFXP(SBV(-6815, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27869, 16), 8), SFXP(SBV(24490, 16), 8)), SFXP(SBV(13177, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44886, 16), 8), UFXP(BV(802, 16), 8)), UFXP(BV(9547, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25539, 16), 8), UFXP(BV(64163, 16), 8)), UFXP(BV(44019, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14852, 16), 8), UFXP(BV(18983, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(3556, 16), 8), SFXP(SBV(31463, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38498, 16), 8), UFXP(BV(19701, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9183, 16), 8), SFXP(SBV(25834, 16), 8)), SFXP(SBV(-30519, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(24617, 16), 8), UFXP(BV(29321, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57455, 16), 8), UFXP(BV(40689, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26871, 16), 8), SFXP(SBV(8175, 16), 8)), SFXP(SBV(-6119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34646, 16), 8), UFXP(BV(41650, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10477, 16), 8), UFXP(BV(53493, 16), 8)), UFXP(BV(63970, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(2301, 16), 8), UFXP(BV(21418, 16), 8)), UFXP(BV(61440, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5198, 16), 8), SFXP(SBV(-17775, 16), 8)), SFXP(SBV(-22973, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21389, 16), 8), SFXP(SBV(12608, 16), 8)), SFXP(SBV(-4832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62957, 16), 8), UFXP(BV(40073, 16), 8)), UFXP(BV(22884, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38320, 16), 8), UFXP(BV(52654, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14827, 16), 8), SFXP(SBV(21009, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5692, 16), 8), UFXP(BV(39891, 16), 8)), UFXP(BV(31337, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31789, 16), 8), UFXP(BV(5506, 16), 8)), UFXP(BV(26283, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24629, 16), 8), SFXP(SBV(6853, 16), 8)), SFXP(SBV(31482, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5467, 16), 8), UFXP(BV(32638, 16), 8)), UFXP(BV(41640, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8871, 16), 8), UFXP(BV(53587, 16), 8)), UFXP(BV(21908, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34604, 16), 8), UFXP(BV(1261, 16), 8)), UFXP(BV(35865, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61828, 16), 8), UFXP(BV(46392, 16), 8)), UFXP(BV(15436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49992, 16), 8), UFXP(BV(25719, 16), 8)), UFXP(BV(24273, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29451, 16), 8), SFXP(SBV(25715, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4543, 16), 8), UFXP(BV(2953, 16), 8)), UFXP(BV(7496, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18139, 16), 8), SFXP(SBV(4894, 16), 8)), SFXP(SBV(-23033, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61542, 16), 8), UFXP(BV(7501, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8962, 16), 8), SFXP(SBV(14267, 16), 8)), SFXP(SBV(-23229, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28185, 16), 8), SFXP(SBV(2522, 16), 8)), SFXP(SBV(-25663, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27844, 16), 8), SFXP(SBV(-9528, 16), 8)), SFXP(SBV(-18316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11312, 16), 8), UFXP(BV(18186, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46125, 16), 8), UFXP(BV(9627, 16), 8)), UFXP(BV(36498, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(957, 16), 8), SFXP(SBV(-19715, 16), 8)), SFXP(SBV(-8164, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63447, 16), 8), UFXP(BV(41617, 16), 8)), UFXP(BV(39528, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11323, 16), 8), UFXP(BV(14947, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14865, 16), 8), SFXP(SBV(6909, 16), 8)), SFXP(SBV(21774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56369, 16), 8), UFXP(BV(36507, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26172, 16), 8), SFXP(SBV(-5548, 16), 8)), SFXP(SBV(20624, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8580, 16), 8), SFXP(SBV(-15692, 16), 8)), SFXP(SBV(24272, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16237, 16), 8), SFXP(SBV(15849, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17449, 16), 8), SFXP(SBV(-16341, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39720, 16), 8), UFXP(BV(13578, 16), 8)), UFXP(BV(53298, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47087, 16), 8), UFXP(BV(55697, 16), 8)), UFXP(BV(37248, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34053, 16), 8), UFXP(BV(38918, 16), 8)), UFXP(BV(60671, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32005, 16), 8), UFXP(BV(31458, 16), 8)), UFXP(BV(547, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21188, 16), 8), SFXP(SBV(20298, 16), 8)), SFXP(SBV(-890, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22394, 16), 8), SFXP(SBV(-13296, 16), 8)), SFXP(SBV(16559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-7138, 16), 8), SFXP(SBV(-19526, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7992, 16), 8), UFXP(BV(24483, 16), 8)), UFXP(BV(49045, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8261, 16), 8), SFXP(SBV(3702, 16), 8)), SFXP(SBV(4559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25081, 16), 8), SFXP(SBV(-2333, 16), 8)), SFXP(SBV(22748, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(20526, 16), 8), UFXP(BV(36218, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28192, 16), 8), SFXP(SBV(18256, 16), 8)), SFXP(SBV(9936, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30443, 16), 8), SFXP(SBV(394, 16), 8)), SFXP(SBV(30049, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2428, 16), 8), SFXP(SBV(17609, 16), 8)), SFXP(SBV(15181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21297, 16), 8), SFXP(SBV(-18626, 16), 8)), SFXP(SBV(-23341, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40321, 16), 8), UFXP(BV(43571, 16), 8)), UFXP(BV(62286, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40967, 16), 8), UFXP(BV(47137, 16), 8)), UFXP(BV(59366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28268, 16), 8), SFXP(SBV(15030, 16), 8)), SFXP(SBV(13238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(51078, 16), 8), UFXP(BV(39956, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20488, 16), 8), UFXP(BV(34538, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13311, 16), 8), SFXP(SBV(-7407, 16), 8)), SFXP(SBV(-5904, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27748, 16), 8), SFXP(SBV(14290, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58815, 16), 8), UFXP(BV(7251, 16), 8)), UFXP(BV(530, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8667, 16), 8), SFXP(SBV(-13255, 16), 8)), SFXP(SBV(4588, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12256, 16), 8), UFXP(BV(36913, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(683, 16), 8), SFXP(SBV(13012, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15369, 16), 8), SFXP(SBV(-28852, 16), 8)), SFXP(SBV(13483, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31181, 16), 8), SFXP(SBV(-15739, 16), 8)), SFXP(SBV(-15442, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(6940, 16), 8), SFXP(SBV(21228, 16), 8)), SFXP(SBV(-14288, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11040, 16), 8), SFXP(SBV(-16037, 16), 8)), SFXP(SBV(-29300, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-11155, 16), 8), SFXP(SBV(16458, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35560, 16), 8), UFXP(BV(43876, 16), 8)), UFXP(BV(65339, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29402, 16), 8), SFXP(SBV(14911, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13402, 16), 8), UFXP(BV(42014, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41401, 16), 8), UFXP(BV(58348, 16), 8)), UFXP(BV(34213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63706, 16), 8), UFXP(BV(23076, 16), 8)), UFXP(BV(40866, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9563, 16), 8), SFXP(SBV(-9937, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40407, 16), 8), UFXP(BV(23409, 16), 8)), UFXP(BV(63816, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18171, 16), 8), UFXP(BV(49481, 16), 8)), UFXP(BV(2116, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12062, 16), 8), UFXP(BV(60363, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(6673, 16), 8), SFXP(SBV(22457, 16), 8)), SFXP(SBV(-4451, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(36728, 16), 8), UFXP(BV(36872, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11105, 16), 8), SFXP(SBV(-8753, 16), 8)), SFXP(SBV(-19858, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16605, 16), 8), SFXP(SBV(19412, 16), 8)), SFXP(SBV(-2807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5391, 16), 8), SFXP(SBV(-9486, 16), 8)), SFXP(SBV(-4095, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10381, 16), 8), SFXP(SBV(4144, 16), 8)), SFXP(SBV(-6237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23164, 16), 8), SFXP(SBV(-2214, 16), 8)), SFXP(SBV(20950, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29482, 16), 8), SFXP(SBV(-5690, 16), 8)), SFXP(SBV(-30364, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1841, 16), 8), UFXP(BV(3456, 16), 8)), UFXP(BV(63921, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14128, 16), 8), SFXP(SBV(-8277, 16), 8)), SFXP(SBV(-22405, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49743, 16), 8), UFXP(BV(14261, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26457, 16), 8), SFXP(SBV(-2494, 16), 8)), SFXP(SBV(28951, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32706, 16), 8), SFXP(SBV(-12735, 16), 8)), SFXP(SBV(20095, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41510, 16), 8), UFXP(BV(32677, 16), 8)), UFXP(BV(8651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11858, 16), 8), SFXP(SBV(-22433, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10545, 16), 8), SFXP(SBV(31285, 16), 8)), SFXP(SBV(22046, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29414, 16), 8), SFXP(SBV(-30799, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20830, 16), 8), UFXP(BV(53052, 16), 8)), UFXP(BV(8346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49191, 16), 8), UFXP(BV(9139, 16), 8)), UFXP(BV(58330, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(4727, 16), 8), UFXP(BV(15964, 16), 8)), UFXP(BV(32629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37021, 16), 8), UFXP(BV(61431, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26771, 16), 8), SFXP(SBV(-2944, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13041, 16), 8), SFXP(SBV(8521, 16), 8)), SFXP(SBV(21562, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13263, 16), 8), UFXP(BV(56760, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63737, 16), 8), UFXP(BV(3446, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21622, 16), 8), UFXP(BV(34511, 16), 8)), UFXP(BV(31247, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33778, 16), 8), UFXP(BV(12909, 16), 8)), UFXP(BV(64883, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50312, 16), 8), UFXP(BV(47922, 16), 8)), UFXP(BV(32698, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51375, 16), 8), UFXP(BV(16430, 16), 8)), UFXP(BV(20431, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62548, 16), 8), UFXP(BV(35487, 16), 8)), UFXP(BV(27061, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(26778, 16), 8), UFXP(BV(2953, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8789, 16), 8), SFXP(SBV(9808, 16), 8)), SFXP(SBV(-18597, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6692, 16), 8), SFXP(SBV(4727, 16), 8)), SFXP(SBV(11419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36916, 16), 8), UFXP(BV(36319, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5494, 16), 8), SFXP(SBV(-17984, 16), 8)), SFXP(SBV(7263, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2940, 16), 8), SFXP(SBV(4940, 16), 8)), SFXP(SBV(-2000, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(27491, 16), 8), SFXP(SBV(-23702, 16), 8)), SFXP(SBV(10623, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21753, 16), 8), SFXP(SBV(-14330, 16), 8)), SFXP(SBV(7423, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23850, 16), 8), UFXP(BV(11946, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61479, 16), 8), UFXP(BV(28618, 16), 8)), UFXP(BV(56936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38888, 16), 8), UFXP(BV(62706, 16), 8)), UFXP(BV(22714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14625, 16), 8), UFXP(BV(1648, 16), 8)), UFXP(BV(28612, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35557, 16), 8), UFXP(BV(33102, 16), 8)), UFXP(BV(2455, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10047, 16), 8), SFXP(SBV(16467, 16), 8)), SFXP(SBV(6420, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61972, 16), 8), UFXP(BV(7295, 16), 8)), UFXP(BV(3731, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23533, 16), 8), SFXP(SBV(-11940, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5739, 16), 8), SFXP(SBV(-21152, 16), 8)), SFXP(SBV(-15413, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25886, 16), 8), SFXP(SBV(27116, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31387, 16), 8), UFXP(BV(59450, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-24406, 16), 8), SFXP(SBV(11727, 16), 8)), SFXP(SBV(29403, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12386, 16), 8), SFXP(SBV(19117, 16), 8)), SFXP(SBV(31503, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29832, 16), 8), SFXP(SBV(22951, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1481, 16), 8), SFXP(SBV(-13994, 16), 8)), SFXP(SBV(-12513, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6545, 16), 8), SFXP(SBV(-18904, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15974, 16), 8), UFXP(BV(47236, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17475, 16), 8), UFXP(BV(64256, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13730, 16), 8), SFXP(SBV(-7556, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13794, 16), 8), SFXP(SBV(29721, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3269, 16), 8), SFXP(SBV(11074, 16), 8)), SFXP(SBV(-14343, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5160, 16), 8), SFXP(SBV(3109, 16), 8)), SFXP(SBV(8269, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19277, 16), 8), UFXP(BV(46513, 16), 8)), UFXP(BV(254, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52285, 16), 8), UFXP(BV(29361, 16), 8)), UFXP(BV(22924, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10073, 16), 8), SFXP(SBV(-32270, 16), 8)), SFXP(SBV(22197, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29670, 16), 8), UFXP(BV(58482, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(64855, 16), 8), UFXP(BV(61975, 16), 8)), UFXP(BV(37633, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15810, 16), 8), UFXP(BV(23300, 16), 8)), UFXP(BV(58046, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12770, 16), 8), UFXP(BV(8560, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20249, 16), 8), UFXP(BV(18877, 16), 8)), UFXP(BV(1372, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35025, 16), 8), UFXP(BV(28678, 16), 8)), UFXP(BV(6347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57218, 16), 8), UFXP(BV(26837, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64301, 16), 8), UFXP(BV(7187, 16), 8)), UFXP(BV(57114, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29187, 16), 8), UFXP(BV(21562, 16), 8)), UFXP(BV(50749, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23764, 16), 8), UFXP(BV(16098, 16), 8)), UFXP(BV(39862, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(64251, 16), 8), UFXP(BV(54470, 16), 8)), UFXP(BV(39419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(23604, 16), 8), UFXP(BV(51294, 16), 8)), UFXP(BV(10876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(54282, 16), 8), UFXP(BV(57394, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5296, 16), 8), SFXP(SBV(10051, 16), 8)), SFXP(SBV(15347, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25625, 16), 8), SFXP(SBV(-22283, 16), 8)), SFXP(SBV(-3342, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-25052, 16), 8), SFXP(SBV(24709, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27909, 16), 8), SFXP(SBV(-13156, 16), 8)), SFXP(SBV(-24471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28212, 16), 8), SFXP(SBV(-1875, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38249, 16), 8), UFXP(BV(7879, 16), 8)), UFXP(BV(63091, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16464, 16), 8), SFXP(SBV(-3860, 16), 8)), SFXP(SBV(-20324, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20086, 16), 8), UFXP(BV(37617, 16), 8)), UFXP(BV(57703, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19782, 16), 8), SFXP(SBV(-10754, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30838, 16), 8), SFXP(SBV(27851, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54306, 16), 8), UFXP(BV(58313, 16), 8)), UFXP(BV(47083, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(60143, 16), 8), UFXP(BV(55716, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62720, 16), 8), UFXP(BV(19335, 16), 8)), UFXP(BV(18483, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29319, 16), 8), UFXP(BV(1385, 16), 8)), UFXP(BV(27549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27861, 16), 8), SFXP(SBV(27855, 16), 8)), SFXP(SBV(-6, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14088, 16), 8), SFXP(SBV(29596, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25552, 16), 8), SFXP(SBV(9046, 16), 8)), SFXP(SBV(30938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(33970, 16), 8), UFXP(BV(35985, 16), 8)), UFXP(BV(56449, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56749, 16), 8), UFXP(BV(62855, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(40013, 16), 8), UFXP(BV(55481, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18028, 16), 8), SFXP(SBV(-1255, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21315, 16), 8), SFXP(SBV(-17962, 16), 8)), SFXP(SBV(-26259, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12610, 16), 8), UFXP(BV(21844, 16), 8)), UFXP(BV(56302, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(27954, 16), 8), SFXP(SBV(24128, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15209, 16), 8), SFXP(SBV(14378, 16), 8)), SFXP(SBV(-2231, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25099, 16), 8), UFXP(BV(60310, 16), 8)), UFXP(BV(19873, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2398, 16), 8), SFXP(SBV(-19186, 16), 8)), SFXP(SBV(-21584, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38716, 16), 8), UFXP(BV(10397, 16), 8)), UFXP(BV(28319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8527, 16), 8), SFXP(SBV(29541, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7123, 16), 8), UFXP(BV(41954, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53155, 16), 8), UFXP(BV(40557, 16), 8)), UFXP(BV(28176, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2797, 16), 8), UFXP(BV(26795, 16), 8)), UFXP(BV(29592, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53623, 16), 8), UFXP(BV(3740, 16), 8)), UFXP(BV(62503, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8363, 16), 8), SFXP(SBV(-21692, 16), 8)), SFXP(SBV(-12262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29991, 16), 8), SFXP(SBV(-6640, 16), 8)), SFXP(SBV(-28905, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55630, 16), 8), UFXP(BV(39752, 16), 8)), UFXP(BV(29846, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30413, 16), 8), UFXP(BV(5576, 16), 8)), UFXP(BV(35989, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59650, 16), 8), UFXP(BV(3397, 16), 8)), UFXP(BV(56253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24382, 16), 8), UFXP(BV(29429, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25888, 16), 8), UFXP(BV(7440, 16), 8)), UFXP(BV(33328, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61883, 16), 8), UFXP(BV(28895, 16), 8)), UFXP(BV(37985, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65452, 16), 8), UFXP(BV(42631, 16), 8)), UFXP(BV(22821, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24261, 16), 8), SFXP(SBV(-27916, 16), 8)), SFXP(SBV(24146, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17006, 16), 8), UFXP(BV(53639, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20776, 16), 8), SFXP(SBV(-32717, 16), 8)), SFXP(SBV(11941, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24066, 16), 8), UFXP(BV(13613, 16), 8)), UFXP(BV(10453, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17822, 16), 8), UFXP(BV(57998, 16), 8)), UFXP(BV(39961, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26212, 16), 8), UFXP(BV(12918, 16), 8)), UFXP(BV(13294, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17102, 16), 8), SFXP(SBV(-26959, 16), 8)), SFXP(SBV(-9857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21459, 16), 8), SFXP(SBV(-7544, 16), 8)), SFXP(SBV(-13915, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61013, 16), 8), UFXP(BV(40144, 16), 8)), UFXP(BV(20869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26695, 16), 8), SFXP(SBV(4819, 16), 8)), SFXP(SBV(21776, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13639, 16), 8), SFXP(SBV(21458, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10462, 16), 8), SFXP(SBV(-25497, 16), 8)), SFXP(SBV(-6585, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28991, 16), 8), UFXP(BV(47970, 16), 8)), UFXP(BV(58463, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20339, 16), 8), UFXP(BV(52459, 16), 8)), UFXP(BV(7262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11277, 16), 8), SFXP(SBV(-32580, 16), 8)), SFXP(SBV(21679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16827, 16), 8), UFXP(BV(21524, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29694, 16), 8), UFXP(BV(44147, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9111, 16), 8), UFXP(BV(4228, 16), 8)), UFXP(BV(13339, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63980, 16), 8), UFXP(BV(37148, 16), 8)), UFXP(BV(43522, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55719, 16), 8), UFXP(BV(19327, 16), 8)), UFXP(BV(36392, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17192, 16), 8), UFXP(BV(33939, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61690, 16), 8), UFXP(BV(17620, 16), 8)), UFXP(BV(13774, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7306, 16), 8), SFXP(SBV(13883, 16), 8)), SFXP(SBV(21189, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-13858, 16), 8), SFXP(SBV(29528, 16), 8)), SFXP(SBV(-25570, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19034, 16), 8), SFXP(SBV(-26742, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26679, 16), 8), SFXP(SBV(-14757, 16), 8)), SFXP(SBV(-11922, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57876, 16), 8), UFXP(BV(46813, 16), 8)), UFXP(BV(39153, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12036, 16), 8), UFXP(BV(18715, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32373, 16), 8), SFXP(SBV(-26120, 16), 8)), SFXP(SBV(7043, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31972, 16), 8), SFXP(SBV(7607, 16), 8)), SFXP(SBV(-24365, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(6813, 16), 8), UFXP(BV(17566, 16), 8)), UFXP(BV(8737, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21301, 16), 8), SFXP(SBV(-3662, 16), 8)), SFXP(SBV(17639, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7681, 16), 8), SFXP(SBV(6595, 16), 8)), SFXP(SBV(-1086, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-405, 16), 8), SFXP(SBV(22041, 16), 8)), SFXP(SBV(-22446, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1136, 16), 8), UFXP(BV(29944, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14839, 16), 8), SFXP(SBV(-285, 16), 8)), SFXP(SBV(-15124, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16781, 16), 8), SFXP(SBV(22921, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15108, 16), 8), SFXP(SBV(12888, 16), 8)), SFXP(SBV(27996, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11337, 16), 8), UFXP(BV(61592, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12655, 16), 8), UFXP(BV(35411, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61381, 16), 8), UFXP(BV(62726, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13470, 16), 8), SFXP(SBV(-7251, 16), 8)), SFXP(SBV(6219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8835, 16), 8), UFXP(BV(65421, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13162, 16), 8), SFXP(SBV(-1554, 16), 8)), SFXP(SBV(14716, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13922, 16), 8), SFXP(SBV(31083, 16), 8)), SFXP(SBV(17161, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(1263, 16), 8), SFXP(SBV(17875, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14142, 16), 8), UFXP(BV(61618, 16), 8)), UFXP(BV(10224, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30509, 16), 8), UFXP(BV(14089, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56173, 16), 8), UFXP(BV(12186, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33264, 16), 8), UFXP(BV(1975, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23447, 16), 8), SFXP(SBV(-25308, 16), 8)), SFXP(SBV(1861, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18514, 16), 8), SFXP(SBV(27358, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28550, 16), 8), SFXP(SBV(-32405, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9733, 16), 8), SFXP(SBV(-18316, 16), 8)), SFXP(SBV(24531, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37548, 16), 8), UFXP(BV(3150, 16), 8)), UFXP(BV(34398, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(30486, 16), 8), UFXP(BV(15166, 16), 8)), UFXP(BV(36586, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(990, 16), 8), UFXP(BV(63390, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16268, 16), 8), SFXP(SBV(8800, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44162, 16), 8), UFXP(BV(30030, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64650, 16), 8), UFXP(BV(12969, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(8649, 16), 8), SFXP(SBV(10238, 16), 8)), SFXP(SBV(18212, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40324, 16), 8), UFXP(BV(46447, 16), 8)), UFXP(BV(59413, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15825, 16), 8), SFXP(SBV(28339, 16), 8)), SFXP(SBV(12514, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47173, 16), 8), UFXP(BV(14523, 16), 8)), UFXP(BV(32650, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15778, 16), 8), SFXP(SBV(-2569, 16), 8)), SFXP(SBV(18347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1025, 16), 8), UFXP(BV(25545, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15813, 16), 8), UFXP(BV(4265, 16), 8)), UFXP(BV(11548, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3522, 16), 8), SFXP(SBV(-17279, 16), 8)), SFXP(SBV(20801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(864, 16), 8), SFXP(SBV(-30468, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25113, 16), 8), UFXP(BV(26539, 16), 8)), UFXP(BV(47510, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-171, 16), 8), SFXP(SBV(32592, 16), 8)), SFXP(SBV(-32763, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13638, 16), 8), UFXP(BV(11852, 16), 8)), UFXP(BV(1786, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17510, 16), 8), SFXP(SBV(1036, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34939, 16), 8), UFXP(BV(17674, 16), 8)), UFXP(BV(52613, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6254, 16), 8), UFXP(BV(17424, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6389, 16), 8), SFXP(SBV(7476, 16), 8)), SFXP(SBV(-1087, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16357, 16), 8), UFXP(BV(22603, 16), 8)), UFXP(BV(2417, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30223, 16), 8), SFXP(SBV(-32530, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11118, 16), 8), SFXP(SBV(-2557, 16), 8)), SFXP(SBV(8561, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-485, 16), 8), SFXP(SBV(-32650, 16), 8)), SFXP(SBV(32165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7604, 16), 8), SFXP(SBV(-28201, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26238, 16), 8), SFXP(SBV(3941, 16), 8)), SFXP(SBV(22297, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5712, 16), 8), SFXP(SBV(2148, 16), 8)), SFXP(SBV(7860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42863, 16), 8), UFXP(BV(52098, 16), 8)), UFXP(BV(56301, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4794, 16), 8), UFXP(BV(50711, 16), 8)), UFXP(BV(32138, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29146, 16), 8), SFXP(SBV(-16673, 16), 8)), SFXP(SBV(2297, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6708, 16), 8), UFXP(BV(60877, 16), 8)), UFXP(BV(2049, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27938, 16), 8), SFXP(SBV(25838, 16), 8)), SFXP(SBV(1726, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(34570, 16), 8), UFXP(BV(30277, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14601, 16), 8), SFXP(SBV(19246, 16), 8)), SFXP(SBV(4645, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(20452, 16), 8), SFXP(SBV(23810, 16), 8)), SFXP(SBV(1652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26486, 16), 8), SFXP(SBV(5204, 16), 8)), SFXP(SBV(-31690, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20242, 16), 8), UFXP(BV(10920, 16), 8)), UFXP(BV(31162, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63158, 16), 8), UFXP(BV(31807, 16), 8)), UFXP(BV(31351, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18176, 16), 8), UFXP(BV(49936, 16), 8)), UFXP(BV(2576, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16593, 16), 8), SFXP(SBV(-12875, 16), 8)), SFXP(SBV(-29468, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14782, 16), 8), SFXP(SBV(724, 16), 8)), SFXP(SBV(14058, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21769, 16), 8), SFXP(SBV(22139, 16), 8)), SFXP(SBV(-21628, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22661, 16), 8), SFXP(SBV(-18335, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25937, 16), 8), UFXP(BV(29635, 16), 8)), UFXP(BV(61838, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9788, 16), 8), UFXP(BV(18478, 16), 8)), UFXP(BV(51135, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23720, 16), 8), SFXP(SBV(-30446, 16), 8)), SFXP(SBV(11370, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4642, 16), 8), UFXP(BV(63457, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2663, 16), 8), SFXP(SBV(28835, 16), 8)), SFXP(SBV(26172, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52118, 16), 8), UFXP(BV(7971, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61169, 16), 8), UFXP(BV(36025, 16), 8)), UFXP(BV(22649, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36376, 16), 8), UFXP(BV(48883, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(57449, 16), 8), UFXP(BV(50330, 16), 8)), UFXP(BV(22372, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53962, 16), 8), UFXP(BV(19247, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17923, 16), 8), SFXP(SBV(-25025, 16), 8)), SFXP(SBV(7102, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33620, 16), 8), UFXP(BV(5929, 16), 8)), UFXP(BV(39549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18977, 16), 8), SFXP(SBV(26720, 16), 8)), SFXP(SBV(-7743, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27000, 16), 8), SFXP(SBV(-5433, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8769, 16), 8), SFXP(SBV(26662, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(7425, 16), 8), SFXP(SBV(19243, 16), 8)), SFXP(SBV(26668, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23437, 16), 8), UFXP(BV(63219, 16), 8)), UFXP(BV(25754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41677, 16), 8), UFXP(BV(18767, 16), 8)), UFXP(BV(60444, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5317, 16), 8), SFXP(SBV(-30896, 16), 8)), SFXP(SBV(-25579, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8775, 16), 8), SFXP(SBV(10611, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16163, 16), 8), SFXP(SBV(12301, 16), 8)), SFXP(SBV(3862, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49075, 16), 8), UFXP(BV(21589, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9195, 16), 8), UFXP(BV(49343, 16), 8)), UFXP(BV(2829, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15968, 16), 8), SFXP(SBV(-29927, 16), 8)), SFXP(SBV(13959, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7754, 16), 8), SFXP(SBV(-8644, 16), 8)), SFXP(SBV(-16398, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12583, 16), 8), UFXP(BV(65021, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51043, 16), 8), UFXP(BV(36266, 16), 8)), UFXP(BV(14777, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30294, 16), 8), UFXP(BV(3295, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27330, 16), 8), SFXP(SBV(-15262, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7610, 16), 8), SFXP(SBV(19851, 16), 8)), SFXP(SBV(277, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21764, 16), 8), SFXP(SBV(-3798, 16), 8)), SFXP(SBV(-25562, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(58156, 16), 8), UFXP(BV(39475, 16), 8)), UFXP(BV(54713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(42584, 16), 8), UFXP(BV(34976, 16), 8)), UFXP(BV(50871, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28515, 16), 8), UFXP(BV(7077, 16), 8)), UFXP(BV(35592, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26011, 16), 8), SFXP(SBV(31138, 16), 8)), SFXP(SBV(-18063, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1868, 16), 8), UFXP(BV(38671, 16), 8)), UFXP(BV(28733, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6096, 16), 8), SFXP(SBV(-6169, 16), 8)), SFXP(SBV(-12265, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-30596, 16), 8), SFXP(SBV(-20853, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(1612, 16), 8), UFXP(BV(36445, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20522, 16), 8), UFXP(BV(29708, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21450, 16), 8), UFXP(BV(28517, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(535, 16), 8), SFXP(SBV(-24842, 16), 8)), SFXP(SBV(-24307, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44344, 16), 8), UFXP(BV(56976, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2950, 16), 8), SFXP(SBV(30891, 16), 8)), SFXP(SBV(-31695, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(20626, 16), 8), UFXP(BV(12594, 16), 8)), UFXP(BV(31662, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16561, 16), 8), UFXP(BV(39749, 16), 8)), UFXP(BV(56310, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2628, 16), 8), SFXP(SBV(29397, 16), 8)), SFXP(SBV(-26769, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6715, 16), 8), UFXP(BV(63282, 16), 8)), UFXP(BV(4461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56223, 16), 8), UFXP(BV(41316, 16), 8)), UFXP(BV(14907, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4650, 16), 8), SFXP(SBV(-5649, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5785, 16), 8), UFXP(BV(25940, 16), 8)), UFXP(BV(31725, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32547, 16), 8), SFXP(SBV(390, 16), 8)), SFXP(SBV(32157, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30435, 16), 8), UFXP(BV(38419, 16), 8)), UFXP(BV(45524, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32484, 16), 8), SFXP(SBV(16520, 16), 8)), SFXP(SBV(-16532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26671, 16), 8), SFXP(SBV(-32076, 16), 8)), SFXP(SBV(-6789, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35665, 16), 8), UFXP(BV(50631, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6013, 16), 8), SFXP(SBV(17014, 16), 8)), SFXP(SBV(11001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8217, 16), 8), SFXP(SBV(3548, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39444, 16), 8), UFXP(BV(1917, 16), 8)), UFXP(BV(37527, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-2364, 16), 8), SFXP(SBV(-7418, 16), 8)), SFXP(SBV(2965, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58196, 16), 8), UFXP(BV(35048, 16), 8)), UFXP(BV(23148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49707, 16), 8), UFXP(BV(54558, 16), 8)), UFXP(BV(60685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27840, 16), 8), UFXP(BV(62301, 16), 8)), UFXP(BV(25026, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26923, 16), 8), SFXP(SBV(-17775, 16), 8)), SFXP(SBV(-9148, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21602, 16), 8), SFXP(SBV(-29924, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29844, 16), 8), SFXP(SBV(13165, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50478, 16), 8), UFXP(BV(27514, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14380, 16), 8), SFXP(SBV(3842, 16), 8)), SFXP(SBV(18222, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63205, 16), 8), UFXP(BV(7738, 16), 8)), UFXP(BV(9926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55614, 16), 8), UFXP(BV(45184, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12204, 16), 8), UFXP(BV(6167, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13674, 16), 8), SFXP(SBV(22653, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42661, 16), 8), UFXP(BV(22019, 16), 8)), UFXP(BV(20642, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8841, 16), 8), SFXP(SBV(-27658, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35545, 16), 8), UFXP(BV(63153, 16), 8)), UFXP(BV(37928, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(20867, 16), 8), UFXP(BV(4895, 16), 8)), UFXP(BV(5784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17731, 16), 8), UFXP(BV(15628, 16), 8)), UFXP(BV(33359, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22078, 16), 8), UFXP(BV(16157, 16), 8)), UFXP(BV(38235, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11970, 16), 8), SFXP(SBV(23759, 16), 8)), SFXP(SBV(29807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-748, 16), 8), SFXP(SBV(1394, 16), 8)), SFXP(SBV(-2142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(10879, 16), 8), UFXP(BV(58123, 16), 8)), UFXP(BV(45168, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19479, 16), 8), UFXP(BV(38132, 16), 8)), UFXP(BV(17874, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31428, 16), 8), SFXP(SBV(1747, 16), 8)), SFXP(SBV(-29681, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34768, 16), 8), UFXP(BV(39486, 16), 8)), UFXP(BV(8718, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63512, 16), 8), UFXP(BV(11633, 16), 8)), UFXP(BV(51879, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58570, 16), 8), UFXP(BV(41472, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45705, 16), 8), UFXP(BV(45095, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39005, 16), 8), UFXP(BV(4480, 16), 8)), UFXP(BV(34525, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39912, 16), 8), UFXP(BV(10273, 16), 8)), UFXP(BV(29639, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7818, 16), 8), SFXP(SBV(16802, 16), 8)), SFXP(SBV(8984, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25426, 16), 8), UFXP(BV(17217, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43022, 16), 8), UFXP(BV(11000, 16), 8)), UFXP(BV(32022, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31140, 16), 8), SFXP(SBV(22586, 16), 8)), SFXP(SBV(11810, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31596, 16), 8), SFXP(SBV(4434, 16), 8)), SFXP(SBV(27162, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12348, 16), 8), SFXP(SBV(22012, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21213, 16), 8), SFXP(SBV(15906, 16), 8)), SFXP(SBV(5307, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50133, 16), 8), UFXP(BV(60362, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10916, 16), 8), UFXP(BV(5969, 16), 8)), UFXP(BV(4947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17947, 16), 8), SFXP(SBV(-1401, 16), 8)), SFXP(SBV(-16546, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28734, 16), 8), SFXP(SBV(2120, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(41885, 16), 8), UFXP(BV(18084, 16), 8)), UFXP(BV(9663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19491, 16), 8), UFXP(BV(1735, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(16350, 16), 8), SFXP(SBV(6121, 16), 8)), SFXP(SBV(-2285, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58633, 16), 8), UFXP(BV(56279, 16), 8)), UFXP(BV(2354, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3752, 16), 8), SFXP(SBV(2673, 16), 8)), SFXP(SBV(1079, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10866, 16), 8), SFXP(SBV(-2431, 16), 8)), SFXP(SBV(13297, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2753, 16), 8), UFXP(BV(54439, 16), 8)), UFXP(BV(57192, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48003, 16), 8), UFXP(BV(34185, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(187, 16), 8), UFXP(BV(7940, 16), 8)), UFXP(BV(5799, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11726, 16), 8), UFXP(BV(22644, 16), 8)), UFXP(BV(54618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7736, 16), 8), UFXP(BV(56005, 16), 8)), UFXP(BV(54002, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34685, 16), 8), UFXP(BV(1515, 16), 8)), UFXP(BV(36200, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31883, 16), 8), UFXP(BV(20857, 16), 8)), UFXP(BV(52740, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27718, 16), 8), UFXP(BV(51239, 16), 8)), UFXP(BV(42798, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4813, 16), 8), SFXP(SBV(-9046, 16), 8)), SFXP(SBV(-26536, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61686, 16), 8), UFXP(BV(16363, 16), 8)), UFXP(BV(45323, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(7584, 16), 8), UFXP(BV(21837, 16), 8)), UFXP(BV(57098, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49109, 16), 8), UFXP(BV(60407, 16), 8)), UFXP(BV(54238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16909, 16), 8), UFXP(BV(41198, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52352, 16), 8), UFXP(BV(58120, 16), 8)), UFXP(BV(59768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26154, 16), 8), SFXP(SBV(-16158, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31679, 16), 8), SFXP(SBV(-7344, 16), 8)), SFXP(SBV(24335, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22050, 16), 8), SFXP(SBV(31528, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22354, 16), 8), SFXP(SBV(-3079, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9649, 16), 8), SFXP(SBV(24638, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63305, 16), 8), UFXP(BV(25828, 16), 8)), UFXP(BV(23597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64416, 16), 8), UFXP(BV(4480, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6506, 16), 8), SFXP(SBV(9866, 16), 8)), SFXP(SBV(-16372, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31790, 16), 8), SFXP(SBV(20625, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28621, 16), 8), SFXP(SBV(-9480, 16), 8)), SFXP(SBV(19141, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27471, 16), 8), SFXP(SBV(12859, 16), 8)), SFXP(SBV(-14612, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31877, 16), 8), SFXP(SBV(-14901, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7067, 16), 8), UFXP(BV(57235, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9852, 16), 8), SFXP(SBV(1356, 16), 8)), SFXP(SBV(11208, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(16706, 16), 8), SFXP(SBV(25635, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7211, 16), 8), SFXP(SBV(8577, 16), 8)), SFXP(SBV(1366, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31174, 16), 8), UFXP(BV(63558, 16), 8)), UFXP(BV(33152, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6100, 16), 8), UFXP(BV(17649, 16), 8)), UFXP(BV(23749, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15961, 16), 8), UFXP(BV(29040, 16), 8)), UFXP(BV(41103, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25938, 16), 8), UFXP(BV(59265, 16), 8)), UFXP(BV(32209, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37242, 16), 8), UFXP(BV(55348, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(55126, 16), 8), UFXP(BV(35711, 16), 8)), UFXP(BV(19415, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60530, 16), 8), UFXP(BV(31772, 16), 8)), UFXP(BV(28758, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39599, 16), 8), UFXP(BV(11494, 16), 8)), UFXP(BV(51093, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63939, 16), 8), UFXP(BV(15943, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-18068, 16), 8), SFXP(SBV(-7461, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22762, 16), 8), SFXP(SBV(23969, 16), 8)), SFXP(SBV(-18805, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(21571, 16), 8), UFXP(BV(603, 16), 8)), UFXP(BV(50809, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59761, 16), 8), UFXP(BV(37072, 16), 8)), UFXP(BV(22689, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-8968, 16), 8), SFXP(SBV(-3915, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(57011, 16), 8), UFXP(BV(4184, 16), 8)), UFXP(BV(14269, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6066, 16), 8), SFXP(SBV(10444, 16), 8)), SFXP(SBV(-16510, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2866, 16), 8), SFXP(SBV(16403, 16), 8)), SFXP(SBV(-13537, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22157, 16), 8), SFXP(SBV(-19318, 16), 8)), SFXP(SBV(2839, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18999, 16), 8), SFXP(SBV(-17010, 16), 8)), SFXP(SBV(-17210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45620, 16), 8), UFXP(BV(1754, 16), 8)), UFXP(BV(47374, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17000, 16), 8), UFXP(BV(59091, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4645, 16), 8), SFXP(SBV(-9369, 16), 8)), SFXP(SBV(4724, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2194, 16), 8), UFXP(BV(54800, 16), 8)), UFXP(BV(56994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39029, 16), 8), UFXP(BV(28347, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49446, 16), 8), UFXP(BV(17241, 16), 8)), UFXP(BV(53273, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1336, 16), 8), UFXP(BV(21600, 16), 8)), UFXP(BV(22936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30580, 16), 8), UFXP(BV(56409, 16), 8)), UFXP(BV(21453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-475, 16), 8), SFXP(SBV(-19816, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33727, 16), 8), UFXP(BV(56371, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59624, 16), 8), UFXP(BV(35251, 16), 8)), UFXP(BV(24373, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20947, 16), 8), SFXP(SBV(10012, 16), 8)), SFXP(SBV(-30959, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(143, 16), 8), SFXP(SBV(31147, 16), 8)), SFXP(SBV(-31004, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39583, 16), 8), UFXP(BV(24181, 16), 8)), UFXP(BV(15402, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51591, 16), 8), UFXP(BV(26294, 16), 8)), UFXP(BV(12349, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12040, 16), 8), SFXP(SBV(14954, 16), 8)), SFXP(SBV(-17590, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44677, 16), 8), UFXP(BV(33587, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27512, 16), 8), SFXP(SBV(26335, 16), 8)), SFXP(SBV(1177, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49128, 16), 8), UFXP(BV(58815, 16), 8)), UFXP(BV(14775, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22650, 16), 8), UFXP(BV(43544, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21796, 16), 8), UFXP(BV(45605, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(9076, 16), 8), UFXP(BV(38384, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1833, 16), 8), SFXP(SBV(920, 16), 8)), SFXP(SBV(-6588, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(43001, 16), 8), UFXP(BV(36473, 16), 8)), UFXP(BV(6528, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13101, 16), 8), SFXP(SBV(30863, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(286, 16), 8), UFXP(BV(2741, 16), 8)), UFXP(BV(63081, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46613, 16), 8), UFXP(BV(50262, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16216, 16), 8), SFXP(SBV(-21037, 16), 8)), SFXP(SBV(21842, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(19804, 16), 8), SFXP(SBV(-21424, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25750, 16), 8), SFXP(SBV(29697, 16), 8)), SFXP(SBV(10089, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3471, 16), 8), UFXP(BV(45525, 16), 8)), UFXP(BV(48996, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20508, 16), 8), SFXP(SBV(5099, 16), 8)), SFXP(SBV(-15409, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60004, 16), 8), UFXP(BV(9954, 16), 8)), UFXP(BV(39365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29445, 16), 8), SFXP(SBV(-12896, 16), 8)), SFXP(SBV(16549, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57896, 16), 8), UFXP(BV(16800, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(4534, 16), 8), SFXP(SBV(26502, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30618, 16), 8), UFXP(BV(53225, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21759, 16), 8), SFXP(SBV(-21092, 16), 8)), SFXP(SBV(23266, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22577, 16), 8), UFXP(BV(13625, 16), 8)), UFXP(BV(8952, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2619, 16), 8), SFXP(SBV(-524, 16), 8)), SFXP(SBV(-3143, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-451, 16), 8), SFXP(SBV(-20406, 16), 8)), SFXP(SBV(19955, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60319, 16), 8), UFXP(BV(31871, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21109, 16), 8), UFXP(BV(40213, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6758, 16), 8), SFXP(SBV(-6295, 16), 8)), SFXP(SBV(30430, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19854, 16), 8), SFXP(SBV(19821, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30294, 16), 8), SFXP(SBV(-4242, 16), 8)), SFXP(SBV(22307, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(10643, 16), 8), UFXP(BV(26272, 16), 8)), UFXP(BV(49907, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(37855, 16), 8), UFXP(BV(33454, 16), 8)), UFXP(BV(4401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17681, 16), 8), SFXP(SBV(17148, 16), 8)), SFXP(SBV(533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20327, 16), 8), UFXP(BV(1597, 16), 8)), UFXP(BV(18730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-9232, 16), 8), SFXP(SBV(14211, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27861, 16), 8), SFXP(SBV(24748, 16), 8)), SFXP(SBV(-6400, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10664, 16), 8), UFXP(BV(19304, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12842, 16), 8), UFXP(BV(410, 16), 8)), UFXP(BV(12432, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18115, 16), 8), SFXP(SBV(12289, 16), 8)), SFXP(SBV(-30404, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61907, 16), 8), UFXP(BV(10934, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38816, 16), 8), UFXP(BV(54316, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23043, 16), 8), SFXP(SBV(-32509, 16), 8)), SFXP(SBV(-9466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10485, 16), 8), SFXP(SBV(-14678, 16), 8)), SFXP(SBV(4193, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42463, 16), 8), UFXP(BV(53504, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18661, 16), 8), UFXP(BV(15029, 16), 8)), UFXP(BV(3632, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8948, 16), 8), SFXP(SBV(-26156, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43260, 16), 8), UFXP(BV(57534, 16), 8)), UFXP(BV(35258, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23120, 16), 8), UFXP(BV(32694, 16), 8)), UFXP(BV(3556, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23574, 16), 8), SFXP(SBV(4068, 16), 8)), SFXP(SBV(-27642, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64207, 16), 8), UFXP(BV(588, 16), 8)), UFXP(BV(64795, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14037, 16), 8), SFXP(SBV(-5982, 16), 8)), SFXP(SBV(-20019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-5553, 16), 8), SFXP(SBV(15433, 16), 8)), SFXP(SBV(-20986, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8038, 16), 8), UFXP(BV(42179, 16), 8)), UFXP(BV(50217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25401, 16), 8), UFXP(BV(57822, 16), 8)), UFXP(BV(33115, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37499, 16), 8), UFXP(BV(63490, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64734, 16), 8), UFXP(BV(60830, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1499, 16), 8), SFXP(SBV(21896, 16), 8)), SFXP(SBV(23395, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15555, 16), 8), SFXP(SBV(-17013, 16), 8)), SFXP(SBV(32568, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19931, 16), 8), SFXP(SBV(-27571, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-12503, 16), 8), SFXP(SBV(26186, 16), 8)), SFXP(SBV(31799, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13707, 16), 8), SFXP(SBV(-753, 16), 8)), SFXP(SBV(12954, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61382, 16), 8), UFXP(BV(2244, 16), 8)), UFXP(BV(13763, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38406, 16), 8), UFXP(BV(59437, 16), 8)), UFXP(BV(44505, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20803, 16), 8), SFXP(SBV(-7320, 16), 8)), SFXP(SBV(28123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14783, 16), 8), SFXP(SBV(-16413, 16), 8)), SFXP(SBV(1630, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(46560, 16), 8), UFXP(BV(1123, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22278, 16), 8), SFXP(SBV(-26294, 16), 8)), SFXP(SBV(5566, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-25955, 16), 8), SFXP(SBV(-20855, 16), 8)), SFXP(SBV(18726, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(56903, 16), 8), UFXP(BV(64754, 16), 8)), UFXP(BV(40963, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14420, 16), 8), SFXP(SBV(-13019, 16), 8)), SFXP(SBV(-1401, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4823, 16), 8), SFXP(SBV(-1335, 16), 8)), SFXP(SBV(6158, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14886, 16), 8), UFXP(BV(25835, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4957, 16), 8), SFXP(SBV(10608, 16), 8)), SFXP(SBV(5651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(32415, 16), 8), SFXP(SBV(-18062, 16), 8)), SFXP(SBV(6729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16202, 16), 8), SFXP(SBV(-24191, 16), 8)), SFXP(SBV(-7989, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19267, 16), 8), SFXP(SBV(9972, 16), 8)), SFXP(SBV(9295, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23157, 16), 8), SFXP(SBV(26838, 16), 8)), SFXP(SBV(3681, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(7995, 16), 8), SFXP(SBV(25668, 16), 8)), SFXP(SBV(15191, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29587, 16), 8), SFXP(SBV(8676, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18984, 16), 8), SFXP(SBV(-10002, 16), 8)), SFXP(SBV(-8982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36219, 16), 8), UFXP(BV(3822, 16), 8)), UFXP(BV(32397, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26650, 16), 8), UFXP(BV(43934, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30379, 16), 8), UFXP(BV(15929, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34157, 16), 8), UFXP(BV(48943, 16), 8)), UFXP(BV(17564, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22057, 16), 8), SFXP(SBV(-6237, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13127, 16), 8), SFXP(SBV(-10278, 16), 8)), SFXP(SBV(-2849, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9543, 16), 8), SFXP(SBV(26215, 16), 8)), SFXP(SBV(-16672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6813, 16), 8), UFXP(BV(50678, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7412, 16), 8), SFXP(SBV(-24192, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26746, 16), 8), SFXP(SBV(-19284, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(15458, 16), 8), SFXP(SBV(29400, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(31284, 16), 8), SFXP(SBV(-21266, 16), 8)), SFXP(SBV(22669, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10228, 16), 8), UFXP(BV(17011, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58593, 16), 8), UFXP(BV(57577, 16), 8)), UFXP(BV(50634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5520, 16), 8), UFXP(BV(12225, 16), 8)), UFXP(BV(17745, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25270, 16), 8), SFXP(SBV(581, 16), 8)), SFXP(SBV(24689, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36950, 16), 8), UFXP(BV(21315, 16), 8)), UFXP(BV(15635, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6821, 16), 8), SFXP(SBV(27488, 16), 8)), SFXP(SBV(20667, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10378, 16), 8), SFXP(SBV(-5274, 16), 8)), SFXP(SBV(-17195, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30610, 16), 8), SFXP(SBV(15096, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49285, 16), 8), UFXP(BV(53545, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23211, 16), 8), UFXP(BV(53941, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20402, 16), 8), SFXP(SBV(348, 16), 8)), SFXP(SBV(27734, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62029, 16), 8), UFXP(BV(22646, 16), 8)), UFXP(BV(39383, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30141, 16), 8), SFXP(SBV(14611, 16), 8)), SFXP(SBV(-20784, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(65393, 16), 8), UFXP(BV(57003, 16), 8)), UFXP(BV(56860, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6821, 16), 8), SFXP(SBV(13854, 16), 8)), SFXP(SBV(7033, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30638, 16), 8), SFXP(SBV(20499, 16), 8)), SFXP(SBV(-10139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(31206, 16), 8), SFXP(SBV(-32128, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28167, 16), 8), SFXP(SBV(-24100, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3299, 16), 8), SFXP(SBV(-16820, 16), 8)), SFXP(SBV(-20147, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10083, 16), 8), SFXP(SBV(-29142, 16), 8)), SFXP(SBV(19059, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(32662, 16), 8), SFXP(SBV(-29523, 16), 8)), SFXP(SBV(-31167, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60207, 16), 8), UFXP(BV(24811, 16), 8)), UFXP(BV(2436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22072, 16), 8), UFXP(BV(51937, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(14749, 16), 8), UFXP(BV(6501, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6834, 16), 8), SFXP(SBV(-25097, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39892, 16), 8), UFXP(BV(35173, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12155, 16), 8), UFXP(BV(4485, 16), 8)), UFXP(BV(7670, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(19076, 16), 8), SFXP(SBV(23309, 16), 8)), SFXP(SBV(-4233, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(348, 16), 8), SFXP(SBV(-3805, 16), 8)), SFXP(SBV(-3457, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27557, 16), 8), SFXP(SBV(-2659, 16), 8)), SFXP(SBV(30216, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15029, 16), 8), UFXP(BV(15213, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32078, 16), 8), UFXP(BV(30955, 16), 8)), UFXP(BV(1123, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26933, 16), 8), SFXP(SBV(-20765, 16), 8)), SFXP(SBV(-6168, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45343, 16), 8), UFXP(BV(60276, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2551, 16), 8), SFXP(SBV(28443, 16), 8)), SFXP(SBV(21287, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30145, 16), 8), SFXP(SBV(16376, 16), 8)), SFXP(SBV(27793, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49921, 16), 8), UFXP(BV(54229, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19567, 16), 8), SFXP(SBV(13697, 16), 8)), SFXP(SBV(1666, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39285, 16), 8), UFXP(BV(13536, 16), 8)), UFXP(BV(25749, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3694, 16), 8), SFXP(SBV(-18337, 16), 8)), SFXP(SBV(-2454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18302, 16), 8), SFXP(SBV(11273, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25984, 16), 8), SFXP(SBV(-6223, 16), 8)), SFXP(SBV(23726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4715, 16), 8), SFXP(SBV(171, 16), 8)), SFXP(SBV(4544, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28221, 16), 8), SFXP(SBV(10684, 16), 8)), SFXP(SBV(17537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53322, 16), 8), UFXP(BV(62683, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9715, 16), 8), SFXP(SBV(5008, 16), 8)), SFXP(SBV(14723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22645, 16), 8), SFXP(SBV(-17917, 16), 8)), SFXP(SBV(-4728, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7649, 16), 8), SFXP(SBV(2356, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35611, 16), 8), UFXP(BV(25946, 16), 8)), UFXP(BV(61557, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9950, 16), 8), SFXP(SBV(-26351, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20487, 16), 8), UFXP(BV(61138, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40332, 16), 8), UFXP(BV(1304, 16), 8)), UFXP(BV(39028, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14815, 16), 8), SFXP(SBV(23307, 16), 8)), SFXP(SBV(8492, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17374, 16), 8), SFXP(SBV(28615, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54452, 16), 8), UFXP(BV(7150, 16), 8)), UFXP(BV(47302, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4488, 16), 8), SFXP(SBV(-28039, 16), 8)), SFXP(SBV(32527, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15911, 16), 8), UFXP(BV(13225, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9540, 16), 8), UFXP(BV(33487, 16), 8)), UFXP(BV(2730, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(22478, 16), 8), UFXP(BV(15248, 16), 8)), UFXP(BV(28126, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10513, 16), 8), SFXP(SBV(23734, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23077, 16), 8), SFXP(SBV(2801, 16), 8)), SFXP(SBV(-25878, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6858, 16), 8), SFXP(SBV(-6923, 16), 8)), SFXP(SBV(-13781, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2326, 16), 8), SFXP(SBV(9006, 16), 8)), SFXP(SBV(16292, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18687, 16), 8), SFXP(SBV(28318, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13581, 16), 8), UFXP(BV(16502, 16), 8)), UFXP(BV(30083, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8710, 16), 8), UFXP(BV(27518, 16), 8)), UFXP(BV(18752, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-1290, 16), 8), SFXP(SBV(-16112, 16), 8)), SFXP(SBV(15653, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9579, 16), 8), SFXP(SBV(-10183, 16), 8)), SFXP(SBV(-19762, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25389, 16), 8), UFXP(BV(4276, 16), 8)), UFXP(BV(29665, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15174, 16), 8), SFXP(SBV(-7347, 16), 8)), SFXP(SBV(23271, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36358, 16), 8), UFXP(BV(55359, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22281, 16), 8), SFXP(SBV(21239, 16), 8)), SFXP(SBV(-1042, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(47080, 16), 8), UFXP(BV(33634, 16), 8)), UFXP(BV(25119, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(30882, 16), 8), SFXP(SBV(15052, 16), 8)), SFXP(SBV(-19243, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14279, 16), 8), UFXP(BV(20234, 16), 8)), UFXP(BV(34513, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27899, 16), 8), SFXP(SBV(-27617, 16), 8)), SFXP(SBV(-282, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21930, 16), 8), UFXP(BV(45333, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21639, 16), 8), UFXP(BV(41780, 16), 8)), UFXP(BV(63419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32363, 16), 8), UFXP(BV(53403, 16), 8)), UFXP(BV(44496, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17034, 16), 8), UFXP(BV(2730, 16), 8)), UFXP(BV(19764, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(64824, 16), 8), UFXP(BV(50468, 16), 8)), UFXP(BV(65460, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9595, 16), 8), SFXP(SBV(-24528, 16), 8)), SFXP(SBV(14933, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17105, 16), 8), SFXP(SBV(-6150, 16), 8)), SFXP(SBV(23255, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28808, 16), 8), SFXP(SBV(-13335, 16), 8)), SFXP(SBV(-15473, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8715, 16), 8), UFXP(BV(17238, 16), 8)), UFXP(BV(62544, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21819, 16), 8), UFXP(BV(19681, 16), 8)), UFXP(BV(41500, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4961, 16), 8), SFXP(SBV(-9874, 16), 8)), SFXP(SBV(-4913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25515, 16), 8), SFXP(SBV(11775, 16), 8)), SFXP(SBV(-13740, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17756, 16), 8), UFXP(BV(39798, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13963, 16), 8), UFXP(BV(31416, 16), 8)), UFXP(BV(48083, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31369, 16), 8), SFXP(SBV(2031, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2477, 16), 8), SFXP(SBV(-8583, 16), 8)), SFXP(SBV(-11060, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22511, 16), 8), SFXP(SBV(31623, 16), 8)), SFXP(SBV(-9112, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34449, 16), 8), UFXP(BV(25187, 16), 8)), UFXP(BV(59636, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21214, 16), 8), UFXP(BV(24983, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24033, 16), 8), SFXP(SBV(28675, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23705, 16), 8), SFXP(SBV(1627, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22297, 16), 8), UFXP(BV(63144, 16), 8)), UFXP(BV(24689, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-198, 16), 8), SFXP(SBV(11003, 16), 8)), SFXP(SBV(-8511, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39263, 16), 8), UFXP(BV(29590, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9468, 16), 8), UFXP(BV(20965, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(30079, 16), 8), SFXP(SBV(-26821, 16), 8)), SFXP(SBV(-5634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58074, 16), 8), UFXP(BV(35642, 16), 8)), UFXP(BV(24516, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(633, 16), 8), UFXP(BV(7127, 16), 8)), UFXP(BV(7760, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41723, 16), 8), UFXP(BV(2122, 16), 8)), UFXP(BV(39601, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17223, 16), 8), SFXP(SBV(-19414, 16), 8)), SFXP(SBV(2191, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15680, 16), 8), UFXP(BV(64834, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(567, 16), 8), UFXP(BV(60531, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8086, 16), 8), UFXP(BV(33655, 16), 8)), UFXP(BV(41741, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11544, 16), 8), UFXP(BV(14668, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32348, 16), 8), SFXP(SBV(5927, 16), 8)), SFXP(SBV(26421, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1754, 16), 8), SFXP(SBV(8619, 16), 8)), SFXP(SBV(-10373, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20591, 16), 8), UFXP(BV(62733, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60806, 16), 8), UFXP(BV(63936, 16), 8)), UFXP(BV(59206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-130, 16), 8), SFXP(SBV(-9502, 16), 8)), SFXP(SBV(-9632, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16715, 16), 8), SFXP(SBV(3643, 16), 8)), SFXP(SBV(-20358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13617, 16), 8), SFXP(SBV(-18121, 16), 8)), SFXP(SBV(31738, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36750, 16), 8), UFXP(BV(927, 16), 8)), UFXP(BV(35823, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26559, 16), 8), SFXP(SBV(20650, 16), 8)), SFXP(SBV(-18327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35197, 16), 8), UFXP(BV(27555, 16), 8)), UFXP(BV(52937, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28556, 16), 8), SFXP(SBV(12333, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41282, 16), 8), UFXP(BV(19542, 16), 8)), UFXP(BV(21740, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5079, 16), 8), SFXP(SBV(-22154, 16), 8)), SFXP(SBV(-27233, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(60704, 16), 8), UFXP(BV(2179, 16), 8)), UFXP(BV(62883, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30450, 16), 8), SFXP(SBV(10339, 16), 8)), SFXP(SBV(20111, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29863, 16), 8), SFXP(SBV(22380, 16), 8)), SFXP(SBV(-13293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10293, 16), 8), UFXP(BV(62400, 16), 8)), UFXP(BV(7157, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16793, 16), 8), UFXP(BV(63031, 16), 8)), UFXP(BV(19298, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26450, 16), 8), SFXP(SBV(-10067, 16), 8)), SFXP(SBV(-16383, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28313, 16), 8), SFXP(SBV(-318, 16), 8)), SFXP(SBV(-30365, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20034, 16), 8), UFXP(BV(36631, 16), 8)), UFXP(BV(56665, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10033, 16), 8), UFXP(BV(13597, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11068, 16), 8), SFXP(SBV(-726, 16), 8)), SFXP(SBV(-31388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-748, 16), 8), SFXP(SBV(6179, 16), 8)), SFXP(SBV(5431, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17499, 16), 8), UFXP(BV(32820, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13361, 16), 8), SFXP(SBV(-10134, 16), 8)), SFXP(SBV(23495, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(20045, 16), 8), SFXP(SBV(1695, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8237, 16), 8), SFXP(SBV(-14676, 16), 8)), SFXP(SBV(-6439, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19667, 16), 8), UFXP(BV(1718, 16), 8)), UFXP(BV(913, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(9467, 16), 8), SFXP(SBV(7227, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(59499, 16), 8), UFXP(BV(54779, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36651, 16), 8), UFXP(BV(20815, 16), 8)), UFXP(BV(57466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8770, 16), 8), UFXP(BV(40011, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52260, 16), 8), UFXP(BV(39447, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13969, 16), 8), UFXP(BV(43333, 16), 8)), UFXP(BV(5231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22969, 16), 8), SFXP(SBV(-3714, 16), 8)), SFXP(SBV(-19255, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(927, 16), 8), UFXP(BV(53711, 16), 8)), UFXP(BV(54638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(48145, 16), 8), UFXP(BV(6993, 16), 8)), UFXP(BV(55138, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(30408, 16), 8), SFXP(SBV(-28681, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31136, 16), 8), SFXP(SBV(899, 16), 8)), SFXP(SBV(21731, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13898, 16), 8), UFXP(BV(51621, 16), 8)), UFXP(BV(27813, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29476, 16), 8), SFXP(SBV(19436, 16), 8)), SFXP(SBV(-10040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13952, 16), 8), UFXP(BV(54187, 16), 8)), UFXP(BV(2603, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22662, 16), 8), SFXP(SBV(27337, 16), 8)), SFXP(SBV(4675, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12175, 16), 8), SFXP(SBV(-26218, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26150, 16), 8), SFXP(SBV(27261, 16), 8)), SFXP(SBV(1111, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6944, 16), 8), UFXP(BV(43335, 16), 8)), UFXP(BV(50279, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7953, 16), 8), SFXP(SBV(-21815, 16), 8)), SFXP(SBV(13862, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10273, 16), 8), SFXP(SBV(25503, 16), 8)), SFXP(SBV(15230, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54222, 16), 8), UFXP(BV(3226, 16), 8)), UFXP(BV(57448, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1657, 16), 8), SFXP(SBV(-27549, 16), 8)), SFXP(SBV(-29206, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30616, 16), 8), SFXP(SBV(24979, 16), 8)), SFXP(SBV(-5637, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-335, 16), 8), SFXP(SBV(-15024, 16), 8)), SFXP(SBV(-15359, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2772, 16), 8), SFXP(SBV(-26200, 16), 8)), SFXP(SBV(23428, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61802, 16), 8), UFXP(BV(24150, 16), 8)), UFXP(BV(37652, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18627, 16), 8), UFXP(BV(15568, 16), 8)), UFXP(BV(3059, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54601, 16), 8), UFXP(BV(54615, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21188, 16), 8), SFXP(SBV(-30533, 16), 8)), SFXP(SBV(-9345, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31477, 16), 8), SFXP(SBV(24463, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20270, 16), 8), SFXP(SBV(-20372, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-29969, 16), 8), SFXP(SBV(-19567, 16), 8)), SFXP(SBV(-3121, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29748, 16), 8), UFXP(BV(8967, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26670, 16), 8), SFXP(SBV(-28542, 16), 8)), SFXP(SBV(1872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61035, 16), 8), UFXP(BV(35006, 16), 8)), UFXP(BV(26029, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19305, 16), 8), UFXP(BV(26374, 16), 8)), UFXP(BV(45679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(18390, 16), 8), UFXP(BV(10733, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(921, 16), 8), SFXP(SBV(13067, 16), 8)), SFXP(SBV(13988, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(1628, 16), 8), UFXP(BV(43689, 16), 8)), UFXP(BV(23475, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30261, 16), 8), UFXP(BV(7857, 16), 8)), UFXP(BV(38118, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17895, 16), 8), UFXP(BV(15203, 16), 8)), UFXP(BV(2692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12256, 16), 8), SFXP(SBV(-15365, 16), 8)), SFXP(SBV(27621, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63454, 16), 8), UFXP(BV(2860, 16), 8)), UFXP(BV(60594, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7917, 16), 8), UFXP(BV(12438, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10737, 16), 8), UFXP(BV(36672, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26148, 16), 8), UFXP(BV(26264, 16), 8)), UFXP(BV(61181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28518, 16), 8), SFXP(SBV(-32334, 16), 8)), SFXP(SBV(3816, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8873, 16), 8), SFXP(SBV(32468, 16), 8)), SFXP(SBV(24195, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22577, 16), 8), UFXP(BV(23467, 16), 8)), UFXP(BV(46044, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36463, 16), 8), UFXP(BV(15440, 16), 8)), UFXP(BV(51903, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52216, 16), 8), UFXP(BV(39684, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11954, 16), 8), UFXP(BV(28811, 16), 8)), UFXP(BV(40765, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(871, 16), 8), SFXP(SBV(-23816, 16), 8)), SFXP(SBV(-22945, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25626, 16), 8), SFXP(SBV(-13041, 16), 8)), SFXP(SBV(12585, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39227, 16), 8), UFXP(BV(58963, 16), 8)), UFXP(BV(45800, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4003, 16), 8), UFXP(BV(32931, 16), 8)), UFXP(BV(36934, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(55126, 16), 8), UFXP(BV(17149, 16), 8)), UFXP(BV(22779, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19329, 16), 8), UFXP(BV(35941, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21575, 16), 8), UFXP(BV(57513, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(51732, 16), 8), UFXP(BV(43261, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40285, 16), 8), UFXP(BV(48494, 16), 8)), UFXP(BV(57327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36684, 16), 8), UFXP(BV(16298, 16), 8)), UFXP(BV(41693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19874, 16), 8), UFXP(BV(23895, 16), 8)), UFXP(BV(43769, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2790, 16), 8), UFXP(BV(15674, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26545, 16), 8), UFXP(BV(22461, 16), 8)), UFXP(BV(4084, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15863, 16), 8), SFXP(SBV(21350, 16), 8)), SFXP(SBV(5487, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23429, 16), 8), UFXP(BV(10378, 16), 8)), UFXP(BV(13051, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30844, 16), 8), SFXP(SBV(30033, 16), 8)), SFXP(SBV(811, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27485, 16), 8), UFXP(BV(40455, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17433, 16), 8), UFXP(BV(26668, 16), 8)), UFXP(BV(44101, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29315, 16), 8), SFXP(SBV(2837, 16), 8)), SFXP(SBV(-32152, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14424, 16), 8), UFXP(BV(33034, 16), 8)), UFXP(BV(46926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17607, 16), 8), UFXP(BV(22151, 16), 8)), UFXP(BV(39758, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48215, 16), 8), UFXP(BV(65063, 16), 8)), UFXP(BV(48688, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64397, 16), 8), UFXP(BV(19511, 16), 8)), UFXP(BV(44886, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8915, 16), 8), SFXP(SBV(-4164, 16), 8)), SFXP(SBV(4751, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12476, 16), 8), UFXP(BV(4491, 16), 8)), UFXP(BV(16967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22954, 16), 8), SFXP(SBV(6460, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15613, 16), 8), UFXP(BV(1018, 16), 8)), UFXP(BV(16631, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40419, 16), 8), UFXP(BV(60442, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-17801, 16), 8), SFXP(SBV(-19330, 16), 8)), SFXP(SBV(-32141, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3906, 16), 8), SFXP(SBV(1314, 16), 8)), SFXP(SBV(20048, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6249, 16), 8), SFXP(SBV(-16835, 16), 8)), SFXP(SBV(-23084, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51838, 16), 8), UFXP(BV(34798, 16), 8)), UFXP(BV(33971, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19958, 16), 8), UFXP(BV(52068, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23721, 16), 8), SFXP(SBV(17179, 16), 8)), SFXP(SBV(-6542, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(25139, 16), 8), SFXP(SBV(-1310, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(13327, 16), 8), SFXP(SBV(1205, 16), 8)), SFXP(SBV(12122, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-32342, 16), 8), SFXP(SBV(-7584, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17835, 16), 8), SFXP(SBV(-20936, 16), 8)), SFXP(SBV(-3101, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34985, 16), 8), UFXP(BV(27329, 16), 8)), UFXP(BV(7656, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43275, 16), 8), UFXP(BV(35260, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31798, 16), 8), SFXP(SBV(-2024, 16), 8)), SFXP(SBV(29774, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4622, 16), 8), SFXP(SBV(5860, 16), 8)), SFXP(SBV(25271, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-24212, 16), 8), SFXP(SBV(10278, 16), 8)), SFXP(SBV(10967, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14849, 16), 8), UFXP(BV(58114, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28284, 16), 8), UFXP(BV(56723, 16), 8)), UFXP(BV(19471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20766, 16), 8), SFXP(SBV(23180, 16), 8)), SFXP(SBV(-2414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41059, 16), 8), UFXP(BV(14665, 16), 8)), UFXP(BV(26394, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27269, 16), 8), SFXP(SBV(23175, 16), 8)), SFXP(SBV(-15092, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27967, 16), 8), SFXP(SBV(-11886, 16), 8)), SFXP(SBV(-12221, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1157, 16), 8), SFXP(SBV(23194, 16), 8)), SFXP(SBV(24351, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25611, 16), 8), SFXP(SBV(-28795, 16), 8)), SFXP(SBV(2847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6119, 16), 8), SFXP(SBV(-29966, 16), 8)), SFXP(SBV(-23847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1934, 16), 8), SFXP(SBV(1460, 16), 8)), SFXP(SBV(474, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27859, 16), 8), SFXP(SBV(-23861, 16), 8)), SFXP(SBV(13816, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28904, 16), 8), SFXP(SBV(3501, 16), 8)), SFXP(SBV(25403, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38453, 16), 8), UFXP(BV(58217, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29833, 16), 8), UFXP(BV(42656, 16), 8)), UFXP(BV(6953, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45272, 16), 8), UFXP(BV(62082, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60794, 16), 8), UFXP(BV(49133, 16), 8)), UFXP(BV(11661, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17925, 16), 8), UFXP(BV(21256, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16080, 16), 8), SFXP(SBV(13861, 16), 8)), SFXP(SBV(2219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9533, 16), 8), UFXP(BV(9190, 16), 8)), UFXP(BV(18723, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10875, 16), 8), SFXP(SBV(8128, 16), 8)), SFXP(SBV(-2747, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42769, 16), 8), UFXP(BV(12077, 16), 8)), UFXP(BV(30692, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28368, 16), 8), SFXP(SBV(30672, 16), 8)), SFXP(SBV(9031, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-9349, 16), 8), SFXP(SBV(31852, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(18411, 16), 8), SFXP(SBV(-26261, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3006, 16), 8), SFXP(SBV(32482, 16), 8)), SFXP(SBV(-30048, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23034, 16), 8), SFXP(SBV(17617, 16), 8)), SFXP(SBV(5417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15026, 16), 8), UFXP(BV(40891, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50418, 16), 8), UFXP(BV(35165, 16), 8)), UFXP(BV(15253, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58078, 16), 8), UFXP(BV(31009, 16), 8)), UFXP(BV(23551, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47960, 16), 8), UFXP(BV(3696, 16), 8)), UFXP(BV(51656, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26451, 16), 8), SFXP(SBV(9419, 16), 8)), SFXP(SBV(17032, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22225, 16), 8), SFXP(SBV(13602, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24949, 16), 8), SFXP(SBV(16720, 16), 8)), SFXP(SBV(8229, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4510, 16), 8), UFXP(BV(41566, 16), 8)), UFXP(BV(46076, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27790, 16), 8), SFXP(SBV(9701, 16), 8)), SFXP(SBV(-18089, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(27689, 16), 8), SFXP(SBV(-1135, 16), 8)), SFXP(SBV(28824, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11757, 16), 8), SFXP(SBV(-11996, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19454, 16), 8), SFXP(SBV(22362, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(915, 16), 8), SFXP(SBV(-17340, 16), 8)), SFXP(SBV(-16425, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16110, 16), 8), SFXP(SBV(-18274, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7574, 16), 8), SFXP(SBV(-11366, 16), 8)), SFXP(SBV(8594, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37332, 16), 8), UFXP(BV(63140, 16), 8)), UFXP(BV(34936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(36694, 16), 8), UFXP(BV(28220, 16), 8)), UFXP(BV(47245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3752, 16), 8), UFXP(BV(39460, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55089, 16), 8), UFXP(BV(31664, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(23419, 16), 8), UFXP(BV(64935, 16), 8)), UFXP(BV(24020, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8105, 16), 8), UFXP(BV(15582, 16), 8)), UFXP(BV(23687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26201, 16), 8), UFXP(BV(54360, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4740, 16), 8), UFXP(BV(4912, 16), 8)), UFXP(BV(9652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(20533, 16), 8), SFXP(SBV(20190, 16), 8)), SFXP(SBV(-19021, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(216, 16), 8), UFXP(BV(57006, 16), 8)), UFXP(BV(57222, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8083, 16), 8), SFXP(SBV(-5351, 16), 8)), SFXP(SBV(-2732, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42043, 16), 8), UFXP(BV(17934, 16), 8)), UFXP(BV(59977, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61728, 16), 8), UFXP(BV(23914, 16), 8)), UFXP(BV(37814, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38589, 16), 8), UFXP(BV(41599, 16), 8)), UFXP(BV(62526, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35462, 16), 8), UFXP(BV(56018, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-7933, 16), 8), SFXP(SBV(7934, 16), 8)), SFXP(SBV(16283, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(20668, 16), 8), SFXP(SBV(-24696, 16), 8)), SFXP(SBV(-27736, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26266, 16), 8), UFXP(BV(7062, 16), 8)), UFXP(BV(33328, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(16327, 16), 8), SFXP(SBV(18341, 16), 8)), SFXP(SBV(-9908, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7521, 16), 8), SFXP(SBV(-20080, 16), 8)), SFXP(SBV(12559, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41535, 16), 8), UFXP(BV(27821, 16), 8)), UFXP(BV(13714, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54033, 16), 8), UFXP(BV(20348, 16), 8)), UFXP(BV(33685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25224, 16), 8), UFXP(BV(37668, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39338, 16), 8), UFXP(BV(18160, 16), 8)), UFXP(BV(57498, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18307, 16), 8), UFXP(BV(12811, 16), 8)), UFXP(BV(31118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8604, 16), 8), SFXP(SBV(30356, 16), 8)), SFXP(SBV(21752, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26019, 16), 8), SFXP(SBV(-3751, 16), 8)), SFXP(SBV(-22268, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21302, 16), 8), SFXP(SBV(18643, 16), 8)), SFXP(SBV(2659, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53489, 16), 8), UFXP(BV(53326, 16), 8)), UFXP(BV(890, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63755, 16), 8), UFXP(BV(30425, 16), 8)), UFXP(BV(33330, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-6508, 16), 8), SFXP(SBV(15311, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5588, 16), 8), UFXP(BV(48439, 16), 8)), UFXP(BV(22685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32577, 16), 8), UFXP(BV(29769, 16), 8)), UFXP(BV(2808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39723, 16), 8), UFXP(BV(47636, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11146, 16), 8), SFXP(SBV(31681, 16), 8)), SFXP(SBV(-20535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6946, 16), 8), SFXP(SBV(-26304, 16), 8)), SFXP(SBV(19358, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3650, 16), 8), UFXP(BV(11816, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22176, 16), 8), SFXP(SBV(14927, 16), 8)), SFXP(SBV(-7249, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58454, 16), 8), UFXP(BV(13900, 16), 8)), UFXP(BV(6818, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37374, 16), 8), UFXP(BV(6919, 16), 8)), UFXP(BV(27079, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(1215, 16), 8), UFXP(BV(57424, 16), 8)), UFXP(BV(10396, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1811, 16), 8), UFXP(BV(10626, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58134, 16), 8), UFXP(BV(34200, 16), 8)), UFXP(BV(26798, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(455, 16), 8), UFXP(BV(44593, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3493, 16), 8), SFXP(SBV(1786, 16), 8)), SFXP(SBV(24370, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32644, 16), 8), SFXP(SBV(24987, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(51675, 16), 8), UFXP(BV(18507, 16), 8)), UFXP(BV(33168, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(6905, 16), 8), UFXP(BV(11815, 16), 8)), UFXP(BV(56537, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8141, 16), 8), SFXP(SBV(-6826, 16), 8)), SFXP(SBV(-14967, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34471, 16), 8), UFXP(BV(2484, 16), 8)), UFXP(BV(36955, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19100, 16), 8), SFXP(SBV(-384, 16), 8)), SFXP(SBV(28650, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63796, 16), 8), UFXP(BV(53143, 16), 8)), UFXP(BV(10653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18529, 16), 8), UFXP(BV(37832, 16), 8)), UFXP(BV(51262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19339, 16), 8), SFXP(SBV(-28569, 16), 8)), SFXP(SBV(-4500, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43257, 16), 8), UFXP(BV(29475, 16), 8)), UFXP(BV(65269, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31176, 16), 8), SFXP(SBV(-8973, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4861, 16), 8), SFXP(SBV(-20624, 16), 8)), SFXP(SBV(1601, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-362, 16), 8), SFXP(SBV(31711, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22423, 16), 8), SFXP(SBV(-19677, 16), 8)), SFXP(SBV(2746, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14228, 16), 8), SFXP(SBV(-9755, 16), 8)), SFXP(SBV(-4473, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-201, 16), 8), SFXP(SBV(-22045, 16), 8)), SFXP(SBV(-22246, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15817, 16), 8), SFXP(SBV(9292, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26132, 16), 8), SFXP(SBV(-24151, 16), 8)), SFXP(SBV(-1981, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40342, 16), 8), UFXP(BV(43112, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30997, 16), 8), UFXP(BV(63486, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10556, 16), 8), SFXP(SBV(-26487, 16), 8)), SFXP(SBV(21938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29326, 16), 8), SFXP(SBV(9793, 16), 8)), SFXP(SBV(19533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49380, 16), 8), UFXP(BV(40286, 16), 8)), UFXP(BV(37543, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8372, 16), 8), SFXP(SBV(21583, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(13259, 16), 8), UFXP(BV(63175, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-2165, 16), 8), SFXP(SBV(11429, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53414, 16), 8), UFXP(BV(65091, 16), 8)), UFXP(BV(52969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22370, 16), 8), UFXP(BV(19312, 16), 8)), UFXP(BV(3058, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22900, 16), 8), UFXP(BV(17231, 16), 8)), UFXP(BV(40131, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18735, 16), 8), SFXP(SBV(2680, 16), 8)), SFXP(SBV(-21415, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22259, 16), 8), SFXP(SBV(10981, 16), 8)), SFXP(SBV(28250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36151, 16), 8), UFXP(BV(31344, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37468, 16), 8), UFXP(BV(62736, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24927, 16), 8), SFXP(SBV(-16644, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28893, 16), 8), SFXP(SBV(-27946, 16), 8)), SFXP(SBV(-8350, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(43725, 16), 8), UFXP(BV(51777, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12537, 16), 8), SFXP(SBV(-21717, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(10137, 16), 8), SFXP(SBV(-21852, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32069, 16), 8), SFXP(SBV(-5773, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16760, 16), 8), UFXP(BV(35291, 16), 8)), UFXP(BV(52051, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15370, 16), 8), UFXP(BV(2588, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6893, 16), 8), SFXP(SBV(-20417, 16), 8)), SFXP(SBV(-13524, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41105, 16), 8), UFXP(BV(45725, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35581, 16), 8), UFXP(BV(63371, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14238, 16), 8), SFXP(SBV(21137, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25043, 16), 8), UFXP(BV(53552, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(5042, 16), 8), UFXP(BV(9776, 16), 8)), UFXP(BV(61470, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14311, 16), 8), UFXP(BV(26847, 16), 8)), UFXP(BV(53000, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5678, 16), 8), UFXP(BV(36385, 16), 8)), UFXP(BV(20575, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22087, 16), 8), UFXP(BV(33177, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42484, 16), 8), UFXP(BV(34528, 16), 8)), UFXP(BV(7956, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61107, 16), 8), UFXP(BV(19401, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32172, 16), 8), SFXP(SBV(29913, 16), 8)), SFXP(SBV(2259, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30533, 16), 8), UFXP(BV(30988, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4142, 16), 8), UFXP(BV(55146, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(29862, 16), 8), UFXP(BV(42338, 16), 8)), UFXP(BV(53060, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61969, 16), 8), UFXP(BV(5556, 16), 8)), UFXP(BV(56413, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(11068, 16), 8), UFXP(BV(55141, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40144, 16), 8), UFXP(BV(33393, 16), 8)), UFXP(BV(6751, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38589, 16), 8), UFXP(BV(20547, 16), 8)), UFXP(BV(18042, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21322, 16), 8), UFXP(BV(41203, 16), 8)), UFXP(BV(45655, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17780, 16), 8), UFXP(BV(2713, 16), 8)), UFXP(BV(20493, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22218, 16), 8), SFXP(SBV(1017, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5573, 16), 8), SFXP(SBV(-9502, 16), 8)), SFXP(SBV(-3929, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31472, 16), 8), UFXP(BV(14031, 16), 8)), UFXP(BV(17441, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(145, 16), 8), SFXP(SBV(23057, 16), 8)), SFXP(SBV(23202, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12943, 16), 8), SFXP(SBV(11868, 16), 8)), SFXP(SBV(10205, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24030, 16), 8), SFXP(SBV(6932, 16), 8)), SFXP(SBV(-17098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(30250, 16), 8), SFXP(SBV(22029, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14287, 16), 8), UFXP(BV(39154, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(5563, 16), 8), SFXP(SBV(-5276, 16), 8)), SFXP(SBV(10839, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20369, 16), 8), SFXP(SBV(-5120, 16), 8)), SFXP(SBV(14164, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12510, 16), 8), UFXP(BV(23140, 16), 8)), UFXP(BV(16674, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29195, 16), 8), UFXP(BV(2161, 16), 8)), UFXP(BV(27034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30696, 16), 8), SFXP(SBV(-25457, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(31398, 16), 8), UFXP(BV(41731, 16), 8)), UFXP(BV(6433, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9973, 16), 8), UFXP(BV(7068, 16), 8)), UFXP(BV(17041, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18603, 16), 8), SFXP(SBV(-366, 16), 8)), SFXP(SBV(-18969, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9280, 16), 8), UFXP(BV(25277, 16), 8)), UFXP(BV(34557, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25239, 16), 8), SFXP(SBV(-5713, 16), 8)), SFXP(SBV(-19526, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52843, 16), 8), UFXP(BV(11764, 16), 8)), UFXP(BV(64607, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59427, 16), 8), UFXP(BV(50534, 16), 8)), UFXP(BV(44425, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31452, 16), 8), UFXP(BV(21784, 16), 8)), UFXP(BV(9668, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21877, 16), 8), SFXP(SBV(-10030, 16), 8)), SFXP(SBV(11847, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12518, 16), 8), SFXP(SBV(6788, 16), 8)), SFXP(SBV(-19306, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19157, 16), 8), SFXP(SBV(-5632, 16), 8)), SFXP(SBV(24789, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9251, 16), 8), UFXP(BV(42986, 16), 8)), UFXP(BV(52237, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14389, 16), 8), UFXP(BV(22163, 16), 8)), UFXP(BV(36552, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29365, 16), 8), UFXP(BV(64319, 16), 8)), UFXP(BV(37809, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28845, 16), 8), SFXP(SBV(-23831, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8679, 16), 8), SFXP(SBV(-26248, 16), 8)), SFXP(SBV(-30609, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3562, 16), 8), SFXP(SBV(-4280, 16), 8)), SFXP(SBV(718, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3512, 16), 8), SFXP(SBV(-5791, 16), 8)), SFXP(SBV(-9303, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29134, 16), 8), SFXP(SBV(8094, 16), 8)), SFXP(SBV(28308, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16422, 16), 8), SFXP(SBV(-1913, 16), 8)), SFXP(SBV(-8356, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1160, 16), 8), UFXP(BV(24834, 16), 8)), UFXP(BV(25994, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8029, 16), 8), SFXP(SBV(18879, 16), 8)), SFXP(SBV(26908, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(965, 16), 8), UFXP(BV(62385, 16), 8)), UFXP(BV(63350, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44420, 16), 8), UFXP(BV(52949, 16), 8)), UFXP(BV(12438, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(54499, 16), 8), UFXP(BV(1351, 16), 8)), UFXP(BV(55850, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41407, 16), 8), UFXP(BV(18436, 16), 8)), UFXP(BV(22971, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54347, 16), 8), UFXP(BV(63282, 16), 8)), UFXP(BV(52093, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12579, 16), 8), UFXP(BV(46807, 16), 8)), UFXP(BV(31308, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28767, 16), 8), SFXP(SBV(5223, 16), 8)), SFXP(SBV(23544, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12378, 16), 8), SFXP(SBV(-13663, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(46409, 16), 8), UFXP(BV(61973, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32321, 16), 8), SFXP(SBV(18919, 16), 8)), SFXP(SBV(14296, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26399, 16), 8), SFXP(SBV(-10122, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10641, 16), 8), SFXP(SBV(-23554, 16), 8)), SFXP(SBV(31341, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19224, 16), 8), UFXP(BV(37754, 16), 8)), UFXP(BV(17041, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-31837, 16), 8), SFXP(SBV(-8866, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33777, 16), 8), UFXP(BV(34251, 16), 8)), UFXP(BV(65062, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(877, 16), 8), SFXP(SBV(-31956, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20130, 16), 8), SFXP(SBV(13303, 16), 8)), SFXP(SBV(6827, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1610, 16), 8), SFXP(SBV(-10480, 16), 8)), SFXP(SBV(-12090, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56741, 16), 8), UFXP(BV(6512, 16), 8)), UFXP(BV(50229, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64772, 16), 8), UFXP(BV(38781, 16), 8)), UFXP(BV(25991, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8605, 16), 8), UFXP(BV(9839, 16), 8)), UFXP(BV(18444, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24990, 16), 8), SFXP(SBV(2249, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29695, 16), 8), SFXP(SBV(6241, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39689, 16), 8), UFXP(BV(50935, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25905, 16), 8), SFXP(SBV(-7814, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(35339, 16), 8), UFXP(BV(59992, 16), 8)), UFXP(BV(23938, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40123, 16), 8), UFXP(BV(65152, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(544, 16), 8), UFXP(BV(18515, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34274, 16), 8), UFXP(BV(48968, 16), 8)), UFXP(BV(2374, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20211, 16), 8), SFXP(SBV(-4183, 16), 8)), SFXP(SBV(16028, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(42985, 16), 8), UFXP(BV(2821, 16), 8)), UFXP(BV(45806, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12243, 16), 8), SFXP(SBV(494, 16), 8)), SFXP(SBV(23625, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1661, 16), 8), UFXP(BV(29055, 16), 8)), UFXP(BV(30716, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32195, 16), 8), SFXP(SBV(-18725, 16), 8)), SFXP(SBV(-14616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17397, 16), 8), UFXP(BV(61722, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3987, 16), 8), SFXP(SBV(-10274, 16), 8)), SFXP(SBV(-6287, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22676, 16), 8), UFXP(BV(50817, 16), 8)), UFXP(BV(37395, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11230, 16), 8), SFXP(SBV(5116, 16), 8)), SFXP(SBV(16346, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37693, 16), 8), UFXP(BV(45203, 16), 8)), UFXP(BV(36477, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27466, 16), 8), SFXP(SBV(-10080, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(26571, 16), 8), UFXP(BV(10522, 16), 8)), UFXP(BV(43533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25736, 16), 8), SFXP(SBV(21658, 16), 8)), SFXP(SBV(4078, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63081, 16), 8), UFXP(BV(33360, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52925, 16), 8), UFXP(BV(34205, 16), 8)), UFXP(BV(18720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60057, 16), 8), UFXP(BV(18267, 16), 8)), UFXP(BV(12788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11551, 16), 8), UFXP(BV(14694, 16), 8)), UFXP(BV(26245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64674, 16), 8), UFXP(BV(29086, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31705, 16), 8), UFXP(BV(64768, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22021, 16), 8), SFXP(SBV(-132, 16), 8)), SFXP(SBV(21889, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-30182, 16), 8), SFXP(SBV(16719, 16), 8)), SFXP(SBV(18635, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20355, 16), 8), SFXP(SBV(20660, 16), 8)), SFXP(SBV(24521, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8474, 16), 8), SFXP(SBV(-3131, 16), 8)), SFXP(SBV(11605, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41796, 16), 8), UFXP(BV(65094, 16), 8)), UFXP(BV(42238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50961, 16), 8), UFXP(BV(18321, 16), 8)), UFXP(BV(32640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21800, 16), 8), SFXP(SBV(24859, 16), 8)), SFXP(SBV(19748, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59635, 16), 8), UFXP(BV(34866, 16), 8)), UFXP(BV(28965, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24179, 16), 8), SFXP(SBV(6494, 16), 8)), SFXP(SBV(17685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(29859, 16), 8), UFXP(BV(49137, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16899, 16), 8), SFXP(SBV(4779, 16), 8)), SFXP(SBV(21678, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(18331, 16), 8), SFXP(SBV(-10228, 16), 8)), SFXP(SBV(-11484, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6414, 16), 8), SFXP(SBV(-10875, 16), 8)), SFXP(SBV(-4461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49272, 16), 8), UFXP(BV(37722, 16), 8)), UFXP(BV(11550, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4295, 16), 8), SFXP(SBV(21277, 16), 8)), SFXP(SBV(-16982, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38778, 16), 8), UFXP(BV(5980, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45093, 16), 8), UFXP(BV(40619, 16), 8)), UFXP(BV(4474, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(39309, 16), 8), UFXP(BV(25022, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(46100, 16), 8), UFXP(BV(53320, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9456, 16), 8), SFXP(SBV(-1088, 16), 8)), SFXP(SBV(25348, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16367, 16), 8), SFXP(SBV(4891, 16), 8)), SFXP(SBV(-11476, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6242, 16), 8), SFXP(SBV(-23779, 16), 8)), SFXP(SBV(-17537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41400, 16), 8), UFXP(BV(855, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60590, 16), 8), UFXP(BV(1642, 16), 8)), UFXP(BV(62232, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17625, 16), 8), UFXP(BV(36614, 16), 8)), UFXP(BV(54239, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-1985, 16), 8), SFXP(SBV(9838, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22609, 16), 8), UFXP(BV(4970, 16), 8)), UFXP(BV(17639, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19953, 16), 8), SFXP(SBV(-11521, 16), 8)), SFXP(SBV(19542, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8686, 16), 8), SFXP(SBV(-15796, 16), 8)), SFXP(SBV(-24482, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(45166, 16), 8), UFXP(BV(28526, 16), 8)), UFXP(BV(16640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10619, 16), 8), SFXP(SBV(9106, 16), 8)), SFXP(SBV(19725, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14257, 16), 8), UFXP(BV(54789, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(5361, 16), 8), SFXP(SBV(-22251, 16), 8)), SFXP(SBV(-16890, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-32168, 16), 8), SFXP(SBV(-30976, 16), 8)), SFXP(SBV(25704, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8430, 16), 8), UFXP(BV(1593, 16), 8)), UFXP(BV(6837, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(7321, 16), 8), UFXP(BV(4212, 16), 8)), UFXP(BV(11533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34099, 16), 8), UFXP(BV(35362, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18710, 16), 8), SFXP(SBV(-5117, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(23251, 16), 8), SFXP(SBV(-3149, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10580, 16), 8), SFXP(SBV(-19767, 16), 8)), SFXP(SBV(-30502, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7925, 16), 8), SFXP(SBV(28755, 16), 8)), SFXP(SBV(20830, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(11347, 16), 8), SFXP(SBV(17051, 16), 8)), SFXP(SBV(-30660, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10869, 16), 8), UFXP(BV(15091, 16), 8)), UFXP(BV(25960, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31924, 16), 8), SFXP(SBV(12495, 16), 8)), SFXP(SBV(21117, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20564, 16), 8), SFXP(SBV(-32467, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56477, 16), 8), UFXP(BV(26377, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36181, 16), 8), UFXP(BV(7856, 16), 8)), UFXP(BV(44037, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16216, 16), 8), SFXP(SBV(-15148, 16), 8)), SFXP(SBV(1068, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49106, 16), 8), UFXP(BV(41308, 16), 8)), UFXP(BV(24878, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-515, 16), 8), SFXP(SBV(-13777, 16), 8)), SFXP(SBV(27716, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8581, 16), 8), SFXP(SBV(-30008, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18672, 16), 8), SFXP(SBV(-20140, 16), 8)), SFXP(SBV(27169, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4153, 16), 8), SFXP(SBV(23905, 16), 8)), SFXP(SBV(19752, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52714, 16), 8), UFXP(BV(53932, 16), 8)), UFXP(BV(29774, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33251, 16), 8), UFXP(BV(14084, 16), 8)), UFXP(BV(47335, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3296, 16), 8), UFXP(BV(42391, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61764, 16), 8), UFXP(BV(60299, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31030, 16), 8), SFXP(SBV(5440, 16), 8)), SFXP(SBV(25590, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38002, 16), 8), UFXP(BV(48281, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13137, 16), 8), SFXP(SBV(-8443, 16), 8)), SFXP(SBV(4694, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(55019, 16), 8), UFXP(BV(51236, 16), 8)), UFXP(BV(1490, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48366, 16), 8), UFXP(BV(52706, 16), 8)), UFXP(BV(61792, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38778, 16), 8), UFXP(BV(32570, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(3819, 16), 8), SFXP(SBV(-9563, 16), 8)), SFXP(SBV(13382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6243, 16), 8), SFXP(SBV(-31444, 16), 8)), SFXP(SBV(-27849, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18665, 16), 8), SFXP(SBV(15798, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55579, 16), 8), UFXP(BV(60372, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-3182, 16), 8), SFXP(SBV(14872, 16), 8)), SFXP(SBV(-18054, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-22709, 16), 8), SFXP(SBV(-12008, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42188, 16), 8), UFXP(BV(32065, 16), 8)), UFXP(BV(10123, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(2729, 16), 8), UFXP(BV(53686, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25224, 16), 8), SFXP(SBV(6638, 16), 8)), SFXP(SBV(18586, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60917, 16), 8), UFXP(BV(32959, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1169, 16), 8), SFXP(SBV(20946, 16), 8)), SFXP(SBV(-22115, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31038, 16), 8), SFXP(SBV(5660, 16), 8)), SFXP(SBV(-28838, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60596, 16), 8), UFXP(BV(19597, 16), 8)), UFXP(BV(40999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(11035, 16), 8), SFXP(SBV(-28655, 16), 8)), SFXP(SBV(-25846, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23241, 16), 8), UFXP(BV(38555, 16), 8)), UFXP(BV(61796, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38640, 16), 8), UFXP(BV(26074, 16), 8)), UFXP(BV(3385, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2527, 16), 8), SFXP(SBV(2226, 16), 8)), SFXP(SBV(-301, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17744, 16), 8), SFXP(SBV(27288, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58867, 16), 8), UFXP(BV(15824, 16), 8)), UFXP(BV(43043, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2963, 16), 8), SFXP(SBV(26708, 16), 8)), SFXP(SBV(29671, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5023, 16), 8), SFXP(SBV(10275, 16), 8)), SFXP(SBV(-4999, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18969, 16), 8), SFXP(SBV(-8012, 16), 8)), SFXP(SBV(-26981, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5752, 16), 8), SFXP(SBV(8505, 16), 8)), SFXP(SBV(-5511, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28681, 16), 8), SFXP(SBV(19078, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6352, 16), 8), UFXP(BV(60016, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(20342, 16), 8), UFXP(BV(40913, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19644, 16), 8), SFXP(SBV(-17485, 16), 8)), SFXP(SBV(2159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27321, 16), 8), SFXP(SBV(-19646, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11612, 16), 8), SFXP(SBV(5743, 16), 8)), SFXP(SBV(-1645, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(29600, 16), 8), SFXP(SBV(-5077, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15570, 16), 8), SFXP(SBV(7014, 16), 8)), SFXP(SBV(-32159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28300, 16), 8), SFXP(SBV(15017, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18559, 16), 8), SFXP(SBV(-24022, 16), 8)), SFXP(SBV(-22955, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(32476, 16), 8), SFXP(SBV(24101, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3993, 16), 8), UFXP(BV(1063, 16), 8)), UFXP(BV(2930, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26016, 16), 8), SFXP(SBV(24044, 16), 8)), SFXP(SBV(18640, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8300, 16), 8), SFXP(SBV(-2165, 16), 8)), SFXP(SBV(10465, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53041, 16), 8), UFXP(BV(49255, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30931, 16), 8), UFXP(BV(17760, 16), 8)), UFXP(BV(13171, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3836, 16), 8), UFXP(BV(10412, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42062, 16), 8), UFXP(BV(11440, 16), 8)), UFXP(BV(44638, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55140, 16), 8), UFXP(BV(57203, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13040, 16), 8), UFXP(BV(15364, 16), 8)), UFXP(BV(61708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44638, 16), 8), UFXP(BV(43261, 16), 8)), UFXP(BV(1377, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38219, 16), 8), UFXP(BV(18576, 16), 8)), UFXP(BV(19643, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14521, 16), 8), SFXP(SBV(19128, 16), 8)), SFXP(SBV(29121, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12930, 16), 8), SFXP(SBV(-19521, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40477, 16), 8), UFXP(BV(54177, 16), 8)), UFXP(BV(46423, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12098, 16), 8), SFXP(SBV(-14389, 16), 8)), SFXP(SBV(-26487, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2210, 16), 8), SFXP(SBV(-8401, 16), 8)), SFXP(SBV(10611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22039, 16), 8), UFXP(BV(7872, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16706, 16), 8), SFXP(SBV(-15200, 16), 8)), SFXP(SBV(-31906, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15920, 16), 8), SFXP(SBV(31897, 16), 8)), SFXP(SBV(15977, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25792, 16), 8), SFXP(SBV(-20512, 16), 8)), SFXP(SBV(30568, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3171, 16), 8), SFXP(SBV(12270, 16), 8)), SFXP(SBV(15441, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28955, 16), 8), UFXP(BV(30534, 16), 8)), UFXP(BV(59489, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10114, 16), 8), SFXP(SBV(16461, 16), 8)), SFXP(SBV(5021, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64257, 16), 8), UFXP(BV(36557, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10809, 16), 8), SFXP(SBV(-29269, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23809, 16), 8), SFXP(SBV(24949, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28759, 16), 8), SFXP(SBV(-18432, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57940, 16), 8), UFXP(BV(63643, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12401, 16), 8), SFXP(SBV(8521, 16), 8)), SFXP(SBV(19554, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28620, 16), 8), UFXP(BV(26620, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54025, 16), 8), UFXP(BV(17142, 16), 8)), UFXP(BV(5631, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13346, 16), 8), UFXP(BV(53055, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31983, 16), 8), UFXP(BV(61448, 16), 8)), UFXP(BV(27895, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43958, 16), 8), UFXP(BV(15168, 16), 8)), UFXP(BV(59126, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19659, 16), 8), SFXP(SBV(27658, 16), 8)), SFXP(SBV(-18219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23249, 16), 8), UFXP(BV(20332, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64081, 16), 8), UFXP(BV(16024, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32025, 16), 8), UFXP(BV(49012, 16), 8)), UFXP(BV(36439, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-26855, 16), 8), SFXP(SBV(6971, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1596, 16), 8), SFXP(SBV(27038, 16), 8)), SFXP(SBV(-28634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59262, 16), 8), UFXP(BV(31520, 16), 8)), UFXP(BV(22138, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50341, 16), 8), UFXP(BV(38307, 16), 8)), UFXP(BV(61758, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18800, 16), 8), SFXP(SBV(-7518, 16), 8)), SFXP(SBV(-11282, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21226, 16), 8), UFXP(BV(47968, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(40269, 16), 8), UFXP(BV(43489, 16), 8)), UFXP(BV(62316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13741, 16), 8), UFXP(BV(15745, 16), 8)), UFXP(BV(63532, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44618, 16), 8), UFXP(BV(29543, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46615, 16), 8), UFXP(BV(26333, 16), 8)), UFXP(BV(20282, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13909, 16), 8), SFXP(SBV(-22447, 16), 8)), SFXP(SBV(8538, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37833, 16), 8), UFXP(BV(51949, 16), 8)), UFXP(BV(51420, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11499, 16), 8), SFXP(SBV(-26771, 16), 8)), SFXP(SBV(-15272, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47526, 16), 8), UFXP(BV(55804, 16), 8)), UFXP(BV(57258, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48369, 16), 8), UFXP(BV(4440, 16), 8)), UFXP(BV(52467, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14556, 16), 8), SFXP(SBV(8601, 16), 8)), SFXP(SBV(23157, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7684, 16), 8), UFXP(BV(16550, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41891, 16), 8), UFXP(BV(32612, 16), 8)), UFXP(BV(8967, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19279, 16), 8), SFXP(SBV(29506, 16), 8)), SFXP(SBV(-10227, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9767, 16), 8), SFXP(SBV(5366, 16), 8)), SFXP(SBV(15133, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10397, 16), 8), SFXP(SBV(18790, 16), 8)), SFXP(SBV(-29187, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15197, 16), 8), SFXP(SBV(31888, 16), 8)), SFXP(SBV(18451, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44506, 16), 8), UFXP(BV(60782, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57454, 16), 8), UFXP(BV(33452, 16), 8)), UFXP(BV(25370, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49979, 16), 8), UFXP(BV(17776, 16), 8)), UFXP(BV(62544, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9985, 16), 8), SFXP(SBV(23905, 16), 8)), SFXP(SBV(13920, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18310, 16), 8), SFXP(SBV(-30287, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-6590, 16), 8), SFXP(SBV(-3977, 16), 8)), SFXP(SBV(-28696, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(9603, 16), 8), SFXP(SBV(21406, 16), 8)), SFXP(SBV(-11803, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19276, 16), 8), SFXP(SBV(-32536, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23489, 16), 8), SFXP(SBV(-28380, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53686, 16), 8), UFXP(BV(43883, 16), 8)), UFXP(BV(27705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40826, 16), 8), UFXP(BV(45031, 16), 8)), UFXP(BV(20321, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25280, 16), 8), UFXP(BV(37933, 16), 8)), UFXP(BV(63213, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18923, 16), 8), SFXP(SBV(19404, 16), 8)), SFXP(SBV(7487, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23162, 16), 8), UFXP(BV(52026, 16), 8)), UFXP(BV(9652, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20577, 16), 8), SFXP(SBV(-19783, 16), 8)), SFXP(SBV(-25176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27668, 16), 8), SFXP(SBV(-15630, 16), 8)), SFXP(SBV(22238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3970, 16), 8), UFXP(BV(57319, 16), 8)), UFXP(BV(61289, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28012, 16), 8), SFXP(SBV(-3425, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28327, 16), 8), SFXP(SBV(-6029, 16), 8)), SFXP(SBV(31180, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38134, 16), 8), UFXP(BV(26273, 16), 8)), UFXP(BV(11861, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20988, 16), 8), SFXP(SBV(-27559, 16), 8)), SFXP(SBV(16989, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(32552, 16), 8), SFXP(SBV(-28637, 16), 8)), SFXP(SBV(-4347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10583, 16), 8), UFXP(BV(20576, 16), 8)), UFXP(BV(31159, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31492, 16), 8), SFXP(SBV(-4710, 16), 8)), SFXP(SBV(29334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56793, 16), 8), UFXP(BV(43050, 16), 8)), UFXP(BV(13743, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22240, 16), 8), UFXP(BV(53163, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29361, 16), 8), SFXP(SBV(-18543, 16), 8)), SFXP(SBV(-10818, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59204, 16), 8), UFXP(BV(65101, 16), 8)), UFXP(BV(59639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59944, 16), 8), UFXP(BV(42309, 16), 8)), UFXP(BV(10981, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55615, 16), 8), UFXP(BV(42162, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(45554, 16), 8), UFXP(BV(42114, 16), 8)), UFXP(BV(22885, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18405, 16), 8), UFXP(BV(7637, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(45395, 16), 8), UFXP(BV(57255, 16), 8)), UFXP(BV(60155, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32491, 16), 8), UFXP(BV(39756, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17975, 16), 8), UFXP(BV(62331, 16), 8)), UFXP(BV(14770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46080, 16), 8), UFXP(BV(22601, 16), 8)), UFXP(BV(23479, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(55927, 16), 8), UFXP(BV(19761, 16), 8)), UFXP(BV(36166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-18002, 16), 8), SFXP(SBV(29000, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(61930, 16), 8), UFXP(BV(6951, 16), 8)), UFXP(BV(43144, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32276, 16), 8), UFXP(BV(22326, 16), 8)), UFXP(BV(9950, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24076, 16), 8), SFXP(SBV(-15424, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32274, 16), 8), UFXP(BV(39476, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(3558, 16), 8), SFXP(SBV(16408, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22480, 16), 8), UFXP(BV(15850, 16), 8)), UFXP(BV(6630, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60054, 16), 8), UFXP(BV(32896, 16), 8)), UFXP(BV(27414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47875, 16), 8), UFXP(BV(48494, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21278, 16), 8), SFXP(SBV(8223, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(29698, 16), 8), SFXP(SBV(-568, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16674, 16), 8), SFXP(SBV(25702, 16), 8)), SFXP(SBV(29893, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10706, 16), 8), SFXP(SBV(-26448, 16), 8)), SFXP(SBV(-15742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2695, 16), 8), UFXP(BV(26898, 16), 8)), UFXP(BV(29593, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(14292, 16), 8), SFXP(SBV(-2786, 16), 8)), SFXP(SBV(-24466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20918, 16), 8), SFXP(SBV(-8345, 16), 8)), SFXP(SBV(-29263, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9457, 16), 8), SFXP(SBV(23379, 16), 8)), SFXP(SBV(-13922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(15058, 16), 8), SFXP(SBV(-31564, 16), 8)), SFXP(SBV(-21596, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22286, 16), 8), SFXP(SBV(21885, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(604, 16), 8), UFXP(BV(52882, 16), 8)), UFXP(BV(53486, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(62307, 16), 8), UFXP(BV(4668, 16), 8)), UFXP(BV(57639, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22375, 16), 8), UFXP(BV(34346, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37923, 16), 8), UFXP(BV(31177, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33907, 16), 8), UFXP(BV(48745, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4655, 16), 8), UFXP(BV(3967, 16), 8)), UFXP(BV(8622, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-73, 16), 8), SFXP(SBV(29737, 16), 8)), SFXP(SBV(-8480, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1151, 16), 8), SFXP(SBV(-9519, 16), 8)), SFXP(SBV(10670, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47880, 16), 8), UFXP(BV(28091, 16), 8)), UFXP(BV(10435, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24302, 16), 8), UFXP(BV(54522, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21965, 16), 8), UFXP(BV(21564, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12196, 16), 8), SFXP(SBV(-12589, 16), 8)), SFXP(SBV(-24785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3342, 16), 8), SFXP(SBV(-17652, 16), 8)), SFXP(SBV(-20994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52051, 16), 8), UFXP(BV(14320, 16), 8)), UFXP(BV(28019, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25430, 16), 8), UFXP(BV(16183, 16), 8)), UFXP(BV(9247, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37586, 16), 8), UFXP(BV(931, 16), 8)), UFXP(BV(36655, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32442, 16), 8), SFXP(SBV(8320, 16), 8)), SFXP(SBV(-24122, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(849, 16), 8), SFXP(SBV(29197, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-18240, 16), 8), SFXP(SBV(10080, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35412, 16), 8), UFXP(BV(49557, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(25463, 16), 8), SFXP(SBV(-218, 16), 8)), SFXP(SBV(25681, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18873, 16), 8), SFXP(SBV(5725, 16), 8)), SFXP(SBV(-13148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34506, 16), 8), UFXP(BV(65057, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(14815, 16), 8), UFXP(BV(17820, 16), 8)), UFXP(BV(48222, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44951, 16), 8), UFXP(BV(15551, 16), 8)), UFXP(BV(60502, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23881, 16), 8), SFXP(SBV(-25619, 16), 8)), SFXP(SBV(-16036, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21251, 16), 8), SFXP(SBV(15320, 16), 8)), SFXP(SBV(-5931, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(45255, 16), 8), UFXP(BV(35299, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4806, 16), 8), UFXP(BV(45509, 16), 8)), UFXP(BV(24833, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8725, 16), 8), UFXP(BV(27208, 16), 8)), UFXP(BV(9800, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8669, 16), 8), SFXP(SBV(7440, 16), 8)), SFXP(SBV(16109, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27248, 16), 8), UFXP(BV(42669, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(3664, 16), 8), UFXP(BV(2269, 16), 8)), UFXP(BV(32475, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1500, 16), 8), SFXP(SBV(-18020, 16), 8)), SFXP(SBV(-16520, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37194, 16), 8), UFXP(BV(49355, 16), 8)), UFXP(BV(53375, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14745, 16), 8), UFXP(BV(35768, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27177, 16), 8), SFXP(SBV(2529, 16), 8)), SFXP(SBV(29706, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10495, 16), 8), UFXP(BV(38714, 16), 8)), UFXP(BV(49209, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53534, 16), 8), UFXP(BV(42664, 16), 8)), UFXP(BV(10870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3685, 16), 8), UFXP(BV(45499, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3280, 16), 8), SFXP(SBV(7210, 16), 8)), SFXP(SBV(3930, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9161, 16), 8), UFXP(BV(27155, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65286, 16), 8), UFXP(BV(63919, 16), 8)), UFXP(BV(1367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28430, 16), 8), SFXP(SBV(15431, 16), 8)), SFXP(SBV(12999, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6663, 16), 8), UFXP(BV(9748, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20804, 16), 8), SFXP(SBV(-8955, 16), 8)), SFXP(SBV(-11849, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19758, 16), 8), UFXP(BV(51820, 16), 8)), UFXP(BV(33474, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24337, 16), 8), UFXP(BV(12308, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43957, 16), 8), UFXP(BV(9648, 16), 8)), UFXP(BV(53605, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21239, 16), 8), SFXP(SBV(-28951, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1659, 16), 8), SFXP(SBV(7198, 16), 8)), SFXP(SBV(8857, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26693, 16), 8), SFXP(SBV(-28206, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18528, 16), 8), SFXP(SBV(-4172, 16), 8)), SFXP(SBV(22700, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6993, 16), 8), UFXP(BV(55952, 16), 8)), UFXP(BV(62945, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(7933, 16), 8), UFXP(BV(55850, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26224, 16), 8), UFXP(BV(1436, 16), 8)), UFXP(BV(24788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(24467, 16), 8), UFXP(BV(36754, 16), 8)), UFXP(BV(53249, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24748, 16), 8), SFXP(SBV(9213, 16), 8)), SFXP(SBV(-15535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(9511, 16), 8), UFXP(BV(40728, 16), 8)), UFXP(BV(34319, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12240, 16), 8), SFXP(SBV(-23180, 16), 8)), SFXP(SBV(-10940, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54272, 16), 8), UFXP(BV(49518, 16), 8)), UFXP(BV(12056, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(50892, 16), 8), UFXP(BV(49681, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10486, 16), 8), SFXP(SBV(4051, 16), 8)), SFXP(SBV(-6435, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6059, 16), 8), SFXP(SBV(-16822, 16), 8)), SFXP(SBV(-4926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44463, 16), 8), UFXP(BV(21089, 16), 8)), UFXP(BV(58334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29867, 16), 8), UFXP(BV(39163, 16), 8)), UFXP(BV(3494, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3246, 16), 8), SFXP(SBV(-22560, 16), 8)), SFXP(SBV(-19314, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47541, 16), 8), UFXP(BV(62585, 16), 8)), UFXP(BV(50492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51313, 16), 8), UFXP(BV(33463, 16), 8)), UFXP(BV(19240, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21766, 16), 8), UFXP(BV(42249, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29423, 16), 8), UFXP(BV(40362, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2961, 16), 8), SFXP(SBV(-19967, 16), 8)), SFXP(SBV(22928, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25774, 16), 8), SFXP(SBV(15739, 16), 8)), SFXP(SBV(11734, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9697, 16), 8), UFXP(BV(36619, 16), 8)), UFXP(BV(46316, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55361, 16), 8), UFXP(BV(1859, 16), 8)), UFXP(BV(57220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29456, 16), 8), SFXP(SBV(25499, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31174, 16), 8), SFXP(SBV(-26144, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14945, 16), 8), SFXP(SBV(-5433, 16), 8)), SFXP(SBV(20378, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14983, 16), 8), SFXP(SBV(30557, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21163, 16), 8), SFXP(SBV(-26192, 16), 8)), SFXP(SBV(-5029, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56737, 16), 8), UFXP(BV(5629, 16), 8)), UFXP(BV(62366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-205, 16), 8), SFXP(SBV(-15838, 16), 8)), SFXP(SBV(-16043, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2694, 16), 8), SFXP(SBV(-30650, 16), 8)), SFXP(SBV(-32192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(16505, 16), 8), SFXP(SBV(-1754, 16), 8)), SFXP(SBV(17987, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57706, 16), 8), UFXP(BV(27232, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56822, 16), 8), UFXP(BV(4949, 16), 8)), UFXP(BV(51873, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30194, 16), 8), SFXP(SBV(-13654, 16), 8)), SFXP(SBV(-16540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32355, 16), 8), SFXP(SBV(14636, 16), 8)), SFXP(SBV(-18545, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(32717, 16), 8), UFXP(BV(25246, 16), 8)), UFXP(BV(57963, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4935, 16), 8), UFXP(BV(51227, 16), 8)), UFXP(BV(19244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12429, 16), 8), SFXP(SBV(25207, 16), 8)), SFXP(SBV(27900, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31999, 16), 8), UFXP(BV(62432, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9666, 16), 8), UFXP(BV(44558, 16), 8)), UFXP(BV(44013, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58989, 16), 8), UFXP(BV(7121, 16), 8)), UFXP(BV(51868, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28731, 16), 8), UFXP(BV(4775, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64585, 16), 8), UFXP(BV(49117, 16), 8)), UFXP(BV(48166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5475, 16), 8), SFXP(SBV(-30908, 16), 8)), SFXP(SBV(29153, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14650, 16), 8), UFXP(BV(50128, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29141, 16), 8), SFXP(SBV(26753, 16), 8)), SFXP(SBV(30693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44399, 16), 8), UFXP(BV(2641, 16), 8)), UFXP(BV(64822, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43011, 16), 8), UFXP(BV(4756, 16), 8)), UFXP(BV(47767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(17137, 16), 8), UFXP(BV(21645, 16), 8)), UFXP(BV(7154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29517, 16), 8), UFXP(BV(48454, 16), 8)), UFXP(BV(12435, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13503, 16), 8), UFXP(BV(45728, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(35347, 16), 8), UFXP(BV(5233, 16), 8)), UFXP(BV(40580, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60309, 16), 8), UFXP(BV(51269, 16), 8)), UFXP(BV(19432, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25991, 16), 8), SFXP(SBV(-9108, 16), 8)), SFXP(SBV(-16883, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(62658, 16), 8), UFXP(BV(31524, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30486, 16), 8), SFXP(SBV(13237, 16), 8)), SFXP(SBV(17249, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64298, 16), 8), UFXP(BV(4149, 16), 8)), UFXP(BV(2911, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33916, 16), 8), UFXP(BV(25247, 16), 8)), UFXP(BV(59163, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15443, 16), 8), UFXP(BV(15761, 16), 8)), UFXP(BV(31204, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61353, 16), 8), UFXP(BV(30768, 16), 8)), UFXP(BV(26585, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6927, 16), 8), SFXP(SBV(-27832, 16), 8)), SFXP(SBV(-30777, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-3498, 16), 8), SFXP(SBV(8283, 16), 8)), SFXP(SBV(17892, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23520, 16), 8), UFXP(BV(65064, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14283, 16), 8), SFXP(SBV(-26351, 16), 8)), SFXP(SBV(-12068, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28811, 16), 8), SFXP(SBV(-13394, 16), 8)), SFXP(SBV(15417, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6721, 16), 8), UFXP(BV(20433, 16), 8)), UFXP(BV(51824, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16254, 16), 8), UFXP(BV(12897, 16), 8)), UFXP(BV(3357, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25980, 16), 8), SFXP(SBV(4508, 16), 8)), SFXP(SBV(-30488, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24032, 16), 8), UFXP(BV(46867, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(525, 16), 8), UFXP(BV(62912, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(53428, 16), 8), UFXP(BV(18704, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(55234, 16), 8), UFXP(BV(31542, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3195, 16), 8), UFXP(BV(1427, 16), 8)), UFXP(BV(1768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(60243, 16), 8), UFXP(BV(28023, 16), 8)), UFXP(BV(22730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22498, 16), 8), SFXP(SBV(16912, 16), 8)), SFXP(SBV(21054, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26597, 16), 8), SFXP(SBV(11919, 16), 8)), SFXP(SBV(27020, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25828, 16), 8), UFXP(BV(51139, 16), 8)), UFXP(BV(40225, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2730, 16), 8), UFXP(BV(36851, 16), 8)), UFXP(BV(39581, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(10777, 16), 8), SFXP(SBV(-24055, 16), 8)), SFXP(SBV(-29619, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(9444, 16), 8), UFXP(BV(17271, 16), 8)), UFXP(BV(47314, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56950, 16), 8), UFXP(BV(9706, 16), 8)), UFXP(BV(47244, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(1234, 16), 8), SFXP(SBV(3389, 16), 8)), SFXP(SBV(-2155, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(48545, 16), 8), UFXP(BV(13656, 16), 8)), UFXP(BV(34889, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41199, 16), 8), UFXP(BV(51755, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21296, 16), 8), SFXP(SBV(-10461, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29163, 16), 8), SFXP(SBV(13888, 16), 8)), SFXP(SBV(-15275, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4983, 16), 8), SFXP(SBV(27235, 16), 8)), SFXP(SBV(-22252, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-22741, 16), 8), SFXP(SBV(15098, 16), 8)), SFXP(SBV(-30467, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13645, 16), 8), UFXP(BV(30971, 16), 8)), UFXP(BV(44616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16386, 16), 8), UFXP(BV(30937, 16), 8)), UFXP(BV(14129, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10694, 16), 8), UFXP(BV(30961, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28854, 16), 8), SFXP(SBV(-30014, 16), 8)), SFXP(SBV(1160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10668, 16), 8), SFXP(SBV(-18158, 16), 8)), SFXP(SBV(-29754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45885, 16), 8), UFXP(BV(47690, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15120, 16), 8), SFXP(SBV(-17613, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-26122, 16), 8), SFXP(SBV(19038, 16), 8)), SFXP(SBV(23460, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-18952, 16), 8), SFXP(SBV(-17986, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16687, 16), 8), SFXP(SBV(32556, 16), 8)), SFXP(SBV(-16293, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6510, 16), 8), SFXP(SBV(15549, 16), 8)), SFXP(SBV(-9039, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20051, 16), 8), UFXP(BV(32814, 16), 8)), UFXP(BV(52773, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3818, 16), 8), SFXP(SBV(20850, 16), 8)), SFXP(SBV(17032, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(34261, 16), 8), UFXP(BV(49141, 16), 8)), UFXP(BV(23040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8902, 16), 8), UFXP(BV(56649, 16), 8)), UFXP(BV(3801, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52987, 16), 8), UFXP(BV(46886, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11627, 16), 8), SFXP(SBV(-4862, 16), 8)), SFXP(SBV(-16489, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15888, 16), 8), SFXP(SBV(-30084, 16), 8)), SFXP(SBV(-32081, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58698, 16), 8), UFXP(BV(55971, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-19101, 16), 8), SFXP(SBV(-5914, 16), 8)), SFXP(SBV(-17490, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8376, 16), 8), SFXP(SBV(30512, 16), 8)), SFXP(SBV(26648, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52094, 16), 8), UFXP(BV(13592, 16), 8)), UFXP(BV(38502, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21099, 16), 8), SFXP(SBV(25749, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-20485, 16), 8), SFXP(SBV(1379, 16), 8)), SFXP(SBV(-21864, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13536, 16), 8), UFXP(BV(7710, 16), 8)), UFXP(BV(21246, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22634, 16), 8), UFXP(BV(45843, 16), 8)), UFXP(BV(42327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47833, 16), 8), UFXP(BV(1723, 16), 8)), UFXP(BV(49556, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(65111, 16), 8), UFXP(BV(40822, 16), 8)), UFXP(BV(27974, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21791, 16), 8), UFXP(BV(27401, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1302, 16), 8), SFXP(SBV(19601, 16), 8)), SFXP(SBV(-20903, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33221, 16), 8), UFXP(BV(41187, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23037, 16), 8), SFXP(SBV(-23717, 16), 8)), SFXP(SBV(-18782, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17883, 16), 8), SFXP(SBV(-13893, 16), 8)), SFXP(SBV(12537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(602, 16), 8), UFXP(BV(31463, 16), 8)), UFXP(BV(32065, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30273, 16), 8), UFXP(BV(57529, 16), 8)), UFXP(BV(22266, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(2666, 16), 8), UFXP(BV(45525, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12187, 16), 8), UFXP(BV(52226, 16), 8)), UFXP(BV(25497, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12737, 16), 8), SFXP(SBV(-11279, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29142, 16), 8), UFXP(BV(25078, 16), 8)), UFXP(BV(54220, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4518, 16), 8), UFXP(BV(22997, 16), 8)), UFXP(BV(47057, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11795, 16), 8), SFXP(SBV(11232, 16), 8)), SFXP(SBV(-23027, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(4008, 16), 8), SFXP(SBV(-6110, 16), 8)), SFXP(SBV(-30124, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30529, 16), 8), UFXP(BV(44152, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6552, 16), 8), SFXP(SBV(30170, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(10558, 16), 8), SFXP(SBV(5022, 16), 8)), SFXP(SBV(5536, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27589, 16), 8), UFXP(BV(32854, 16), 8)), UFXP(BV(60271, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14356, 16), 8), SFXP(SBV(11827, 16), 8)), SFXP(SBV(7876, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37339, 16), 8), UFXP(BV(3272, 16), 8)), UFXP(BV(40611, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18870, 16), 8), SFXP(SBV(-17408, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8822, 16), 8), UFXP(BV(14158, 16), 8)), UFXP(BV(29146, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3772, 16), 8), SFXP(SBV(14988, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-12903, 16), 8), SFXP(SBV(31691, 16), 8)), SFXP(SBV(18788, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49428, 16), 8), UFXP(BV(44652, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(50280, 16), 8), UFXP(BV(58206, 16), 8)), UFXP(BV(28758, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(18394, 16), 8), SFXP(SBV(17184, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16729, 16), 8), UFXP(BV(13398, 16), 8)), UFXP(BV(3331, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15008, 16), 8), UFXP(BV(46176, 16), 8)), UFXP(BV(34368, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26298, 16), 8), SFXP(SBV(-21467, 16), 8)), SFXP(SBV(4831, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(14234, 16), 8), UFXP(BV(16078, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(18667, 16), 8), UFXP(BV(52969, 16), 8)), UFXP(BV(61303, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46251, 16), 8), UFXP(BV(225, 16), 8)), UFXP(BV(46476, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12797, 16), 8), UFXP(BV(49347, 16), 8)), UFXP(BV(62144, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7747, 16), 8), SFXP(SBV(27159, 16), 8)), SFXP(SBV(19412, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26759, 16), 8), SFXP(SBV(29371, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5888, 16), 8), SFXP(SBV(3199, 16), 8)), SFXP(SBV(-9087, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4216, 16), 8), SFXP(SBV(1277, 16), 8)), SFXP(SBV(2939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21594, 16), 8), UFXP(BV(46528, 16), 8)), UFXP(BV(2586, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8072, 16), 8), UFXP(BV(11639, 16), 8)), UFXP(BV(19711, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(50121, 16), 8), UFXP(BV(22938, 16), 8)), UFXP(BV(27183, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29798, 16), 8), SFXP(SBV(4823, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1874, 16), 8), SFXP(SBV(-24346, 16), 8)), SFXP(SBV(-18387, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28107, 16), 8), SFXP(SBV(25678, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-31865, 16), 8), SFXP(SBV(28388, 16), 8)), SFXP(SBV(5414, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17894, 16), 8), UFXP(BV(48345, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29517, 16), 8), SFXP(SBV(6182, 16), 8)), SFXP(SBV(23335, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45527, 16), 8), UFXP(BV(18697, 16), 8)), UFXP(BV(26830, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20413, 16), 8), SFXP(SBV(-10160, 16), 8)), SFXP(SBV(23708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47443, 16), 8), UFXP(BV(15515, 16), 8)), UFXP(BV(31928, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61485, 16), 8), UFXP(BV(27638, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28135, 16), 8), SFXP(SBV(3338, 16), 8)), SFXP(SBV(26362, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-14391, 16), 8), SFXP(SBV(28249, 16), 8)), SFXP(SBV(22896, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33550, 16), 8), UFXP(BV(13466, 16), 8)), UFXP(BV(60846, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2809, 16), 8), SFXP(SBV(19743, 16), 8)), SFXP(SBV(-16934, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17753, 16), 8), UFXP(BV(27988, 16), 8)), UFXP(BV(45741, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(5618, 16), 8), SFXP(SBV(-15327, 16), 8)), SFXP(SBV(-8675, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(20048, 16), 8), UFXP(BV(9453, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11319, 16), 8), SFXP(SBV(-22723, 16), 8)), SFXP(SBV(21654, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1527, 16), 8), SFXP(SBV(27069, 16), 8)), SFXP(SBV(28596, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35120, 16), 8), UFXP(BV(55307, 16), 8)), UFXP(BV(45349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(5557, 16), 8), UFXP(BV(34846, 16), 8)), UFXP(BV(35507, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23468, 16), 8), SFXP(SBV(-14432, 16), 8)), SFXP(SBV(-9036, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24365, 16), 8), SFXP(SBV(22301, 16), 8)), SFXP(SBV(-2064, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1644, 16), 8), UFXP(BV(6962, 16), 8)), UFXP(BV(8606, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(48332, 16), 8), UFXP(BV(64976, 16), 8)), UFXP(BV(12033, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-32746, 16), 8), SFXP(SBV(23943, 16), 8)), SFXP(SBV(17546, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45882, 16), 8), UFXP(BV(62291, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28814, 16), 8), UFXP(BV(22787, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29166, 16), 8), UFXP(BV(59634, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(2020, 16), 8), UFXP(BV(26739, 16), 8)), UFXP(BV(14379, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7924, 16), 8), SFXP(SBV(7175, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(11123, 16), 8), SFXP(SBV(2115, 16), 8)), SFXP(SBV(26360, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13296, 16), 8), SFXP(SBV(-23820, 16), 8)), SFXP(SBV(10524, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(31265, 16), 8), SFXP(SBV(28579, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9994, 16), 8), UFXP(BV(59044, 16), 8)), UFXP(BV(11262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3773, 16), 8), SFXP(SBV(32287, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16141, 16), 8), UFXP(BV(57245, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12234, 16), 8), UFXP(BV(48139, 16), 8)), UFXP(BV(60373, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46377, 16), 8), UFXP(BV(30454, 16), 8)), UFXP(BV(15923, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30034, 16), 8), UFXP(BV(19647, 16), 8)), UFXP(BV(10387, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4646, 16), 8), SFXP(SBV(-9573, 16), 8)), SFXP(SBV(-14219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33239, 16), 8), UFXP(BV(64404, 16), 8)), UFXP(BV(32107, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19711, 16), 8), UFXP(BV(32738, 16), 8)), UFXP(BV(52449, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(16744, 16), 8), SFXP(SBV(-8560, 16), 8)), SFXP(SBV(8184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27671, 16), 8), SFXP(SBV(11959, 16), 8)), SFXP(SBV(-25906, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8513, 16), 8), UFXP(BV(29726, 16), 8)), UFXP(BV(44323, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15083, 16), 8), UFXP(BV(6295, 16), 8)), UFXP(BV(8788, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12999, 16), 8), SFXP(SBV(30626, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35944, 16), 8), UFXP(BV(42588, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(35826, 16), 8), UFXP(BV(42428, 16), 8)), UFXP(BV(12718, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(827, 16), 8), UFXP(BV(22848, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26921, 16), 8), SFXP(SBV(-7466, 16), 8)), SFXP(SBV(31149, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17646, 16), 8), UFXP(BV(35011, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(412, 16), 8), UFXP(BV(48324, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14501, 16), 8), SFXP(SBV(-15927, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37306, 16), 8), UFXP(BV(45027, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-10981, 16), 8), SFXP(SBV(23572, 16), 8)), SFXP(SBV(12591, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6599, 16), 8), SFXP(SBV(28009, 16), 8)), SFXP(SBV(-21410, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33925, 16), 8), UFXP(BV(6339, 16), 8)), UFXP(BV(27586, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37557, 16), 8), UFXP(BV(16226, 16), 8)), UFXP(BV(53783, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(52630, 16), 8), UFXP(BV(2966, 16), 8)), UFXP(BV(55596, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42565, 16), 8), UFXP(BV(5861, 16), 8)), UFXP(BV(48426, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(3272, 16), 8), UFXP(BV(4869, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22971, 16), 8), UFXP(BV(3639, 16), 8)), UFXP(BV(26610, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15838, 16), 8), SFXP(SBV(-10049, 16), 8)), SFXP(SBV(-5789, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-14855, 16), 8), SFXP(SBV(-23271, 16), 8)), SFXP(SBV(27410, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19011, 16), 8), UFXP(BV(13902, 16), 8)), UFXP(BV(5109, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20684, 16), 8), SFXP(SBV(26330, 16), 8)), SFXP(SBV(5646, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10477, 16), 8), SFXP(SBV(5126, 16), 8)), SFXP(SBV(15603, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(64028, 16), 8), UFXP(BV(9530, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18062, 16), 8), UFXP(BV(39583, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61300, 16), 8), UFXP(BV(14735, 16), 8)), UFXP(BV(46565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-30257, 16), 8), SFXP(SBV(19967, 16), 8)), SFXP(SBV(-632, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2108, 16), 8), SFXP(SBV(-20710, 16), 8)), SFXP(SBV(-18602, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6943, 16), 8), UFXP(BV(43531, 16), 8)), UFXP(BV(28948, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3615, 16), 8), SFXP(SBV(-26754, 16), 8)), SFXP(SBV(15420, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58805, 16), 8), UFXP(BV(38206, 16), 8)), UFXP(BV(59899, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(43707, 16), 8), UFXP(BV(16242, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58489, 16), 8), UFXP(BV(43312, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21108, 16), 8), SFXP(SBV(25540, 16), 8)), SFXP(SBV(-4432, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-31164, 16), 8), SFXP(SBV(-9669, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(26676, 16), 8), SFXP(SBV(-25174, 16), 8)), SFXP(SBV(-1770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63019, 16), 8), UFXP(BV(14082, 16), 8)), UFXP(BV(11565, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28314, 16), 8), UFXP(BV(980, 16), 8)), UFXP(BV(29294, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15599, 16), 8), UFXP(BV(31837, 16), 8)), UFXP(BV(47436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12990, 16), 8), UFXP(BV(41864, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10223, 16), 8), SFXP(SBV(-23078, 16), 8)), SFXP(SBV(12855, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5105, 16), 8), SFXP(SBV(-10089, 16), 8)), SFXP(SBV(4984, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11258, 16), 8), SFXP(SBV(-4892, 16), 8)), SFXP(SBV(6366, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6890, 16), 8), SFXP(SBV(-30872, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-15606, 16), 8), SFXP(SBV(24066, 16), 8)), SFXP(SBV(8460, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3878, 16), 8), SFXP(SBV(24550, 16), 8)), SFXP(SBV(28428, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25521, 16), 8), SFXP(SBV(31463, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(7535, 16), 8), UFXP(BV(26189, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10856, 16), 8), SFXP(SBV(32606, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15656, 16), 8), SFXP(SBV(-8720, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21845, 16), 8), UFXP(BV(5259, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2907, 16), 8), SFXP(SBV(-26899, 16), 8)), SFXP(SBV(-29806, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(12918, 16), 8), SFXP(SBV(-24150, 16), 8)), SFXP(SBV(26552, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(46738, 16), 8), UFXP(BV(6545, 16), 8)), UFXP(BV(53283, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8292, 16), 8), SFXP(SBV(6642, 16), 8)), SFXP(SBV(1650, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27238, 16), 8), SFXP(SBV(-22490, 16), 8)), SFXP(SBV(15808, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12416, 16), 8), UFXP(BV(16384, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1531, 16), 8), UFXP(BV(49120, 16), 8)), UFXP(BV(50651, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(15530, 16), 8), SFXP(SBV(-12375, 16), 8)), SFXP(SBV(27905, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17384, 16), 8), UFXP(BV(29230, 16), 8)), UFXP(BV(46614, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32760, 16), 8), UFXP(BV(23405, 16), 8)), UFXP(BV(56165, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11871, 16), 8), SFXP(SBV(-32699, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47706, 16), 8), UFXP(BV(30927, 16), 8)), UFXP(BV(16779, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24085, 16), 8), UFXP(BV(37932, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27795, 16), 8), SFXP(SBV(11684, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20083, 16), 8), SFXP(SBV(-19470, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6944, 16), 8), SFXP(SBV(25064, 16), 8)), SFXP(SBV(32008, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-25310, 16), 8), SFXP(SBV(1118, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4744, 16), 8), UFXP(BV(50016, 16), 8)), UFXP(BV(54760, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3342, 16), 8), SFXP(SBV(5057, 16), 8)), SFXP(SBV(-1715, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(32696, 16), 8), SFXP(SBV(3234, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-3608, 16), 8), SFXP(SBV(-4926, 16), 8)), SFXP(SBV(3890, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(16394, 16), 8), UFXP(BV(13722, 16), 8)), UFXP(BV(2672, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(40020, 16), 8), UFXP(BV(19724, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(4853, 16), 8), UFXP(BV(53878, 16), 8)), UFXP(BV(58731, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44724, 16), 8), UFXP(BV(10043, 16), 8)), UFXP(BV(50607, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31372, 16), 8), UFXP(BV(53161, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48031, 16), 8), UFXP(BV(8070, 16), 8)), UFXP(BV(6775, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18473, 16), 8), UFXP(BV(46695, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(589, 16), 8), UFXP(BV(32407, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63197, 16), 8), UFXP(BV(12531, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32148, 16), 8), SFXP(SBV(-9185, 16), 8)), SFXP(SBV(-26213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2809, 16), 8), UFXP(BV(3152, 16), 8)), UFXP(BV(65193, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17735, 16), 8), SFXP(SBV(31493, 16), 8)), SFXP(SBV(13758, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42842, 16), 8), UFXP(BV(62831, 16), 8)), UFXP(BV(45547, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8326, 16), 8), UFXP(BV(7390, 16), 8)), UFXP(BV(15716, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11211, 16), 8), SFXP(SBV(-4702, 16), 8)), SFXP(SBV(-15913, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45709, 16), 8), UFXP(BV(10874, 16), 8)), UFXP(BV(41017, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44576, 16), 8), UFXP(BV(33325, 16), 8)), UFXP(BV(35547, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15211, 16), 8), UFXP(BV(60596, 16), 8)), UFXP(BV(20151, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23252, 16), 8), SFXP(SBV(-29230, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20874, 16), 8), SFXP(SBV(19117, 16), 8)), SFXP(SBV(1757, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2506, 16), 8), SFXP(SBV(-12042, 16), 8)), SFXP(SBV(-13193, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18709, 16), 8), SFXP(SBV(-22255, 16), 8)), SFXP(SBV(-3546, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7352, 16), 8), SFXP(SBV(-9675, 16), 8)), SFXP(SBV(17027, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(52088, 16), 8), UFXP(BV(28468, 16), 8)), UFXP(BV(25180, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8588, 16), 8), SFXP(SBV(-27195, 16), 8)), SFXP(SBV(-18607, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28358, 16), 8), SFXP(SBV(-3530, 16), 8)), SFXP(SBV(31888, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58964, 16), 8), UFXP(BV(17825, 16), 8)), UFXP(BV(41139, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2073, 16), 8), UFXP(BV(37144, 16), 8)), UFXP(BV(39217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(37241, 16), 8), UFXP(BV(16155, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29827, 16), 8), SFXP(SBV(-10917, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30171, 16), 8), SFXP(SBV(-11640, 16), 8)), SFXP(SBV(-4418, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18414, 16), 8), SFXP(SBV(-15050, 16), 8)), SFXP(SBV(32072, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27023, 16), 8), UFXP(BV(39330, 16), 8)), UFXP(BV(22852, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21494, 16), 8), SFXP(SBV(27434, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-27331, 16), 8), SFXP(SBV(24703, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28557, 16), 8), UFXP(BV(64693, 16), 8)), UFXP(BV(7594, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9534, 16), 8), UFXP(BV(56300, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30681, 16), 8), SFXP(SBV(7828, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39364, 16), 8), UFXP(BV(28273, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10842, 16), 8), SFXP(SBV(16564, 16), 8)), SFXP(SBV(-27406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5334, 16), 8), SFXP(SBV(-4825, 16), 8)), SFXP(SBV(-30539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41932, 16), 8), UFXP(BV(9781, 16), 8)), UFXP(BV(32151, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(29157, 16), 8), UFXP(BV(31973, 16), 8)), UFXP(BV(37070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31599, 16), 8), UFXP(BV(52079, 16), 8)), UFXP(BV(18142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6825, 16), 8), UFXP(BV(33482, 16), 8)), UFXP(BV(40307, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28249, 16), 8), UFXP(BV(40134, 16), 8)), UFXP(BV(53651, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38740, 16), 8), UFXP(BV(46513, 16), 8)), UFXP(BV(19717, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8172, 16), 8), SFXP(SBV(-18780, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15925, 16), 8), UFXP(BV(42707, 16), 8)), UFXP(BV(38754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4158, 16), 8), UFXP(BV(50762, 16), 8)), UFXP(BV(18932, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22324, 16), 8), UFXP(BV(41314, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32752, 16), 8), SFXP(SBV(533, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8111, 16), 8), UFXP(BV(29515, 16), 8)), UFXP(BV(44132, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36293, 16), 8), UFXP(BV(9485, 16), 8)), UFXP(BV(26808, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20885, 16), 8), SFXP(SBV(1042, 16), 8)), SFXP(SBV(19843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8150, 16), 8), SFXP(SBV(-9827, 16), 8)), SFXP(SBV(1677, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30741, 16), 8), UFXP(BV(19123, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20230, 16), 8), UFXP(BV(56029, 16), 8)), UFXP(BV(29737, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1167, 16), 8), UFXP(BV(44837, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(9958, 16), 8), SFXP(SBV(31722, 16), 8)), SFXP(SBV(-23856, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10104, 16), 8), SFXP(SBV(23543, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20309, 16), 8), SFXP(SBV(17249, 16), 8)), SFXP(SBV(-27978, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(12079, 16), 8), UFXP(BV(3760, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4370, 16), 8), SFXP(SBV(16058, 16), 8)), SFXP(SBV(-11971, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12379, 16), 8), UFXP(BV(48558, 16), 8)), UFXP(BV(54284, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41528, 16), 8), UFXP(BV(60766, 16), 8)), UFXP(BV(36758, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8493, 16), 8), UFXP(BV(61989, 16), 8)), UFXP(BV(12040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40491, 16), 8), UFXP(BV(61074, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-22558, 16), 8), SFXP(SBV(14530, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20489, 16), 8), UFXP(BV(14170, 16), 8)), UFXP(BV(34659, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11089, 16), 8), SFXP(SBV(-5080, 16), 8)), SFXP(SBV(-6009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(8406, 16), 8), UFXP(BV(38180, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13700, 16), 8), SFXP(SBV(-30034, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6764, 16), 8), SFXP(SBV(-20426, 16), 8)), SFXP(SBV(13662, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63788, 16), 8), UFXP(BV(39060, 16), 8)), UFXP(BV(33326, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4671, 16), 8), SFXP(SBV(-1204, 16), 8)), SFXP(SBV(-5875, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31999, 16), 8), UFXP(BV(27691, 16), 8)), UFXP(BV(59690, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15493, 16), 8), SFXP(SBV(29784, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38930, 16), 8), UFXP(BV(8435, 16), 8)), UFXP(BV(37530, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19121, 16), 8), UFXP(BV(26886, 16), 8)), UFXP(BV(42074, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6282, 16), 8), SFXP(SBV(12842, 16), 8)), SFXP(SBV(-19124, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57778, 16), 8), UFXP(BV(19834, 16), 8)), UFXP(BV(37944, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30080, 16), 8), SFXP(SBV(32061, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(16666, 16), 8), UFXP(BV(1714, 16), 8)), UFXP(BV(14952, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50168, 16), 8), UFXP(BV(37308, 16), 8)), UFXP(BV(12860, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22863, 16), 8), UFXP(BV(784, 16), 8)), UFXP(BV(23647, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-28052, 16), 8), SFXP(SBV(-20071, 16), 8)), SFXP(SBV(17413, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63638, 16), 8), UFXP(BV(28776, 16), 8)), UFXP(BV(26878, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23373, 16), 8), SFXP(SBV(-2216, 16), 8)), SFXP(SBV(-25589, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28878, 16), 8), UFXP(BV(33768, 16), 8)), UFXP(BV(62646, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3607, 16), 8), SFXP(SBV(28819, 16), 8)), SFXP(SBV(25212, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(23756, 16), 8), SFXP(SBV(22779, 16), 8)), SFXP(SBV(16668, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21031, 16), 8), UFXP(BV(42383, 16), 8)), UFXP(BV(63414, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22951, 16), 8), SFXP(SBV(11214, 16), 8)), SFXP(SBV(-31371, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(10689, 16), 8), SFXP(SBV(11485, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11891, 16), 8), UFXP(BV(50990, 16), 8)), UFXP(BV(9149, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59582, 16), 8), UFXP(BV(22619, 16), 8)), UFXP(BV(36963, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1672, 16), 8), SFXP(SBV(-23391, 16), 8)), SFXP(SBV(-21701, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57818, 16), 8), UFXP(BV(45792, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17956, 16), 8), UFXP(BV(5111, 16), 8)), UFXP(BV(12845, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(58754, 16), 8), UFXP(BV(7775, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5182, 16), 8), UFXP(BV(18314, 16), 8)), UFXP(BV(52404, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25534, 16), 8), SFXP(SBV(2887, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7028, 16), 8), SFXP(SBV(-5965, 16), 8)), SFXP(SBV(-1063, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9769, 16), 8), SFXP(SBV(-1857, 16), 8)), SFXP(SBV(-7912, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(19098, 16), 8), SFXP(SBV(4977, 16), 8)), SFXP(SBV(-21924, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13150, 16), 8), UFXP(BV(11803, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-12605, 16), 8), SFXP(SBV(14238, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(24939, 16), 8), UFXP(BV(3923, 16), 8)), UFXP(BV(28862, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40403, 16), 8), UFXP(BV(14456, 16), 8)), UFXP(BV(54859, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39063, 16), 8), UFXP(BV(58894, 16), 8)), UFXP(BV(32421, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-9394, 16), 8), SFXP(SBV(6147, 16), 8)), SFXP(SBV(-15541, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23355, 16), 8), UFXP(BV(51677, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24231, 16), 8), SFXP(SBV(9985, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30264, 16), 8), UFXP(BV(23840, 16), 8)), UFXP(BV(6424, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26036, 16), 8), SFXP(SBV(12436, 16), 8)), SFXP(SBV(27064, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40791, 16), 8), UFXP(BV(17778, 16), 8)), UFXP(BV(23013, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36776, 16), 8), UFXP(BV(13284, 16), 8)), UFXP(BV(23492, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65363, 16), 8), UFXP(BV(48268, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(30261, 16), 8), UFXP(BV(41430, 16), 8)), UFXP(BV(6155, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13092, 16), 8), SFXP(SBV(-19685, 16), 8)), SFXP(SBV(6593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(47036, 16), 8), UFXP(BV(24794, 16), 8)), UFXP(BV(22242, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-865, 16), 8), SFXP(SBV(-20839, 16), 8)), SFXP(SBV(19974, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35133, 16), 8), UFXP(BV(54100, 16), 8)), UFXP(BV(46569, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(32375, 16), 8), UFXP(BV(49307, 16), 8)), UFXP(BV(9683, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20545, 16), 8), SFXP(SBV(-22132, 16), 8)), SFXP(SBV(22859, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(26766, 16), 8), SFXP(SBV(10669, 16), 8)), SFXP(SBV(1382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7728, 16), 8), UFXP(BV(9529, 16), 8)), UFXP(BV(63735, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1310, 16), 8), UFXP(BV(57301, 16), 8)), UFXP(BV(58611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28859, 16), 8), UFXP(BV(32614, 16), 8)), UFXP(BV(61473, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34703, 16), 8), UFXP(BV(11990, 16), 8)), UFXP(BV(22713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57025, 16), 8), UFXP(BV(627, 16), 8)), UFXP(BV(57652, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40488, 16), 8), UFXP(BV(45716, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4253, 16), 8), SFXP(SBV(-19024, 16), 8)), SFXP(SBV(-11629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13321, 16), 8), UFXP(BV(19153, 16), 8)), UFXP(BV(32474, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14176, 16), 8), UFXP(BV(12156, 16), 8)), UFXP(BV(17779, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36043, 16), 8), UFXP(BV(10632, 16), 8)), UFXP(BV(25411, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56307, 16), 8), UFXP(BV(18678, 16), 8)), UFXP(BV(9449, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2677, 16), 8), UFXP(BV(11386, 16), 8)), UFXP(BV(14063, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39409, 16), 8), UFXP(BV(38443, 16), 8)), UFXP(BV(12316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9481, 16), 8), SFXP(SBV(-16155, 16), 8)), SFXP(SBV(6674, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(58020, 16), 8), UFXP(BV(53049, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-23525, 16), 8), SFXP(SBV(23208, 16), 8)), SFXP(SBV(-317, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6948, 16), 8), SFXP(SBV(-32247, 16), 8)), SFXP(SBV(-26341, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50029, 16), 8), UFXP(BV(31516, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31028, 16), 8), UFXP(BV(22978, 16), 8)), UFXP(BV(54006, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62252, 16), 8), UFXP(BV(1352, 16), 8)), UFXP(BV(1088, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40662, 16), 8), UFXP(BV(17285, 16), 8)), UFXP(BV(58504, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23945, 16), 8), SFXP(SBV(7194, 16), 8)), SFXP(SBV(-31139, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5530, 16), 8), SFXP(SBV(-12302, 16), 8)), SFXP(SBV(-17832, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32411, 16), 8), SFXP(SBV(17021, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(15101, 16), 8), SFXP(SBV(-25394, 16), 8)), SFXP(SBV(9379, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25264, 16), 8), UFXP(BV(34533, 16), 8)), UFXP(BV(59797, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34169, 16), 8), UFXP(BV(4852, 16), 8)), UFXP(BV(39021, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50693, 16), 8), UFXP(BV(10040, 16), 8)), UFXP(BV(60733, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7008, 16), 8), SFXP(SBV(-20234, 16), 8)), SFXP(SBV(13226, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(59297, 16), 8), UFXP(BV(57459, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20071, 16), 8), SFXP(SBV(-11544, 16), 8)), SFXP(SBV(-8527, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59349, 16), 8), UFXP(BV(6912, 16), 8)), UFXP(BV(52437, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56342, 16), 8), UFXP(BV(23695, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17902, 16), 8), SFXP(SBV(25180, 16), 8)), SFXP(SBV(-7278, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4484, 16), 8), UFXP(BV(50635, 16), 8)), UFXP(BV(55119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(1355, 16), 8), UFXP(BV(44323, 16), 8)), UFXP(BV(37992, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(21781, 16), 8), UFXP(BV(44655, 16), 8)), UFXP(BV(63787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8952, 16), 8), UFXP(BV(18159, 16), 8)), UFXP(BV(45173, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-32284, 16), 8), SFXP(SBV(18571, 16), 8)), SFXP(SBV(-13713, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33458, 16), 8), UFXP(BV(2244, 16), 8)), UFXP(BV(31214, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52980, 16), 8), UFXP(BV(8443, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(25562, 16), 8), UFXP(BV(64979, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(242, 16), 8), UFXP(BV(45502, 16), 8)), UFXP(BV(45744, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-17258, 16), 8), SFXP(SBV(21000, 16), 8)), SFXP(SBV(3742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42325, 16), 8), UFXP(BV(2121, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21427, 16), 8), UFXP(BV(47145, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6205, 16), 8), UFXP(BV(12770, 16), 8)), UFXP(BV(58971, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-9140, 16), 8), SFXP(SBV(-27167, 16), 8)), SFXP(SBV(-13094, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51346, 16), 8), UFXP(BV(62256, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19480, 16), 8), SFXP(SBV(9954, 16), 8)), SFXP(SBV(-28995, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(20536, 16), 8), SFXP(SBV(31262, 16), 8)), SFXP(SBV(17431, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(1559, 16), 8), SFXP(SBV(947, 16), 8)), SFXP(SBV(2506, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-3587, 16), 8), SFXP(SBV(-17750, 16), 8)), SFXP(SBV(-13435, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10952, 16), 8), UFXP(BV(7917, 16), 8)), UFXP(BV(18869, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(64861, 16), 8), UFXP(BV(29887, 16), 8)), UFXP(BV(35629, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(17552, 16), 8), SFXP(SBV(-10629, 16), 8)), SFXP(SBV(6923, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(61908, 16), 8), UFXP(BV(15470, 16), 8)), UFXP(BV(11842, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4754, 16), 8), SFXP(SBV(-12579, 16), 8)), SFXP(SBV(7825, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-23301, 16), 8), SFXP(SBV(-4904, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7370, 16), 8), UFXP(BV(47605, 16), 8)), UFXP(BV(54975, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48337, 16), 8), UFXP(BV(48652, 16), 8)), UFXP(BV(31453, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18853, 16), 8), SFXP(SBV(-27658, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19524, 16), 8), UFXP(BV(40262, 16), 8)), UFXP(BV(44798, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13260, 16), 8), UFXP(BV(46467, 16), 8)), UFXP(BV(32329, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14069, 16), 8), UFXP(BV(38071, 16), 8)), UFXP(BV(52140, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2721, 16), 8), SFXP(SBV(17995, 16), 8)), SFXP(SBV(-15274, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(8580, 16), 8), SFXP(SBV(-17516, 16), 8)), SFXP(SBV(2765, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15563, 16), 8), SFXP(SBV(29411, 16), 8)), SFXP(SBV(13848, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22105, 16), 8), SFXP(SBV(18650, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-27993, 16), 8), SFXP(SBV(-31274, 16), 8)), SFXP(SBV(11867, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41818, 16), 8), UFXP(BV(45587, 16), 8)), UFXP(BV(61767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18855, 16), 8), SFXP(SBV(14318, 16), 8)), SFXP(SBV(-4537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(5713, 16), 8), UFXP(BV(36393, 16), 8)), UFXP(BV(42106, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50882, 16), 8), UFXP(BV(51972, 16), 8)), UFXP(BV(37318, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29097, 16), 8), UFXP(BV(60669, 16), 8)), UFXP(BV(24230, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(52995, 16), 8), UFXP(BV(28661, 16), 8)), UFXP(BV(24334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(8646, 16), 8), UFXP(BV(54677, 16), 8)), UFXP(BV(63323, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(19350, 16), 8), UFXP(BV(60167, 16), 8)), UFXP(BV(25796, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26163, 16), 8), UFXP(BV(28134, 16), 8)), UFXP(BV(63565, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9628, 16), 8), UFXP(BV(25739, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-8598, 16), 8), SFXP(SBV(-20803, 16), 8)), SFXP(SBV(-22208, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49144, 16), 8), UFXP(BV(18962, 16), 8)), UFXP(BV(2570, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(34322, 16), 8), UFXP(BV(28612, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26364, 16), 8), UFXP(BV(11676, 16), 8)), UFXP(BV(38040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(25956, 16), 8), UFXP(BV(1652, 16), 8)), UFXP(BV(27608, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-711, 16), 8), SFXP(SBV(-11679, 16), 8)), SFXP(SBV(32436, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55313, 16), 8), UFXP(BV(12176, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(17755, 16), 8), SFXP(SBV(-26214, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65274, 16), 8), UFXP(BV(21993, 16), 8)), UFXP(BV(43281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1792, 16), 8), SFXP(SBV(-975, 16), 8)), SFXP(SBV(-6825, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-5109, 16), 8), SFXP(SBV(-29081, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9319, 16), 8), SFXP(SBV(22465, 16), 8)), SFXP(SBV(31347, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(6330, 16), 8), UFXP(BV(35444, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21528, 16), 8), SFXP(SBV(-27388, 16), 8)), SFXP(SBV(16620, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-787, 16), 8), SFXP(SBV(27953, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-24470, 16), 8), SFXP(SBV(29545, 16), 8)), SFXP(SBV(-6039, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11625, 16), 8), UFXP(BV(18641, 16), 8)), UFXP(BV(30266, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29625, 16), 8), SFXP(SBV(26279, 16), 8)), SFXP(SBV(3346, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(8884, 16), 8), SFXP(SBV(-23516, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13358, 16), 8), UFXP(BV(7407, 16), 8)), UFXP(BV(5951, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(25069, 16), 8), SFXP(SBV(162, 16), 8)), SFXP(SBV(15863, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49798, 16), 8), UFXP(BV(14166, 16), 8)), UFXP(BV(3108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61050, 16), 8), UFXP(BV(65399, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51291, 16), 8), UFXP(BV(48872, 16), 8)), UFXP(BV(2419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63956, 16), 8), UFXP(BV(22987, 16), 8)), UFXP(BV(41167, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9194, 16), 8), SFXP(SBV(-21892, 16), 8)), SFXP(SBV(12698, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62496, 16), 8), UFXP(BV(12652, 16), 8)), UFXP(BV(8478, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9573, 16), 8), SFXP(SBV(-18135, 16), 8)), SFXP(SBV(27708, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(21442, 16), 8), UFXP(BV(21862, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(55473, 16), 8), UFXP(BV(63368, 16), 8)), UFXP(BV(34277, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15075, 16), 8), UFXP(BV(24626, 16), 8)), UFXP(BV(55985, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6052, 16), 8), SFXP(SBV(714, 16), 8)), SFXP(SBV(5338, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23457, 16), 8), SFXP(SBV(8921, 16), 8)), SFXP(SBV(14536, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(13960, 16), 8), UFXP(BV(62730, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20448, 16), 8), SFXP(SBV(16832, 16), 8)), SFXP(SBV(-28256, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3144, 16), 8), UFXP(BV(28637, 16), 8)), UFXP(BV(31781, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2999, 16), 8), SFXP(SBV(-1132, 16), 8)), SFXP(SBV(-4131, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51688, 16), 8), UFXP(BV(40984, 16), 8)), UFXP(BV(17389, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(54612, 16), 8), UFXP(BV(59790, 16), 8)), UFXP(BV(48866, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8888, 16), 8), SFXP(SBV(-8264, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(36943, 16), 8), UFXP(BV(24780, 16), 8)), UFXP(BV(12163, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31881, 16), 8), UFXP(BV(13266, 16), 8)), UFXP(BV(18615, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59154, 16), 8), UFXP(BV(6464, 16), 8)), UFXP(BV(82, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(45067, 16), 8), UFXP(BV(43622, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50772, 16), 8), UFXP(BV(55767, 16), 8)), UFXP(BV(50117, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(29097, 16), 8), UFXP(BV(32616, 16), 8)), UFXP(BV(61713, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9848, 16), 8), SFXP(SBV(-10493, 16), 8)), SFXP(SBV(-20341, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(19171, 16), 8), SFXP(SBV(30343, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6127, 16), 8), UFXP(BV(59259, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(21880, 16), 8), SFXP(SBV(6396, 16), 8)), SFXP(SBV(15484, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(28818, 16), 8), SFXP(SBV(-21299, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4909, 16), 8), SFXP(SBV(-24010, 16), 8)), SFXP(SBV(1658, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6281, 16), 8), UFXP(BV(36877, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(15126, 16), 8), UFXP(BV(33505, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2126, 16), 8), UFXP(BV(3439, 16), 8)), UFXP(BV(28560, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21964, 16), 8), SFXP(SBV(-31251, 16), 8)), SFXP(SBV(9287, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-22444, 16), 8), SFXP(SBV(4954, 16), 8)), SFXP(SBV(-17490, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19576, 16), 8), SFXP(SBV(27685, 16), 8)), SFXP(SBV(-18275, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38758, 16), 8), UFXP(BV(5700, 16), 8)), UFXP(BV(11004, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8280, 16), 8), UFXP(BV(22417, 16), 8)), UFXP(BV(4154, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11326, 16), 8), SFXP(SBV(-16599, 16), 8)), SFXP(SBV(13481, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22162, 16), 8), UFXP(BV(15355, 16), 8)), UFXP(BV(6807, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22425, 16), 8), SFXP(SBV(12816, 16), 8)), SFXP(SBV(9609, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(44616, 16), 8), UFXP(BV(10439, 16), 8)), UFXP(BV(49849, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54416, 16), 8), UFXP(BV(27876, 16), 8)), UFXP(BV(26540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29310, 16), 8), SFXP(SBV(11152, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24808, 16), 8), UFXP(BV(29184, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27453, 16), 8), SFXP(SBV(-26813, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18902, 16), 8), UFXP(BV(56741, 16), 8)), UFXP(BV(27697, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43573, 16), 8), UFXP(BV(39677, 16), 8)), UFXP(BV(17714, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8897, 16), 8), SFXP(SBV(-503, 16), 8)), SFXP(SBV(-8394, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(48645, 16), 8), UFXP(BV(3477, 16), 8)), UFXP(BV(5338, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(40913, 16), 8), UFXP(BV(35471, 16), 8)), UFXP(BV(32752, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(3950, 16), 8), UFXP(BV(26234, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40456, 16), 8), UFXP(BV(33544, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16408, 16), 8), UFXP(BV(61900, 16), 8)), UFXP(BV(12772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1361, 16), 8), SFXP(SBV(6562, 16), 8)), SFXP(SBV(-5201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25446, 16), 8), SFXP(SBV(-9877, 16), 8)), SFXP(SBV(15569, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(32442, 16), 8), SFXP(SBV(20234, 16), 8)), SFXP(SBV(-12860, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18980, 16), 8), SFXP(SBV(-4930, 16), 8)), SFXP(SBV(-23910, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8626, 16), 8), UFXP(BV(28512, 16), 8)), UFXP(BV(43217, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(46513, 16), 8), UFXP(BV(43972, 16), 8)), UFXP(BV(2541, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11320, 16), 8), SFXP(SBV(23136, 16), 8)), SFXP(SBV(31080, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(458, 16), 8), UFXP(BV(63894, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19925, 16), 8), SFXP(SBV(-556, 16), 8)), SFXP(SBV(-22261, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21679, 16), 8), UFXP(BV(63186, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-12127, 16), 8), SFXP(SBV(16956, 16), 8)), SFXP(SBV(4829, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(52863, 16), 8), UFXP(BV(38432, 16), 8)), UFXP(BV(25759, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15325, 16), 8), SFXP(SBV(-6609, 16), 8)), SFXP(SBV(8716, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22941, 16), 8), SFXP(SBV(27432, 16), 8)), SFXP(SBV(-4491, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(47576, 16), 8), UFXP(BV(36544, 16), 8)), UFXP(BV(41266, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17314, 16), 8), UFXP(BV(52870, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4904, 16), 8), SFXP(SBV(-2358, 16), 8)), SFXP(SBV(2546, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7111, 16), 8), SFXP(SBV(-3301, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49664, 16), 8), UFXP(BV(49703, 16), 8)), UFXP(BV(33831, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37166, 16), 8), UFXP(BV(7067, 16), 8)), UFXP(BV(30099, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8943, 16), 8), SFXP(SBV(-4724, 16), 8)), SFXP(SBV(-4219, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(28155, 16), 8), UFXP(BV(26666, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(30012, 16), 8), UFXP(BV(16873, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(45546, 16), 8), UFXP(BV(13612, 16), 8)), UFXP(BV(31934, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20320, 16), 8), SFXP(SBV(23126, 16), 8)), SFXP(SBV(2806, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52201, 16), 8), UFXP(BV(42131, 16), 8)), UFXP(BV(10070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(29725, 16), 8), UFXP(BV(10434, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-6144, 16), 8), SFXP(SBV(14074, 16), 8)), SFXP(SBV(-10096, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50905, 16), 8), UFXP(BV(11331, 16), 8)), UFXP(BV(62236, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(5371, 16), 8), UFXP(BV(7140, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-4085, 16), 8), SFXP(SBV(-17827, 16), 8)), SFXP(SBV(13742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28356, 16), 8), UFXP(BV(37439, 16), 8)), UFXP(BV(259, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(28885, 16), 8), UFXP(BV(64376, 16), 8)), UFXP(BV(30045, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-21105, 16), 8), SFXP(SBV(31977, 16), 8)), SFXP(SBV(10872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65091, 16), 8), UFXP(BV(3155, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25371, 16), 8), UFXP(BV(48376, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24705, 16), 8), UFXP(BV(34573, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(14872, 16), 8), SFXP(SBV(-20596, 16), 8)), SFXP(SBV(-30068, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1744, 16), 8), SFXP(SBV(-2670, 16), 8)), SFXP(SBV(926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8682, 16), 8), UFXP(BV(9702, 16), 8)), UFXP(BV(1355, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32033, 16), 8), SFXP(SBV(6882, 16), 8)), SFXP(SBV(-9170, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-24610, 16), 8), SFXP(SBV(4437, 16), 8)), SFXP(SBV(-29047, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51746, 16), 8), UFXP(BV(5181, 16), 8)), UFXP(BV(64211, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(57933, 16), 8), UFXP(BV(22135, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-1465, 16), 8), SFXP(SBV(-31371, 16), 8)), SFXP(SBV(-17082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27695, 16), 8), UFXP(BV(3833, 16), 8)), UFXP(BV(31528, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19244, 16), 8), UFXP(BV(36119, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7256, 16), 8), SFXP(SBV(11767, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3186, 16), 8), SFXP(SBV(-14431, 16), 8)), SFXP(SBV(-17617, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24005, 16), 8), SFXP(SBV(-20073, 16), 8)), SFXP(SBV(18309, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13276, 16), 8), UFXP(BV(19325, 16), 8)), UFXP(BV(32601, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-32650, 16), 8), SFXP(SBV(9796, 16), 8)), SFXP(SBV(-4188, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(63448, 16), 8), UFXP(BV(24280, 16), 8)), UFXP(BV(53870, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15600, 16), 8), UFXP(BV(53222, 16), 8)), UFXP(BV(31951, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8966, 16), 8), SFXP(SBV(-8367, 16), 8)), SFXP(SBV(-17333, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47468, 16), 8), UFXP(BV(20777, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21221, 16), 8), UFXP(BV(11066, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12163, 16), 8), UFXP(BV(12242, 16), 8)), UFXP(BV(65457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59361, 16), 8), UFXP(BV(61552, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-18298, 16), 8), SFXP(SBV(-28669, 16), 8)), SFXP(SBV(17545, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1956, 16), 8), SFXP(SBV(130, 16), 8)), SFXP(SBV(-1826, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17126, 16), 8), SFXP(SBV(-4273, 16), 8)), SFXP(SBV(21399, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(4403, 16), 8), SFXP(SBV(24470, 16), 8)), SFXP(SBV(-20067, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(30664, 16), 8), SFXP(SBV(-29866, 16), 8)), SFXP(SBV(798, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(49971, 16), 8), UFXP(BV(1150, 16), 8)), UFXP(BV(27872, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(53491, 16), 8), UFXP(BV(36561, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21752, 16), 8), SFXP(SBV(19222, 16), 8)), SFXP(SBV(5131, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(2697, 16), 8), UFXP(BV(48980, 16), 8)), UFXP(BV(19253, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(6916, 16), 8), SFXP(SBV(31925, 16), 8)), SFXP(SBV(10506, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44093, 16), 8), UFXP(BV(32367, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9981, 16), 8), SFXP(SBV(-27067, 16), 8)), SFXP(SBV(-17086, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(35264, 16), 8), UFXP(BV(7424, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20682, 16), 8), SFXP(SBV(-30099, 16), 8)), SFXP(SBV(14755, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16172, 16), 8), SFXP(SBV(-5073, 16), 8)), SFXP(SBV(-21245, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43873, 16), 8), UFXP(BV(9323, 16), 8)), UFXP(BV(53196, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(10578, 16), 8), UFXP(BV(45881, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(9, 16), 8), SFXP(SBV(-29866, 16), 8)), SFXP(SBV(29875, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(63658, 16), 8), UFXP(BV(51626, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8117, 16), 8), UFXP(BV(27675, 16), 8)), UFXP(BV(35792, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(25176, 16), 8), UFXP(BV(42420, 16), 8)), UFXP(BV(42974, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(9224, 16), 8), SFXP(SBV(-27658, 16), 8)), SFXP(SBV(-13512, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(23405, 16), 8), SFXP(SBV(-17171, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(35792, 16), 8), UFXP(BV(23904, 16), 8)), UFXP(BV(65278, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(42887, 16), 8), UFXP(BV(22731, 16), 8)), UFXP(BV(6977, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9165, 16), 8), UFXP(BV(2450, 16), 8)), UFXP(BV(6715, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(16450, 16), 8), UFXP(BV(52070, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20741, 16), 8), UFXP(BV(24689, 16), 8)), UFXP(BV(61588, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27636, 16), 8), UFXP(BV(40617, 16), 8)), UFXP(BV(59357, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21224, 16), 8), UFXP(BV(33834, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4396, 16), 8), UFXP(BV(1340, 16), 8)), UFXP(BV(3056, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(24037, 16), 8), UFXP(BV(61785, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(22893, 16), 8), SFXP(SBV(576, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-11119, 16), 8), SFXP(SBV(23949, 16), 8)), SFXP(SBV(12830, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6431, 16), 8), SFXP(SBV(-5783, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9333, 16), 8), UFXP(BV(43206, 16), 8)), UFXP(BV(52539, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(38277, 16), 8), UFXP(BV(19092, 16), 8)), UFXP(BV(57369, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39804, 16), 8), UFXP(BV(30806, 16), 8)), UFXP(BV(5724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5330, 16), 8), SFXP(SBV(-19825, 16), 8)), SFXP(SBV(14495, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-587, 16), 8), SFXP(SBV(-12952, 16), 8)), SFXP(SBV(12365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1238, 16), 8), SFXP(SBV(6100, 16), 8)), SFXP(SBV(-7338, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-3156, 16), 8), SFXP(SBV(21705, 16), 8)), SFXP(SBV(18549, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25298, 16), 8), SFXP(SBV(21900, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(22988, 16), 8), UFXP(BV(31064, 16), 8)), UFXP(BV(36938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22058, 16), 8), SFXP(SBV(16666, 16), 8)), SFXP(SBV(-5392, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8786, 16), 8), UFXP(BV(19097, 16), 8)), UFXP(BV(56, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(38869, 16), 8), UFXP(BV(32429, 16), 8)), UFXP(BV(6440, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(14486, 16), 8), SFXP(SBV(11716, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(40825, 16), 8), UFXP(BV(17432, 16), 8)), UFXP(BV(27415, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21318, 16), 8), UFXP(BV(60510, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(484, 16), 8), SFXP(SBV(-5215, 16), 8)), SFXP(SBV(-4731, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45206, 16), 8), UFXP(BV(6864, 16), 8)), UFXP(BV(52070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42461, 16), 8), UFXP(BV(53802, 16), 8)), UFXP(BV(54195, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2702, 16), 8), UFXP(BV(20428, 16), 8)), UFXP(BV(23130, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33770, 16), 8), UFXP(BV(23063, 16), 8)), UFXP(BV(27678, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6261, 16), 8), SFXP(SBV(7202, 16), 8)), SFXP(SBV(13463, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-19292, 16), 8), SFXP(SBV(25580, 16), 8)), SFXP(SBV(6288, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(57556, 16), 8), UFXP(BV(17292, 16), 8)), UFXP(BV(9312, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28522, 16), 8), SFXP(SBV(8350, 16), 8)), SFXP(SBV(-28664, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(60132, 16), 8), UFXP(BV(42804, 16), 8)), UFXP(BV(17328, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(52980, 16), 8), UFXP(BV(5908, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17389, 16), 8), SFXP(SBV(26690, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1742, 16), 8), UFXP(BV(27745, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(11230, 16), 8), SFXP(SBV(-3885, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(65533, 16), 8), UFXP(BV(56649, 16), 8)), UFXP(BV(8884, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(12776, 16), 8), UFXP(BV(38177, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(2430, 16), 8), SFXP(SBV(-5179, 16), 8)), SFXP(SBV(7609, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11816, 16), 8), SFXP(SBV(7192, 16), 8)), SFXP(SBV(-19008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23087, 16), 8), UFXP(BV(8450, 16), 8)), UFXP(BV(31537, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(26683, 16), 8), SFXP(SBV(-22442, 16), 8)), SFXP(SBV(-16411, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19836, 16), 8), SFXP(SBV(-4457, 16), 8)), SFXP(SBV(24293, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19932, 16), 8), UFXP(BV(63078, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13881, 16), 8), SFXP(SBV(-25507, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(370, 16), 8), UFXP(BV(20121, 16), 8)), UFXP(BV(29082, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(13337, 16), 8), UFXP(BV(13878, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27414, 16), 8), UFXP(BV(46987, 16), 8)), UFXP(BV(8865, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13439, 16), 8), SFXP(SBV(25610, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19465, 16), 8), UFXP(BV(53832, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55117, 16), 8), UFXP(BV(2299, 16), 8)), UFXP(BV(57416, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34993, 16), 8), UFXP(BV(12015, 16), 8)), UFXP(BV(47008, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(53520, 16), 8), UFXP(BV(27150, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-31944, 16), 8), SFXP(SBV(2210, 16), 8)), SFXP(SBV(31382, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-28559, 16), 8), SFXP(SBV(28073, 16), 8)), SFXP(SBV(13944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46958, 16), 8), UFXP(BV(65184, 16), 8)), UFXP(BV(29129, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37984, 16), 8), UFXP(BV(19074, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27072, 16), 8), UFXP(BV(43993, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26611, 16), 8), UFXP(BV(47469, 16), 8)), UFXP(BV(44678, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(13099, 16), 8), SFXP(SBV(25817, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2039, 16), 8), SFXP(SBV(1674, 16), 8)), SFXP(SBV(365, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23712, 16), 8), SFXP(SBV(-23582, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(44525, 16), 8), UFXP(BV(63934, 16), 8)), UFXP(BV(44187, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(20704, 16), 8), SFXP(SBV(-13384, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4120, 16), 8), SFXP(SBV(9492, 16), 8)), SFXP(SBV(-13612, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-7651, 16), 8), SFXP(SBV(-18588, 16), 8)), SFXP(SBV(31246, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23519, 16), 8), SFXP(SBV(-4842, 16), 8)), SFXP(SBV(18677, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(23283, 16), 8), UFXP(BV(24813, 16), 8)), UFXP(BV(48096, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44038, 16), 8), UFXP(BV(48231, 16), 8)), UFXP(BV(61343, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31045, 16), 8), UFXP(BV(29403, 16), 8)), UFXP(BV(26745, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32266, 16), 8), SFXP(SBV(25421, 16), 8)), SFXP(SBV(7224, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16653, 16), 8), SFXP(SBV(-12460, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28770, 16), 8), SFXP(SBV(-18250, 16), 8)), SFXP(SBV(-10520, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(19935, 16), 8), UFXP(BV(35451, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(36025, 16), 8), UFXP(BV(64640, 16), 8)), UFXP(BV(36921, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30492, 16), 8), SFXP(SBV(15822, 16), 8)), SFXP(SBV(-19222, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24754, 16), 8), SFXP(SBV(-20186, 16), 8)), SFXP(SBV(-20596, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32031, 16), 8), UFXP(BV(55903, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36446, 16), 8), UFXP(BV(62266, 16), 8)), UFXP(BV(17275, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10655, 16), 8), SFXP(SBV(19267, 16), 8)), SFXP(SBV(-29922, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31672, 16), 8), SFXP(SBV(-32150, 16), 8)), SFXP(SBV(20138, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(20295, 16), 8), UFXP(BV(13540, 16), 8)), UFXP(BV(6755, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(15895, 16), 8), SFXP(SBV(-7544, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46475, 16), 8), UFXP(BV(36363, 16), 8)), UFXP(BV(10112, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-9876, 16), 8), SFXP(SBV(-5935, 16), 8)), SFXP(SBV(-3941, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4848, 16), 8), UFXP(BV(62281, 16), 8)), UFXP(BV(1593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1729, 16), 8), UFXP(BV(21815, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23942, 16), 8), SFXP(SBV(20270, 16), 8)), SFXP(SBV(-21324, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(49336, 16), 8), UFXP(BV(58752, 16), 8)), UFXP(BV(50420, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22549, 16), 8), SFXP(SBV(-13484, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(33183, 16), 8), UFXP(BV(6478, 16), 8)), UFXP(BV(26705, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3023, 16), 8), UFXP(BV(45115, 16), 8)), UFXP(BV(48138, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3013, 16), 8), UFXP(BV(33365, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55190, 16), 8), UFXP(BV(18097, 16), 8)), UFXP(BV(7751, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(39804, 16), 8), UFXP(BV(2198, 16), 8)), UFXP(BV(14074, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8178, 16), 8), SFXP(SBV(-31789, 16), 8)), SFXP(SBV(23611, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26526, 16), 8), SFXP(SBV(-8276, 16), 8)), SFXP(SBV(-18250, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30549, 16), 8), SFXP(SBV(-2552, 16), 8)), SFXP(SBV(32435, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(788, 16), 8), UFXP(BV(5930, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(30858, 16), 8), UFXP(BV(56977, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(22091, 16), 8), SFXP(SBV(-13714, 16), 8)), SFXP(SBV(-3773, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(10388, 16), 8), UFXP(BV(21350, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(45938, 16), 8), UFXP(BV(36916, 16), 8)), UFXP(BV(17318, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(57939, 16), 8), UFXP(BV(13307, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(24922, 16), 8), UFXP(BV(10961, 16), 8)), UFXP(BV(18495, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15365, 16), 8), SFXP(SBV(-7660, 16), 8)), SFXP(SBV(-23025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(31201, 16), 8), UFXP(BV(50115, 16), 8)), UFXP(BV(13114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(23777, 16), 8), SFXP(SBV(5557, 16), 8)), SFXP(SBV(29334, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-26333, 16), 8), SFXP(SBV(4020, 16), 8)), SFXP(SBV(-22313, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18319, 16), 8), UFXP(BV(16752, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44905, 16), 8), UFXP(BV(31622, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1012, 16), 8), SFXP(SBV(25329, 16), 8)), SFXP(SBV(-24317, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-29029, 16), 8), SFXP(SBV(-3488, 16), 8)), SFXP(SBV(-32517, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(53595, 16), 8), UFXP(BV(62126, 16), 8)), UFXP(BV(50185, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30043, 16), 8), SFXP(SBV(-18119, 16), 8)), SFXP(SBV(-11924, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47835, 16), 8), UFXP(BV(5828, 16), 8)), UFXP(BV(53663, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13349, 16), 8), SFXP(SBV(31927, 16), 8)), SFXP(SBV(-18578, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(49639, 16), 8), UFXP(BV(22777, 16), 8)), UFXP(BV(26862, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28461, 16), 8), UFXP(BV(2608, 16), 8)), UFXP(BV(31069, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(31873, 16), 8), UFXP(BV(37573, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26523, 16), 8), UFXP(BV(8120, 16), 8)), UFXP(BV(18403, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(28854, 16), 8), SFXP(SBV(17400, 16), 8)), SFXP(SBV(-19282, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13760, 16), 8), SFXP(SBV(-29538, 16), 8)), SFXP(SBV(22238, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(5097, 16), 8), SFXP(SBV(23638, 16), 8)), SFXP(SBV(11884, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4047, 16), 8), SFXP(SBV(7198, 16), 8)), SFXP(SBV(-11245, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-10184, 16), 8), SFXP(SBV(12921, 16), 8)), SFXP(SBV(-23105, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56307, 16), 8), UFXP(BV(47753, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15317, 16), 8), SFXP(SBV(210, 16), 8)), SFXP(SBV(-12565, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3632, 16), 8), SFXP(SBV(-10147, 16), 8)), SFXP(SBV(13779, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-4875, 16), 8), SFXP(SBV(22027, 16), 8)), SFXP(SBV(17152, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46105, 16), 8), UFXP(BV(52417, 16), 8)), UFXP(BV(32986, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-32546, 16), 8), SFXP(SBV(-3644, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(53565, 16), 8), UFXP(BV(3085, 16), 8)), UFXP(BV(55677, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28234, 16), 8), SFXP(SBV(14632, 16), 8)), SFXP(SBV(13602, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-22540, 16), 8), SFXP(SBV(-5543, 16), 8)), SFXP(SBV(-16997, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30812, 16), 8), SFXP(SBV(-9172, 16), 8)), SFXP(SBV(21640, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40460, 16), 8), UFXP(BV(26062, 16), 8)), UFXP(BV(986, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3884, 16), 8), UFXP(BV(15219, 16), 8)), UFXP(BV(19103, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(27188, 16), 8), UFXP(BV(34717, 16), 8)), UFXP(BV(17038, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(58286, 16), 8), UFXP(BV(19418, 16), 8)), UFXP(BV(30173, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9945, 16), 8), UFXP(BV(61762, 16), 8)), UFXP(BV(6171, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5064, 16), 8), SFXP(SBV(-5021, 16), 8)), SFXP(SBV(-10085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6561, 16), 8), SFXP(SBV(25743, 16), 8)), SFXP(SBV(32304, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32578, 16), 8), UFXP(BV(29812, 16), 8)), UFXP(BV(2766, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22553, 16), 8), SFXP(SBV(15408, 16), 8)), SFXP(SBV(18848, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29275, 16), 8), SFXP(SBV(-22582, 16), 8)), SFXP(SBV(6693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31833, 16), 8), UFXP(BV(27778, 16), 8)), UFXP(BV(59611, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30940, 16), 8), UFXP(BV(59328, 16), 8)), UFXP(BV(37148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39748, 16), 8), UFXP(BV(28949, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(55973, 16), 8), UFXP(BV(25800, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(32432, 16), 8), SFXP(SBV(26739, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21702, 16), 8), SFXP(SBV(29623, 16), 8)), SFXP(SBV(-7921, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18064, 16), 8), SFXP(SBV(-17559, 16), 8)), SFXP(SBV(-505, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16276, 16), 8), UFXP(BV(36054, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8122, 16), 8), SFXP(SBV(-30291, 16), 8)), SFXP(SBV(22169, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(4444, 16), 8), UFXP(BV(39166, 16), 8)), UFXP(BV(43610, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23309, 16), 8), SFXP(SBV(-32427, 16), 8)), SFXP(SBV(9118, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(12400, 16), 8), SFXP(SBV(-10909, 16), 8)), SFXP(SBV(-4116, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45534, 16), 8), UFXP(BV(62578, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19660, 16), 8), SFXP(SBV(8471, 16), 8)), SFXP(SBV(28131, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2454, 16), 8), SFXP(SBV(8546, 16), 8)), SFXP(SBV(16385, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-18575, 16), 8), SFXP(SBV(-30955, 16), 8)), SFXP(SBV(17828, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14211, 16), 8), SFXP(SBV(21314, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12135, 16), 8), SFXP(SBV(-8381, 16), 8)), SFXP(SBV(-3754, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15359, 16), 8), UFXP(BV(31452, 16), 8)), UFXP(BV(51989, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53284, 16), 8), UFXP(BV(393, 16), 8)), UFXP(BV(52891, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(2652, 16), 8), SFXP(SBV(17564, 16), 8)), SFXP(SBV(-14912, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(3953, 16), 8), UFXP(BV(12543, 16), 8)), UFXP(BV(62610, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(18364, 16), 8), SFXP(SBV(-25864, 16), 8)), SFXP(SBV(-7500, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(49553, 16), 8), UFXP(BV(13212, 16), 8)), UFXP(BV(62765, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(13844, 16), 8), UFXP(BV(41347, 16), 8)), UFXP(BV(7744, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62284, 16), 8), UFXP(BV(54598, 16), 8)), UFXP(BV(45250, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17899, 16), 8), UFXP(BV(550, 16), 8)), UFXP(BV(17349, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-27443, 16), 8), SFXP(SBV(28301, 16), 8)), SFXP(SBV(858, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36182, 16), 8), UFXP(BV(21491, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(58576, 16), 8), UFXP(BV(51077, 16), 8)), UFXP(BV(7499, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(9741, 16), 8), UFXP(BV(28484, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(24925, 16), 8), SFXP(SBV(-2293, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-5200, 16), 8), SFXP(SBV(22762, 16), 8)), SFXP(SBV(-3602, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31853, 16), 8), SFXP(SBV(22556, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29468, 16), 8), SFXP(SBV(-10672, 16), 8)), SFXP(SBV(18796, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9236, 16), 8), SFXP(SBV(-4438, 16), 8)), SFXP(SBV(4798, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-8387, 16), 8), SFXP(SBV(-676, 16), 8)), SFXP(SBV(22147, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51748, 16), 8), UFXP(BV(56468, 16), 8)), UFXP(BV(11212, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23353, 16), 8), SFXP(SBV(-2878, 16), 8)), SFXP(SBV(-26231, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25605, 16), 8), UFXP(BV(18808, 16), 8)), UFXP(BV(6797, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(12865, 16), 8), SFXP(SBV(14062, 16), 8)), SFXP(SBV(26927, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8054, 16), 8), SFXP(SBV(122, 16), 8)), SFXP(SBV(-8176, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63775, 16), 8), UFXP(BV(57372, 16), 8)), UFXP(BV(6403, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(32996, 16), 8), UFXP(BV(25193, 16), 8)), UFXP(BV(35877, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(14033, 16), 8), UFXP(BV(27202, 16), 8)), UFXP(BV(52367, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30339, 16), 8), SFXP(SBV(18977, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-5109, 16), 8), SFXP(SBV(-24869, 16), 8)), SFXP(SBV(19760, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23076, 16), 8), SFXP(SBV(10574, 16), 8)), SFXP(SBV(-31886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42698, 16), 8), UFXP(BV(12907, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48102, 16), 8), UFXP(BV(33694, 16), 8)), UFXP(BV(16260, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6024, 16), 8), SFXP(SBV(10703, 16), 8)), SFXP(SBV(4679, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2579, 16), 8), SFXP(SBV(24754, 16), 8)), SFXP(SBV(27333, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-22089, 16), 8), SFXP(SBV(30304, 16), 8)), SFXP(SBV(6655, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23356, 16), 8), SFXP(SBV(-31673, 16), 8)), SFXP(SBV(-8317, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37653, 16), 8), UFXP(BV(24623, 16), 8)), UFXP(BV(13030, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-28142, 16), 8), SFXP(SBV(-20120, 16), 8)), SFXP(SBV(-16439, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13087, 16), 8), SFXP(SBV(-6326, 16), 8)), SFXP(SBV(6761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23458, 16), 8), SFXP(SBV(-10454, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5032, 16), 8), SFXP(SBV(-11408, 16), 8)), SFXP(SBV(-16440, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17559, 16), 8), SFXP(SBV(-1776, 16), 8)), SFXP(SBV(19335, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17022, 16), 8), UFXP(BV(15926, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34361, 16), 8), UFXP(BV(48169, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(64687, 16), 8), UFXP(BV(3393, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(3992, 16), 8), UFXP(BV(47617, 16), 8)), UFXP(BV(51609, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42057, 16), 8), UFXP(BV(38735, 16), 8)), UFXP(BV(3322, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18691, 16), 8), UFXP(BV(65243, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12538, 16), 8), SFXP(SBV(30278, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29515, 16), 8), UFXP(BV(29101, 16), 8)), UFXP(BV(58616, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28794, 16), 8), UFXP(BV(20151, 16), 8)), UFXP(BV(48945, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(11806, 16), 8), UFXP(BV(28151, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41632, 16), 8), UFXP(BV(54402, 16), 8)), UFXP(BV(30498, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20405, 16), 8), SFXP(SBV(6526, 16), 8)), SFXP(SBV(-13879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19255, 16), 8), SFXP(SBV(-8828, 16), 8)), SFXP(SBV(-8637, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-32209, 16), 8), SFXP(SBV(21793, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(2778, 16), 8), SFXP(SBV(4861, 16), 8)), SFXP(SBV(-12787, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55124, 16), 8), UFXP(BV(55009, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55292, 16), 8), UFXP(BV(1499, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27183, 16), 8), SFXP(SBV(-26576, 16), 8)), SFXP(SBV(-3887, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55411, 16), 8), UFXP(BV(27090, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27404, 16), 8), UFXP(BV(63436, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43063, 16), 8), UFXP(BV(57720, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32348, 16), 8), SFXP(SBV(-13902, 16), 8)), SFXP(SBV(19286, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(65080, 16), 8), UFXP(BV(26833, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(9455, 16), 8), SFXP(SBV(15150, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(58095, 16), 8), UFXP(BV(2840, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(17248, 16), 8), UFXP(BV(6285, 16), 8)), UFXP(BV(23533, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(9851, 16), 8), UFXP(BV(44669, 16), 8)), UFXP(BV(14948, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(593, 16), 8), UFXP(BV(15761, 16), 8)), UFXP(BV(16354, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(12535, 16), 8), SFXP(SBV(27700, 16), 8)), SFXP(SBV(-15165, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(48012, 16), 8), UFXP(BV(44290, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63962, 16), 8), UFXP(BV(63502, 16), 8)), UFXP(BV(460, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10521, 16), 8), UFXP(BV(43835, 16), 8)), UFXP(BV(54356, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21462, 16), 8), SFXP(SBV(1154, 16), 8)), SFXP(SBV(-31210, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20606, 16), 8), SFXP(SBV(24056, 16), 8)), SFXP(SBV(3450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42721, 16), 8), UFXP(BV(47716, 16), 8)), UFXP(BV(24901, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2652, 16), 8), SFXP(SBV(-23093, 16), 8)), SFXP(SBV(-25745, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6956, 16), 8), SFXP(SBV(-26436, 16), 8)), SFXP(SBV(32144, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31498, 16), 8), SFXP(SBV(8399, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25900, 16), 8), UFXP(BV(21288, 16), 8)), UFXP(BV(56594, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5165, 16), 8), UFXP(BV(62504, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(23547, 16), 8), SFXP(SBV(938, 16), 8)), SFXP(SBV(20742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4369, 16), 8), UFXP(BV(45413, 16), 8)), UFXP(BV(54140, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(2735, 16), 8), UFXP(BV(17153, 16), 8)), UFXP(BV(19888, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28220, 16), 8), SFXP(SBV(14070, 16), 8)), SFXP(SBV(14150, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31665, 16), 8), UFXP(BV(52881, 16), 8)), UFXP(BV(44320, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30257, 16), 8), SFXP(SBV(-22124, 16), 8)), SFXP(SBV(-6573, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30810, 16), 8), SFXP(SBV(-9389, 16), 8)), SFXP(SBV(25337, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(32083, 16), 8), UFXP(BV(10392, 16), 8)), UFXP(BV(21691, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7524, 16), 8), SFXP(SBV(19098, 16), 8)), SFXP(SBV(-11574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(20017, 16), 8), UFXP(BV(3015, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25500, 16), 8), UFXP(BV(51218, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(38813, 16), 8), UFXP(BV(13681, 16), 8)), UFXP(BV(42606, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8991, 16), 8), SFXP(SBV(27670, 16), 8)), SFXP(SBV(11240, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-7221, 16), 8), SFXP(SBV(-31100, 16), 8)), SFXP(SBV(23879, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(17664, 16), 8), SFXP(SBV(7976, 16), 8)), SFXP(SBV(9688, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33972, 16), 8), UFXP(BV(42841, 16), 8)), UFXP(BV(56667, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10872, 16), 8), UFXP(BV(64564, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(29134, 16), 8), SFXP(SBV(-982, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41022, 16), 8), UFXP(BV(32361, 16), 8)), UFXP(BV(7847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22679, 16), 8), UFXP(BV(21631, 16), 8)), UFXP(BV(1048, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15240, 16), 8), SFXP(SBV(15645, 16), 8)), SFXP(SBV(405, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-10181, 16), 8), SFXP(SBV(-7252, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(47176, 16), 8), UFXP(BV(42113, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44529, 16), 8), UFXP(BV(52518, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(13952, 16), 8), SFXP(SBV(-29623, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(64619, 16), 8), UFXP(BV(49077, 16), 8)), UFXP(BV(1613, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11450, 16), 8), UFXP(BV(55952, 16), 8)), UFXP(BV(21034, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1847, 16), 8), UFXP(BV(8545, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57981, 16), 8), UFXP(BV(65307, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26619, 16), 8), SFXP(SBV(18643, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(17112, 16), 8), SFXP(SBV(-13423, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3062, 16), 8), UFXP(BV(51953, 16), 8)), UFXP(BV(55015, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31416, 16), 8), SFXP(SBV(14629, 16), 8)), SFXP(SBV(-19491, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(27953, 16), 8), SFXP(SBV(18374, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(7815, 16), 8), SFXP(SBV(-5570, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15508, 16), 8), UFXP(BV(12038, 16), 8)), UFXP(BV(27546, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(61904, 16), 8), UFXP(BV(2942, 16), 8)), UFXP(BV(58962, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56706, 16), 8), UFXP(BV(9173, 16), 8)), UFXP(BV(276, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(3381, 16), 8), SFXP(SBV(-32217, 16), 8)), SFXP(SBV(-32274, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32704, 16), 8), SFXP(SBV(-23433, 16), 8)), SFXP(SBV(9399, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20552, 16), 8), SFXP(SBV(-23133, 16), 8)), SFXP(SBV(2581, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11907, 16), 8), SFXP(SBV(-28027, 16), 8)), SFXP(SBV(16120, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23604, 16), 8), SFXP(SBV(-20277, 16), 8)), SFXP(SBV(3327, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-14500, 16), 8), SFXP(SBV(-1115, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-11309, 16), 8), SFXP(SBV(5175, 16), 8)), SFXP(SBV(-16484, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41365, 16), 8), UFXP(BV(37745, 16), 8)), UFXP(BV(13574, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(56819, 16), 8), UFXP(BV(5511, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(44213, 16), 8), UFXP(BV(47705, 16), 8)), UFXP(BV(26382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33889, 16), 8), UFXP(BV(48752, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6832, 16), 8), SFXP(SBV(-14992, 16), 8)), SFXP(SBV(-8160, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2623, 16), 8), SFXP(SBV(-29089, 16), 8)), SFXP(SBV(26466, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(6335, 16), 8), UFXP(BV(28179, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(23538, 16), 8), UFXP(BV(13886, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25405, 16), 8), SFXP(SBV(2245, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(49844, 16), 8), UFXP(BV(1058, 16), 8)), UFXP(BV(50902, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(61665, 16), 8), UFXP(BV(13510, 16), 8)), UFXP(BV(43011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-814, 16), 8), SFXP(SBV(-1697, 16), 8)), SFXP(SBV(-2511, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(62941, 16), 8), UFXP(BV(50386, 16), 8)), UFXP(BV(12555, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13472, 16), 8), UFXP(BV(16339, 16), 8)), UFXP(BV(29811, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23284, 16), 8), SFXP(SBV(20239, 16), 8)), SFXP(SBV(-3045, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62439, 16), 8), UFXP(BV(58321, 16), 8)), UFXP(BV(3317, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2810, 16), 8), SFXP(SBV(2747, 16), 8)), SFXP(SBV(-63, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(4135, 16), 8), UFXP(BV(1548, 16), 8)), UFXP(BV(2587, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31425, 16), 8), UFXP(BV(64524, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(11741, 16), 8), UFXP(BV(31110, 16), 8)), UFXP(BV(42851, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16988, 16), 8), UFXP(BV(14428, 16), 8)), UFXP(BV(39930, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(18680, 16), 8), UFXP(BV(62887, 16), 8)), UFXP(BV(21329, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27729, 16), 8), SFXP(SBV(-15613, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4003, 16), 8), SFXP(SBV(426, 16), 8)), SFXP(SBV(-4429, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1544, 16), 8), SFXP(SBV(-30965, 16), 8)), SFXP(SBV(-32509, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(25175, 16), 8), SFXP(SBV(27765, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(17249, 16), 8), UFXP(BV(64718, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6806, 16), 8), SFXP(SBV(-28588, 16), 8)), SFXP(SBV(21782, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14054, 16), 8), SFXP(SBV(32217, 16), 8)), SFXP(SBV(18163, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(12596, 16), 8), UFXP(BV(23574, 16), 8)), UFXP(BV(54558, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(60212, 16), 8), UFXP(BV(13496, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17567, 16), 8), SFXP(SBV(5364, 16), 8)), SFXP(SBV(12203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21155, 16), 8), UFXP(BV(24144, 16), 8)), UFXP(BV(45299, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43783, 16), 8), UFXP(BV(52604, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19537, 16), 8), SFXP(SBV(-30194, 16), 8)), SFXP(SBV(15805, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(10351, 16), 8), SFXP(SBV(810, 16), 8)), SFXP(SBV(9541, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(23162, 16), 8), UFXP(BV(32137, 16), 8)), UFXP(BV(55299, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(32533, 16), 8), UFXP(BV(25685, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20737, 16), 8), SFXP(SBV(1267, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(29939, 16), 8), UFXP(BV(54933, 16), 8)), UFXP(BV(1843, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1963, 16), 8), SFXP(SBV(2851, 16), 8)), SFXP(SBV(-4814, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23425, 16), 8), SFXP(SBV(27146, 16), 8)), SFXP(SBV(-3721, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16170, 16), 8), SFXP(SBV(-30340, 16), 8)), SFXP(SBV(15854, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(61945, 16), 8), UFXP(BV(39204, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42231, 16), 8), UFXP(BV(53548, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20129, 16), 8), SFXP(SBV(30390, 16), 8)), SFXP(SBV(10261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-3282, 16), 8), SFXP(SBV(-19818, 16), 8)), SFXP(SBV(16536, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-12709, 16), 8), SFXP(SBV(14724, 16), 8)), SFXP(SBV(-27433, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26010, 16), 8), UFXP(BV(54371, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30623, 16), 8), UFXP(BV(61807, 16), 8)), UFXP(BV(34352, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20331, 16), 8), SFXP(SBV(-26641, 16), 8)), SFXP(SBV(-18564, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14349, 16), 8), UFXP(BV(56562, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(60568, 16), 8), UFXP(BV(51356, 16), 8)), UFXP(BV(26349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7075, 16), 8), UFXP(BV(38166, 16), 8)), UFXP(BV(45241, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(46229, 16), 8), UFXP(BV(49714, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27873, 16), 8), SFXP(SBV(-27198, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(43623, 16), 8), UFXP(BV(29337, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(3311, 16), 8), SFXP(SBV(16479, 16), 8)), SFXP(SBV(16524, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(15019, 16), 8), UFXP(BV(7558, 16), 8)), UFXP(BV(22577, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(28532, 16), 8), UFXP(BV(11461, 16), 8)), UFXP(BV(32180, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53240, 16), 8), UFXP(BV(5821, 16), 8)), UFXP(BV(30938, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32285, 16), 8), SFXP(SBV(-28134, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-204, 16), 8), SFXP(SBV(-7287, 16), 8)), SFXP(SBV(-7491, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42902, 16), 8), UFXP(BV(52059, 16), 8)), UFXP(BV(56379, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(42242, 16), 8), UFXP(BV(43364, 16), 8)), UFXP(BV(20070, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(24283, 16), 8), UFXP(BV(63373, 16), 8)), UFXP(BV(22120, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(2525, 16), 8), SFXP(SBV(-15708, 16), 8)), SFXP(SBV(-13183, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23866, 16), 8), SFXP(SBV(-16613, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28784, 16), 8), SFXP(SBV(23085, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1280, 16), 8), UFXP(BV(25768, 16), 8)), UFXP(BV(27048, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23848, 16), 8), SFXP(SBV(25084, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7964, 16), 8), SFXP(SBV(-203, 16), 8)), SFXP(SBV(-8167, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34740, 16), 8), UFXP(BV(21108, 16), 8)), UFXP(BV(55848, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(46464, 16), 8), UFXP(BV(33657, 16), 8)), UFXP(BV(13898, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46528, 16), 8), UFXP(BV(3691, 16), 8)), UFXP(BV(50219, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(9568, 16), 8), SFXP(SBV(11804, 16), 8)), SFXP(SBV(21372, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(17532, 16), 8), UFXP(BV(61794, 16), 8)), UFXP(BV(13790, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-18063, 16), 8), SFXP(SBV(5723, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45181, 16), 8), UFXP(BV(33722, 16), 8)), UFXP(BV(53297, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-21522, 16), 8), SFXP(SBV(7052, 16), 8)), SFXP(SBV(-3040, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56654, 16), 8), UFXP(BV(61008, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18315, 16), 8), UFXP(BV(25683, 16), 8)), UFXP(BV(43998, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(61108, 16), 8), UFXP(BV(19259, 16), 8)), UFXP(BV(41849, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15363, 16), 8), UFXP(BV(13871, 16), 8)), UFXP(BV(29234, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16647, 16), 8), SFXP(SBV(-24903, 16), 8)), SFXP(SBV(-19025, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9399, 16), 8), SFXP(SBV(11022, 16), 8)), SFXP(SBV(1623, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39751, 16), 8), UFXP(BV(25800, 16), 8)), UFXP(BV(15, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(44176, 16), 8), UFXP(BV(49666, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32145, 16), 8), UFXP(BV(21030, 16), 8)), UFXP(BV(53175, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-9157, 16), 8), SFXP(SBV(9305, 16), 8)), SFXP(SBV(148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21402, 16), 8), UFXP(BV(8069, 16), 8)), UFXP(BV(29471, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34374, 16), 8), UFXP(BV(33278, 16), 8)), UFXP(BV(11903, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-21085, 16), 8), SFXP(SBV(17552, 16), 8)), SFXP(SBV(-3533, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20577, 16), 8), SFXP(SBV(31715, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9053, 16), 8), UFXP(BV(23884, 16), 8)), UFXP(BV(32937, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(39459, 16), 8), UFXP(BV(1897, 16), 8)), UFXP(BV(41356, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12721, 16), 8), SFXP(SBV(10419, 16), 8)), SFXP(SBV(-23140, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(55489, 16), 8), UFXP(BV(51751, 16), 8)), UFXP(BV(10576, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16850, 16), 8), SFXP(SBV(24202, 16), 8)), SFXP(SBV(-20119, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(51821, 16), 8), UFXP(BV(11633, 16), 8)), UFXP(BV(40188, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37213, 16), 8), UFXP(BV(50056, 16), 8)), UFXP(BV(52693, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19001, 16), 8), SFXP(SBV(-29086, 16), 8)), SFXP(SBV(3847, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(33776, 16), 8), UFXP(BV(44509, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4919, 16), 8), SFXP(SBV(-12710, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1046, 16), 8), SFXP(SBV(31412, 16), 8)), SFXP(SBV(-2725, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21987, 16), 8), SFXP(SBV(-22314, 16), 8)), SFXP(SBV(-327, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5768, 16), 8), SFXP(SBV(-9929, 16), 8)), SFXP(SBV(-4161, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(54708, 16), 8), UFXP(BV(16984, 16), 8)), UFXP(BV(37724, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27595, 16), 8), SFXP(SBV(27689, 16), 8)), SFXP(SBV(10252, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(18347, 16), 8), SFXP(SBV(-23408, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47062, 16), 8), UFXP(BV(16408, 16), 8)), UFXP(BV(63470, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-32717, 16), 8), SFXP(SBV(5056, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3940, 16), 8), SFXP(SBV(-4780, 16), 8)), SFXP(SBV(-8720, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17030, 16), 8), SFXP(SBV(-9289, 16), 8)), SFXP(SBV(-7741, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13831, 16), 8), UFXP(BV(38639, 16), 8)), UFXP(BV(55947, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-27503, 16), 8), SFXP(SBV(2177, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37797, 16), 8), UFXP(BV(23984, 16), 8)), UFXP(BV(61781, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(22557, 16), 8), UFXP(BV(48497, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(13190, 16), 8), SFXP(SBV(-14451, 16), 8)), SFXP(SBV(-1261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1958, 16), 8), SFXP(SBV(22913, 16), 8)), SFXP(SBV(-24871, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(34775, 16), 8), UFXP(BV(31554, 16), 8)), UFXP(BV(3221, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44717, 16), 8), UFXP(BV(788, 16), 8)), UFXP(BV(43929, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25385, 16), 8), UFXP(BV(18572, 16), 8)), UFXP(BV(43957, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-27583, 16), 8), SFXP(SBV(8234, 16), 8)), SFXP(SBV(-19349, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30372, 16), 8), UFXP(BV(49279, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23058, 16), 8), SFXP(SBV(28713, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11655, 16), 8), SFXP(SBV(-22202, 16), 8)), SFXP(SBV(-10547, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-1721, 16), 8), SFXP(SBV(-4257, 16), 8)), SFXP(SBV(-5978, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30480, 16), 8), UFXP(BV(29726, 16), 8)), UFXP(BV(60206, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(53105, 16), 8), UFXP(BV(2842, 16), 8)), UFXP(BV(50263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42762, 16), 8), UFXP(BV(3838, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17514, 16), 8), SFXP(SBV(-14562, 16), 8)), SFXP(SBV(-2952, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37429, 16), 8), UFXP(BV(59311, 16), 8)), UFXP(BV(43654, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35871, 16), 8), UFXP(BV(41370, 16), 8)), UFXP(BV(60037, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(27456, 16), 8), UFXP(BV(34660, 16), 8)), UFXP(BV(62116, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4761, 16), 8), SFXP(SBV(20718, 16), 8)), SFXP(SBV(-25479, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(26791, 16), 8), SFXP(SBV(-11814, 16), 8)), SFXP(SBV(14977, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-18436, 16), 8), SFXP(SBV(-19227, 16), 8)), SFXP(SBV(791, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-19230, 16), 8), SFXP(SBV(-19203, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-29193, 16), 8), SFXP(SBV(-30503, 16), 8)), SFXP(SBV(5006, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22196, 16), 8), UFXP(BV(16193, 16), 8)), UFXP(BV(6003, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(35919, 16), 8), UFXP(BV(376, 16), 8)), UFXP(BV(35543, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13921, 16), 8), SFXP(SBV(27131, 16), 8)), SFXP(SBV(-24484, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21964, 16), 8), UFXP(BV(21250, 16), 8)), UFXP(BV(714, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(14087, 16), 8), SFXP(SBV(-3901, 16), 8)), SFXP(SBV(-18053, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-28124, 16), 8), SFXP(SBV(-12715, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-20946, 16), 8), SFXP(SBV(-12067, 16), 8)), SFXP(SBV(-8879, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11918, 16), 8), UFXP(BV(34559, 16), 8)), UFXP(BV(36019, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6291, 16), 8), SFXP(SBV(-23825, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(19627, 16), 8), SFXP(SBV(-4938, 16), 8)), SFXP(SBV(14629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14465, 16), 8), UFXP(BV(26477, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(23315, 16), 8), UFXP(BV(57210, 16), 8)), UFXP(BV(33012, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10836, 16), 8), UFXP(BV(8972, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28943, 16), 8), SFXP(SBV(-9439, 16), 8)), SFXP(SBV(-27154, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35516, 16), 8), UFXP(BV(26095, 16), 8)), UFXP(BV(9421, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(21810, 16), 8), SFXP(SBV(-23990, 16), 8)), SFXP(SBV(-2180, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(27409, 16), 8), UFXP(BV(36860, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20466, 16), 8), UFXP(BV(21097, 16), 8)), UFXP(BV(41563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-8804, 16), 8), SFXP(SBV(-16084, 16), 8)), SFXP(SBV(7280, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-28396, 16), 8), SFXP(SBV(21934, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2703, 16), 8), SFXP(SBV(-5965, 16), 8)), SFXP(SBV(3262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-3112, 16), 8), SFXP(SBV(-13302, 16), 8)), SFXP(SBV(30631, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(19814, 16), 8), UFXP(BV(62420, 16), 8)), UFXP(BV(16698, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(14010, 16), 8), UFXP(BV(38473, 16), 8)), UFXP(BV(8344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8653, 16), 8), SFXP(SBV(-10523, 16), 8)), SFXP(SBV(19176, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43373, 16), 8), UFXP(BV(29726, 16), 8)), UFXP(BV(55614, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59352, 16), 8), UFXP(BV(48341, 16), 8)), UFXP(BV(11011, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-11572, 16), 8), SFXP(SBV(-25670, 16), 8)), SFXP(SBV(14098, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16693, 16), 8), SFXP(SBV(-5545, 16), 8)), SFXP(SBV(22238, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(30539, 16), 8), UFXP(BV(43219, 16), 8)), UFXP(BV(52856, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33094, 16), 8), UFXP(BV(62103, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24678, 16), 8), SFXP(SBV(28679, 16), 8)), SFXP(SBV(-4001, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-4391, 16), 8), SFXP(SBV(24710, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11436, 16), 8), SFXP(SBV(10377, 16), 8)), SFXP(SBV(1059, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(4788, 16), 8), UFXP(BV(33669, 16), 8)), UFXP(BV(39891, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30234, 16), 8), SFXP(SBV(-24108, 16), 8)), SFXP(SBV(29145, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23451, 16), 8), SFXP(SBV(31769, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36746, 16), 8), UFXP(BV(39974, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(11564, 16), 8), SFXP(SBV(16721, 16), 8)), SFXP(SBV(-5157, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(12827, 16), 8), SFXP(SBV(-28170, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10081, 16), 8), UFXP(BV(33070, 16), 8)), UFXP(BV(43151, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-53, 16), 8), SFXP(SBV(9616, 16), 8)), SFXP(SBV(-9669, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(11145, 16), 8), SFXP(SBV(-14553, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3113, 16), 8), SFXP(SBV(19134, 16), 8)), SFXP(SBV(22247, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-32160, 16), 8), SFXP(SBV(10955, 16), 8)), SFXP(SBV(34, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5766, 16), 8), SFXP(SBV(-29072, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5225, 16), 8), SFXP(SBV(-11438, 16), 8)), SFXP(SBV(-6213, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25130, 16), 8), SFXP(SBV(23559, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(6128, 16), 8), UFXP(BV(14386, 16), 8)), UFXP(BV(57278, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56670, 16), 8), UFXP(BV(4861, 16), 8)), UFXP(BV(61531, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64715, 16), 8), UFXP(BV(8534, 16), 8)), UFXP(BV(7713, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20039, 16), 8), SFXP(SBV(11020, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60181, 16), 8), UFXP(BV(48046, 16), 8)), UFXP(BV(22559, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-7754, 16), 8), SFXP(SBV(-16998, 16), 8)), SFXP(SBV(-24752, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-2829, 16), 8), SFXP(SBV(-2369, 16), 8)), SFXP(SBV(-5198, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54324, 16), 8), UFXP(BV(59390, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62258, 16), 8), UFXP(BV(29150, 16), 8)), UFXP(BV(11255, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47132, 16), 8), UFXP(BV(825, 16), 8)), UFXP(BV(47957, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14875, 16), 8), SFXP(SBV(9639, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14546, 16), 8), SFXP(SBV(9540, 16), 8)), SFXP(SBV(-24086, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42309, 16), 8), UFXP(BV(47115, 16), 8)), UFXP(BV(60730, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8784, 16), 8), UFXP(BV(11212, 16), 8)), UFXP(BV(63108, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11032, 16), 8), UFXP(BV(51875, 16), 8)), UFXP(BV(24693, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(2709, 16), 8), UFXP(BV(15101, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(22275, 16), 8), SFXP(SBV(15447, 16), 8)), SFXP(SBV(-32186, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20627, 16), 8), UFXP(BV(6237, 16), 8)), UFXP(BV(26864, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15822, 16), 8), SFXP(SBV(775, 16), 8)), SFXP(SBV(16597, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(61353, 16), 8), UFXP(BV(14730, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15780, 16), 8), SFXP(SBV(-2682, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(536, 16), 8), SFXP(SBV(-30318, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(18124, 16), 8), UFXP(BV(58327, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1160, 16), 8), SFXP(SBV(3587, 16), 8)), SFXP(SBV(-2427, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(31148, 16), 8), SFXP(SBV(-32154, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(37612, 16), 8), UFXP(BV(47629, 16), 8)), UFXP(BV(19705, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(23515, 16), 8), SFXP(SBV(-24894, 16), 8)), SFXP(SBV(-1379, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4294, 16), 8), SFXP(SBV(24437, 16), 8)), SFXP(SBV(-20143, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41639, 16), 8), UFXP(BV(29909, 16), 8)), UFXP(BV(11730, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-14293, 16), 8), SFXP(SBV(-8938, 16), 8)), SFXP(SBV(-23231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28838, 16), 8), SFXP(SBV(31274, 16), 8)), SFXP(SBV(-2436, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-24744, 16), 8), SFXP(SBV(-30142, 16), 8)), SFXP(SBV(10650, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6758, 16), 8), SFXP(SBV(-27793, 16), 8)), SFXP(SBV(30985, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6908, 16), 8), UFXP(BV(41152, 16), 8)), UFXP(BV(48060, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15186, 16), 8), UFXP(BV(60684, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(59307, 16), 8), UFXP(BV(46295, 16), 8)), UFXP(BV(40066, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(266, 16), 8), UFXP(BV(3165, 16), 8)), UFXP(BV(3289, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9982, 16), 8), UFXP(BV(64878, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(37311, 16), 8), UFXP(BV(24939, 16), 8)), UFXP(BV(30281, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-26026, 16), 8), SFXP(SBV(-24480, 16), 8)), SFXP(SBV(-1546, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-32077, 16), 8), SFXP(SBV(-1473, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10691, 16), 8), SFXP(SBV(-2089, 16), 8)), SFXP(SBV(-8602, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(12701, 16), 8), SFXP(SBV(26457, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19116, 16), 8), SFXP(SBV(-15282, 16), 8)), SFXP(SBV(27024, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60502, 16), 8), UFXP(BV(6299, 16), 8)), UFXP(BV(54203, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45220, 16), 8), UFXP(BV(61467, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15790, 16), 8), SFXP(SBV(11719, 16), 8)), SFXP(SBV(-27509, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6897, 16), 8), SFXP(SBV(-27630, 16), 8)), SFXP(SBV(-31009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43597, 16), 8), UFXP(BV(40596, 16), 8)), UFXP(BV(18657, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30931, 16), 8), SFXP(SBV(25542, 16), 8)), SFXP(SBV(-9063, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21910, 16), 8), UFXP(BV(37153, 16), 8)), UFXP(BV(50293, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18860, 16), 8), SFXP(SBV(12126, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(62251, 16), 8), UFXP(BV(50414, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-17370, 16), 8), SFXP(SBV(-28094, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-27969, 16), 8), SFXP(SBV(-17401, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-23524, 16), 8), SFXP(SBV(15419, 16), 8)), SFXP(SBV(-8105, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7951, 16), 8), SFXP(SBV(25507, 16), 8)), SFXP(SBV(-17556, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-18274, 16), 8), SFXP(SBV(4027, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-8466, 16), 8), SFXP(SBV(23445, 16), 8)), SFXP(SBV(14979, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-30702, 16), 8), SFXP(SBV(11422, 16), 8)), SFXP(SBV(6420, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63993, 16), 8), UFXP(BV(52096, 16), 8)), UFXP(BV(11897, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57947, 16), 8), UFXP(BV(17447, 16), 8)), UFXP(BV(40500, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33149, 16), 8), UFXP(BV(52125, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3075, 16), 8), UFXP(BV(21931, 16), 8)), UFXP(BV(46680, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(36951, 16), 8), UFXP(BV(64260, 16), 8)), UFXP(BV(34702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21813, 16), 8), SFXP(SBV(29820, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(8289, 16), 8), SFXP(SBV(-31268, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16167, 16), 8), SFXP(SBV(5587, 16), 8)), SFXP(SBV(10580, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(63517, 16), 8), UFXP(BV(52088, 16), 8)), UFXP(BV(50069, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(26212, 16), 8), SFXP(SBV(-24663, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(32135, 16), 8), SFXP(SBV(-9223, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(13646, 16), 8), UFXP(BV(27504, 16), 8)), UFXP(BV(41150, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(21632, 16), 8), SFXP(SBV(-23984, 16), 8)), SFXP(SBV(-19920, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(14440, 16), 8), SFXP(SBV(3708, 16), 8)), SFXP(SBV(18148, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(20177, 16), 8), UFXP(BV(21117, 16), 8)), UFXP(BV(41294, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(634, 16), 8), SFXP(SBV(18307, 16), 8)), SFXP(SBV(18941, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12230, 16), 8), SFXP(SBV(-31796, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13968, 16), 8), SFXP(SBV(-18980, 16), 8)), SFXP(SBV(32588, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(60687, 16), 8), UFXP(BV(60172, 16), 8)), UFXP(BV(42977, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14267, 16), 8), SFXP(SBV(29971, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22481, 16), 8), SFXP(SBV(-24445, 16), 8)), SFXP(SBV(-1964, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55604, 16), 8), UFXP(BV(36815, 16), 8)), UFXP(BV(26883, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13863, 16), 8), SFXP(SBV(-12782, 16), 8)), SFXP(SBV(-26645, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2809, 16), 8), UFXP(BV(15564, 16), 8)), UFXP(BV(18373, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7595, 16), 8), SFXP(SBV(8880, 16), 8)), SFXP(SBV(-1285, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(27412, 16), 8), SFXP(SBV(2728, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24510, 16), 8), SFXP(SBV(13092, 16), 8)), SFXP(SBV(11418, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(10559, 16), 8), UFXP(BV(14187, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16901, 16), 8), SFXP(SBV(-5175, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-25700, 16), 8), SFXP(SBV(4623, 16), 8)), SFXP(SBV(-21077, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-873, 16), 8), SFXP(SBV(-16177, 16), 8)), SFXP(SBV(15304, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(39429, 16), 8), UFXP(BV(7589, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-10410, 16), 8), SFXP(SBV(-26419, 16), 8)), SFXP(SBV(28707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-17869, 16), 8), SFXP(SBV(12851, 16), 8)), SFXP(SBV(-30720, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(52031, 16), 8), UFXP(BV(9215, 16), 8)), UFXP(BV(37905, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-5064, 16), 8), SFXP(SBV(9587, 16), 8)), SFXP(SBV(4523, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15520, 16), 8), SFXP(SBV(-23805, 16), 8)), SFXP(SBV(8285, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29792, 16), 8), UFXP(BV(44844, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(49193, 16), 8), UFXP(BV(49308, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-7052, 16), 8), SFXP(SBV(20286, 16), 8)), SFXP(SBV(-27338, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-7569, 16), 8), SFXP(SBV(29513, 16), 8)), SFXP(SBV(21944, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31684, 16), 8), UFXP(BV(24971, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19037, 16), 8), UFXP(BV(63077, 16), 8)), UFXP(BV(21496, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(17185, 16), 8), UFXP(BV(15772, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(57419, 16), 8), UFXP(BV(12483, 16), 8)), UFXP(BV(44936, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43229, 16), 8), UFXP(BV(15915, 16), 8)), UFXP(BV(59144, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(56360, 16), 8), UFXP(BV(894, 16), 8)), UFXP(BV(55466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-13076, 16), 8), SFXP(SBV(-29656, 16), 8)), SFXP(SBV(22804, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(49167, 16), 8), UFXP(BV(41705, 16), 8)), UFXP(BV(7462, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31170, 16), 8), SFXP(SBV(9317, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(28795, 16), 8), SFXP(SBV(26159, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19767, 16), 8), UFXP(BV(32547, 16), 8)), UFXP(BV(52314, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-21062, 16), 8), SFXP(SBV(-29928, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21168, 16), 8), SFXP(SBV(-16231, 16), 8)), SFXP(SBV(-4937, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8903, 16), 8), SFXP(SBV(1042, 16), 8)), SFXP(SBV(9945, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12106, 16), 8), UFXP(BV(7520, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21712, 16), 8), SFXP(SBV(-31450, 16), 8)), SFXP(SBV(9738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(7158, 16), 8), SFXP(SBV(-23663, 16), 8)), SFXP(SBV(30821, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47390, 16), 8), UFXP(BV(46127, 16), 8)), UFXP(BV(27981, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62012, 16), 8), UFXP(BV(9449, 16), 8)), UFXP(BV(60648, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26168, 16), 8), SFXP(SBV(-25924, 16), 8)), SFXP(SBV(244, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(50727, 16), 8), UFXP(BV(20290, 16), 8)), UFXP(BV(5481, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(27097, 16), 8), UFXP(BV(22896, 16), 8)), UFXP(BV(4201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20847, 16), 8), SFXP(SBV(-22673, 16), 8)), SFXP(SBV(-22016, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8576, 16), 8), UFXP(BV(702, 16), 8)), UFXP(BV(23517, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14760, 16), 8), UFXP(BV(30268, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28628, 16), 8), SFXP(SBV(21286, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(29006, 16), 8), SFXP(SBV(-8922, 16), 8)), SFXP(SBV(20084, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15001, 16), 8), UFXP(BV(54743, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32406, 16), 8), SFXP(SBV(3548, 16), 8)), SFXP(SBV(-28858, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(13295, 16), 8), UFXP(BV(18555, 16), 8)), UFXP(BV(46124, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11434, 16), 8), UFXP(BV(15473, 16), 8)), UFXP(BV(35727, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-3456, 16), 8), SFXP(SBV(6709, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-20374, 16), 8), SFXP(SBV(-5314, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(1941, 16), 8), SFXP(SBV(-15006, 16), 8)), SFXP(SBV(17296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(50590, 16), 8), UFXP(BV(62274, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(23057, 16), 8), UFXP(BV(7047, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-13372, 16), 8), SFXP(SBV(-20615, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-16116, 16), 8), SFXP(SBV(14793, 16), 8)), SFXP(SBV(-13762, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28624, 16), 8), SFXP(SBV(-3727, 16), 8)), SFXP(SBV(24897, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7674, 16), 8), SFXP(SBV(-30410, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(31166, 16), 8), UFXP(BV(22341, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(56412, 16), 8), UFXP(BV(38417, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7244, 16), 8), SFXP(SBV(-11971, 16), 8)), SFXP(SBV(-4727, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25599, 16), 8), UFXP(BV(4995, 16), 8)), UFXP(BV(30594, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31385, 16), 8), UFXP(BV(17459, 16), 8)), UFXP(BV(13926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(30383, 16), 8), UFXP(BV(36285, 16), 8)), UFXP(BV(46594, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-18203, 16), 8), SFXP(SBV(-14626, 16), 8)), SFXP(SBV(32707, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25374, 16), 8), SFXP(SBV(11022, 16), 8)), SFXP(SBV(-21642, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-31150, 16), 8), SFXP(SBV(28527, 16), 8)), SFXP(SBV(2252, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(33816, 16), 8), UFXP(BV(17439, 16), 8)), UFXP(BV(51255, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(16881, 16), 8), UFXP(BV(19891, 16), 8)), UFXP(BV(36772, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6319, 16), 8), SFXP(SBV(8198, 16), 8)), SFXP(SBV(-14517, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-4833, 16), 8), SFXP(SBV(-14694, 16), 8)), SFXP(SBV(15263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(14916, 16), 8), UFXP(BV(27400, 16), 8)), UFXP(BV(42316, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(27563, 16), 8), SFXP(SBV(-1830, 16), 8)), SFXP(SBV(-424, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(22625, 16), 8), UFXP(BV(21166, 16), 8)), UFXP(BV(43791, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22076, 16), 8), UFXP(BV(17449, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15539, 16), 8), SFXP(SBV(-11918, 16), 8)), SFXP(SBV(-3621, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(20828, 16), 8), SFXP(SBV(18141, 16), 8)), SFXP(SBV(-26567, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-15186, 16), 8), SFXP(SBV(-28156, 16), 8)), SFXP(SBV(31822, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(8683, 16), 8), SFXP(SBV(-23089, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39675, 16), 8), UFXP(BV(43506, 16), 8)), UFXP(BV(61705, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4404, 16), 8), SFXP(SBV(20874, 16), 8)), SFXP(SBV(-25278, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29471, 16), 8), SFXP(SBV(18386, 16), 8)), SFXP(SBV(11085, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(58606, 16), 8), UFXP(BV(50415, 16), 8)), UFXP(BV(8191, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49413, 16), 8), UFXP(BV(44414, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1907, 16), 8), SFXP(SBV(-32572, 16), 8)), SFXP(SBV(-30665, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14752, 16), 8), SFXP(SBV(23270, 16), 8)), SFXP(SBV(-30213, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(25798, 16), 8), UFXP(BV(36522, 16), 8)), UFXP(BV(54812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-31017, 16), 8), SFXP(SBV(27073, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(50270, 16), 8), UFXP(BV(23358, 16), 8)), UFXP(BV(26912, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37891, 16), 8), UFXP(BV(31551, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(42834, 16), 8), UFXP(BV(55963, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14976, 16), 8), SFXP(SBV(-23663, 16), 8)), SFXP(SBV(-8687, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52109, 16), 8), UFXP(BV(29069, 16), 8)), UFXP(BV(23040, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(21102, 16), 8), SFXP(SBV(13710, 16), 8)), SFXP(SBV(16000, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6181, 16), 8), SFXP(SBV(23105, 16), 8)), SFXP(SBV(-16924, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3602, 16), 8), UFXP(BV(15738, 16), 8)), UFXP(BV(19340, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30112, 16), 8), UFXP(BV(58322, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(63879, 16), 8), UFXP(BV(62134, 16), 8)), UFXP(BV(1745, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(34247, 16), 8), UFXP(BV(65215, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41946, 16), 8), UFXP(BV(35274, 16), 8)), UFXP(BV(6672, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2993, 16), 8), SFXP(SBV(10459, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(15553, 16), 8), SFXP(SBV(-28321, 16), 8)), SFXP(SBV(-21662, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-4654, 16), 8), SFXP(SBV(18872, 16), 8)), SFXP(SBV(14218, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(22179, 16), 8), SFXP(SBV(-558, 16), 8)), SFXP(SBV(21621, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-6830, 16), 8), SFXP(SBV(27279, 16), 8)), SFXP(SBV(20449, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-10419, 16), 8), SFXP(SBV(7251, 16), 8)), SFXP(SBV(32570, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37884, 16), 8), UFXP(BV(59193, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19990, 16), 8), SFXP(SBV(2168, 16), 8)), SFXP(SBV(22158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(22660, 16), 8), SFXP(SBV(-16443, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14186, 16), 8), SFXP(SBV(-28802, 16), 8)), SFXP(SBV(23172, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(30212, 16), 8), SFXP(SBV(28626, 16), 8)), SFXP(SBV(1586, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29936, 16), 8), SFXP(SBV(25521, 16), 8)), SFXP(SBV(10079, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(33373, 16), 8), UFXP(BV(55806, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38681, 16), 8), UFXP(BV(50851, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20471, 16), 8), SFXP(SBV(18629, 16), 8)), SFXP(SBV(-1842, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(44221, 16), 8), UFXP(BV(44046, 16), 8)), UFXP(BV(175, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20414, 16), 8), SFXP(SBV(19001, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-11332, 16), 8), SFXP(SBV(6489, 16), 8)), SFXP(SBV(-25095, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(59255, 16), 8), UFXP(BV(40910, 16), 8)), UFXP(BV(18345, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20189, 16), 8), UFXP(BV(19133, 16), 8)), UFXP(BV(39322, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-16937, 16), 8), SFXP(SBV(-28381, 16), 8)), SFXP(SBV(-22852, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(7707, 16), 8), UFXP(BV(31836, 16), 8)), UFXP(BV(39543, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(31590, 16), 8), SFXP(SBV(5447, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29114, 16), 8), UFXP(BV(8531, 16), 8)), UFXP(BV(20583, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(436, 16), 8), SFXP(SBV(-26735, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-29199, 16), 8), SFXP(SBV(12797, 16), 8)), SFXP(SBV(23540, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25805, 16), 8), SFXP(SBV(16105, 16), 8)), SFXP(SBV(9700, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(16968, 16), 8), SFXP(SBV(-24, 16), 8)), SFXP(SBV(-1591, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28758, 16), 8), SFXP(SBV(-6749, 16), 8)), SFXP(SBV(-22009, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(15218, 16), 8), UFXP(BV(51705, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64399, 16), 8), UFXP(BV(63370, 16), 8)), UFXP(BV(1029, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-14858, 16), 8), SFXP(SBV(5528, 16), 8)), SFXP(SBV(-20386, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13816, 16), 8), SFXP(SBV(-7010, 16), 8)), SFXP(SBV(-6806, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4227, 16), 8), UFXP(BV(1586, 16), 8)), UFXP(BV(2641, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(22535, 16), 8), SFXP(SBV(12157, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(39824, 16), 8), UFXP(BV(5709, 16), 8)), UFXP(BV(34115, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(7744, 16), 8), UFXP(BV(52257, 16), 8)), UFXP(BV(21023, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14281, 16), 8), UFXP(BV(21007, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(19332, 16), 8), UFXP(BV(42399, 16), 8)), UFXP(BV(42469, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3537, 16), 8), UFXP(BV(18777, 16), 8)), UFXP(BV(50296, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3561, 16), 8), UFXP(BV(44495, 16), 8)), UFXP(BV(24602, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(31814, 16), 8), UFXP(BV(43548, 16), 8)), UFXP(BV(53802, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-23986, 16), 8), SFXP(SBV(-7430, 16), 8)), SFXP(SBV(-24739, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(20717, 16), 8), UFXP(BV(49353, 16), 8)), UFXP(BV(61770, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(15277, 16), 8), UFXP(BV(19040, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-17095, 16), 8), SFXP(SBV(-8811, 16), 8)), SFXP(SBV(-8284, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-6514, 16), 8), SFXP(SBV(212, 16), 8)), SFXP(SBV(-6726, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26408, 16), 8), SFXP(SBV(-30778, 16), 8)), SFXP(SBV(4370, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-2344, 16), 8), SFXP(SBV(-14270, 16), 8)), SFXP(SBV(11926, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(31005, 16), 8), UFXP(BV(57278, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(42129, 16), 8), UFXP(BV(33080, 16), 8)), UFXP(BV(9049, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-29275, 16), 8), SFXP(SBV(-29543, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19869, 16), 8), SFXP(SBV(12537, 16), 8)), SFXP(SBV(-32406, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-15865, 16), 8), SFXP(SBV(-9299, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12102, 16), 8), UFXP(BV(56394, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(6863, 16), 8), SFXP(SBV(17279, 16), 8)), SFXP(SBV(24142, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41136, 16), 8), UFXP(BV(42425, 16), 8)), UFXP(BV(18025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(10969, 16), 8), UFXP(BV(16422, 16), 8)), UFXP(BV(27391, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8457, 16), 8), SFXP(SBV(16220, 16), 8)), SFXP(SBV(24677, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(51211, 16), 8), UFXP(BV(13535, 16), 8)), UFXP(BV(20605, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(188, 16), 8), UFXP(BV(12681, 16), 8)), UFXP(BV(9313, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(39637, 16), 8), UFXP(BV(24175, 16), 8)), UFXP(BV(15462, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(62277, 16), 8), UFXP(BV(45267, 16), 8)), UFXP(BV(2034, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-23022, 16), 8), SFXP(SBV(-12752, 16), 8)), SFXP(SBV(-10270, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(3837, 16), 8), SFXP(SBV(-6277, 16), 8)), SFXP(SBV(-2440, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(40463, 16), 8), UFXP(BV(52683, 16), 8)), UFXP(BV(27610, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31351, 16), 8), SFXP(SBV(-1918, 16), 8)), SFXP(SBV(29433, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(5668, 16), 8), SFXP(SBV(7002, 16), 8)), SFXP(SBV(-1334, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(6298, 16), 8), UFXP(BV(32804, 16), 8)), UFXP(BV(39102, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-13448, 16), 8), SFXP(SBV(9055, 16), 8)), SFXP(SBV(-22503, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(18235, 16), 8), UFXP(BV(55016, 16), 8)), UFXP(BV(52192, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4247, 16), 8), SFXP(SBV(-5713, 16), 8)), SFXP(SBV(1466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21299, 16), 8), SFXP(SBV(-17514, 16), 8)), SFXP(SBV(3785, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(29177, 16), 8), SFXP(SBV(-3108, 16), 8)), SFXP(SBV(-26547, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-2348, 16), 8), SFXP(SBV(13207, 16), 8)), SFXP(SBV(-15555, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-14853, 16), 8), SFXP(SBV(-29637, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(35, 16), 8), SFXP(SBV(-9090, 16), 8)), SFXP(SBV(-1242, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(16113, 16), 8), SFXP(SBV(29375, 16), 8)), SFXP(SBV(-13262, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32100, 16), 8), SFXP(SBV(-10987, 16), 8)), SFXP(SBV(22449, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(24496, 16), 8), SFXP(SBV(-12695, 16), 8)), SFXP(SBV(11801, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-30803, 16), 8), SFXP(SBV(-18054, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52590, 16), 8), UFXP(BV(51839, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7115, 16), 8), SFXP(SBV(-5991, 16), 8)), SFXP(SBV(13106, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(31905, 16), 8), SFXP(SBV(14798, 16), 8)), SFXP(SBV(9250, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-13984, 16), 8), SFXP(SBV(-14264, 16), 8)), SFXP(SBV(-7261, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-5151, 16), 8), SFXP(SBV(-3520, 16), 8)), SFXP(SBV(-8671, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(33617, 16), 8), UFXP(BV(36463, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-29164, 16), 8), SFXP(SBV(13692, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(759, 16), 8), UFXP(BV(53361, 16), 8)), UFXP(BV(27136, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-20168, 16), 8), SFXP(SBV(25239, 16), 8)), SFXP(SBV(5071, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(43438, 16), 8), UFXP(BV(54027, 16), 8)), UFXP(BV(31929, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(3940, 16), 8), UFXP(BV(61710, 16), 8)), UFXP(BV(7766, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(9831, 16), 8), UFXP(BV(14396, 16), 8)), UFXP(BV(24227, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-23903, 16), 8), SFXP(SBV(-13205, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10264, 16), 8), SFXP(SBV(5207, 16), 8)), SFXP(SBV(-15471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(1762, 16), 8), SFXP(SBV(28475, 16), 8)), SFXP(SBV(30237, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-24735, 16), 8), SFXP(SBV(5397, 16), 8)), SFXP(SBV(-19338, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(4642, 16), 8), UFXP(BV(4139, 16), 8)), UFXP(BV(503, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54759, 16), 8), UFXP(BV(38073, 16), 8)), UFXP(BV(16686, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(19458, 16), 8), UFXP(BV(48954, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(21510, 16), 8), UFXP(BV(26664, 16), 8)), UFXP(BV(60382, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(42357, 16), 8), UFXP(BV(41039, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-16983, 16), 8), SFXP(SBV(-24213, 16), 8)), SFXP(SBV(7230, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(19509, 16), 8), SFXP(SBV(-8856, 16), 8)), SFXP(SBV(10653, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(19047, 16), 8), UFXP(BV(4641, 16), 8)), UFXP(BV(23688, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(16234, 16), 8), SFXP(SBV(-22246, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(22322, 16), 8), UFXP(BV(36845, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(4946, 16), 8), UFXP(BV(47197, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(48600, 16), 8), UFXP(BV(42326, 16), 8)), UFXP(BV(25390, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(41976, 16), 8), UFXP(BV(52478, 16), 8)), UFXP(BV(28918, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29454, 16), 8), UFXP(BV(31905, 16), 8)), UFXP(BV(61359, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(25002, 16), 8), SFXP(SBV(742, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(9793, 16), 8), UFXP(BV(56151, 16), 8)), UFXP(BV(408, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12881, 16), 8), UFXP(BV(12944, 16), 8)), UFXP(BV(61471, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-6295, 16), 8), SFXP(SBV(-13922, 16), 8)), SFXP(SBV(7627, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18085, 16), 8), SFXP(SBV(32163, 16), 8)), SFXP(SBV(14078, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-29372, 16), 8), SFXP(SBV(-1809, 16), 8)), SFXP(SBV(-27563, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-25173, 16), 8), SFXP(SBV(-22910, 16), 8)), SFXP(SBV(-2263, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(8794, 16), 8), UFXP(BV(10409, 16), 8)), UFXP(BV(29885, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56055, 16), 8), UFXP(BV(40605, 16), 8)), UFXP(BV(15450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-6582, 16), 8), SFXP(SBV(12245, 16), 8)), SFXP(SBV(5663, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(8753, 16), 8), UFXP(BV(48413, 16), 8)), UFXP(BV(57166, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8438, 16), 8), UFXP(BV(37385, 16), 8)), UFXP(BV(36589, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-1476, 16), 8), SFXP(SBV(-28074, 16), 8)), SFXP(SBV(26598, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(22668, 16), 8), UFXP(BV(43610, 16), 8)), UFXP(BV(742, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(10347, 16), 8), UFXP(BV(41332, 16), 8)), UFXP(BV(51679, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(28939, 16), 8), UFXP(BV(50033, 16), 8)), UFXP(BV(13436, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-21681, 16), 8), SFXP(SBV(13048, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(1775, 16), 8), SFXP(SBV(-3429, 16), 8)), SFXP(SBV(-23775, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26033, 16), 8), SFXP(SBV(10416, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-20974, 16), 8), SFXP(SBV(-12112, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(56674, 16), 8), UFXP(BV(63760, 16), 8)), UFXP(BV(58450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16553, 16), 8), SFXP(SBV(-13623, 16), 8)), SFXP(SBV(30176, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(10160, 16), 8), SFXP(SBV(3746, 16), 8)), SFXP(SBV(13906, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27277, 16), 8), SFXP(SBV(-6886, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-9406, 16), 8), SFXP(SBV(27038, 16), 8)), SFXP(SBV(17632, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(27547, 16), 8), SFXP(SBV(-23788, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(12672, 16), 8), UFXP(BV(57465, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(63278, 16), 8), UFXP(BV(64079, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3160, 16), 8), SFXP(SBV(-21634, 16), 8)), SFXP(SBV(24794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45724, 16), 8), UFXP(BV(28235, 16), 8)), UFXP(BV(62299, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(39275, 16), 8), UFXP(BV(10091, 16), 8)), UFXP(BV(40813, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(31183, 16), 8), UFXP(BV(36870, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(49480, 16), 8), UFXP(BV(56695, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10255, 16), 8), SFXP(SBV(-18774, 16), 8)), SFXP(SBV(-8519, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-1560, 16), 8), SFXP(SBV(-29949, 16), 8)), SFXP(SBV(28389, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-4475, 16), 8), SFXP(SBV(-12406, 16), 8)), SFXP(SBV(7931, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(59209, 16), 8), UFXP(BV(4692, 16), 8)), UFXP(BV(36614, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-30378, 16), 8), SFXP(SBV(19688, 16), 8)), SFXP(SBV(-10690, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-21148, 16), 8), SFXP(SBV(13394, 16), 8)), SFXP(SBV(30994, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(56101, 16), 8), UFXP(BV(15264, 16), 8)), UFXP(BV(2687, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-2148, 16), 8), SFXP(SBV(23070, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(20597, 16), 8), SFXP(SBV(24226, 16), 8)), SFXP(SBV(-3629, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(36691, 16), 8), UFXP(BV(25281, 16), 8)), UFXP(BV(61972, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(11830, 16), 8), UFXP(BV(19643, 16), 8)), UFXP(BV(55753, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29709, 16), 8), SFXP(SBV(3898, 16), 8)), SFXP(SBV(-25811, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(20334, 16), 8), UFXP(BV(64491, 16), 8)), UFXP(BV(19289, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-20362, 16), 8), SFXP(SBV(22365, 16), 8)), SFXP(SBV(-9419, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(2237, 16), 8), UFXP(BV(59674, 16), 8)), UFXP(BV(61911, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(12376, 16), 8), UFXP(BV(2952, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(16923, 16), 8), UFXP(BV(40016, 16), 8)), UFXP(BV(56939, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(43865, 16), 8), UFXP(BV(55297, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(18564, 16), 8), UFXP(BV(47888, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(63563, 16), 8), UFXP(BV(33738, 16), 8)), UFXP(BV(29825, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-26762, 16), 8), SFXP(SBV(-23128, 16), 8)), SFXP(SBV(-3634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(53310, 16), 8), UFXP(BV(23440, 16), 8)), UFXP(BV(31532, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-29579, 16), 8), SFXP(SBV(-30024, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-1276, 16), 8), SFXP(SBV(-17420, 16), 8)), SFXP(SBV(-18696, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56979, 16), 8), UFXP(BV(3471, 16), 8)), UFXP(BV(60450, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(26843, 16), 8), SFXP(SBV(-5053, 16), 8)), SFXP(SBV(31896, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-32153, 16), 8), SFXP(SBV(-21284, 16), 8)), SFXP(SBV(-10869, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47855, 16), 8), UFXP(BV(16170, 16), 8)), UFXP(BV(64025, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13354, 16), 8), UFXP(BV(3879, 16), 8)), UFXP(BV(9475, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-19957, 16), 8), SFXP(SBV(29120, 16), 8)), SFXP(SBV(9163, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14220, 16), 8), SFXP(SBV(1053, 16), 8)), SFXP(SBV(15273, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15355, 16), 8), SFXP(SBV(-28881, 16), 8)), SFXP(SBV(28360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(31971, 16), 8), UFXP(BV(1675, 16), 8)), UFXP(BV(33646, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(37667, 16), 8), UFXP(BV(62240, 16), 8)), UFXP(BV(40963, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25645, 16), 8), UFXP(BV(13177, 16), 8)), UFXP(BV(38822, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1146, 16), 8), SFXP(SBV(1955, 16), 8)), SFXP(SBV(-809, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3556, 16), 8), SFXP(SBV(7135, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(21042, 16), 8), UFXP(BV(8316, 16), 8)), UFXP(BV(29358, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-18006, 16), 8), SFXP(SBV(16434, 16), 8)), SFXP(SBV(31096, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-18985, 16), 8), SFXP(SBV(-28978, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58595, 16), 8), UFXP(BV(60094, 16), 8)), UFXP(BV(53153, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(33389, 16), 8), UFXP(BV(44654, 16), 8)), UFXP(BV(54271, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32460, 16), 8), UFXP(BV(39126, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45297, 16), 8), UFXP(BV(10342, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(47453, 16), 8), UFXP(BV(58604, 16), 8)), UFXP(BV(40521, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-20275, 16), 8), SFXP(SBV(9252, 16), 8)), SFXP(SBV(-11856, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(41626, 16), 8), UFXP(BV(8452, 16), 8)), UFXP(BV(33174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26728, 16), 8), SFXP(SBV(31480, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(14112, 16), 8), SFXP(SBV(-2120, 16), 8)), SFXP(SBV(11992, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-19436, 16), 8), SFXP(SBV(-20814, 16), 8)), SFXP(SBV(7374, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-16131, 16), 8), SFXP(SBV(28960, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63674, 16), 8), UFXP(BV(27381, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43554, 16), 8), UFXP(BV(42954, 16), 8)), UFXP(BV(33388, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(6766, 16), 8), SFXP(SBV(-7997, 16), 8)), SFXP(SBV(-1231, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(17564, 16), 8), SFXP(SBV(21225, 16), 8)), SFXP(SBV(-3661, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(14659, 16), 8), UFXP(BV(36157, 16), 8)), UFXP(BV(50816, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-22577, 16), 8), SFXP(SBV(-2131, 16), 8)), SFXP(SBV(-20446, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(46183, 16), 8), UFXP(BV(49457, 16), 8)), UFXP(BV(30104, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(55032, 16), 8), UFXP(BV(53452, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(54126, 16), 8), UFXP(BV(1617, 16), 8)), UFXP(BV(14201, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(23945, 16), 8), SFXP(SBV(-17317, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(26248, 16), 8), UFXP(BV(26079, 16), 8)), UFXP(BV(52327, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(64458, 16), 8), UFXP(BV(62284, 16), 8)), UFXP(BV(2174, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(1276, 16), 8), SFXP(SBV(21988, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-31547, 16), 8), SFXP(SBV(29584, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12455, 16), 8), UFXP(BV(37453, 16), 8)), UFXP(BV(49908, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40473, 16), 8), UFXP(BV(38902, 16), 8)), UFXP(BV(1571, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(8784, 16), 8), SFXP(SBV(-7697, 16), 8)), SFXP(SBV(1087, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(58234, 16), 8), UFXP(BV(32285, 16), 8)), UFXP(BV(24983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(12955, 16), 8), UFXP(BV(21626, 16), 8)), UFXP(BV(45817, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(45031, 16), 8), UFXP(BV(55408, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12347, 16), 8), SFXP(SBV(31883, 16), 8)), SFXP(SBV(-19536, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51971, 16), 8), UFXP(BV(33877, 16), 8)), UFXP(BV(20312, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(14467, 16), 8), UFXP(BV(58877, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(1817, 16), 8), SFXP(SBV(-21050, 16), 8)), SFXP(SBV(22867, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(16152, 16), 8), SFXP(SBV(778, 16), 8)), SFXP(SBV(-16450, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(47827, 16), 8), UFXP(BV(57237, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-30897, 16), 8), SFXP(SBV(18804, 16), 8)), SFXP(SBV(-12093, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32346, 16), 8), SFXP(SBV(24644, 16), 8)), SFXP(SBV(-7702, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-27868, 16), 8), SFXP(SBV(-31817, 16), 8)), SFXP(SBV(-9830, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-21982, 16), 8), SFXP(SBV(2779, 16), 8)), SFXP(SBV(-24761, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(28491, 16), 8), SFXP(SBV(4912, 16), 8)), SFXP(SBV(23579, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17426, 16), 8), UFXP(BV(21761, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20347, 16), 8), SFXP(SBV(-8636, 16), 8)), SFXP(SBV(-28983, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(292, 16), 8), UFXP(BV(27258, 16), 8)), UFXP(BV(38570, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(30349, 16), 8), SFXP(SBV(-13177, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(25439, 16), 8), UFXP(BV(24524, 16), 8)), UFXP(BV(49963, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10480, 16), 8), SFXP(SBV(13544, 16), 8)), SFXP(SBV(-30170, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(16804, 16), 8), UFXP(BV(38713, 16), 8)), UFXP(BV(50778, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(5479, 16), 8), UFXP(BV(33965, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-19596, 16), 8), SFXP(SBV(5604, 16), 8)), SFXP(SBV(-25200, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11388, 16), 8), UFXP(BV(25443, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21080, 16), 8), SFXP(SBV(-15600, 16), 8)), SFXP(SBV(5480, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(6401, 16), 8), UFXP(BV(28251, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19563, 16), 8), SFXP(SBV(-5272, 16), 8)), SFXP(SBV(14291, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-16655, 16), 8), SFXP(SBV(545, 16), 8)), SFXP(SBV(-16110, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(36854, 16), 8), UFXP(BV(27983, 16), 8)), UFXP(BV(64837, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-28141, 16), 8), SFXP(SBV(22509, 16), 8)), SFXP(SBV(14886, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(52837, 16), 8), UFXP(BV(34741, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-15255, 16), 8), SFXP(SBV(-7856, 16), 8)), SFXP(SBV(-7399, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21435, 16), 8), SFXP(SBV(17350, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(26087, 16), 8), UFXP(BV(2878, 16), 8)), UFXP(BV(23209, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11166, 16), 8), UFXP(BV(36406, 16), 8)), UFXP(BV(47572, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23460, 16), 8), SFXP(SBV(20862, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13681, 16), 8), UFXP(BV(4707, 16), 8)), UFXP(BV(18388, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(62410, 16), 8), UFXP(BV(24893, 16), 8)), UFXP(BV(21767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(37788, 16), 8), UFXP(BV(57066, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(14151, 16), 8), UFXP(BV(50248, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(19507, 16), 8), UFXP(BV(40339, 16), 8)), UFXP(BV(59144, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-23691, 16), 8), SFXP(SBV(4653, 16), 8)), SFXP(SBV(-28344, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(8077, 16), 8), UFXP(BV(29062, 16), 8)), UFXP(BV(64961, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31721, 16), 8), SFXP(SBV(16471, 16), 8)), SFXP(SBV(-17344, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(6444, 16), 8), SFXP(SBV(-14241, 16), 8)), SFXP(SBV(20685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(13380, 16), 8), UFXP(BV(57385, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2168, 16), 8), SFXP(SBV(23822, 16), 8)), SFXP(SBV(25990, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(10809, 16), 8), SFXP(SBV(-23029, 16), 8)), SFXP(SBV(10694, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(34892, 16), 8), UFXP(BV(53684, 16), 8)), UFXP(BV(23040, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-32122, 16), 8), SFXP(SBV(-9710, 16), 8)), SFXP(SBV(23704, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(39588, 16), 8), UFXP(BV(16626, 16), 8)), UFXP(BV(56214, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(32360, 16), 8), UFXP(BV(34695, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(61387, 16), 8), UFXP(BV(3289, 16), 8)), UFXP(BV(64676, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(5831, 16), 8), UFXP(BV(24651, 16), 8)), UFXP(BV(46716, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(63011, 16), 8), UFXP(BV(3841, 16), 8)), UFXP(BV(27908, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(12591, 16), 8), UFXP(BV(28252, 16), 8)), UFXP(BV(40843, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64556, 16), 8), UFXP(BV(15333, 16), 8)), UFXP(BV(49223, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-12672, 16), 8), SFXP(SBV(-1137, 16), 8)), SFXP(SBV(-11535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(16491, 16), 8), UFXP(BV(44521, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(59899, 16), 8), UFXP(BV(60277, 16), 8)), UFXP(BV(65158, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6513, 16), 8), SFXP(SBV(-20774, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(7302, 16), 8), SFXP(SBV(-21486, 16), 8)), SFXP(SBV(-14184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13143, 16), 8), SFXP(SBV(-31115, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(17864, 16), 8), SFXP(SBV(26442, 16), 8)), SFXP(SBV(10147, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22801, 16), 8), UFXP(BV(59379, 16), 8)), UFXP(BV(28958, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12708, 16), 8), SFXP(SBV(31430, 16), 8)), SFXP(SBV(-18722, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38161, 16), 8), UFXP(BV(62306, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(25316, 16), 8), SFXP(SBV(6518, 16), 8)), SFXP(SBV(31834, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(21412, 16), 8), UFXP(BV(41769, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(5071, 16), 8), SFXP(SBV(15202, 16), 8)), SFXP(SBV(20273, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17798, 16), 8), SFXP(SBV(-17316, 16), 8)), SFXP(SBV(482, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9006, 16), 8), UFXP(BV(47477, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11654, 16), 8), UFXP(BV(16065, 16), 8)), UFXP(BV(61125, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-8635, 16), 8), SFXP(SBV(-11279, 16), 8)), SFXP(SBV(-19914, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31556, 16), 8), SFXP(SBV(10374, 16), 8)), SFXP(SBV(-23606, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(6050, 16), 8), SFXP(SBV(12881, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(27326, 16), 8), UFXP(BV(42819, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-26248, 16), 8), SFXP(SBV(22601, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11059, 16), 8), SFXP(SBV(-18784, 16), 8)), SFXP(SBV(-7725, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64626, 16), 8), UFXP(BV(13108, 16), 8)), UFXP(BV(51518, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(41206, 16), 8), UFXP(BV(60877, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(31009, 16), 8), SFXP(SBV(19910, 16), 8)), SFXP(SBV(11099, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(4954, 16), 8), SFXP(SBV(6610, 16), 8)), SFXP(SBV(-1656, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8303, 16), 8), UFXP(BV(56573, 16), 8)), UFXP(BV(17266, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(31714, 16), 8), SFXP(SBV(202, 16), 8)), SFXP(SBV(31916, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(55674, 16), 8), UFXP(BV(58765, 16), 8)), UFXP(BV(48903, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(2201, 16), 8), SFXP(SBV(-29046, 16), 8)), SFXP(SBV(12417, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(18525, 16), 8), SFXP(SBV(-28326, 16), 8)), SFXP(SBV(-18685, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(23483, 16), 8), UFXP(BV(24979, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(15394, 16), 8), UFXP(BV(8920, 16), 8)), UFXP(BV(6474, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(15966, 16), 8), UFXP(BV(42432, 16), 8)), UFXP(BV(24924, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(44564, 16), 8), UFXP(BV(9339, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(52076, 16), 8), UFXP(BV(35434, 16), 8)), UFXP(BV(16642, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-16508, 16), 8), SFXP(SBV(-10324, 16), 8)), SFXP(SBV(-26832, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(41243, 16), 8), UFXP(BV(9223, 16), 8)), UFXP(BV(50466, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(13370, 16), 8), SFXP(SBV(-29965, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-15354, 16), 8), SFXP(SBV(-11513, 16), 8)), SFXP(SBV(-3841, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(34922, 16), 8), UFXP(BV(34338, 16), 8)), UFXP(BV(31130, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(28709, 16), 8), SFXP(SBV(30885, 16), 8)), SFXP(SBV(-9825, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(17911, 16), 8), SFXP(SBV(-24250, 16), 8)), SFXP(SBV(7289, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44504, 16), 8), UFXP(BV(21745, 16), 8)), UFXP(BV(22759, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(37120, 16), 8), UFXP(BV(65101, 16), 8)), UFXP(BV(2461, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27706, 16), 8), UFXP(BV(8284, 16), 8)), UFXP(BV(44580, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-24544, 16), 8), SFXP(SBV(-7282, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12246, 16), 8), SFXP(SBV(29986, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-13262, 16), 8), SFXP(SBV(4808, 16), 8)), SFXP(SBV(-8454, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(15421, 16), 8), SFXP(SBV(9016, 16), 8)), SFXP(SBV(24437, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(6484, 16), 8), SFXP(SBV(-31477, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-31191, 16), 8), SFXP(SBV(-20533, 16), 8)), SFXP(SBV(13812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(13621, 16), 8), SFXP(SBV(-3569, 16), 8)), SFXP(SBV(6712, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(53078, 16), 8), UFXP(BV(49313, 16), 8)), UFXP(BV(3765, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(8388, 16), 8), UFXP(BV(42851, 16), 8)), UFXP(BV(31073, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(17511, 16), 8), UFXP(BV(60793, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(48851, 16), 8), UFXP(BV(63998, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-14580, 16), 8), SFXP(SBV(27046, 16), 8)), SFXP(SBV(32510, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(16799, 16), 8), SFXP(SBV(-11465, 16), 8)), SFXP(SBV(28264, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2770, 16), 8), SFXP(SBV(30780, 16), 8)), SFXP(SBV(28010, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(21678, 16), 8), UFXP(BV(26116, 16), 8)), UFXP(BV(47794, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(46512, 16), 8), UFXP(BV(25987, 16), 8)), UFXP(BV(2921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(48615, 16), 8), UFXP(BV(16176, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(51117, 16), 8), UFXP(BV(35384, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(17354, 16), 8), SFXP(SBV(-27199, 16), 8)), SFXP(SBV(-9845, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(29763, 16), 8), SFXP(SBV(27346, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(13344, 16), 8), SFXP(SBV(-20957, 16), 8)), SFXP(SBV(-7613, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11549, 16), 8), SFXP(SBV(7960, 16), 8)), SFXP(SBV(19509, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24140, 16), 8), SFXP(SBV(-16719, 16), 8)), SFXP(SBV(-24677, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(24643, 16), 8), SFXP(SBV(19001, 16), 8)), SFXP(SBV(5642, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(56163, 16), 8), UFXP(BV(59185, 16), 8)), UFXP(BV(49812, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(21798, 16), 8), SFXP(SBV(1709, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(43985, 16), 8), UFXP(BV(39992, 16), 8)), UFXP(BV(55537, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(38400, 16), 8), UFXP(BV(32838, 16), 8)), UFXP(BV(5702, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13398, 16), 8), UFXP(BV(51312, 16), 8)), UFXP(BV(27622, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(37806, 16), 8), UFXP(BV(60723, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(38001, 16), 8), UFXP(BV(61919, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(29353, 16), 8), SFXP(SBV(26120, 16), 8)), SFXP(SBV(3233, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(54829, 16), 8), UFXP(BV(38954, 16), 8)), UFXP(BV(15875, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(63978, 16), 8), UFXP(BV(6586, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(4790, 16), 8), SFXP(SBV(16033, 16), 8)), SFXP(SBV(20823, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-15086, 16), 8), SFXP(SBV(21675, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(11085, 16), 8), SFXP(SBV(-151, 16), 8)), SFXP(SBV(10934, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(1796, 16), 8), UFXP(BV(59690, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29158, 16), 8), UFXP(BV(27540, 16), 8)), UFXP(BV(1618, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(27529, 16), 8), UFXP(BV(19251, 16), 8)), UFXP(BV(46780, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-14870, 16), 8), SFXP(SBV(5175, 16), 8)), SFXP(SBV(27085, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(14328, 16), 8), SFXP(SBV(15305, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(36460, 16), 8), UFXP(BV(8712, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-16771, 16), 8), SFXP(SBV(20581, 16), 8)), SFXP(SBV(28184, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(10848, 16), 8), SFXP(SBV(11139, 16), 8)), SFXP(SBV(21987, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(3543, 16), 8), SFXP(SBV(-17414, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(18328, 16), 8), SFXP(SBV(12322, 16), 8)), SFXP(SBV(30210, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62324, 16), 8), UFXP(BV(62351, 16), 8)), UFXP(BV(40729, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(28225, 16), 8), SFXP(SBV(19724, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(30403, 16), 8), UFXP(BV(49323, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-27905, 16), 8), SFXP(SBV(10164, 16), 8)), SFXP(SBV(27467, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(38231, 16), 8), UFXP(BV(27773, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(871, 16), 8), SFXP(SBV(25175, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(4161, 16), 8), SFXP(SBV(24444, 16), 8)), SFXP(SBV(28605, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(51514, 16), 8), UFXP(BV(52105, 16), 8)), UFXP(BV(64687, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-13725, 16), 8), SFXP(SBV(9890, 16), 8)), SFXP(SBV(-23615, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-26481, 16), 8), SFXP(SBV(2761, 16), 8)), SFXP(SBV(-23457, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(22945, 16), 8), UFXP(BV(39713, 16), 8)), UFXP(BV(48768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(25472, 16), 8), UFXP(BV(52211, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(33641, 16), 8), UFXP(BV(17803, 16), 8)), UFXP(BV(45735, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24415, 16), 8), SFXP(SBV(-21438, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(56389, 16), 8), UFXP(BV(8971, 16), 8)), UFXP(BV(65360, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(5745, 16), 8), UFXP(BV(4712, 16), 8)), UFXP(BV(1033, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-20819, 16), 8), SFXP(SBV(20185, 16), 8)), SFXP(SBV(-634, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(18163, 16), 8), UFXP(BV(44116, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(64961, 16), 8), UFXP(BV(50964, 16), 8)), UFXP(BV(13997, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-21427, 16), 8), SFXP(SBV(-27482, 16), 8)), SFXP(SBV(6462, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(27194, 16), 8), SFXP(SBV(-2760, 16), 8)), SFXP(SBV(24434, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(30676, 16), 8), UFXP(BV(38020, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-25808, 16), 8), SFXP(SBV(-17764, 16), 8)), SFXP(SBV(-8044, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(-3232, 16), 8), SFXP(SBV(-29975, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(8844, 16), 8), SFXP(SBV(-11822, 16), 8)), SFXP(SBV(-2978, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-15800, 16), 8), SFXP(SBV(-11135, 16), 8)), SFXP(SBV(31879, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(24066, 16), 8), UFXP(BV(49253, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7236, 16), 8), SFXP(SBV(-12840, 16), 8)), SFXP(SBV(20076, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(26478, 16), 8), UFXP(BV(10884, 16), 8)), UFXP(BV(37362, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(24971, 16), 8), SFXP(SBV(11478, 16), 8)), SFXP(SBV(5487, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-12858, 16), 8), SFXP(SBV(-18283, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(24049, 16), 8), SFXP(SBV(9063, 16), 8)), SFXP(SBV(14986, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-17487, 16), 8), SFXP(SBV(-26804, 16), 8)), SFXP(SBV(-4064, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(19467, 16), 8), UFXP(BV(50498, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(1021, 16), 8), UFXP(BV(53770, 16), 8)), UFXP(BV(54791, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(32209, 16), 8), SFXP(SBV(-27818, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(27378, 16), 8), UFXP(BV(2052, 16), 8)), UFXP(BV(22843, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(11085, 16), 8), UFXP(BV(25548, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64642, 16), 8), UFXP(BV(7291, 16), 8)), UFXP(BV(6397, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(25588, 16), 8), UFXP(BV(12150, 16), 8)), UFXP(BV(34782, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(28172, 16), 8), UFXP(BV(55941, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(15748, 16), 8), UFXP(BV(13948, 16), 8)), UFXP(BV(29696, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(12097, 16), 8), SFXP(SBV(32412, 16), 8)), SFXP(SBV(-20315, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(7026, 16), 8), SFXP(SBV(27115, 16), 8)), SFXP(SBV(-20089, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(-10631, 16), 8), SFXP(SBV(-13560, 16), 8)), SFXP(SBV(2929, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(40059, 16), 8), UFXP(BV(57551, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(-8693, 16), 8), SFXP(SBV(-6144, 16), 8)), SFXP(SBV(12024, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(30157, 16), 8), SFXP(SBV(27976, 16), 8)), SFXP(SBV(-7403, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(20590, 16), 8), SFXP(SBV(-20904, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(3137, 16), 8), UFXP(BV(60669, 16), 8)), UFXP(BV(63806, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(32023, 16), 8), UFXP(BV(13846, 16), 8)), UFXP(BV(45869, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2069, 16), 8), SFXP(SBV(-25967, 16), 8)), SFXP(SBV(-28036, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(44580, 16), 8), UFXP(BV(8399, 16), 8)), UFXP(BV(36181, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(26993, 16), 8), SFXP(SBV(25377, 16), 8)), SFXP(SBV(-13166, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-17825, 16), 8), SFXP(SBV(-19926, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-16735, 16), 8), SFXP(SBV(-28466, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(34309, 16), 8), UFXP(BV(23398, 16), 8)), UFXP(BV(10911, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RU, SFXP(SBV(25122, 16), 8), SFXP(SBV(13958, 16), 8)), SFXP(SBV(-6518, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-11334, 16), 8), SFXP(SBV(23927, 16), 8)), SFXP(SBV(12593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(51996, 16), 8), UFXP(BV(32133, 16), 8)), UFXP(BV(18593, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(1223, 16), 8), UFXP(BV(13264, 16), 8)), UFXP(BV(14487, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-10672, 16), 8), SFXP(SBV(-4773, 16), 8)), SFXP(SBV(2366, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(18746, 16), 8), UFXP(BV(48208, 16), 8)), UFXP(BV(1418, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(3422, 16), 8), UFXP(BV(2635, 16), 8)), UFXP(BV(35223, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(65159, 16), 8), UFXP(BV(65428, 16), 8)), UFXP(BV(7071, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(19239, 16), 8), SFXP(SBV(-31504, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(44939, 16), 8), UFXP(BV(11245, 16), 8)), UFXP(BV(56184, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(29300, 16), 8), UFXP(BV(7298, 16), 8)), UFXP(BV(36598, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RU, UFXP(BV(50177, 16), 8), UFXP(BV(61644, 16), 8)), UFXP(BV(23841, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(2885, 16), 8), SFXP(SBV(16430, 16), 8)), SFXP(SBV(19315, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(47372, 16), 8), UFXP(BV(27634, 16), 8)), UFXP(BV(19738, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22773, 16), 8), SFXP(SBV(10338, 16), 8)), SFXP(SBV(-12435, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(28125, 16), 8), SFXP(SBV(27961, 16), 8)), SFXP(SBV(164, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(60853, 16), 8), UFXP(BV(65265, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(16741, 16), 8), UFXP(BV(26792, 16), 8)), UFXP(BV(48114, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(18753, 16), 8), SFXP(SBV(10765, 16), 8)), SFXP(SBV(29518, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(8225, 16), 8), SFXP(SBV(-23746, 16), 8)), SFXP(SBV(31971, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-2087, 16), 8), SFXP(SBV(-13608, 16), 8)), SFXP(SBV(-20135, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(28539, 16), 8), UFXP(BV(62243, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-8515, 16), 8), SFXP(SBV(-3977, 16), 8)), SFXP(SBV(-4538, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-4495, 16), 8), SFXP(SBV(-20901, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(19496, 16), 8), SFXP(SBV(-23456, 16), 8)), SFXP(SBV(-3960, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(40175, 16), 8), UFXP(BV(28208, 16), 8)), UFXP(BV(11967, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(62465, 16), 8), UFXP(BV(52725, 16), 8)), UFXP(BV(20049, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(21093, 16), 8), SFXP(SBV(4723, 16), 8)), SFXP(SBV(25816, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-15228, 16), 8), SFXP(SBV(32466, 16), 8)), SFXP(SBV(17238, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(-30127, 16), 8), SFXP(SBV(32732, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(ST, SFXP(SBV(11377, 16), 8), SFXP(SBV(29736, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(45710, 16), 8), UFXP(BV(61393, 16), 8)), UFXP(BV(17495, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-22023, 16), 8), SFXP(SBV(3387, 16), 8)), SFXP(SBV(-18636, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(13963, 16), 8), UFXP(BV(17535, 16), 8)), UFXP(BV(61964, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(-28322, 16), 8), SFXP(SBV(2154, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(WP, RD, SFXP(SBV(-4442, 16), 8), SFXP(SBV(4827, 16), 8)), SFXP(SBV(-18220, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(-2164, 16), 8), SFXP(SBV(-22910, 16), 8)), SFXP(SBV(-25074, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(9810, 16), 8), UFXP(BV(19665, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(6652, 16), 8), UFXP(BV(50442, 16), 8)), UFXP(BV(57094, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RU, SFXP(SBV(7740, 16), 8), SFXP(SBV(-6067, 16), 8)), SFXP(SBV(-32768, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RU, UFXP(BV(1344, 16), 8), UFXP(BV(20230, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPAdd(WP, SFXP(SBV(549, 16), 8), SFXP(SBV(-1107, 16), 8)), SFXP(SBV(-558, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(3383, 16), 8), SFXP(SBV(24040, 16), 8)), SFXP(SBV(-20657, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(25981, 16), 8), SFXP(SBV(16416, 16), 8)), SFXP(SBV(9565, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(29800, 16), 8), UFXP(BV(56024, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(5234, 16), 8), UFXP(BV(13866, 16), 8)), UFXP(BV(19100, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(38778, 16), 8), UFXP(BV(53113, 16), 8)), UFXP(BV(51201, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(25432, 16), 8), UFXP(BV(12682, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(21913, 16), 8), UFXP(BV(13671, 16), 8)), UFXP(BV(8242, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPMul(ST, RD, SFXP(SBV(-6932, 16), 8), SFXP(SBV(-21388, 16), 8)), SFXP(SBV(32767, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(WP, UFXP(BV(64554, 16), 8), UFXP(BV(33485, 16), 8)), UFXP(BV(32503, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(ST, RD, UFXP(BV(41087, 16), 8), UFXP(BV(33122, 16), 8)), UFXP(BV(65535, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPMul(WP, RD, UFXP(BV(38012, 16), 8), UFXP(BV(2341, 16), 8)), UFXP(BV(19921, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(57101, 16), 8), UFXP(BV(37781, 16), 8)), UFXP(BV(19320, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(35735, 16), 8), UFXP(BV(26800, 16), 8)), UFXP(BV(8935, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(118, 16), 8), UFXP(BV(59119, 16), 8)), UFXP(BV(6535, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(ST, SFXP(SBV(22084, 16), 8), SFXP(SBV(9743, 16), 8)), SFXP(SBV(12341, 16), 8)))))
assert(is_sat(conv.convert(Equals(SFXPSub(WP, SFXP(SBV(23302, 16), 8), SFXP(SBV(2110, 16), 8)), SFXP(SBV(21192, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(11734, 16), 8), UFXP(BV(45139, 16), 8)), UFXP(BV(32131, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(ST, UFXP(BV(26205, 16), 8), UFXP(BV(45038, 16), 8)), UFXP(BV(0, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPAdd(ST, UFXP(BV(11301, 16), 8), UFXP(BV(52133, 16), 8)), UFXP(BV(63434, 16), 8)))))
assert(is_sat(conv.convert(Equals(UFXPSub(WP, UFXP(BV(42927, 16), 8), UFXP(BV(52592, 16), 8)), UFXP(BV(55871, 16), 8)))))
